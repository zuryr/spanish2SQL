{"db_id": "department_management", "query": "SELECT creation ,  name ,  budget_in_billions FROM department", "query_toks": ["SELECT", "creation", ",", "name", ",", "budget_in_billions", "FROM", "department"], "query_toks_no_value": ["select", "creation", ",", "name", ",", "budget_in_billions", "from", "department"], "question": "Indique el año de creación, nombre y presupuesto de cada departamento.\n", "question_toks": ["List", "the", "creation", "year", ",", "name", "and", "budget", "of", "each", "department", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_management", "query": "SELECT name FROM head WHERE born_state != 'California'", "query_toks": ["SELECT", "name", "FROM", "head", "WHERE", "born_state", "!", "=", "'California", "'"], "query_toks_no_value": ["select", "name", "from", "head", "where", "born_state", "!", "=", "value"], "question": "¿Cómo se llaman los jefes que nacen fuera del estado de California?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "heads", "who", "are", "born", "outside", "the", "California", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"California\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_management", "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'", "query_toks": ["SELECT", "DISTINCT", "T1.creation", "FROM", "department", "AS", "T1", "JOIN", "management", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "head", "AS", "T3", "ON", "T2.head_id", "=", "T3.head_id", "WHERE", "T3.born_state", "=", "'Alabama", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "creation", "from", "department", "as", "t1", "join", "management", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "head", "as", "t3", "on", "t2", ".", "head_id", "=", "t3", ".", "head_id", "where", "t3", ".", "born_state", "=", "value"], "question": "¿Cuáles son los distintos años de creación de los departamentos gestionados por un secretario nacido en el estado de 'Alabama'?\n", "question_toks": ["What", "are", "the", "distinct", "creation", "years", "of", "the", "departments", "managed", "by", "a", "secretary", "born", "in", "state", "'Alabama", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Alabama\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_management", "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'", "query_toks": ["SELECT", "T1.name", ",", "T1.num_employees", "FROM", "department", "AS", "T1", "JOIN", "management", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T2.temporary_acting", "=", "'Yes", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "num_employees", "from", "department", "as", "t1", "join", "management", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t2", ".", "temporary_acting", "=", "value"], "question": "¿Mostrar el nombre y el número de empleados de los departamentos gestionados por jefes cuyo valor de actuación temporal es \"Sí\"?\n", "question_toks": ["Show", "the", "name", "and", "number", "of", "employees", "for", "the", "departments", "managed", "by", "heads", "whose", "temporary", "acting", "value", "is", "'Yes", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_management", "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'", "query_toks": ["SELECT", "DISTINCT", "T1.age", "FROM", "management", "AS", "T2", "JOIN", "head", "AS", "T1", "ON", "T1.head_id", "=", "T2.head_id", "WHERE", "T2.temporary_acting", "=", "'Yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "age", "from", "management", "as", "t2", "join", "head", "as", "t1", "on", "t1", ".", "head_id", "=", "t2", ".", "head_id", "where", "t2", ".", "temporary_acting", "=", "value"], "question": "¿Cuáles son las distintas edades de los jefes que actúan?\n", "question_toks": ["What", "are", "the", "distinct", "ages", "of", "the", "heads", "who", "are", "acting", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_management", "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'", "query_toks": ["SELECT", "head_id", ",", "name", "FROM", "head", "WHERE", "name", "LIKE", "'", "%", "Ha", "%", "'"], "query_toks_no_value": ["select", "head_id", ",", "name", "from", "head", "where", "name", "like", "value"], "question": "¿El nombre de qué cabeza tiene la subcadena 'Ha'? Enumere la identificación y el nombre.\n", "question_toks": ["Which", "head", "'s", "name", "has", "the", "substring", "'Ha", "'", "?", "List", "the", "id", "and", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Ha%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'", "query_toks": ["SELECT", "Hosts", "FROM", "farm_competition", "WHERE", "Theme", "!", "=", "'Aliens", "'"], "query_toks_no_value": ["select", "hosts", "from", "farm_competition", "where", "theme", "!", "=", "value"], "question": "¿Cuáles son los anfitriones de concursos cuyo tema no es \"Alienígenas\"?\n", "question_toks": ["What", "are", "the", "hosts", "of", "competitions", "whose", "theme", "is", "not", "``", "Aliens", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Aliens\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'", "query_toks": ["SELECT", "Hosts", "FROM", "farm_competition", "WHERE", "Theme", "!", "=", "'Aliens", "'"], "query_toks_no_value": ["select", "hosts", "from", "farm_competition", "where", "theme", "!", "=", "value"], "question": "¿Devuelven los anfitriones de concursos cuyo tema no es Aliens?\n", "question_toks": ["Return", "the", "hosts", "of", "competitions", "for", "which", "the", "theme", "is", "not", "Aliens", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Aliens\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID", "query_toks": ["SELECT", "T2.Year", ",", "T1.Official_Name", "FROM", "city", "AS", "T1", "JOIN", "farm_competition", "AS", "T2", "ON", "T1.City_ID", "=", "T2.Host_city_ID"], "query_toks_no_value": ["select", "t2", ".", "year", ",", "t1", ".", "official_name", "from", "city", "as", "t1", "join", "farm_competition", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city_id"], "question": "Muestra los años y los nombres oficiales de las ciudades sede de las competiciones.\n", "question_toks": ["Show", "the", "years", "and", "the", "official", "names", "of", "the", "host", "cities", "of", "competitions", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID", "query_toks": ["SELECT", "T2.Year", ",", "T1.Official_Name", "FROM", "city", "AS", "T1", "JOIN", "farm_competition", "AS", "T2", "ON", "T1.City_ID", "=", "T2.Host_city_ID"], "query_toks_no_value": ["select", "t2", ".", "year", ",", "t1", ".", "official_name", "from", "city", "as", "t1", "join", "farm_competition", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city_id"], "question": "Indique los años y nombres oficiales de las ciudades de cada competición.\n", "question_toks": ["Give", "the", "years", "and", "official", "names", "of", "the", "cities", "of", "each", "competition", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000", "query_toks": ["SELECT", "T2.Theme", "FROM", "city", "AS", "T1", "JOIN", "farm_competition", "AS", "T2", "ON", "T1.City_ID", "=", "T2.Host_city_ID", "WHERE", "T1.Population", ">", "1000"], "query_toks_no_value": ["select", "t2", ".", "theme", "from", "city", "as", "t1", "join", "farm_competition", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city_id", "where", "t1", ".", "population", ">", "value"], "question": "Muestre los temas de las competiciones en ciudades anfitrionas con poblaciones superiores a 1000 habitantes.\n", "question_toks": ["Please", "show", "the", "themes", "of", "competitions", "with", "host", "cities", "having", "populations", "larger", "than", "1000", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000", "query_toks": ["SELECT", "T2.Theme", "FROM", "city", "AS", "T1", "JOIN", "farm_competition", "AS", "T2", "ON", "T1.City_ID", "=", "T2.Host_city_ID", "WHERE", "T1.Population", ">", "1000"], "query_toks_no_value": ["select", "t2", ".", "theme", "from", "city", "as", "t1", "join", "farm_competition", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city_id", "where", "t1", ".", "population", ">", "value"], "question": "¿Cuáles son los temas de los concursos que tienen las correspondientes ciudades anfitrionas con más de 1000 habitantes?\n", "question_toks": ["What", "are", "the", "themes", "of", "competitions", "that", "have", "corresponding", "host", "cities", "with", "more", "than", "1000", "residents", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)", "query_toks": ["SELECT", "Official_Name", "FROM", "city", "WHERE", "City_ID", "NOT", "IN", "(", "SELECT", "Host_city_ID", "FROM", "farm_competition", ")"], "query_toks_no_value": ["select", "official_name", "from", "city", "where", "city_id", "not", "in", "(", "select", "host_city_id", "from", "farm_competition", ")"], "question": "Enumera los nombres oficiales de las ciudades que no han celebrado ninguna competición.\n", "question_toks": ["List", "the", "official", "names", "of", "cities", "that", "have", "not", "held", "any", "competition", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)", "query_toks": ["SELECT", "Official_Name", "FROM", "city", "WHERE", "City_ID", "NOT", "IN", "(", "SELECT", "Host_city_ID", "FROM", "farm_competition", ")"], "query_toks_no_value": ["select", "official_name", "from", "city", "where", "city_id", "not", "in", "(", "select", "host_city_id", "from", "farm_competition", ")"], "question": "¿Cuáles son los nombres oficiales de las ciudades que no han acogido un concurso agrícola?\n", "question_toks": ["What", "are", "the", "official", "names", "of", "cities", "that", "have", "not", "hosted", "a", "farm", "competition", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500", "query_toks": ["SELECT", "Official_Name", "FROM", "city", "WHERE", "Population", ">", "1500", "OR", "Population", "<", "500"], "query_toks_no_value": ["select", "official_name", "from", "city", "where", "population", ">", "value", "or", "population", "<", "value"], "question": "Encuentre los nombres oficiales de ciudades con una población mayor a 1500 o menor a 500.\n", "question_toks": ["Find", "the", "official", "names", "of", "cities", "with", "population", "bigger", "than", "1500", "or", "smaller", "than", "500", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 1500.0, null], "or", [false, 4, [0, [0, 5, false], null], 500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500", "query_toks": ["SELECT", "Official_Name", "FROM", "city", "WHERE", "Population", ">", "1500", "OR", "Population", "<", "500"], "query_toks_no_value": ["select", "official_name", "from", "city", "where", "population", ">", "value", "or", "population", "<", "value"], "question": "¿Cuáles son los nombres oficiales de las ciudades que tienen una población superior a 1500 o inferior a 500?\n", "question_toks": ["What", "are", "the", "official", "names", "of", "cities", "that", "have", "population", "over", "1500", "or", "less", "than", "500", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 1500.0, null], "or", [false, 4, [0, [0, 5, false], null], 500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"", "query_toks": ["SELECT", "Census_Ranking", "FROM", "city", "WHERE", "Status", "!", "=", "``", "Village", "''"], "query_toks_no_value": ["select", "census_ranking", "from", "city", "where", "status", "!", "=", "value"], "question": "Muestra la clasificación censal de las ciudades cuyo estado no es \"Pueblo\".\n", "question_toks": ["Show", "the", "census", "ranking", "of", "cities", "whose", "status", "are", "not", "``", "Village", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"Village\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "farm", "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"", "query_toks": ["SELECT", "Census_Ranking", "FROM", "city", "WHERE", "Status", "!", "=", "``", "Village", "''"], "query_toks_no_value": ["select", "census_ranking", "from", "city", "where", "status", "!", "=", "value"], "question": "¿Cuáles son las clasificaciones censales de las ciudades que no tienen el estatus de \"pueblo\"?\n", "question_toks": ["What", "are", "the", "census", "rankings", "of", "cities", "that", "do", "not", "have", "the", "status", "``", "Village", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"Village\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "candidates", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.candidate_id", "=", "T2.person_id"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "candidates", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "candidate_id", "=", "t2", ".", "person_id"], "question": "¿Cuáles son el nombre y apellido de todos los candidatos?\n", "question_toks": ["what", "are", "the", "first", "name", "and", "last", "name", "of", "all", "candidates", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "candidates", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.candidate_id", "=", "T2.person_id"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "candidates", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "candidate_id", "=", "t2", ".", "person_id"], "question": "¿Cuáles son los nombres y apellidos de todos los candidatos?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "the", "candidates", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "query_toks": ["SELECT", "student_id", "FROM", "students", "WHERE", "student_id", "NOT", "IN", "(", "SELECT", "student_id", "FROM", "student_course_attendance", ")"], "query_toks_no_value": ["select", "student_id", "from", "students", "where", "student_id", "not", "in", "(", "select", "student_id", "from", "student_course_attendance", ")"], "question": "¿Enumere la identificación de los estudiantes que nunca asisten a cursos?\n", "question_toks": ["List", "the", "id", "of", "students", "who", "never", "attends", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[true, 8, [0, [0, 16, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "query_toks": ["SELECT", "student_id", "FROM", "students", "WHERE", "student_id", "NOT", "IN", "(", "SELECT", "student_id", "FROM", "student_course_attendance", ")"], "query_toks_no_value": ["select", "student_id", "from", "students", "where", "student_id", "not", "in", "(", "select", "student_id", "from", "student_course_attendance", ")"], "question": "¿Cuáles son las identificaciones de cada estudiante que nunca ha asistido a un curso?\n", "question_toks": ["What", "are", "the", "ids", "of", "every", "student", "who", "has", "never", "attended", "a", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[true, 8, [0, [0, 16, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT student_id FROM student_course_attendance", "query_toks": ["SELECT", "student_id", "FROM", "student_course_attendance"], "query_toks_no_value": ["select", "student_id", "from", "student_course_attendance"], "question": "¿Enumerar la identificación de los estudiantes que asistieron a algunos cursos?\n", "question_toks": ["List", "the", "id", "of", "students", "who", "attended", "some", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT student_id FROM student_course_attendance", "query_toks": ["SELECT", "student_id", "FROM", "student_course_attendance"], "query_toks_no_value": ["select", "student_id", "from", "student_course_attendance"], "question": "¿Cuáles son las identificaciones de todos los estudiantes que han asistido al menos a un curso?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "who", "have", "attended", "at", "least", "one", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "query_toks": ["SELECT", "T1.student_id", ",", "T2.course_name", "FROM", "student_course_registrations", "AS", "T1", "JOIN", "courses", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "course_name", "from", "student_course_registrations", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id"], "question": "¿Cuáles son las identificaciones de todos los estudiantes de los cursos y cuáles son los nombres de esos cursos?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "for", "courses", "and", "what", "are", "the", "names", "of", "those", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\"", "query_toks": ["SELECT", "T2.candidate_id", "FROM", "people", "AS", "T1", "JOIN", "candidates", "AS", "T2", "ON", "T1.person_id", "=", "T2.candidate_id", "WHERE", "T1.email_address", "=", "``", "stanley.monahan", "@", "example.org", "''"], "query_toks_no_value": ["select", "t2", ".", "candidate_id", "from", "people", "as", "t1", "join", "candidates", "as", "t2", "on", "t1", ".", "person_id", "=", "t2", ".", "candidate_id", "where", "t1", ".", "email_address", "=", "value"], "question": "¿Encontrar la identificación del candidato cuyo correo electrónico es stanley.monahan@example.org?\n", "question_toks": ["Find", "id", "of", "the", "candidate", "whose", "email", "is", "stanley.monahan", "@", "example.org", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"stanley.monahan@example.org\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\"", "query_toks": ["SELECT", "T2.candidate_id", "FROM", "people", "AS", "T1", "JOIN", "candidates", "AS", "T2", "ON", "T1.person_id", "=", "T2.candidate_id", "WHERE", "T1.email_address", "=", "``", "stanley.monahan", "@", "example.org", "''"], "query_toks_no_value": ["select", "t2", ".", "candidate_id", "from", "people", "as", "t1", "join", "candidates", "as", "t2", "on", "t1", ".", "person_id", "=", "t2", ".", "candidate_id", "where", "t1", ".", "email_address", "=", "value"], "question": "¿Cuál es la identificación del candidato cuyo correo electrónico es stanley.monahan@example.org?\n", "question_toks": ["What", "is", "the", "id", "of", "the", "candidate", "whose", "email", "is", "stanley.monahan", "@", "example.org", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"stanley.monahan@example.org\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"", "query_toks": ["SELECT", "candidate_id", "FROM", "candidate_assessments", "WHERE", "asessment_outcome_code", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "candidate_id", "from", "candidate_assessments", "where", "asessment_outcome_code", "=", "value"], "question": "¿Encontrar la identificación de los candidatos cuyo código de evaluación es \"Aprobar\"?\n", "question_toks": ["Find", "id", "of", "candidates", "whose", "assessment", "code", "is", "``", "Pass", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"", "query_toks": ["SELECT", "candidate_id", "FROM", "candidate_assessments", "WHERE", "asessment_outcome_code", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "candidate_id", "from", "candidate_assessments", "where", "asessment_outcome_code", "=", "value"], "question": "¿Cuáles son los identificadores de los candidatos que tienen un código de resultado Aprobado?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "candidates", "that", "have", "an", "outcome", "code", "of", "Pass", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"", "query_toks": ["SELECT", "T3.cell_mobile_number", "FROM", "candidates", "AS", "T1", "JOIN", "candidate_assessments", "AS", "T2", "ON", "T1.candidate_id", "=", "T2.candidate_id", "JOIN", "people", "AS", "T3", "ON", "T1.candidate_id", "=", "T3.person_id", "WHERE", "T2.asessment_outcome_code", "=", "``", "Fail", "''"], "query_toks_no_value": ["select", "t3", ".", "cell_mobile_number", "from", "candidates", "as", "t1", "join", "candidate_assessments", "as", "t2", "on", "t1", ".", "candidate_id", "=", "t2", ".", "candidate_id", "join", "people", "as", "t3", "on", "t1", ".", "candidate_id", "=", "t3", ".", "person_id", "where", "t2", ".", "asessment_outcome_code", "=", "value"], "question": "¿Encontrar el número de móvil de los candidatos cuyo código de evaluación es \"Reprobado\"?\n", "question_toks": ["Find", "the", "cell", "mobile", "number", "of", "the", "candidates", "whose", "assessment", "code", "is", "``", "Fail", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 8], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 35, false], null], "and", [false, 2, [0, [0, 33, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Fail\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"", "query_toks": ["SELECT", "T3.cell_mobile_number", "FROM", "candidates", "AS", "T1", "JOIN", "candidate_assessments", "AS", "T2", "ON", "T1.candidate_id", "=", "T2.candidate_id", "JOIN", "people", "AS", "T3", "ON", "T1.candidate_id", "=", "T3.person_id", "WHERE", "T2.asessment_outcome_code", "=", "``", "Fail", "''"], "query_toks_no_value": ["select", "t3", ".", "cell_mobile_number", "from", "candidates", "as", "t1", "join", "candidate_assessments", "as", "t2", "on", "t1", ".", "candidate_id", "=", "t2", ".", "candidate_id", "join", "people", "as", "t3", "on", "t1", ".", "candidate_id", "=", "t3", ".", "person_id", "where", "t2", ".", "asessment_outcome_code", "=", "value"], "question": "¿Cuáles son los números de teléfono celular de los candidatos que recibieron un código de evaluación de \"Reprobado\"?\n", "question_toks": ["What", "are", "the", "cell", "phone", "numbers", "of", "the", "candidates", "that", "received", "an", "assessment", "code", "of", "``", "Fail", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 8], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 35, false], null], "and", [false, 2, [0, [0, 33, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Fail\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301", "query_toks": ["SELECT", "student_id", "FROM", "student_course_attendance", "WHERE", "course_id", "=", "301"], "query_toks_no_value": ["select", "student_id", "from", "student_course_attendance", "where", "course_id", "=", "value"], "question": "¿Cuáles son los ID de los estudiantes que se registraron en el curso 301?\n", "question_toks": ["What", "are", "the", "id", "of", "students", "who", "registered", "course", "301", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], 301.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301", "query_toks": ["SELECT", "student_id", "FROM", "student_course_attendance", "WHERE", "course_id", "=", "301"], "query_toks_no_value": ["select", "student_id", "from", "student_course_attendance", "where", "course_id", "=", "value"], "question": "¿Cuáles son las identificaciones de los estudiantes que se registraron en el curso 301?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "students", "who", "registered", "for", "course", "301", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], 301.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "query_toks": ["SELECT", "DISTINCT", "T1.city", "FROM", "addresses", "AS", "T1", "JOIN", "people_addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "people_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id"], "question": "¿Encontrar distintas ciudades de direcciones de personas?\n", "question_toks": ["Find", "distinct", "cities", "of", "addresses", "of", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "query_toks": ["SELECT", "DISTINCT", "T1.city", "FROM", "addresses", "AS", "T1", "JOIN", "people_addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "people_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id"], "question": "¿Cuáles son las diferentes ciudades donde vive la gente?\n", "question_toks": ["What", "are", "the", "different", "cities", "where", "people", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id", "query_toks": ["SELECT", "DISTINCT", "T1.city", "FROM", "addresses", "AS", "T1", "JOIN", "people_addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "JOIN", "students", "AS", "T3", "ON", "T2.person_id", "=", "T3.student_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "people_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "join", "students", "as", "t3", "on", "t2", ".", "person_id", "=", "t3", ".", "student_id"], "question": "¿Encontrar distintas ciudades de dirección de los estudiantes?\n", "question_toks": ["Find", "distinct", "cities", "of", "address", "of", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 23, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id", "query_toks": ["SELECT", "DISTINCT", "T1.city", "FROM", "addresses", "AS", "T1", "JOIN", "people_addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "JOIN", "students", "AS", "T3", "ON", "T2.person_id", "=", "T3.student_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "people_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "join", "students", "as", "t3", "on", "t2", ".", "person_id", "=", "t3", ".", "student_id"], "question": "¿Cuáles son las diferentes ciudades donde viven los estudiantes?\n", "question_toks": ["What", "are", "the", "different", "cities", "where", "students", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 23, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "query_toks": ["SELECT", "*", "FROM", "student_course_registrations", "WHERE", "student_id", "NOT", "IN", "(", "SELECT", "student_id", "FROM", "student_course_attendance", ")"], "query_toks_no_value": ["select", "*", "from", "student_course_registrations", "where", "student_id", "not", "in", "(", "select", "student_id", "from", "student_course_attendance", ")"], "question": "¿Cuál es toda la información de los estudiantes que se registraron en cursos pero no asistieron a cursos?\n", "question_toks": ["What", "are", "all", "info", "of", "students", "who", "registered", "courses", "but", "not", "attended", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_assessment", "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)", "query_toks": ["SELECT", "*", "FROM", "student_course_registrations", "WHERE", "student_id", "NOT", "IN", "(", "SELECT", "student_id", "FROM", "student_course_attendance", ")"], "query_toks_no_value": ["select", "*", "from", "student_course_registrations", "where", "student_id", "not", "in", "(", "select", "student_id", "from", "student_course_attendance", ")"], "question": "¿Cuáles son todos los detalles de los estudiantes que se registraron pero no asistieron a ningún curso?\n", "question_toks": ["What", "are", "all", "details", "of", "the", "students", "who", "registered", "but", "did", "not", "attend", "any", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date FROM weather WHERE max_temperature_f  >  85", "query_toks": ["SELECT", "date", "FROM", "weather", "WHERE", "max_temperature_f", ">", "85"], "query_toks_no_value": ["select", "date", "from", "weather", "where", "max_temperature_f", ">", "value"], "question": "Dame las fechas en las que la temperatura máxima fue superior a 85.\n", "question_toks": ["Give", "me", "the", "dates", "when", "the", "max", "temperature", "was", "higher", "than", "85", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 3, [0, [0, 24, false], null], 85.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date FROM weather WHERE max_temperature_f  >  85", "query_toks": ["SELECT", "date", "FROM", "weather", "WHERE", "max_temperature_f", ">", "85"], "query_toks_no_value": ["select", "date", "from", "weather", "where", "max_temperature_f", ">", "value"], "question": "¿Cuáles son las fechas con una temperatura máxima superior a 85?\n", "question_toks": ["What", "are", "the", "dates", "with", "a", "maximum", "temperature", "higher", "than", "85", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 3, [0, [0, 24, false], null], 85.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT name FROM station WHERE lat  <  37.5", "query_toks": ["SELECT", "name", "FROM", "station", "WHERE", "lat", "<", "37.5"], "query_toks_no_value": ["select", "name", "from", "station", "where", "lat", "<", "value"], "question": "¿Cuáles son los nombres de las estaciones que tienen una latitud inferior a 37,5?\n", "question_toks": ["What", "are", "the", "names", "of", "stations", "that", "have", "latitude", "lower", "than", "37.5", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 37.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT name FROM station WHERE lat  <  37.5", "query_toks": ["SELECT", "name", "FROM", "station", "WHERE", "lat", "<", "37.5"], "query_toks_no_value": ["select", "name", "from", "station", "where", "lat", "<", "value"], "question": "¿Cuáles son los nombres de todas las estaciones con una latitud menor que 37,5?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "stations", "with", "a", "latitude", "smaller", "than", "37.5", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 37.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "station", "WHERE", "city", "=", "``", "Mountain", "View", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "station", "where", "city", "=", "value"], "question": "¿Cuántas estaciones tiene la ciudad de Mountain View?\n", "question_toks": ["How", "many", "stations", "does", "Mountain", "View", "city", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Mountain View\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "station", "WHERE", "city", "=", "``", "Mountain", "View", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "station", "where", "city", "=", "value"], "question": "¿Cuántas estaciones hay en Mountain View?\n", "question_toks": ["How", "many", "stations", "are", "in", "Mountain", "View", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Mountain View\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "WHERE", "T2.bikes_available", "=", "7"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "where", "t2", ".", "bikes_available", "=", "value"], "question": "Devuelve el nombre único de las estaciones que alguna vez han tenido 7 bicicletas disponibles.\n", "question_toks": ["Return", "the", "unique", "name", "for", "stations", "that", "have", "ever", "had", "7", "bikes", "available", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "WHERE", "T2.bikes_available", "=", "7"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "where", "t2", ".", "bikes_available", "=", "value"], "question": "¿Cuáles son los diferentes nombres de cada estación que alguna vez ha tenido 7 bicicletas disponibles?\n", "question_toks": ["What", "are", "the", "different", "names", "for", "each", "station", "that", "has", "ever", "had", "7", "bikes", "available", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "weather", "WHERE", "mean_humidity", ">", "50", "AND", "mean_visibility_miles", ">", "8"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "weather", "where", "mean_humidity", ">", "value", "and", "mean_visibility_miles", ">", "value"], "question": "¿Cuántos días tuvieron una humedad media superior a 50 y una visibilidad media superior a 8?\n", "question_toks": ["How", "many", "days", "had", "both", "mean", "humidity", "above", "50", "and", "mean", "visibility", "above", "8", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 31, false], null], 50.0, null], "and", [false, 3, [0, [0, 37, false], null], 8.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "weather", "WHERE", "mean_humidity", ">", "50", "AND", "mean_visibility_miles", ">", "8"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "weather", "where", "mean_humidity", ">", "value", "and", "mean_visibility_miles", ">", "value"], "question": "¿Cuál es el número de días que tuvieron una humedad promedio superior a 50 y una visibilidad promedio superior a 8?\n", "question_toks": ["What", "is", "the", "number", "of", "days", "that", "had", "an", "average", "humity", "above", "50", "and", "an", "average", "visibility", "above", "8", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 31, false], null], 50.0, null], "and", [false, 3, [0, [0, 37, false], null], 8.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "max_temperature_f", ">", "=", "80"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "max_temperature_f", ">", "=", "value"], "question": "¿Cuándo y en qué código postal la temperatura máxima alcanzó los 80 grados?\n", "question_toks": ["When", "and", "in", "what", "zip", "code", "did", "max", "temperature", "reach", "80", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "where": [[false, 5, [0, [0, 24, false], null], 80.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "max_temperature_f", ">", "=", "80"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "max_temperature_f", ">", "=", "value"], "question": "¿Qué códigos postales tienen una estación con una temperatura máxima mayor o igual a 80 y cuándo alcanzó esa temperatura?\n", "question_toks": ["What", "zip", "codes", "have", "a", "station", "with", "a", "max", "temperature", "greater", "than", "or", "equal", "to", "80", "and", "when", "did", "it", "reach", "that", "temperature", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "where": [[false, 5, [0, [0, 24, false], null], 80.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "min_dew_point_f", "<", "(", "SELECT", "min", "(", "min_dew_point_f", ")", "FROM", "weather", "WHERE", "zip_code", "=", "94107", ")"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "min_dew_point_f", "<", "(", "select", "min", "(", "min_dew_point_f", ")", "from", "weather", "where", "zip_code", "=", "value", ")"], "question": "¿En qué día y en qué código postal el punto de rocío mínimo fue menor que cualquier día en el código postal 94107?\n", "question_toks": ["On", "which", "day", "and", "in", "which", "zip", "code", "was", "the", "min", "dew", "point", "lower", "than", "any", "day", "in", "zip", "code", "94107", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "where": [[false, 4, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 46, false], null], 94107.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)", "query_toks": ["SELECT", "date", ",", "zip_code", "FROM", "weather", "WHERE", "min_dew_point_f", "<", "(", "SELECT", "min", "(", "min_dew_point_f", ")", "FROM", "weather", "WHERE", "zip_code", "=", "94107", ")"], "query_toks_no_value": ["select", "date", ",", "zip_code", "from", "weather", "where", "min_dew_point_f", "<", "(", "select", "min", "(", "min_dew_point_f", ")", "from", "weather", "where", "zip_code", "=", "value", ")"], "question": "¿Qué días tuvieron un punto de rocío mínimo menor que cualquier día en el código postal 94107 y en qué códigos postales se tomaron esas mediciones?\n", "question_toks": ["Which", "days", "had", "a", "minimum", "dew", "point", "smaller", "than", "any", "day", "in", "zip", "code", "94107", ",", "and", "in", "which", "zip", "codes", "were", "those", "measurements", "taken", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 46, false], null]]]], "where": [[false, 4, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 46, false], null], 94107.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id", "query_toks": ["SELECT", "T1.id", ",", "T2.installation_date", "FROM", "trip", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.end_station_id", "=", "T2.id"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t2", ".", "installation_date", "from", "trip", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "end_station_id", "=", "t2", ".", "id"], "question": "Para cada viaje, devuelva la fecha de instalación de su estación final.\n", "question_toks": ["For", "each", "trip", ",", "return", "its", "ending", "station", "'s", "installation", "date", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id", "query_toks": ["SELECT", "T1.id", ",", "T2.installation_date", "FROM", "trip", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.end_station_id", "=", "T2.id"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t2", ".", "installation_date", "from", "trip", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "end_station_id", "=", "t2", ".", "id"], "question": "¿Cuál es la fecha de instalación de cada estación final en todos los viajes?\n", "question_toks": ["What", "is", "the", "installation", "date", "for", "each", "ending", "station", "on", "all", "the", "trips", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"", "query_toks": ["SELECT", "date", "FROM", "weather", "WHERE", "zip_code", "=", "94107", "AND", "EVENTS", "!", "=", "``", "Fog", "''", "AND", "EVENTS", "!", "=", "``", "Rain", "''"], "query_toks_no_value": ["select", "date", "from", "weather", "where", "zip_code", "=", "value", "and", "events", "!", "=", "value", "and", "events", "!", "=", "value"], "question": "En el código postal 94107, ¿en qué día no se observó Niebla ni Lluvia?\n", "question_toks": ["In", "zip", "code", "94107", ",", "on", "which", "day", "neither", "Fog", "nor", "Rain", "was", "not", "observed", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 46, false], null], 94107.0, null], "and", [false, 7, [0, [0, 44, false], null], "\"Fog\"", null], "and", [false, 7, [0, [0, 44, false], null], "\"Rain\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"", "query_toks": ["SELECT", "date", "FROM", "weather", "WHERE", "zip_code", "=", "94107", "AND", "EVENTS", "!", "=", "``", "Fog", "''", "AND", "EVENTS", "!", "=", "``", "Rain", "''"], "query_toks_no_value": ["select", "date", "from", "weather", "where", "zip_code", "=", "value", "and", "events", "!", "=", "value", "and", "events", "!", "=", "value"], "question": "¿En qué día no ha habido niebla ni lluvia en el código postal 94107?\n", "question_toks": ["On", "which", "day", "has", "it", "neither", "been", "foggy", "nor", "rained", "in", "the", "zip", "code", "of", "94107", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 46, false], null], 94107.0, null], "and", [false, 7, [0, [0, 44, false], null], "\"Fog\"", null], "and", [false, 7, [0, [0, 44, false], null], "\"Rain\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100", "query_toks": ["SELECT", "DISTINCT", "start_station_name", "FROM", "trip", "WHERE", "duration", "<", "100"], "query_toks_no_value": ["select", "distinct", "start_station_name", "from", "trip", "where", "duration", "<", "value"], "question": "Enumere todas las distintas estaciones desde las que comenzó un viaje de duración inferior a 100.\n", "question_toks": ["List", "all", "the", "distinct", "stations", "from", "which", "a", "trip", "of", "duration", "below", "100", "started", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100", "query_toks": ["SELECT", "DISTINCT", "start_station_name", "FROM", "trip", "WHERE", "duration", "<", "100"], "query_toks_no_value": ["select", "distinct", "start_station_name", "from", "trip", "where", "duration", "<", "value"], "question": "¿Cuáles son los diferentes nombres de las estaciones de inicio para un viaje que duró menos de 100?\n", "question_toks": ["What", "are", "all", "the", "different", "start", "station", "names", "for", "a", "trip", "that", "lasted", "less", "than", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)", "query_toks": ["SELECT", "id", "FROM", "trip", "WHERE", "duration", ">", "=", "(", "SELECT", "avg", "(", "duration", ")", "FROM", "trip", "WHERE", "zip_code", "=", "94103", ")"], "query_toks_no_value": ["select", "id", "from", "trip", "where", "duration", ">", "=", "(", "select", "avg", "(", "duration", ")", "from", "trip", "where", "zip_code", "=", "value", ")"], "question": "Encuentre la identificación de los viajes que duraron al menos tanto como la duración promedio de los viajes en el código postal 94103.\n", "question_toks": ["Find", "the", "id", "for", "the", "trips", "that", "lasted", "at", "least", "as", "long", "as", "the", "average", "duration", "of", "trips", "in", "zip", "code", "94103", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 5, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 94103.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)", "query_toks": ["SELECT", "id", "FROM", "trip", "WHERE", "duration", ">", "=", "(", "SELECT", "avg", "(", "duration", ")", "FROM", "trip", "WHERE", "zip_code", "=", "94103", ")"], "query_toks_no_value": ["select", "id", "from", "trip", "where", "duration", ">", "=", "(", "select", "avg", "(", "duration", ")", "from", "trip", "where", "zip_code", "=", "value", ")"], "question": "¿Cuáles son los identificadores de todos los viajes que tuvieron una duración igual a la duración promedio del viaje en el código postal 94103?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "trips", "that", "had", "a", "duration", "as", "long", "as", "the", "average", "trip", "duration", "in", "the", "zip", "code", "94103", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 5, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 94103.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "query_toks": ["SELECT", "date", "FROM", "weather", "WHERE", "mean_sea_level_pressure_inches", "BETWEEN", "30.3", "AND", "31"], "query_toks_no_value": ["select", "date", "from", "weather", "where", "mean_sea_level_pressure_inches", "between", "value", "and", "value"], "question": "¿Cuáles son las fechas en las que la presión media del nivel del mar estuvo entre 30,3 y 31?\n", "question_toks": ["What", "are", "the", "dates", "in", "which", "the", "mean", "sea", "level", "pressure", "was", "between", "30.3", "and", "31", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 34, false], null], 30.3, 31.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "query_toks": ["SELECT", "date", "FROM", "weather", "WHERE", "mean_sea_level_pressure_inches", "BETWEEN", "30.3", "AND", "31"], "query_toks_no_value": ["select", "date", "from", "weather", "where", "mean_sea_level_pressure_inches", "between", "value", "and", "value"], "question": "¿Cuáles son las fechas que tienen una presión promedio a nivel del mar entre 30,3 y 31?\n", "question_toks": ["What", "are", "the", "dates", "that", "have", "an", "average", "sea", "level", "pressure", "between", "30.3", "and", "31", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 34, false], null], 30.3, 31.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12", "query_toks": ["SELECT", "DISTINCT", "T1.id", ",", "T1.name", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "WHERE", "T2.bikes_available", ">", "12"], "query_toks_no_value": ["select", "distinct", "t1", ".", "id", ",", "t1", ".", "name", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "where", "t2", ".", "bikes_available", ">", "value"], "question": "¿Cuáles son el id y el nombre de las estaciones que alguna vez han tenido más de 12 bicicletas disponibles?\n", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "stations", "that", "have", "ever", "had", "more", "than", "12", "bikes", "available", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 12.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "bike_1", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12", "query_toks": ["SELECT", "DISTINCT", "T1.id", ",", "T1.name", "FROM", "station", "AS", "T1", "JOIN", "status", "AS", "T2", "ON", "T1.id", "=", "T2.station_id", "WHERE", "T2.bikes_available", ">", "12"], "query_toks_no_value": ["select", "distinct", "t1", ".", "id", ",", "t1", ".", "name", "from", "station", "as", "t1", "join", "status", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "where", "t2", ".", "bikes_available", ">", "value"], "question": "¿Cuáles son las diferentes identificaciones y nombres de las estaciones que han tenido más de 12 bicicletas disponibles?\n", "question_toks": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "stations", "that", "have", "had", "more", "than", "12", "bikes", "available", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 12.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\"", "query_toks": ["SELECT", "Title", "FROM", "book", "WHERE", "Writer", "!", "=", "``", "Elaine", "Lee", "''"], "query_toks_no_value": ["select", "title", "from", "book", "where", "writer", "!", "=", "value"], "question": "¿Cuáles son los títulos de los libros cuya escritora no es \"Elaine Lee\"?\n", "question_toks": ["What", "are", "the", "titles", "of", "the", "books", "whose", "writer", "is", "not", "``", "Elaine", "Lee", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"Elaine Lee\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT Title ,  Issues FROM book", "query_toks": ["SELECT", "Title", ",", "Issues", "FROM", "book"], "query_toks_no_value": ["select", "title", ",", "issues", "from", "book"], "question": "¿Cuáles son el título y los números de los libros?\n", "question_toks": ["What", "are", "the", "title", "and", "issues", "of", "the", "books", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000", "query_toks": ["SELECT", "DISTINCT", "Publisher", "FROM", "publication", "WHERE", "Price", ">", "5000000"], "query_toks_no_value": ["select", "distinct", "publisher", "from", "publication", "where", "price", ">", "value"], "question": "¿Cuáles son las distintas editoriales de publicaciones con precio superior a 5000000?\n", "question_toks": ["What", "are", "the", "distinct", "publishers", "of", "publications", "with", "price", "higher", "than", "5000000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 5000000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Publication_Date", "FROM", "book", "AS", "T1", "JOIN", "publication", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "publication_date", "from", "book", "as", "t1", "join", "publication", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id"], "question": "Muestra el título y las fechas de publicación de los libros.\n", "question_toks": ["Show", "the", "title", "and", "publication", "dates", "of", "books", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000", "query_toks": ["SELECT", "T1.Writer", "FROM", "book", "AS", "T1", "JOIN", "publication", "AS", "T2", "ON", "T1.Book_ID", "=", "T2.Book_ID", "WHERE", "T2.Price", ">", "4000000"], "query_toks_no_value": ["select", "t1", ".", "writer", "from", "book", "as", "t1", "join", "publication", "as", "t2", "on", "t1", ".", "book_id", "=", "t2", ".", "book_id", "where", "t2", ".", "price", ">", "value"], "question": "Mostrar escritores que han publicado un libro con un precio superior a 4000000.\n", "question_toks": ["Show", "writers", "who", "have", "published", "a", "book", "with", "price", "more", "than", "4000000", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 4000000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)", "query_toks": ["SELECT", "Title", "FROM", "book", "WHERE", "Book_ID", "NOT", "IN", "(", "SELECT", "Book_ID", "FROM", "publication", ")"], "query_toks_no_value": ["select", "title", "from", "book", "where", "book_id", "not", "in", "(", "select", "book_id", "from", "publication", ")"], "question": "Enumere los títulos de los libros que no están publicados.\n", "question_toks": ["List", "the", "titles", "of", "books", "that", "are", "not", "published", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Publication_Date", ")", "FROM", "publication"], "query_toks_no_value": ["select", "count", "(", "distinct", "publication_date", ")", "from", "publication"], "question": "¿Cuál es el número de fechas de publicación distintas?\n", "question_toks": ["What", "is", "the", "number", "of", "distinct", "publication", "dates", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Publication_Date", ")", "FROM", "publication"], "query_toks_no_value": ["select", "count", "(", "distinct", "publication_date", ")", "from", "publication"], "question": "¿Cuántas fechas de publicación distintas hay en nuestro registro?\n", "question_toks": ["How", "many", "distinct", "publication", "dates", "are", "there", "in", "our", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "book_2", "query": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\"", "query_toks": ["SELECT", "Price", "FROM", "publication", "WHERE", "Publisher", "=", "``", "Person", "''", "OR", "Publisher", "=", "``", "Wiley", "''"], "query_toks_no_value": ["select", "price", "from", "publication", "where", "publisher", "=", "value", "or", "publisher", "=", "value"], "question": "Mostrar los precios de las publicaciones cuyo editor sea \"Persona\" o \"Wiley\"\n", "question_toks": ["Show", "the", "prices", "of", "publications", "whose", "publisher", "is", "either", "``", "Person", "''", "or", "``", "Wiley", "''"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Person\"", null], "or", [false, 2, [0, [0, 3, false], null], "\"Wiley\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Character ,  Duration FROM actor", "query_toks": ["SELECT", "Character", ",", "Duration", "FROM", "actor"], "query_toks_no_value": ["select", "character", ",", "duration", "from", "actor"], "question": "¿Cuáles son los personajes y la duración de los actores?\n", "question_toks": ["What", "are", "the", "characters", "and", "duration", "of", "actors", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Character ,  Duration FROM actor", "query_toks": ["SELECT", "Character", ",", "Duration", "FROM", "actor"], "query_toks_no_value": ["select", "character", ",", "duration", "from", "actor"], "question": "Devuelve los personajes y duraciones de cada actor.\n", "question_toks": ["Return", "the", "characters", "and", "durations", "for", "each", "actor", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Name FROM actor WHERE Age != 20", "query_toks": ["SELECT", "Name", "FROM", "actor", "WHERE", "Age", "!", "=", "20"], "query_toks_no_value": ["select", "name", "from", "actor", "where", "age", "!", "=", "value"], "question": "Indique el nombre de los actores cuya edad no sea 20 años.\n", "question_toks": ["List", "the", "name", "of", "actors", "whose", "age", "is", "not", "20", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Name FROM actor WHERE Age != 20", "query_toks": ["SELECT", "Name", "FROM", "actor", "WHERE", "Age", "!", "=", "20"], "query_toks_no_value": ["select", "name", "from", "actor", "where", "age", "!", "=", "value"], "question": "¿Cómo se llaman los actores que no tienen 20 años?\n", "question_toks": ["What", "are", "the", "names", "of", "actors", "who", "are", "not", "20", "years", "old", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"", "query_toks": ["SELECT", "Name", "FROM", "musical", "WHERE", "Nominee", "=", "``", "Bob", "Fosse", "''"], "query_toks_no_value": ["select", "name", "from", "musical", "where", "nominee", "=", "value"], "question": "¿Cuáles son los nombres de los musicales del nominado \"Bob Fosse\"?\n", "question_toks": ["What", "are", "the", "names", "of", "musicals", "with", "nominee", "``", "Bob", "Fosse", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bob Fosse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"", "query_toks": ["SELECT", "Name", "FROM", "musical", "WHERE", "Nominee", "=", "``", "Bob", "Fosse", "''"], "query_toks_no_value": ["select", "name", "from", "musical", "where", "nominee", "=", "value"], "question": "Devuelve los nombres de los musicales que tienen al nominado Bob Fosse.\n", "question_toks": ["Return", "the", "names", "of", "musicals", "who", "have", "the", "nominee", "Bob", "Fosse", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bob Fosse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"", "query_toks": ["SELECT", "DISTINCT", "Nominee", "FROM", "musical", "WHERE", "Award", "!", "=", "``", "Tony", "Award", "''"], "query_toks_no_value": ["select", "distinct", "nominee", "from", "musical", "where", "award", "!", "=", "value"], "question": "¿Cuáles son los distintos nominados de los musicales con premio que no es \"Premio Tony\"?\n", "question_toks": ["What", "are", "the", "distinct", "nominees", "of", "the", "musicals", "with", "the", "award", "that", "is", "not", "``", "Tony", "Award", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Tony Award\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"", "query_toks": ["SELECT", "DISTINCT", "Nominee", "FROM", "musical", "WHERE", "Award", "!", "=", "``", "Tony", "Award", "''"], "query_toks_no_value": ["select", "distinct", "nominee", "from", "musical", "where", "award", "!", "=", "value"], "question": "Devuelve los diferentes nominados de musicales que tienen algún premio que no es el premio Tony.\n", "question_toks": ["Return", "the", "different", "nominees", "of", "musicals", "that", "have", "an", "award", "that", "is", "not", "the", "Tony", "Award", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Tony Award\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id"], "question": "Muestra los nombres de los actores y los nombres de los musicales en los que participan.\n", "question_toks": ["Show", "names", "of", "actors", "and", "names", "of", "musicals", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id"], "question": "¿Cuáles son los nombres de los actores y los musicales en los que participan?\n", "question_toks": ["What", "are", "the", "names", "of", "actors", "and", "the", "musicals", "that", "they", "are", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"", "query_toks": ["SELECT", "T1.Name", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID", "WHERE", "T2.Name", "=", "``", "The", "Phantom", "of", "the", "Opera", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id", "where", "t2", ".", "name", "=", "value"], "question": "Mostrar nombres de actores que han aparecido en musical con el nombre \"El Fantasma de la Ópera\".\n", "question_toks": ["Show", "names", "of", "actors", "that", "have", "appeared", "in", "musical", "with", "name", "``", "The", "Phantom", "of", "the", "Opera", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"The Phantom of the Opera\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"", "query_toks": ["SELECT", "T1.Name", "FROM", "actor", "AS", "T1", "JOIN", "musical", "AS", "T2", "ON", "T1.Musical_ID", "=", "T2.Musical_ID", "WHERE", "T2.Name", "=", "``", "The", "Phantom", "of", "the", "Opera", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "actor", "as", "t1", "join", "musical", "as", "t2", "on", "t1", ".", "musical_id", "=", "t2", ".", "musical_id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de los actores que han estado en el musical titulado El fantasma de la ópera?\n", "question_toks": ["What", "are", "the", "names", "of", "actors", "who", "have", "been", "in", "the", "musical", "titled", "The", "Phantom", "of", "the", "Opera", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"The Phantom of the Opera\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)", "query_toks": ["SELECT", "Name", "FROM", "musical", "WHERE", "Musical_ID", "NOT", "IN", "(", "SELECT", "Musical_ID", "FROM", "actor", ")"], "query_toks_no_value": ["select", "name", "from", "musical", "where", "musical_id", "not", "in", "(", "select", "musical_id", "from", "actor", ")"], "question": "Enumere el nombre de los musicales que no tienen actores.\n", "question_toks": ["List", "the", "name", "of", "musicals", "that", "do", "not", "have", "actors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)", "query_toks": ["SELECT", "Name", "FROM", "musical", "WHERE", "Musical_ID", "NOT", "IN", "(", "SELECT", "Musical_ID", "FROM", "actor", ")"], "query_toks_no_value": ["select", "name", "from", "musical", "where", "musical_id", "not", "in", "(", "select", "musical_id", "from", "actor", ")"], "question": "¿Cómo se llaman los musicales que no tienen actores?\n", "question_toks": ["What", "are", "the", "names", "of", "musicals", "who", "have", "no", "actors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"", "query_toks": ["SELECT", "Nominee", "FROM", "musical", "WHERE", "Award", "=", "``", "Tony", "Award", "''", "OR", "Award", "=", "``", "Cleavant", "Derricks", "''"], "query_toks_no_value": ["select", "nominee", "from", "musical", "where", "award", "=", "value", "or", "award", "=", "value"], "question": "Muestre el musical nominado con el premio \"Bob Fosse\" o \"Cleavant Derricks\".\n", "question_toks": ["Show", "the", "musical", "nominee", "with", "award", "``", "Bob", "Fosse", "''", "or", "``", "Cleavant", "Derricks", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tony Award\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Cleavant Derricks\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "musical", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"", "query_toks": ["SELECT", "Nominee", "FROM", "musical", "WHERE", "Award", "=", "``", "Tony", "Award", "''", "OR", "Award", "=", "``", "Cleavant", "Derricks", "''"], "query_toks_no_value": ["select", "nominee", "from", "musical", "where", "award", "=", "value", "or", "award", "=", "value"], "question": "¿Quiénes son los nominados a los premios Bob Fosse o Cleavant Derricks?\n", "question_toks": ["Who", "are", "the", "nominees", "who", "were", "nominated", "for", "either", "of", "the", "Bob", "Fosse", "or", "Cleavant", "Derricks", "awards", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tony Award\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Cleavant Derricks\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT email FROM user_profiles WHERE name  =  'Mary'", "query_toks": ["SELECT", "email", "FROM", "user_profiles", "WHERE", "name", "=", "'Mary", "'"], "query_toks_no_value": ["select", "email", "from", "user_profiles", "where", "name", "=", "value"], "question": "Encuentra los correos electrónicos del usuario llamado \"Mary\".\n", "question_toks": ["Find", "the", "emails", "of", "the", "user", "named", "``", "Mary", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Mary\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'", "query_toks": ["SELECT", "partitionid", "FROM", "user_profiles", "WHERE", "name", "=", "'Iron", "Man", "'"], "query_toks_no_value": ["select", "partitionid", "from", "user_profiles", "where", "name", "=", "value"], "question": "¿Cuál es la identificación de la partición del usuario llamado \"Iron Man\"?\n", "question_toks": ["What", "is", "the", "partition", "id", "of", "the", "user", "named", "``", "Iron", "Man", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Iron Man\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'", "query_toks": ["SELECT", "name", ",", "email", "FROM", "user_profiles", "WHERE", "name", "LIKE", "'", "%", "Swift", "%", "'"], "query_toks_no_value": ["select", "name", ",", "email", "from", "user_profiles", "where", "name", "like", "value"], "question": "Busque el nombre y el correo electrónico del usuario cuyo nombre contiene la palabra \"Swift\".\n", "question_toks": ["Find", "the", "name", "and", "email", "of", "the", "user", "whose", "name", "contains", "the", "word", "‘Swift’", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Swift%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'", "query_toks": ["SELECT", "name", "FROM", "user_profiles", "WHERE", "email", "LIKE", "'", "%", "superstar", "%", "'", "OR", "email", "LIKE", "'", "%", "edu", "%", "'"], "query_toks_no_value": ["select", "name", "from", "user_profiles", "where", "email", "like", "value", "or", "email", "like", "value"], "question": "Busque los nombres de los usuarios cuyos correos electrónicos contengan \"superstar\" o \"edu\".\n", "question_toks": ["Find", "the", "names", "of", "users", "whose", "emails", "contain", "‘superstar’", "or", "‘edu’", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%superstar%\"", null], "or", [false, 9, [0, [0, 9, false], null], "\"%edu%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'", "query_toks": ["SELECT", "text", "FROM", "tweets", "WHERE", "text", "LIKE", "'", "%", "intern", "%", "'"], "query_toks_no_value": ["select", "text", "from", "tweets", "where", "text", "like", "value"], "question": "Devuelve el texto de los tweets sobre el tema 'pasante'.\n", "question_toks": ["Return", "the", "text", "of", "tweets", "about", "the", "topic", "'intern", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%intern%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000", "query_toks": ["SELECT", "name", ",", "email", "FROM", "user_profiles", "WHERE", "followers", ">", "1000"], "query_toks_no_value": ["select", "name", ",", "email", "from", "user_profiles", "where", "followers", ">", "value"], "question": "Encuentra el nombre y correo electrónico de los usuarios que tienen más de 1000 seguidores.\n", "question_toks": ["Find", "the", "name", "and", "email", "of", "the", "users", "who", "have", "more", "than", "1000", "followers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "twitter_1", "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\"", "query_toks": ["SELECT", "T2.f1", "FROM", "user_profiles", "AS", "T1", "JOIN", "follows", "AS", "T2", "ON", "T1.uid", "=", "T2.f2", "WHERE", "T1.name", "=", "``", "Mary", "''", "OR", "T1.name", "=", "``", "Susan", "''"], "query_toks_no_value": ["select", "t2", ".", "f1", "from", "user_profiles", "as", "t1", "join", "follows", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "f2", "where", "t1", ".", "name", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "Encuentre la identificación de los usuarios seguidos por Mary o Susan.\n", "question_toks": ["Find", "the", "id", "of", "users", "who", "are", "followed", "by", "Mary", "or", "Susan", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Mary\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"Susan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents", "query_toks": ["SELECT", "distinct", "(", "catalog_entry_name", ")", "FROM", "catalog_contents"], "query_toks_no_value": ["select", "distinct", "(", "catalog_entry_name", ")", "from", "catalog_contents"], "question": "Encuentre los nombres de todas las entradas del catálogo.\n", "question_toks": ["Find", "the", "names", "of", "all", "the", "catalog", "entries", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents", "query_toks": ["SELECT", "distinct", "(", "catalog_entry_name", ")", "FROM", "catalog_contents"], "query_toks_no_value": ["select", "distinct", "(", "catalog_entry_name", ")", "from", "catalog_contents"], "question": "¿Cuáles son todos los nombres de las entradas del catálogo?\n", "question_toks": ["What", "are", "all", "the", "catalog", "entry", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"", "query_toks": ["SELECT", "attribute_data_type", "FROM", "Attribute_Definitions", "WHERE", "attribute_name", "=", "``", "Green", "''"], "query_toks_no_value": ["select", "attribute_data_type", "from", "attribute_definitions", "where", "attribute_name", "=", "value"], "question": "¿Cuál es el tipo de datos del atributo con el nombre \"Verde\"?\n", "question_toks": ["What", "is", "the", "attribute", "data", "type", "of", "the", "attribute", "with", "name", "``", "Green", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Green\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"", "query_toks": ["SELECT", "attribute_data_type", "FROM", "Attribute_Definitions", "WHERE", "attribute_name", "=", "``", "Green", "''"], "query_toks_no_value": ["select", "attribute_data_type", "from", "attribute_definitions", "where", "attribute_name", "=", "value"], "question": "Busque el tipo de datos de atributo para el atributo denominado \"Verde\".\n", "question_toks": ["Find", "the", "attribute", "data", "type", "for", "the", "attribute", "named", "``", "Green", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Green\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "query_toks": ["SELECT", "catalog_level_name", ",", "catalog_level_number", "FROM", "Catalog_Structure", "WHERE", "catalog_level_number", "BETWEEN", "5", "AND", "10"], "query_toks_no_value": ["select", "catalog_level_name", ",", "catalog_level_number", "from", "catalog_structure", "where", "catalog_level_number", "between", "value", "and", "value"], "question": "Encuentre el nombre y el nivel de la estructura del catálogo con un nivel entre 5 y 10.\n", "question_toks": ["Find", "the", "name", "and", "level", "of", "catalog", "structure", "with", "level", "between", "5", "and", "10", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 5.0, 10.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "query_toks": ["SELECT", "catalog_level_name", ",", "catalog_level_number", "FROM", "Catalog_Structure", "WHERE", "catalog_level_number", "BETWEEN", "5", "AND", "10"], "query_toks_no_value": ["select", "catalog_level_name", ",", "catalog_level_number", "from", "catalog_structure", "where", "catalog_level_number", "between", "value", "and", "value"], "question": "¿Cuál es el nombre y el nivel de la estructura del catálogo con un número de nivel entre 5 y 10?\n", "question_toks": ["What", "are", "the", "name", "and", "level", "of", "catalog", "structure", "with", "level", "number", "between", "5", "and", "10"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 5.0, 10.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"", "query_toks": ["SELECT", "distinct", "(", "catalog_publisher", ")", "FROM", "catalogs", "WHERE", "catalog_publisher", "LIKE", "``", "%", "Murray", "%", "''"], "query_toks_no_value": ["select", "distinct", "(", "catalog_publisher", ")", "from", "catalogs", "where", "catalog_publisher", "like", "value"], "question": "Encuentre todos los editores de catálogos cuyo nombre contenga \"Murray\"\n", "question_toks": ["Find", "all", "the", "catalog", "publishers", "whose", "name", "contains", "``", "Murray", "''"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%Murray%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"", "query_toks": ["SELECT", "distinct", "(", "catalog_publisher", ")", "FROM", "catalogs", "WHERE", "catalog_publisher", "LIKE", "``", "%", "Murray", "%", "''"], "query_toks_no_value": ["select", "distinct", "(", "catalog_publisher", ")", "from", "catalogs", "where", "catalog_publisher", "like", "value"], "question": "¿Qué editores de catálogos tienen la subcadena \"Murray\" en sus nombres?\n", "question_toks": ["Which", "catalog", "publishers", "have", "substring", "``", "Murray", "''", "in", "their", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%Murray%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "query_toks": ["SELECT", "t1.catalog_name", ",", "t1.date_of_publication", "FROM", "catalogs", "AS", "t1", "JOIN", "catalog_structure", "AS", "t2", "ON", "t1.catalog_id", "=", "t2.catalog_id", "WHERE", "catalog_level_number", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "catalog_name", ",", "t1", ".", "date_of_publication", "from", "catalogs", "as", "t1", "join", "catalog_structure", "as", "t2", "on", "t1", ".", "catalog_id", "=", "t2", ".", "catalog_id", "where", "catalog_level_number", ">", "value"], "question": "Busque los nombres y las fechas de publicación de todos los catálogos que tengan un número de nivel de catálogo mayor que 5.\n", "question_toks": ["Find", "the", "names", "and", "publication", "dates", "of", "all", "catalogs", "that", "have", "catalog", "level", "number", "greater", "than", "5", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5", "query_toks": ["SELECT", "t1.catalog_name", ",", "t1.date_of_publication", "FROM", "catalogs", "AS", "t1", "JOIN", "catalog_structure", "AS", "t2", "ON", "t1.catalog_id", "=", "t2.catalog_id", "WHERE", "catalog_level_number", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "catalog_name", ",", "t1", ".", "date_of_publication", "from", "catalogs", "as", "t1", "join", "catalog_structure", "as", "t2", "on", "t1", ".", "catalog_id", "=", "t2", ".", "catalog_id", "where", "catalog_level_number", ">", "value"], "question": "¿Cuáles son el nombre y la fecha de publicación de los catálogos con un número de nivel de catálogo superior a 5?\n", "question_toks": ["What", "are", "the", "name", "and", "publication", "date", "of", "the", "catalogs", "with", "catalog", "level", "number", "above", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "t1.catalog_entry_name", "FROM", "Catalog_Contents", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.catalog_entry_id", "=", "t2.catalog_entry_id", "WHERE", "t2.attribute_value", "=", "(", "SELECT", "attribute_value", "FROM", "Catalog_Contents_Additional_Attributes", "GROUP", "BY", "attribute_value", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "catalog_entry_name", "from", "catalog_contents", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "catalog_entry_id", "=", "t2", ".", "catalog_entry_id", "where", "t2", ".", "attribute_value", "=", "(", "select", "attribute_value", "from", "catalog_contents_additional_attributes", "group", "by", "attribute_value", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de las entradas del catálogo con el atributo que poseen la mayoría de las entradas?\n", "question_toks": ["What", "are", "the", "entry", "names", "of", "catalog", "with", "the", "attribute", "possessed", "by", "most", "entries", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 29, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "t1.catalog_entry_name", "FROM", "Catalog_Contents", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.catalog_entry_id", "=", "t2.catalog_entry_id", "WHERE", "t2.attribute_value", "=", "(", "SELECT", "attribute_value", "FROM", "Catalog_Contents_Additional_Attributes", "GROUP", "BY", "attribute_value", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "catalog_entry_name", "from", "catalog_contents", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "catalog_entry_id", "=", "t2", ".", "catalog_entry_id", "where", "t2", ".", "attribute_value", "=", "(", "select", "attribute_value", "from", "catalog_contents_additional_attributes", "group", "by", "attribute_value", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Busque los nombres de las entradas del catálogo con el atributo que tenga más entradas.\n", "question_toks": ["Find", "the", "entry", "names", "of", "the", "catalog", "with", "the", "attribute", "that", "have", "the", "most", "entries", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [[0, 29, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"", "query_toks": ["SELECT", "catalog_entry_name", "FROM", "catalog_contents", "WHERE", "product_stock_number", "LIKE", "``", "2", "%", "''"], "query_toks_no_value": ["select", "catalog_entry_name", "from", "catalog_contents", "where", "product_stock_number", "like", "value"], "question": "Encuentre los nombres de todos los productos cuyo número de stock comience con \"2\".\n", "question_toks": ["Find", "the", "names", "of", "all", "the", "products", "whose", "stock", "number", "starts", "with", "``", "2", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 18, false], null], "\"2%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"", "query_toks": ["SELECT", "catalog_entry_name", "FROM", "catalog_contents", "WHERE", "product_stock_number", "LIKE", "``", "2", "%", "''"], "query_toks_no_value": ["select", "catalog_entry_name", "from", "catalog_contents", "where", "product_stock_number", "like", "value"], "question": "¿Qué contenidos del catálogo tienen un número de stock de producto que comienza en \"2\"? Muestra los nombres de las entradas del catálogo.\n", "question_toks": ["Which", "catalog", "contents", "have", "a", "product", "stock", "number", "that", "starts", "from", "``", "2", "''", "?", "Show", "the", "catalog", "entry", "names", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 18, false], null], "\"2%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"", "query_toks": ["SELECT", "t1.catalog_entry_name", "FROM", "Catalog_Contents", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.catalog_entry_id", "=", "t2.catalog_entry_id", "WHERE", "t2.catalog_level_number", "=", "``", "8", "''"], "query_toks_no_value": ["select", "t1", ".", "catalog_entry_name", "from", "catalog_contents", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "catalog_entry_id", "=", "t2", ".", "catalog_entry_id", "where", "t2", ".", "catalog_level_number", "=", "value"], "question": "Busque los nombres de las entradas del catálogo con el nivel número 8.\n", "question_toks": ["Find", "the", "names", "of", "catalog", "entries", "with", "level", "number", "8", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"8\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"", "query_toks": ["SELECT", "t1.catalog_entry_name", "FROM", "Catalog_Contents", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.catalog_entry_id", "=", "t2.catalog_entry_id", "WHERE", "t2.catalog_level_number", "=", "``", "8", "''"], "query_toks_no_value": ["select", "t1", ".", "catalog_entry_name", "from", "catalog_contents", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "catalog_entry_id", "=", "t2", ".", "catalog_entry_id", "where", "t2", ".", "catalog_level_number", "=", "value"], "question": "¿Cuáles son los nombres de las entradas del catálogo con el nivel número 8?\n", "question_toks": ["What", "are", "the", "names", "of", "catalog", "entries", "with", "level", "number", "8", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"8\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5", "query_toks": ["SELECT", "catalog_entry_name", "FROM", "catalog_contents", "WHERE", "LENGTH", "<", "3", "OR", "width", ">", "5"], "query_toks_no_value": ["select", "catalog_entry_name", "from", "catalog_contents", "where", "length", "<", "value", "or", "width", ">", "value"], "question": "Encuentra los nombres de los productos con una longitud menor que 3 o una altura mayor que 5.\n", "question_toks": ["Find", "the", "names", "of", "the", "products", "with", "length", "smaller", "than", "3", "or", "height", "greater", "than", "5", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 3.0, null], "or", [false, 3, [0, [0, 25, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5", "query_toks": ["SELECT", "catalog_entry_name", "FROM", "catalog_contents", "WHERE", "LENGTH", "<", "3", "OR", "width", ">", "5"], "query_toks_no_value": ["select", "catalog_entry_name", "from", "catalog_contents", "where", "length", "<", "value", "or", "width", ">", "value"], "question": "¿Qué contenidos del catálogo tienen una longitud inferior a 3 o superior a 5? Busque los nombres de las entradas del catálogo.\n", "question_toks": ["Which", "catalog", "contents", "have", "length", "below", "3", "or", "above", "5", "?", "Find", "the", "catalog", "entry", "names", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 3.0, null], "or", [false, 3, [0, [0, 25, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "query_toks": ["SELECT", "t1.attribute_name", ",", "t1.attribute_id", "FROM", "Attribute_Definitions", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.attribute_id", "=", "t2.attribute_id", "WHERE", "t2.attribute_value", "=", "0"], "query_toks_no_value": ["select", "t1", ".", "attribute_name", ",", "t1", ".", "attribute_id", "from", "attribute_definitions", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "attribute_id", "=", "t2", ".", "attribute_id", "where", "t2", ".", "attribute_value", "=", "value"], "question": "Busque el nombre y el ID de atributo de las definiciones de atributo con valor de atributo 0.\n", "question_toks": ["Find", "the", "name", "and", "attribute", "ID", "of", "the", "attribute", "definitions", "with", "attribute", "value", "0", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0", "query_toks": ["SELECT", "t1.attribute_name", ",", "t1.attribute_id", "FROM", "Attribute_Definitions", "AS", "t1", "JOIN", "Catalog_Contents_Additional_Attributes", "AS", "t2", "ON", "t1.attribute_id", "=", "t2.attribute_id", "WHERE", "t2.attribute_value", "=", "0"], "query_toks_no_value": ["select", "t1", ".", "attribute_name", ",", "t1", ".", "attribute_id", "from", "attribute_definitions", "as", "t1", "join", "catalog_contents_additional_attributes", "as", "t2", "on", "t1", ".", "attribute_id", "=", "t2", ".", "attribute_id", "where", "t2", ".", "attribute_value", "=", "value"], "question": "¿Qué definiciones de atributos tienen valor de atributo 0? Dame el nombre del atributo y el ID del atributo.\n", "question_toks": ["Which", "attribute", "definitions", "have", "attribute", "value", "0", "?", "Give", "me", "the", "attribute", "name", "and", "attribute", "ID", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "query_toks": ["SELECT", "catalog_entry_name", ",", "capacity", "FROM", "Catalog_Contents", "WHERE", "price_in_dollars", ">", "700"], "query_toks_no_value": ["select", "catalog_entry_name", ",", "capacity", "from", "catalog_contents", "where", "price_in_dollars", ">", "value"], "question": "Encuentra el nombre y capacidad de productos con precio mayor a 700 (en USD).\n", "question_toks": ["Find", "the", "name", "and", "capacity", "of", "products", "with", "price", "greater", "than", "700", "(", "in", "USD", ")", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 700.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700", "query_toks": ["SELECT", "catalog_entry_name", ",", "capacity", "FROM", "Catalog_Contents", "WHERE", "price_in_dollars", ">", "700"], "query_toks_no_value": ["select", "catalog_entry_name", ",", "capacity", "from", "catalog_contents", "where", "price_in_dollars", ">", "value"], "question": "¿Qué contenidos del catálogo tienen un precio superior a 700 dólares? Muestre sus nombres y capacidades de entradas de catálogo.\n", "question_toks": ["Which", "catalog", "contents", "has", "price", "above", "700", "dollars", "?", "Show", "their", "catalog", "entry", "names", "and", "capacities", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 700.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8", "query_toks": ["SELECT", "catalog_entry_name", "FROM", "catalog_contents", "WHERE", "next_entry_id", ">", "8"], "query_toks_no_value": ["select", "catalog_entry_name", "from", "catalog_contents", "where", "next_entry_id", ">", "value"], "question": "Nombra todos los productos con el siguiente ID de entrada mayor que 8.\n", "question_toks": ["Name", "all", "the", "products", "with", "next", "entry", "ID", "greater", "than", "8", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], 8.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "product_catalog", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8", "query_toks": ["SELECT", "catalog_entry_name", "FROM", "catalog_contents", "WHERE", "next_entry_id", ">", "8"], "query_toks_no_value": ["select", "catalog_entry_name", "from", "catalog_contents", "where", "next_entry_id", ">", "value"], "question": "¿Cuáles son los nombres de las entradas de catálogo de los productos con el siguiente ID de entrada superior a 8?\n", "question_toks": ["What", "are", "the", "catalog", "entry", "names", "of", "the", "products", "with", "next", "entry", "ID", "above", "8", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], 8.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "Muestra el nombre y la distancia de todas las aeronaves.\n", "question_toks": ["Show", "name", "and", "distance", "for", "all", "aircrafts", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "¿Cuáles son los nombres y distancias de todos los aviones?\n", "question_toks": ["What", "are", "the", "names", "and", "distances", "for", "all", "airplanes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000", "query_toks": ["SELECT", "aid", "FROM", "Aircraft", "WHERE", "distance", ">", "1000"], "query_toks_no_value": ["select", "aid", "from", "aircraft", "where", "distance", ">", "value"], "question": "Muestra identificaciones de todas las aeronaves con más de 1000 distancias.\n", "question_toks": ["Show", "ids", "for", "all", "aircrafts", "with", "more", "than", "1000", "distance", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000", "query_toks": ["SELECT", "aid", "FROM", "Aircraft", "WHERE", "distance", ">", "1000"], "query_toks_no_value": ["select", "aid", "from", "aircraft", "where", "distance", ">", "value"], "question": "¿Cuáles son las identificaciones de todos los aviones que pueden cubrir una distancia de más de 1000?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "aircrafts", "that", "can", "cover", "a", "distance", "of", "more", "than", "1000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft", "WHERE", "aid", "=", "12"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft", "where", "aid", "=", "value"], "question": "¿Cuál es el nombre y la distancia de las aeronaves con identificación 12?\n", "question_toks": ["What", "is", "the", "name", "and", "distance", "for", "aircraft", "with", "id", "12", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 12.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft", "WHERE", "aid", "=", "12"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft", "where", "aid", "=", "value"], "question": "¿Cuál es el nombre y la distancia de la aeronave que tiene una identificación de 12?\n", "question_toks": ["What", "is", "the", "name", "and", "distance", "for", "the", "aircraft", "that", "has", "an", "id", "of", "12", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 12.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Aircraft", ")"], "query_toks_no_value": ["select", "name", "from", "aircraft", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "aircraft", ")"], "question": "Mostrar nombres de todas las aeronaves con distancias superiores al promedio.\n", "question_toks": ["Show", "names", "for", "all", "aircrafts", "with", "distances", "more", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Aircraft", ")"], "query_toks_no_value": ["select", "name", "from", "aircraft", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "aircraft", ")"], "question": "¿Cómo se llaman todos los aviones que pueden cubrir más distancias que el promedio?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "can", "cover", "more", "distances", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "query_toks": ["SELECT", "eid", "FROM", "Employee", "WHERE", "salary", ">", "100000"], "query_toks_no_value": ["select", "eid", "from", "employee", "where", "salary", ">", "value"], "question": "Mostrar identificaciones de todos los empleados con al menos 100.000 salarios.\n", "question_toks": ["Show", "ids", "for", "all", "employees", "with", "at", "least", "100000", "salary", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "query_toks": ["SELECT", "eid", "FROM", "Employee", "WHERE", "salary", ">", "100000"], "query_toks_no_value": ["select", "eid", "from", "employee", "where", "salary", ">", "value"], "question": "¿Cuál es la identificación de cada empleado que tiene al menos un salario de 100000?\n", "question_toks": ["What", "is", "the", "id", "of", "every", "employee", "who", "has", "at", "least", "a", "salary", "of", "100000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "WHERE", "eid", "=", "242518965"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "where", "eid", "=", "value"], "question": "¿Cuál es el nombre y salario del empleado con id 242518965?\n", "question_toks": ["What", "is", "the", "name", "and", "salary", "for", "employee", "with", "id", "242518965", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], 242518965.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "WHERE", "eid", "=", "242518965"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "where", "eid", "=", "value"], "question": "¿Cuál es el nombre y salario del empleado con el id 242518965?\n", "question_toks": ["What", "is", "the", "name", "and", "salary", "of", "the", "employee", "with", "the", "id", "242518965", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], 242518965.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "query_toks": ["SELECT", "name", "FROM", "Employee", "WHERE", "salary", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "Employee", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employee", ")"], "question": "Mostrar nombres de todos los empleados con salario superior al promedio.\n", "question_toks": ["Show", "names", "for", "all", "employees", "with", "salary", "more", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "query_toks": ["SELECT", "name", "FROM", "Employee", "WHERE", "salary", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "Employee", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employee", ")"], "question": "¿Cómo se llaman todos los empleados que tienen un salario superior al promedio?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "employees", "who", "have", "a", "salary", "higher", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "query_toks": ["SELECT", "eid", ",", "salary", "FROM", "Employee", "WHERE", "name", "=", "'Mark", "Young", "'"], "query_toks_no_value": ["select", "eid", ",", "salary", "from", "employee", "where", "name", "=", "value"], "question": "Muestre la identificación y el salario de Mark Young.\n", "question_toks": ["Show", "the", "id", "and", "salary", "of", "Mark", "Young", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Mark Young\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'", "query_toks": ["SELECT", "eid", ",", "salary", "FROM", "Employee", "WHERE", "name", "=", "'Mark", "Young", "'"], "query_toks_no_value": ["select", "eid", ",", "salary", "from", "employee", "where", "name", "=", "value"], "question": "¿Cuál es la identificación y el salario del empleado llamado Mark Young?\n", "question_toks": ["What", "is", "the", "id", "and", "salary", "of", "the", "employee", "named", "Mark", "Young", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Mark Young\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "origin", "=", "value"], "question": "Mostrar todos los números de vuelo procedentes de Los Ángeles.\n", "question_toks": ["Show", "all", "flight", "number", "from", "Los", "Angeles", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "origin", "=", "value"], "question": "¿Cuáles son los números de todos los vuelos que vienen de Los Ángeles?\n", "question_toks": ["What", "are", "the", "numbers", "of", "all", "flights", "coming", "from", "Los", "Angeles", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "query_toks": ["SELECT", "origin", "FROM", "Flight", "WHERE", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "origin", "from", "flight", "where", "destination", "=", "value"], "question": "Mostrar orígenes de todos los vuelos con destino Honolulu.\n", "question_toks": ["Show", "origins", "of", "all", "flights", "with", "destination", "Honolulu", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "query_toks": ["SELECT", "origin", "FROM", "Flight", "WHERE", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "origin", "from", "flight", "where", "destination", "=", "value"], "question": "¿Cuál es la procedencia de todos los vuelos que se dirigen a Honolulu?\n", "question_toks": ["What", "are", "the", "origins", "of", "all", "flights", "that", "are", "headed", "to", "Honolulu", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "Muéstrame la fecha de salida y llegada de todos los vuelos de Los Ángeles a Honolulu.\n", "question_toks": ["Show", "me", "the", "departure", "date", "and", "arrival", "date", "for", "all", "flights", "from", "Los", "Angeles", "to", "Honolulu", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "¿Cuáles son las fechas de salida y llegada de todos los vuelos de Los Ángeles a Honolulú?\n", "question_toks": ["What", "are", "the", "departure", "and", "arrival", "dates", "of", "all", "flights", "from", "LA", "to", "Honolulu", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE distance  >  2000", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "distance", ">", "2000"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "distance", ">", "value"], "question": "Muestra el número de vuelo para todos los vuelos con más de 2000 distancias.\n", "question_toks": ["Show", "flight", "number", "for", "all", "flights", "with", "more", "than", "2000", "distance", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT flno FROM Flight WHERE distance  >  2000", "query_toks": ["SELECT", "flno", "FROM", "Flight", "WHERE", "distance", ">", "2000"], "query_toks_no_value": ["select", "flno", "from", "flight", "where", "distance", ">", "value"], "question": "¿Cuál es el número de todos los vuelos que pueden cubrir una distancia de más de 2000?\n", "question_toks": ["What", "are", "the", "numbers", "of", "all", "flights", "that", "can", "cover", "a", "distance", "of", "more", "than", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "Mostrar origen y destino para vuelos con precio superior a 300.\n", "question_toks": ["Show", "origin", "and", "destination", "for", "flights", "with", "price", "higher", "than", "300", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "¿Cuál es el origen y destino de todos los vuelos cuyo precio sea superior a 300?\n", "question_toks": ["What", "is", "the", "origin", "and", "destination", "for", "all", "flights", "whose", "price", "is", "higher", "than", "300", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T1.flno", "=", "99"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "flno", "=", "value"], "question": "¿Cómo se llama el avión del vuelo número 99?\n", "question_toks": ["What", "is", "the", "aircraft", "name", "for", "the", "flight", "with", "number", "99"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], 99.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T1.flno", "=", "99"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "flno", "=", "value"], "question": "¿Cómo se llama el avión que iba en el vuelo número 99?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "aircraft", "that", "was", "on", "flight", "number", "99", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], 99.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.flno", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T2.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "flno", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t2", ".", "name", "=", "value"], "question": "Mostrar todos los números de vuelo con aviones Airbus A340-300.\n", "question_toks": ["Show", "all", "flight", "numbers", "with", "aircraft", "Airbus", "A340-300", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Airbus A340-300\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.flno", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T2.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "flno", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuáles son los números de vuelo del avión Airbus A340-300?\n", "question_toks": ["What", "are", "the", "flight", "numbers", "for", "the", "aircraft", "Airbus", "A340-300", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Airbus A340-300\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "query_toks": ["SELECT", "T3.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T1.name", "=", "``", "John", "Williams", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "name", "=", "value"], "question": "Muestra los nombres de todas las aeronaves de las que John Williams tiene certificados.\n", "question_toks": ["Show", "names", "for", "all", "aircrafts", "of", "which", "John", "Williams", "has", "certificates", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"John Williams\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "query_toks": ["SELECT", "T3.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T1.name", "=", "``", "John", "Williams", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de todos los aviones que John Williams tiene certificados para poder volar?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "John", "Williams", "have", "certificates", "to", "be", "able", "to", "fly", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"John Williams\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "Mostrar los nombres de todos los empleados que tienen certificado de Boeing 737-800.\n", "question_toks": ["Show", "names", "for", "all", "employees", "who", "have", "certificate", "of", "Boeing", "737-800", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Boeing 737-800\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de todos los empleados que tienen un certificado para volar el Boeing 737-800?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "employees", "who", "have", "a", "certificate", "to", "fly", "Boeing", "737-800", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Boeing 737-800\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT allergytype FROM Allergy_type", "query_toks": ["SELECT", "DISTINCT", "allergytype", "FROM", "Allergy_type"], "query_toks_no_value": ["select", "distinct", "allergytype", "from", "allergy_type"], "question": "Mostrar todos los tipos de alergia.\n", "question_toks": ["Show", "all", "allergy", "types", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT allergytype FROM Allergy_type", "query_toks": ["SELECT", "DISTINCT", "allergytype", "FROM", "Allergy_type"], "query_toks_no_value": ["select", "distinct", "allergytype", "from", "allergy_type"], "question": "¿Cuáles son los diferentes tipos de alergia?\n", "question_toks": ["What", "are", "the", "different", "allergy", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT allergy ,  allergytype FROM Allergy_type", "query_toks": ["SELECT", "allergy", ",", "allergytype", "FROM", "Allergy_type"], "query_toks_no_value": ["select", "allergy", ",", "allergytype", "from", "allergy_type"], "question": "Mostrar todas las alergias y sus tipos.\n", "question_toks": ["Show", "all", "allergies", "and", "their", "types", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT allergy ,  allergytype FROM Allergy_type", "query_toks": ["SELECT", "allergy", ",", "allergytype", "FROM", "Allergy_type"], "query_toks_no_value": ["select", "allergy", ",", "allergytype", "from", "allergy_type"], "question": "¿Cuáles son las alergias y sus tipos?\n", "question_toks": ["What", "are", "the", "allergies", "and", "their", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"", "query_toks": ["SELECT", "DISTINCT", "allergy", "FROM", "Allergy_type", "WHERE", "allergytype", "=", "``", "food", "''"], "query_toks_no_value": ["select", "distinct", "allergy", "from", "allergy_type", "where", "allergytype", "=", "value"], "question": "Mostrar todas las alergias con tipo de alimento.\n", "question_toks": ["Show", "all", "allergies", "with", "type", "food", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"food\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"", "query_toks": ["SELECT", "DISTINCT", "allergy", "FROM", "Allergy_type", "WHERE", "allergytype", "=", "``", "food", "''"], "query_toks_no_value": ["select", "distinct", "allergy", "from", "allergy_type", "where", "allergytype", "=", "value"], "question": "¿Cuáles son las diferentes alergias alimentarias?\n", "question_toks": ["What", "are", "all", "the", "different", "food", "allergies", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"food\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"", "query_toks": ["SELECT", "allergytype", "FROM", "Allergy_type", "WHERE", "allergy", "=", "``", "Cat", "''"], "query_toks_no_value": ["select", "allergytype", "from", "allergy_type", "where", "allergy", "=", "value"], "question": "¿Cuál es el tipo de alergia al gato?\n", "question_toks": ["What", "is", "the", "type", "of", "allergy", "Cat", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"", "query_toks": ["SELECT", "allergytype", "FROM", "Allergy_type", "WHERE", "allergy", "=", "``", "Cat", "''"], "query_toks_no_value": ["select", "allergytype", "from", "allergy_type", "where", "allergy", "=", "value"], "question": "¿Cuál es el tipo de alergia de alergia a los gatos?\n", "question_toks": ["What", "is", "allergy", "type", "of", "a", "cat", "allergy", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT Fname ,  Lname FROM Student", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student"], "question": "Mostrar nombre y apellido de todos los estudiantes.\n", "question_toks": ["Show", "first", "name", "and", "last", "name", "for", "all", "students", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT Fname ,  Lname FROM Student", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student"], "question": "¿Cuáles son los nombres completos de todos los estudiantes?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "all", "students"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT Major FROM Student", "query_toks": ["SELECT", "DISTINCT", "Major", "FROM", "Student"], "query_toks_no_value": ["select", "distinct", "major", "from", "student"], "question": "Mostrar todas las especialidades.\n", "question_toks": ["Show", "all", "majors", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT Major FROM Student", "query_toks": ["SELECT", "DISTINCT", "Major", "FROM", "Student"], "query_toks_no_value": ["select", "distinct", "major", "from", "student"], "question": "¿Cuáles son las diferentes especialidades?\n", "question_toks": ["What", "are", "the", "different", "majors", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT city_code FROM Student", "query_toks": ["SELECT", "DISTINCT", "city_code", "FROM", "Student"], "query_toks_no_value": ["select", "distinct", "city_code", "from", "student"], "question": "Mostrar todas las ciudades donde viven los estudiantes.\n", "question_toks": ["Show", "all", "cities", "where", "students", "live", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT city_code FROM Student", "query_toks": ["SELECT", "DISTINCT", "city_code", "FROM", "Student"], "query_toks_no_value": ["select", "distinct", "city_code", "from", "student"], "question": "¿En qué ciudades viven los estudiantes?\n", "question_toks": ["What", "cities", "do", "students", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "Age", "FROM", "Student", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "age", "from", "student", "where", "sex", "=", "value"], "question": "Muestra el nombre, apellido y edad de todas las estudiantes. Su sexo es F.\n", "question_toks": ["Show", "first", "name", ",", "last", "name", ",", "age", "for", "all", "female", "students", ".", "Their", "sex", "is", "F", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "Age", "FROM", "Student", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "age", "from", "student", "where", "sex", "=", "value"], "question": "¿Cuáles son los nombres completos y las edades de todas las estudiantes cuyo sexo es F?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "ages", "for", "all", "female", "students", "whose", "sex", "is", "F", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT StuID FROM Student WHERE Sex  =  'M'", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "Sex", "=", "'M", "'"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "sex", "=", "value"], "question": "Mostrar identificaciones de estudiantes para todos los estudiantes varones.\n", "question_toks": ["Show", "student", "ids", "for", "all", "male", "students", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT StuID FROM Student WHERE Sex  =  'M'", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "Sex", "=", "'M", "'"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "sex", "=", "value"], "question": "¿Cuáles son las identificaciones de estudiantes para todos los estudiantes varones?\n", "question_toks": ["What", "are", "the", "student", "ids", "for", "all", "male", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT StuID FROM Student WHERE age  >  20", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "age", ">", "value"], "question": "Mostrar todas las identificaciones de estudiantes mayores de 20 años.\n", "question_toks": ["Show", "all", "student", "ids", "who", "are", "older", "than", "20", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT StuID FROM Student WHERE age  >  20", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "age", ">", "value"], "question": "¿Cuáles son las identificaciones de estudiantes para estudiantes mayores de 20 años?\n", "question_toks": ["What", "are", "the", "student", "ids", "for", "students", "over", "20", "years", "old", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"", "query_toks": ["SELECT", "city_code", "FROM", "Student", "WHERE", "LName", "=", "``", "Kim", "''"], "query_toks_no_value": ["select", "city_code", "from", "student", "where", "lname", "=", "value"], "question": "¿En qué ciudad vive el estudiante cuyo apellido es \"Kim\"?\n", "question_toks": ["Which", "city", "does", "the", "student", "whose", "last", "name", "is", "``", "Kim", "''", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Kim\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"", "query_toks": ["SELECT", "city_code", "FROM", "Student", "WHERE", "LName", "=", "``", "Kim", "''"], "query_toks_no_value": ["select", "city_code", "from", "student", "where", "lname", "=", "value"], "question": "Indique la ciudad en la que vive el estudiante cuyo apellido es Kim.\n", "question_toks": ["Give", "the", "city", "that", "the", "student", "whose", "family", "name", "is", "Kim", "lives", "in", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Kim\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT Advisor FROM Student WHERE StuID  =  1004", "query_toks": ["SELECT", "Advisor", "FROM", "Student", "WHERE", "StuID", "=", "1004"], "query_toks_no_value": ["select", "advisor", "from", "student", "where", "stuid", "=", "value"], "question": "¿Quién es el asesor del estudiante con cédula 1004?\n", "question_toks": ["Who", "is", "the", "advisor", "of", "student", "with", "ID", "1004", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 1004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT Advisor FROM Student WHERE StuID  =  1004", "query_toks": ["SELECT", "Advisor", "FROM", "Student", "WHERE", "StuID", "=", "1004"], "query_toks_no_value": ["select", "advisor", "from", "student", "where", "stuid", "=", "value"], "question": "¿Quién asesora al estudiante 1004?\n", "question_toks": ["Who", "advises", "student", "1004", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 1004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)", "query_toks": ["SELECT", "LName", "FROM", "Student", "WHERE", "age", "=", "(", "SELECT", "min", "(", "age", ")", "FROM", "Student", ")"], "query_toks_no_value": ["select", "lname", "from", "student", "where", "age", "=", "(", "select", "min", "(", "age", ")", "from", "student", ")"], "question": "¿Cuál es el apellido del estudiante más joven?\n", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "youngest", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)", "query_toks": ["SELECT", "LName", "FROM", "Student", "WHERE", "age", "=", "(", "SELECT", "min", "(", "age", ")", "FROM", "Student", ")"], "query_toks_no_value": ["select", "lname", "from", "student", "where", "age", "=", "(", "select", "min", "(", "age", ")", "from", "student", ")"], "question": "Proporcione el apellido del estudiante más joven.\n", "question_toks": ["Provide", "the", "last", "name", "of", "the", "youngest", "student", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Student", ")"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "student", ")"], "question": "Muestra la identificación del estudiante del estudiante de mayor edad.\n", "question_toks": ["Show", "the", "student", "id", "of", "the", "oldest", "student", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "Student", ")"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "student", ")"], "question": "¿Qué identificación de estudiante corresponde al estudiante de mayor edad?\n", "question_toks": ["What", "student", "id", "corresponds", "to", "the", "oldest", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "lname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "intersect", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "Encuentre el apellido y la edad del estudiante que tiene alergia tanto a la leche como a los gatos.\n", "question_toks": ["Find", "the", "last", "name", "and", "age", "of", "the", "student", "who", "has", "allergy", "to", "both", "milk", "and", "cat", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "lname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "intersect", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "¿Cuáles son los apellidos y edades de los estudiantes alérgicos a la leche y al gato?\n", "question_toks": ["What", "are", "the", "last", "names", "and", "ages", "of", "the", "students", "who", "are", "allergic", "to", "milk", "and", "cat", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "fname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "EXCEPT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "except", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "Encuentre el nombre y el sexo del estudiante que tiene alergia a la leche pero no a los gatos.\n", "question_toks": ["Find", "the", "first", "name", "and", "gender", "of", "the", "student", "who", "has", "allergy", "to", "milk", "but", "not", "cat", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")", "query_toks": ["SELECT", "fname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Milk", "''", "EXCEPT", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Cat", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", "except", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "¿Cuál es el nombre y el sexo de los estudiantes que tienen alergia a la leche pero pueden tolerar a los gatos?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "gender", "of", "the", "students", "who", "have", "allergy", "to", "milk", "but", "can", "put", "up", "with", "cats", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "T1.StuID", "FROM", "Has_allergy", "AS", "T1", "JOIN", "Allergy_Type", "AS", "T2", "ON", "T1.Allergy", "=", "T2.Allergy", "WHERE", "T2.allergytype", "=", "``", "food", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "has_allergy", "as", "t1", "join", "allergy_type", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "where", "t2", ".", "allergytype", "=", "value", ")"], "question": "Indique el nombre y apellido de los estudiantes que no tienen ningún tipo de alergia a algún alimento.\n", "question_toks": ["List", "the", "first", "and", "last", "name", "of", "the", "students", "who", "do", "not", "have", "any", "food", "type", "allergy", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"food\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "T1.StuID", "FROM", "Has_allergy", "AS", "T1", "JOIN", "Allergy_Type", "AS", "T2", "ON", "T1.Allergy", "=", "T2.Allergy", "WHERE", "T2.allergytype", "=", "``", "food", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1", ".", "stuid", "from", "has_allergy", "as", "t1", "join", "allergy_type", "as", "t2", "on", "t1", ".", "allergy", "=", "t2", ".", "allergy", "where", "t2", ".", "allergytype", "=", "value", ")"], "question": "Cuál es el nombre completo de cada alumno que no es alérgico a ningún tipo de alimento.\n", "question_toks": ["What", "is", "the", "full", "name", "of", "each", "student", "who", "is", "not", "allergic", "to", "any", "type", "of", "food", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"food\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.city_code", "FROM", "Student", "AS", "T1", "JOIN", "Has_Allergy", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.Allergy", "=", "``", "Milk", "''", "OR", "T2.Allergy", "=", "``", "Cat", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "city_code", "from", "student", "as", "t1", "join", "has_allergy", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "allergy", "=", "value", "or", "t2", ".", "allergy", "=", "value"], "question": "Encuentre los diferentes nombres y ciudades de los estudiantes que tienen alergia a la leche o al gato.\n", "question_toks": ["Find", "the", "different", "first", "names", "and", "cities", "of", "the", "students", "who", "have", "allergy", "to", "milk", "or", "cat", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"", "query_toks": ["SELECT", "DISTINCT", "T1.fname", ",", "T1.city_code", "FROM", "Student", "AS", "T1", "JOIN", "Has_Allergy", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.Allergy", "=", "``", "Milk", "''", "OR", "T2.Allergy", "=", "``", "Cat", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "city_code", "from", "student", "as", "t1", "join", "has_allergy", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "allergy", "=", "value", "or", "t2", ".", "allergy", "=", "value"], "question": "¿Cuáles son los nombres y ciudades distintos de los estudiantes que tienen alergia a la leche o al gato?\n", "question_toks": ["What", "are", "the", "distinct", "first", "names", "and", "cities", "of", "the", "students", "who", "have", "allergy", "either", "to", "milk", "or", "to", "cat", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Milk\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "query_toks": ["SELECT", "fname", ",", "major", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Soy", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "major", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "Encuentre el nombre y la especialidad de los estudiantes que no son alérgicos a la soja.\n", "question_toks": ["Find", "the", "first", "name", "and", "major", "of", "the", "students", "who", "are", "not", "allegry", "to", "soy", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Soy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "allergy_1", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")", "query_toks": ["SELECT", "fname", ",", "major", "FROM", "Student", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "StuID", "FROM", "Has_allergy", "WHERE", "Allergy", "=", "``", "Soy", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "major", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_allergy", "where", "allergy", "=", "value", ")"], "question": "¿Cuáles son el nombre y la especialidad de los estudiantes que pueden consumir soja?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "major", "of", "the", "students", "who", "are", "able", "to", "consume", "soy", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Soy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT title FROM albums;", "query_toks": ["SELECT", "title", "FROM", "albums", ";"], "query_toks_no_value": ["select", "title", "from", "albums"], "question": "Enumera el título de cada álbum.\n", "question_toks": ["List", "every", "album", "'s", "title", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT title FROM albums;", "query_toks": ["SELECT", "title", "FROM", "albums", ";"], "query_toks_no_value": ["select", "title", "from", "albums"], "question": "¿Cuáles son los títulos de todos los álbumes?\n", "question_toks": ["What", "are", "the", "titles", "of", "all", "the", "albums", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_city", "=", "``", "Chicago", "''", "AND", "billing_state", "=", "``", "IL", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "invoices", "where", "billing_city", "=", "value", "and", "billing_state", "=", "value"], "question": "Indique el número de facturas de Chicago, IL.\n", "question_toks": ["List", "the", "number", "of", "invoices", "from", "Chicago", ",", "IL", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], "\"Chicago\"", null], "and", [false, 2, [0, [0, 43, false], null], "\"IL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_city", "=", "``", "Chicago", "''", "AND", "billing_state", "=", "``", "IL", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "invoices", "where", "billing_city", "=", "value", "and", "billing_state", "=", "value"], "question": "¿Cuántas facturas se facturaron desde Chicago, IL?\n", "question_toks": ["How", "many", "invoices", "were", "billed", "from", "Chicago", ",", "IL", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], "\"Chicago\"", null], "and", [false, 2, [0, [0, 43, false], null], "\"IL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", ",", "SUM", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_state", "=", "``", "CA", "''", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", ",", "sum", "(", "total", ")", "from", "invoices", "where", "billing_state", "=", "value"], "question": "Enumere el número de facturas y el total de las facturas de California.\n", "question_toks": ["List", "the", "number", "of", "invoices", "and", "the", "invoice", "total", "from", "California", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 43, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", ",", "SUM", "(", "total", ")", "FROM", "invoices", "WHERE", "billing_state", "=", "``", "CA", "''", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", ",", "sum", "(", "total", ")", "from", "invoices", "where", "billing_state", "=", "value"], "question": "¿Cuál es el número de facturas y el dinero total facturado en ellas por CA?\n", "question_toks": ["What", "is", "the", "number", "of", "invoices", "and", "total", "money", "billed", "in", "them", "from", "CA", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]], [4, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 43, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";", "query_toks": ["SELECT", "T1.title", "FROM", "albums", "AS", "T1", "JOIN", "artists", "AS", "T2", "ON", "T1.artist_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Aerosmith", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "albums", "as", "t1", "join", "artists", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "Lista los álbumes de Aerosmith.\n", "question_toks": ["List", "Aerosmith", "'s", "albums", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Aerosmith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";", "query_toks": ["SELECT", "T1.title", "FROM", "albums", "AS", "T1", "JOIN", "artists", "AS", "T2", "ON", "T1.artist_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Aerosmith", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "albums", "as", "t1", "join", "artists", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuáles son los títulos de todos los álbumes de Aerosmith?\n", "question_toks": ["What", "are", "the", "titles", "of", "all", "the", "Aerosmith", "albums", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Aerosmith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";", "query_toks": ["SELECT", "company", "FROM", "customers", "WHERE", "first_name", "=", "``", "Eduardo", "''", "AND", "last_name", "=", "``", "Martins", "''", ";"], "query_toks_no_value": ["select", "company", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Eduardo Martins es cliente de qué empresa?\n", "question_toks": ["Eduardo", "Martins", "is", "a", "customer", "at", "which", "company", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Eduardo\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Martins\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";", "query_toks": ["SELECT", "company", "FROM", "customers", "WHERE", "first_name", "=", "``", "Eduardo", "''", "AND", "last_name", "=", "``", "Martins", "''", ";"], "query_toks_no_value": ["select", "company", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es la empresa de la que Eduardo Martins es cliente?\n", "question_toks": ["What", "is", "the", "company", "where", "Eduardo", "Martins", "is", "a", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Eduardo\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Martins\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "query_toks": ["SELECT", "email", ",", "phone", "FROM", "customers", "WHERE", "first_name", "=", "``", "Astrid", "''", "AND", "last_name", "=", "``", "Gruber", "''", ";"], "query_toks_no_value": ["select", "email", ",", "phone", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el correo electrónico y el número de teléfono de Astrid Gruber?\n", "question_toks": ["What", "is", "Astrid", "Gruber", "'s", "email", "and", "phone", "number", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 32, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Gruber\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "query_toks": ["SELECT", "email", ",", "phone", "FROM", "customers", "WHERE", "first_name", "=", "``", "Astrid", "''", "AND", "last_name", "=", "``", "Gruber", "''", ";"], "query_toks_no_value": ["select", "email", ",", "phone", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el correo electrónico y número de teléfono de Astrid Gruber el cliente?\n", "question_toks": ["What", "is", "the", "email", "and", "phone", "number", "of", "Astrid", "Gruber", "the", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 32, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Gruber\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";", "query_toks": ["SELECT", "country", "FROM", "customers", "WHERE", "first_name", "=", "``", "Roberto", "''", "AND", "last_name", "=", "``", "Almeida", "''", ";"], "query_toks_no_value": ["select", "country", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿En qué país vive Roberto Almeida?\n", "question_toks": ["What", "country", "does", "Roberto", "Almeida", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Roberto\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Almeida\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";", "query_toks": ["SELECT", "country", "FROM", "customers", "WHERE", "first_name", "=", "``", "Roberto", "''", "AND", "last_name", "=", "``", "Almeida", "''", ";"], "query_toks_no_value": ["select", "country", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿En qué país vive Roberto Almeida?\n", "question_toks": ["In", "which", "country", "does", "Roberto", "Almeida", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Roberto\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Almeida\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'", "query_toks": ["SELECT", "T2.title", "FROM", "artists", "AS", "T1", "JOIN", "albums", "AS", "T2", "ON", "T1.id", "=", "T2.artist_id", "WHERE", "T1.name", "LIKE", "'", "%", "Led", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "artists", "as", "t1", "join", "albums", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "artist_id", "where", "t1", ".", "name", "like", "value"], "question": "Enumere el nombre de los álbumes lanzados por un artista cuyo nombre tiene 'Led'\n", "question_toks": ["List", "the", "name", "of", "albums", "that", "are", "released", "by", "aritist", "whose", "name", "has", "'Led", "'"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Led%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'", "query_toks": ["SELECT", "T2.title", "FROM", "artists", "AS", "T1", "JOIN", "albums", "AS", "T2", "ON", "T1.id", "=", "T2.artist_id", "WHERE", "T1.name", "LIKE", "'", "%", "Led", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "artists", "as", "t1", "join", "albums", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "artist_id", "where", "t1", ".", "name", "like", "value"], "question": "¿Cuál es el título del álbum que lanzó el artista cuyo nombre tiene la frase 'Led'?\n", "question_toks": ["What", "is", "the", "title", "of", "the", "album", "that", "was", "released", "by", "the", "artist", "whose", "name", "has", "the", "phrase", "'Led", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Led%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "title", ",", "phone", ",", "hire_date", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "title", ",", "phone", ",", "hire_date", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el título, teléfono y fecha de contratación de Nancy Edwards?\n", "question_toks": ["What", "is", "the", "title", ",", "phone", "and", "hire", "date", "of", "Nancy", "Edwards", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "title", ",", "phone", ",", "hire_date", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "title", ",", "phone", ",", "hire_date", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el cargo, número de teléfono y fecha de contratación de la empleada llamada Nancy Edwards?\n", "question_toks": ["What", "is", "the", "title", ",", "phone", "number", "and", "hire", "date", "for", "the", "employee", "named", "Nancy", "Edwards", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "employees", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.id", "=", "T2.reports_to", "WHERE", "T1.first_name", "=", "``", "Nancy", "''", "AND", "T1.last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "employees", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "reports_to", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "¿Encontrar el nombre completo de los empleados que reportan a Nancy Edwards?\n", "question_toks": ["find", "the", "full", "name", "of", "employees", "who", "report", "to", "Nancy", "Edwards", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "employees", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.id", "=", "T2.reports_to", "WHERE", "T1.first_name", "=", "``", "Nancy", "''", "AND", "T1.last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "employees", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "reports_to", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "¿Cuál es el nombre y apellido del empleado que reporta a Nancy Edwards?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "employee", "who", "reports", "to", "Nancy", "Edwards", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "address", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "address", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "Cual es la direccion de la empleada Nancy Edwards?\n", "question_toks": ["What", "is", "the", "address", "of", "employee", "Nancy", "Edwards", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "address", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "address", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es la dirección de Nancy Edwards?\n", "question_toks": ["What", "is", "Nancy", "Edwards", "'s", "address", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "phone", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "phone", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el número de teléfono de la empleada Nancy Edwards?\n", "question_toks": ["What", "is", "employee", "Nancy", "Edwards", "'s", "phone", "number", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";", "query_toks": ["SELECT", "phone", "FROM", "employees", "WHERE", "first_name", "=", "``", "Nancy", "''", "AND", "last_name", "=", "``", "Edwards", "''", ";"], "query_toks_no_value": ["select", "phone", "from", "employees", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el número de teléfono de Nancy Eduardo?\n", "question_toks": ["What", "is", "the", "the", "phone", "number", "of", "Nancy", "Edwards", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Nancy\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Edwards\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT name FROM media_types;", "query_toks": ["SELECT", "name", "FROM", "media_types", ";"], "query_toks_no_value": ["select", "name", "from", "media_types"], "question": "Enumere todos los tipos de medios.\n", "question_toks": ["List", "all", "media", "types", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 48, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT name FROM media_types;", "query_toks": ["SELECT", "name", "FROM", "media_types", ";"], "query_toks_no_value": ["select", "name", "from", "media_types"], "question": "¿Cuáles son los nombres de todos los tipos de medios?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "media", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 48, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT DISTINCT name FROM genres;", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "genres", ";"], "query_toks_no_value": ["select", "distinct", "name", "from", "genres"], "question": "Enumere todos los diferentes tipos de géneros.\n", "question_toks": ["List", "all", "different", "genre", "types", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT DISTINCT name FROM genres;", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "genres", ";"], "query_toks_no_value": ["select", "distinct", "name", "from", "genres"], "question": "¿Cuáles son los diferentes nombres de los géneros?\n", "question_toks": ["What", "are", "the", "different", "names", "of", "the", "genres", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT name FROM playlists;", "query_toks": ["SELECT", "name", "FROM", "playlists", ";"], "query_toks_no_value": ["select", "name", "from", "playlists"], "question": "Enumere el nombre de todas las listas de reproducción.\n", "question_toks": ["List", "the", "name", "of", "all", "playlist", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 64, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT name FROM playlists;", "query_toks": ["SELECT", "name", "FROM", "playlists", ";"], "query_toks_no_value": ["select", "name", "from", "playlists"], "question": "¿Cuáles son los nombres de todas las listas de reproducción?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "playlists", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 64, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";", "query_toks": ["SELECT", "composer", "FROM", "tracks", "WHERE", "name", "=", "``", "Fast", "As", "a", "Shark", "''", ";"], "query_toks_no_value": ["select", "composer", "from", "tracks", "where", "name", "=", "value"], "question": "¿Quién es el compositor del tema Fast As a Shark?\n", "question_toks": ["Who", "is", "the", "composer", "of", "track", "Fast", "As", "a", "Shark", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 54, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Fast As a Shark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";", "query_toks": ["SELECT", "composer", "FROM", "tracks", "WHERE", "name", "=", "``", "Fast", "As", "a", "Shark", "''", ";"], "query_toks_no_value": ["select", "composer", "from", "tracks", "where", "name", "=", "value"], "question": "¿Cuál es el compositor que creó el tema \"Fast As a Shark\"?\n", "question_toks": ["What", "is", "the", "composer", "who", "created", "the", "track", "``", "Fast", "As", "a", "Shark", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 54, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Fast As a Shark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";", "query_toks": ["SELECT", "milliseconds", "FROM", "tracks", "WHERE", "name", "=", "``", "Fast", "As", "a", "Shark", "''", ";"], "query_toks_no_value": ["select", "milliseconds", "from", "tracks", "where", "name", "=", "value"], "question": "¿Cuánto dura la pista Fast As a Shark?\n", "question_toks": ["How", "long", "does", "track", "Fast", "As", "a", "Shark", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 55, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Fast As a Shark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";", "query_toks": ["SELECT", "milliseconds", "FROM", "tracks", "WHERE", "name", "=", "``", "Fast", "As", "a", "Shark", "''", ";"], "query_toks_no_value": ["select", "milliseconds", "from", "tracks", "where", "name", "=", "value"], "question": "¿Cuántos milisegundos dura Fast As a Shark?\n", "question_toks": ["How", "many", "milliseconds", "long", "is", "Fast", "As", "a", "Shark", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 55, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Fast As a Shark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T1.name", "=", "``", "Rock", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t1", ".", "name", "=", "value"], "question": "¿Cómo se llaman los temas cuyo género es Rock?\n", "question_toks": ["What", "is", "the", "name", "of", "tracks", "whose", "genre", "is", "Rock", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T1.name", "=", "``", "Rock", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t1", ".", "name", "=", "value"], "question": "¿Cómo se llaman todas las pistas del género Rock?\n", "question_toks": ["What", "is", "the", "name", "of", "all", "tracks", "in", "the", "Rock", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";", "query_toks": ["SELECT", "T1.title", "FROM", "albums", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T2.name", "=", "``", "Balls", "to", "the", "Wall", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "albums", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuál es el título del álbum al que pertenece Balls to the Wall?\n", "question_toks": ["What", "is", "title", "of", "album", "which", "track", "Balls", "to", "the", "Wall", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Balls to the Wall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";", "query_toks": ["SELECT", "T1.title", "FROM", "albums", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T2.name", "=", "``", "Balls", "to", "the", "Wall", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "albums", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cómo se llama el álbum que tiene el tema Ball to the Wall?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "album", "that", "has", "the", "track", "Ball", "to", "the", "Wall", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Balls to the Wall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";", "query_toks": ["SELECT", "T2.name", "FROM", "albums", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T1.title", "=", "``", "Balls", "to", "the", "Wall", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "albums", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t1", ".", "title", "=", "value"], "question": "Lista el nombre de todas las pistas en Balls to the Wall.\n", "question_toks": ["List", "name", "of", "all", "tracks", "in", "Balls", "to", "the", "Wall", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Balls to the Wall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";", "query_toks": ["SELECT", "T2.name", "FROM", "albums", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T1.title", "=", "``", "Balls", "to", "the", "Wall", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "albums", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t1", ".", "title", "=", "value"], "question": "¿Cómo se llaman todas las pistas del álbum llamado Balls to the Wall?\n", "question_toks": ["What", "is", "the", "name", "of", "all", "tracks", "in", "the", "album", "named", "Balls", "to", "the", "Wall", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Balls to the Wall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "JOIN", "media_types", "AS", "T3", "ON", "T3.id", "=", "T2.media_type_id", "WHERE", "T1.name", "=", "``", "Rock", "''", "AND", "T3.name", "=", "``", "MPEG", "audio", "file", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "join", "media_types", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "media_type_id", "where", "t1", ".", "name", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "Enumere el nombre de las pistas que pertenecen al género Rock y cuyo tipo de medio es un archivo de audio MPEG.\n", "question_toks": ["List", "the", "name", "of", "tracks", "belongs", "to", "genre", "Rock", "and", "whose", "media", "type", "is", "MPEG", "audio", "file", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null], "and", [false, 2, [0, [0, 48, false], null], "\"MPEG audio file\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "JOIN", "media_types", "AS", "T3", "ON", "T3.id", "=", "T2.media_type_id", "WHERE", "T1.name", "=", "``", "Rock", "''", "AND", "T3.name", "=", "``", "MPEG", "audio", "file", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "join", "media_types", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "media_type_id", "where", "t1", ".", "name", "=", "value", "and", "t3", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de todas las pistas de Rock almacenadas en archivos de audio MPEG?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "Rock", "tracks", "that", "are", "stored", "on", "MPEG", "audio", "files", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null], "and", [false, 2, [0, [0, 48, false], null], "\"MPEG audio file\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "JOIN", "media_types", "AS", "T3", "ON", "T3.id", "=", "T2.media_type_id", "WHERE", "T1.name", "=", "``", "Rock", "''", "OR", "T3.name", "=", "``", "MPEG", "audio", "file", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "join", "media_types", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "media_type_id", "where", "t1", ".", "name", "=", "value", "or", "t3", ".", "name", "=", "value"], "question": "Enumere el nombre de las pistas que pertenecen al género Rock o el tipo de medio es un archivo de audio MPEG.\n", "question_toks": ["List", "the", "name", "of", "tracks", "belongs", "to", "genre", "Rock", "or", "media", "type", "is", "MPEG", "audio", "file", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null], "or", [false, 2, [0, [0, 48, false], null], "\"MPEG audio file\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "JOIN", "media_types", "AS", "T3", "ON", "T3.id", "=", "T2.media_type_id", "WHERE", "T1.name", "=", "``", "Rock", "''", "OR", "T3.name", "=", "``", "MPEG", "audio", "file", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "join", "media_types", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "media_type_id", "where", "t1", ".", "name", "=", "value", "or", "t3", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de todas las pistas que pertenecen al género Rock y cuyo tipo de medio es MPEG?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "tracks", "that", "belong", "to", "the", "Rock", "genre", "and", "whose", "media", "type", "is", "MPEG", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null], "or", [false, 2, [0, [0, 48, false], null], "\"MPEG audio file\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\"", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T1.name", "=", "``", "Rock", "''", "OR", "T1.name", "=", "``", "Jazz", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t1", ".", "name", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "Enumere el nombre de las pistas que pertenecen al género Rock o al género Jazz.\n", "question_toks": ["List", "the", "name", "of", "tracks", "belongs", "to", "genre", "Rock", "or", "genre", "Jazz", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null], "or", [false, 2, [0, [0, 37, false], null], "\"Jazz\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\"", "query_toks": ["SELECT", "T2.name", "FROM", "genres", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.genre_id", "WHERE", "T1.name", "=", "``", "Rock", "''", "OR", "T1.name", "=", "``", "Jazz", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "genres", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "genre_id", "where", "t1", ".", "name", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "¿Cómo se llaman los tracks que son canciones de Rock o Jazz?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "tracks", "that", "are", "Rock", "or", "Jazz", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Rock\"", null], "or", [false, 2, [0, [0, 37, false], null], "\"Jazz\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";", "query_toks": ["SELECT", "T1.name", "FROM", "tracks", "AS", "T1", "JOIN", "playlist_tracks", "AS", "T2", "ON", "T1.id", "=", "T2.track_id", "JOIN", "playlists", "AS", "T3", "ON", "T3.id", "=", "T2.playlist_id", "WHERE", "T3.name", "=", "``", "Movies", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tracks", "as", "t1", "join", "playlist_tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "track_id", "join", "playlists", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "playlist_id", "where", "t3", ".", "name", "=", "value"], "question": "Enumere el nombre de todas las pistas en las listas de reproducción de Películas.\n", "question_toks": ["List", "the", "name", "of", "all", "tracks", "in", "the", "playlists", "of", "Movies", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 11], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 49, false], null], [0, 66, false], null], "and", [false, 2, [0, [0, 63, false], null], [0, 65, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 64, false], null], "\"Movies\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";", "query_toks": ["SELECT", "T1.name", "FROM", "tracks", "AS", "T1", "JOIN", "playlist_tracks", "AS", "T2", "ON", "T1.id", "=", "T2.track_id", "JOIN", "playlists", "AS", "T3", "ON", "T3.id", "=", "T2.playlist_id", "WHERE", "T3.name", "=", "``", "Movies", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tracks", "as", "t1", "join", "playlist_tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "track_id", "join", "playlists", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "playlist_id", "where", "t3", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de todas las pistas que están en las listas de reproducción tituladas Películas?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "tracks", "that", "are", "on", "playlists", "titled", "Movies", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 11], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 49, false], null], [0, 66, false], null], "and", [false, 2, [0, [0, 63, false], null], [0, 65, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 64, false], null], "\"Movies\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";", "query_toks": ["SELECT", "T1.name", "FROM", "tracks", "AS", "T1", "JOIN", "invoice_lines", "AS", "T2", "ON", "T1.id", "=", "T2.track_id", "JOIN", "invoices", "AS", "T3", "ON", "T3.id", "=", "T2.invoice_id", "JOIN", "customers", "AS", "T4", "ON", "T4.id", "=", "T3.customer_id", "WHERE", "T4.first_name", "=", "``", "Daan", "''", "AND", "T4.last_name", "=", "``", "Peeters", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tracks", "as", "t1", "join", "invoice_lines", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "track_id", "join", "invoices", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "invoice_id", "join", "customers", "as", "t4", "on", "t4", ".", "id", "=", "t3", ".", "customer_id", "where", "t4", ".", "first_name", "=", "value", "and", "t4", ".", "last_name", "=", "value"], "question": "Enumere todas las pistas compradas por el cliente Daan Peeters.\n", "question_toks": ["List", "all", "tracks", "bought", "by", "customer", "Daan", "Peeters", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 9], ["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 49, false], null], [0, 60, false], null], "and", [false, 2, [0, [0, 38, false], null], [0, 59, false], null], "and", [false, 2, [0, [0, 23, false], null], [0, 39, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Daan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Peeters\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";", "query_toks": ["SELECT", "T1.name", "FROM", "tracks", "AS", "T1", "JOIN", "invoice_lines", "AS", "T2", "ON", "T1.id", "=", "T2.track_id", "JOIN", "invoices", "AS", "T3", "ON", "T3.id", "=", "T2.invoice_id", "JOIN", "customers", "AS", "T4", "ON", "T4.id", "=", "T3.customer_id", "WHERE", "T4.first_name", "=", "``", "Daan", "''", "AND", "T4.last_name", "=", "``", "Peeters", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tracks", "as", "t1", "join", "invoice_lines", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "track_id", "join", "invoices", "as", "t3", "on", "t3", ".", "id", "=", "t2", ".", "invoice_id", "join", "customers", "as", "t4", "on", "t4", ".", "id", "=", "t3", ".", "customer_id", "where", "t4", ".", "first_name", "=", "value", "and", "t4", ".", "last_name", "=", "value"], "question": "¿Cuáles son las pistas que compró Dean Peeters?\n", "question_toks": ["What", "are", "the", "tracks", "that", "Dean", "Peeters", "bought", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 9], ["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 49, false], null], [0, 60, false], null], "and", [false, 2, [0, [0, 38, false], null], [0, 59, false], null], "and", [false, 2, [0, [0, 23, false], null], [0, 39, false], null]]}, "select": [false, [[0, [0, [0, 50, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Daan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Peeters\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";", "query_toks": ["SELECT", "unit_price", "FROM", "tracks", "WHERE", "name", "=", "``", "Fast", "As", "a", "Shark", "''", ";"], "query_toks_no_value": ["select", "unit_price", "from", "tracks", "where", "name", "=", "value"], "question": "¿Cuánto cuesta la canción Fast As a Shark?\n", "question_toks": ["How", "much", "is", "the", "track", "Fast", "As", "a", "Shark", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 57, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Fast As a Shark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_1", "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";", "query_toks": ["SELECT", "unit_price", "FROM", "tracks", "WHERE", "name", "=", "``", "Fast", "As", "a", "Shark", "''", ";"], "query_toks_no_value": ["select", "unit_price", "from", "tracks", "where", "name", "=", "value"], "question": "¿Cuál es el precio unitario de la canción \"Fast As a Shark\"?\n", "question_toks": ["What", "is", "the", "unit", "price", "of", "the", "tune", "``", "Fast", "As", "a", "Shark", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 57, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Fast As a Shark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT Name ,  Age FROM editor", "query_toks": ["SELECT", "Name", ",", "Age", "FROM", "editor"], "query_toks_no_value": ["select", "name", ",", "age", "from", "editor"], "question": "¿Cuáles son los nombres y edades de los editores?\n", "question_toks": ["What", "are", "the", "names", "and", "ages", "of", "editors", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT Name FROM editor WHERE Age  >  25", "query_toks": ["SELECT", "Name", "FROM", "editor", "WHERE", "Age", ">", "25"], "query_toks_no_value": ["select", "name", "from", "editor", "where", "age", ">", "value"], "question": "Enumere los nombres de los editores mayores de 25 años.\n", "question_toks": ["List", "the", "names", "of", "editors", "who", "are", "older", "than", "25", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 25.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25", "query_toks": ["SELECT", "Name", "FROM", "editor", "WHERE", "Age", "=", "24", "OR", "Age", "=", "25"], "query_toks_no_value": ["select", "name", "from", "editor", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "Muestre los nombres de los editores de 24 o 25 años.\n", "question_toks": ["Show", "the", "names", "of", "editors", "of", "age", "either", "24", "or", "25", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 24.0, null], "or", [false, 2, [0, [0, 7, false], null], 25.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT DISTINCT Theme FROM journal", "query_toks": ["SELECT", "DISTINCT", "Theme", "FROM", "journal"], "query_toks_no_value": ["select", "distinct", "theme", "from", "journal"], "question": "Mostrar las distintas temáticas de las revistas.\n", "question_toks": ["Show", "the", "distinct", "themes", "of", "journals", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Theme", "FROM", "journal_committee", "AS", "T1", "JOIN", "editor", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "JOIN", "journal", "AS", "T3", "ON", "T1.Journal_ID", "=", "T3.Journal_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "theme", "from", "journal_committee", "as", "t1", "join", "editor", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "join", "journal", "as", "t3", "on", "t1", ".", "journal_id", "=", "t3", ".", "journal_id"], "question": "Muestre los nombres de los editores y el tema de las revistas para las que forman parte de los comités.\n", "question_toks": ["Show", "the", "names", "of", "editors", "and", "the", "theme", "of", "journals", "for", "which", "they", "serve", "on", "committees", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Theme", "FROM", "journal_committee", "AS", "T1", "JOIN", "editor", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "JOIN", "journal", "AS", "T3", "ON", "T1.Journal_ID", "=", "T3.Journal_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "theme", "from", "journal_committee", "as", "t1", "join", "editor", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "join", "journal", "as", "t3", "on", "t1", ".", "journal_id", "=", "t3", ".", "journal_id"], "question": "Para cada comité_de_diario, busque el nombre del editor y el tema de la revista.\n", "question_toks": ["For", "each", "journal_committee", ",", "find", "the", "editor", "name", "and", "the", "journal", "theme", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000", "query_toks": ["SELECT", "T2.Name", "FROM", "journal_committee", "AS", "T1", "JOIN", "editor", "AS", "T2", "ON", "T1.Editor_ID", "=", "T2.Editor_ID", "JOIN", "journal", "AS", "T3", "ON", "T1.Journal_ID", "=", "T3.Journal_ID", "WHERE", "T3.Sales", ">", "3000"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "journal_committee", "as", "t1", "join", "editor", "as", "t2", "on", "t1", ".", "editor_id", "=", "t2", ".", "editor_id", "join", "journal", "as", "t3", "on", "t1", ".", "journal_id", "=", "t3", ".", "journal_id", "where", "t3", ".", "sales", ">", "value"], "question": "Mostrar los nombres de los editores que forman parte del comité de revistas con ventas superiores a 3000.\n", "question_toks": ["Show", "the", "names", "of", "editors", "that", "are", "on", "the", "committee", "of", "journals", "with", "sales", "bigger", "than", "3000", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "journal_committee", "query": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)", "query_toks": ["SELECT", "Name", "FROM", "editor", "WHERE", "editor_id", "NOT", "IN", "(", "SELECT", "editor_id", "FROM", "journal_committee", ")"], "query_toks_no_value": ["select", "name", "from", "editor", "where", "editor_id", "not", "in", "(", "select", "editor_id", "from", "journal_committee", ")"], "question": "Enumere los nombres de los editores que no forman parte de ningún comité de la revista.\n", "question_toks": ["List", "the", "names", "of", "editors", "that", "are", "not", "on", "any", "journal", "committee", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "customer_id", ",", "account_name", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "customer_id", ",", "account_name", "from", "accounts"], "question": "Mostrar identificaciones, identificaciones de clientes y nombres de todas las cuentas.\n", "question_toks": ["Show", "ids", ",", "customer", "ids", ",", "names", "for", "all", "accounts", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "customer_id", ",", "account_name", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "customer_id", ",", "account_name", "from", "accounts"], "question": "¿Cuáles son los identificadores de cuenta, los identificadores de cliente y los nombres de cuenta de todas las cuentas?\n", "question_toks": ["What", "are", "the", "account", "ids", ",", "customer", "ids", ",", "and", "account", "names", "for", "all", "the", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"", "query_toks": ["SELECT", "other_account_details", "FROM", "Accounts", "WHERE", "account_name", "=", "``", "338", "''"], "query_toks_no_value": ["select", "other_account_details", "from", "accounts", "where", "account_name", "=", "value"], "question": "Mostrar otros detalles de la cuenta con el nombre 338.\n", "question_toks": ["Show", "other", "account", "details", "for", "account", "with", "name", "338", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"338\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"", "query_toks": ["SELECT", "other_account_details", "FROM", "Accounts", "WHERE", "account_name", "=", "``", "338", "''"], "query_toks_no_value": ["select", "other_account_details", "from", "accounts", "where", "account_name", "=", "value"], "question": "¿Cuáles son los otros detalles de la cuenta con el nombre 338?\n", "question_toks": ["What", "are", "the", "other", "account", "details", "for", "the", "account", "with", "the", "name", "338", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"338\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "162", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "¿Cuál es el nombre, apellido y teléfono del cliente con el nombre de cuenta 162?\n", "question_toks": ["What", "is", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "of", "the", "customer", "with", "account", "name", "162", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"162\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "162", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "Indique el nombre completo y el teléfono del cliente que tiene el nombre de cuenta 162.\n", "question_toks": ["Give", "the", "full", "name", "and", "phone", "of", "the", "customer", "who", "has", "the", "account", "name", "162", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"162\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Muestre nombres y apellidos distintos para todos los clientes con una cuenta.\n", "question_toks": ["Show", "distinct", "first", "and", "last", "names", "for", "all", "customers", "with", "an", "account", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 2, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "¿Cuáles son los nombres completos de los clientes que tienen cuentas?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "customers", "who", "have", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 2, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "query_toks": ["SELECT", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "FROM", "Customers"], "query_toks_no_value": ["select", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "from", "customers"], "question": "Muestre identificaciones, nombres, apellidos y teléfonos de todos los clientes.\n", "question_toks": ["Show", "ids", ",", "first", "names", ",", "last", "names", ",", "and", "phones", "for", "all", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers", "query_toks": ["SELECT", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "FROM", "Customers"], "query_toks_no_value": ["select", "customer_id", ",", "customer_first_name", ",", "customer_last_name", ",", "customer_phone", "from", "customers"], "question": "¿Cuáles son las identificaciones, nombres completos y teléfonos de cada cliente?\n", "question_toks": ["What", "are", "the", "ids", ",", "full", "names", ",", "and", "phones", "of", "each", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"", "query_toks": ["SELECT", "customer_phone", ",", "customer_email", "FROM", "Customers", "WHERE", "customer_first_name", "=", "``", "Aniyah", "''", "AND", "customer_last_name", "=", "``", "Feest", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email", "from", "customers", "where", "customer_first_name", "=", "value", "and", "customer_last_name", "=", "value"], "question": "¿Cuál es el teléfono y el correo electrónico del cliente con nombre Aniyah y apellido Feest?\n", "question_toks": ["What", "is", "the", "phone", "and", "email", "for", "customer", "with", "first", "name", "Aniyah", "and", "last", "name", "Feest", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Aniyah\"", null], "and", [false, 2, [0, [0, 7, false], null], "\"Feest\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"", "query_toks": ["SELECT", "customer_phone", ",", "customer_email", "FROM", "Customers", "WHERE", "customer_first_name", "=", "``", "Aniyah", "''", "AND", "customer_last_name", "=", "``", "Feest", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email", "from", "customers", "where", "customer_first_name", "=", "value", "and", "customer_last_name", "=", "value"], "question": "Devuelva el teléfono y el correo electrónico del cliente con el nombre Aniyah y el apellido Feest.\n", "question_toks": ["Return", "the", "phone", "and", "email", "of", "the", "customer", "with", "the", "first", "name", "Aniyah", "and", "last", "name", "Feest", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Aniyah\"", null], "and", [false, 2, [0, [0, 7, false], null], "\"Feest\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards", "query_toks": ["SELECT", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "FROM", "Customers_cards"], "query_toks_no_value": ["select", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "from", "customers_cards"], "question": "Muestra identificaciones, identificaciones de clientes, códigos de tipo de tarjeta, números de tarjeta para todas las tarjetas.\n", "question_toks": ["Show", "ids", ",", "customer", "ids", ",", "card", "type", "codes", ",", "card", "numbers", "for", "all", "cards", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards", "query_toks": ["SELECT", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "FROM", "Customers_cards"], "query_toks_no_value": ["select", "card_id", ",", "customer_id", ",", "card_type_code", ",", "card_number", "from", "customers_cards"], "question": "¿Cuáles son los identificadores de tarjeta, los identificadores de cliente, los tipos de tarjeta y los números de tarjeta de cada tarjeta de cliente?\n", "question_toks": ["What", "are", "card", "ids", ",", "customer", "ids", ",", "card", "types", ",", "and", "card", "numbers", "for", "each", "customer", "card", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "date_valid_from", ",", "date_valid_to", "FROM", "Customers_cards", "WHERE", "card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "date_valid_from", ",", "date_valid_to", "from", "customers_cards", "where", "card_number", "=", "value"], "question": "Muestra la fecha válida desde y la fecha válida hasta para la tarjeta con número de tarjeta '4560596484842'.\n", "question_toks": ["Show", "the", "date", "valid", "from", "and", "the", "date", "valid", "to", "for", "the", "card", "with", "card", "number", "'4560596484842", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "date_valid_from", ",", "date_valid_to", "FROM", "Customers_cards", "WHERE", "card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "date_valid_from", ",", "date_valid_to", "from", "customers_cards", "where", "card_number", "=", "value"], "question": "¿Cuáles son las fechas de inicio y fin de validez de la tarjeta con el número 4560596484842?\n", "question_toks": ["What", "are", "the", "valid", "from", "and", "valid", "to", "dates", "for", "the", "card", "with", "the", "number", "4560596484842", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "card_number", "=", "value"], "question": "¿Cuál es el nombre, apellido y teléfono del cliente con tarjeta 4560596484842?\n", "question_toks": ["What", "is", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "of", "the", "customer", "with", "card", "4560596484842", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "card_number", "=", "value"], "question": "Devolver el nombre completo y teléfono del cliente que tiene número de tarjeta 4560596484842.\n", "question_toks": ["Return", "the", "full", "name", "and", "phone", "of", "the", "customer", "who", "has", "card", "number", "4560596484842", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT DISTINCT card_type_code FROM Customers_Cards", "query_toks": ["SELECT", "DISTINCT", "card_type_code", "FROM", "Customers_Cards"], "query_toks_no_value": ["select", "distinct", "card_type_code", "from", "customers_cards"], "question": "Mostrar todos los códigos de tipo de tarjeta.\n", "question_toks": ["Show", "all", "card", "type", "codes", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT DISTINCT card_type_code FROM Customers_Cards", "query_toks": ["SELECT", "DISTINCT", "card_type_code", "FROM", "Customers_Cards"], "query_toks_no_value": ["select", "distinct", "card_type_code", "from", "customers_cards"], "question": "¿Cuáles son los diferentes códigos de tipo de tarjeta?\n", "question_toks": ["What", "are", "the", "different", "card", "type", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions", "query_toks": ["SELECT", "DISTINCT", "transaction_type", "FROM", "Financial_Transactions"], "query_toks_no_value": ["select", "distinct", "transaction_type", "from", "financial_transactions"], "question": "Mostrar todos los tipos de transacciones.\n", "question_toks": ["Show", "all", "transaction", "types", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_card_transactions", "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions", "query_toks": ["SELECT", "DISTINCT", "transaction_type", "FROM", "Financial_Transactions"], "query_toks_no_value": ["select", "distinct", "transaction_type", "from", "financial_transactions"], "question": "¿Cuáles son los diferentes tipos de transacciones?\n", "question_toks": ["What", "are", "the", "different", "types", "of", "transactions", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name ,  LOCATION FROM track", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "track"], "query_toks_no_value": ["select", "name", ",", "location", "from", "track"], "question": "Muestra el nombre y la ubicación de todas las pistas.\n", "question_toks": ["Show", "the", "name", "and", "location", "for", "all", "tracks", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name ,  LOCATION FROM track", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "track"], "query_toks_no_value": ["select", "name", ",", "location", "from", "track"], "question": "¿Cuáles son los nombres y ubicaciones de todas las pistas?\n", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "all", "tracks", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "year_opened", "FROM", "track", "WHERE", "seating", ">", "(", "SELECT", "avg", "(", "seating", ")", "FROM", "track", ")"], "query_toks_no_value": ["select", "name", ",", "location", ",", "year_opened", "from", "track", "where", "seating", ">", "(", "select", "avg", "(", "seating", ")", "from", "track", ")"], "question": "Muestra el nombre, la ubicación y el año de apertura de todas las pistas con un número de asientos superior al promedio.\n", "question_toks": ["Show", "the", "name", ",", "location", ",", "open", "year", "for", "all", "tracks", "with", "a", "seating", "higher", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "year_opened", "FROM", "track", "WHERE", "seating", ">", "(", "SELECT", "avg", "(", "seating", ")", "FROM", "track", ")"], "query_toks_no_value": ["select", "name", ",", "location", ",", "year_opened", "from", "track", "where", "seating", ">", "(", "select", "avg", "(", "seating", ")", "from", "track", ")"], "question": "¿Cuáles son los nombres, ubicaciones y años de apertura de las pistas con asientos superiores al promedio?\n", "question_toks": ["What", "are", "the", "names", ",", "locations", ",", "and", "years", "of", "opening", "for", "tracks", "with", "seating", "higher", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT DISTINCT LOCATION FROM track", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "track"], "query_toks_no_value": ["select", "distinct", "location", "from", "track"], "question": "¿Cuáles son los distintos lugares donde se encuentran las pistas?\n", "question_toks": ["What", "are", "distinct", "locations", "where", "tracks", "are", "located", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT DISTINCT LOCATION FROM track", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "track"], "query_toks_no_value": ["select", "distinct", "location", "from", "track"], "question": "Indique las diferentes ubicaciones de las pistas.\n", "question_toks": ["Give", "the", "different", "locations", "of", "tracks", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT DISTINCT CLASS FROM race", "query_toks": ["SELECT", "DISTINCT", "CLASS", "FROM", "race"], "query_toks_no_value": ["select", "distinct", "class", "from", "race"], "question": "¿Cuáles son las distintas clases que pueden tener las carreras?\n", "question_toks": ["What", "are", "the", "distinct", "classes", "that", "races", "can", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT DISTINCT CLASS FROM race", "query_toks": ["SELECT", "DISTINCT", "CLASS", "FROM", "race"], "query_toks_no_value": ["select", "distinct", "class", "from", "race"], "question": "Devuelve las diferentes clases de carreras.\n", "question_toks": ["Return", "the", "different", "classes", "of", "races", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name ,  CLASS ,  date FROM race", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "date", "FROM", "race"], "query_toks_no_value": ["select", "name", ",", "class", ",", "date", "from", "race"], "question": "Muestra el nombre, la clase y la fecha de todas las carreras.\n", "question_toks": ["Show", "name", ",", "class", ",", "and", "date", "for", "all", "races", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name ,  CLASS ,  date FROM race", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "date", "FROM", "race"], "query_toks_no_value": ["select", "name", ",", "class", ",", "date", "from", "race"], "question": "¿Cuáles son los nombres, clases y fechas de todas las carreras?\n", "question_toks": ["What", "are", "the", "names", ",", "classes", ",", "and", "dates", "for", "all", "races", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)", "query_toks": ["SELECT", "name", "FROM", "track", "WHERE", "track_id", "NOT", "IN", "(", "SELECT", "track_id", "FROM", "race", ")"], "query_toks_no_value": ["select", "name", "from", "track", "where", "track_id", "not", "in", "(", "select", "track_id", "from", "race", ")"], "question": "Mostrar todos los nombres de pistas que no han tenido carreras.\n", "question_toks": ["Show", "all", "track", "names", "that", "have", "had", "no", "races", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)", "query_toks": ["SELECT", "name", "FROM", "track", "WHERE", "track_id", "NOT", "IN", "(", "SELECT", "track_id", "FROM", "race", ")"], "query_toks_no_value": ["select", "name", "from", "track", "where", "track_id", "not", "in", "(", "select", "track_id", "from", "race", ")"], "question": "Devuelve los nombres de las pistas que no han tenido carreras.\n", "question_toks": ["Return", "the", "names", "of", "tracks", "that", "have", "no", "had", "any", "races", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "query_toks": ["SELECT", "year_opened", "FROM", "track", "WHERE", "seating", "BETWEEN", "4000", "AND", "5000"], "query_toks_no_value": ["select", "year_opened", "from", "track", "where", "seating", "between", "value", "and", "value"], "question": "Muestre el año en el que se abrió una pista con capacidad para al menos 5000 personas y una pista con capacidad para no más de 4000 personas.\n", "question_toks": ["Show", "year", "where", "a", "track", "with", "a", "seating", "at", "least", "5000", "opened", "and", "a", "track", "with", "seating", "no", "more", "than", "4000", "opened", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 4000.0, 5000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "query_toks": ["SELECT", "year_opened", "FROM", "track", "WHERE", "seating", "BETWEEN", "4000", "AND", "5000"], "query_toks_no_value": ["select", "year_opened", "from", "track", "where", "seating", "between", "value", "and", "value"], "question": "¿Cuáles son los años de apertura de pistas con capacidad entre 4000 y 5000?\n", "question_toks": ["What", "are", "the", "years", "of", "opening", "for", "tracks", "with", "seating", "between", "4000", "and", "5000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 4000.0, 5000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "query_toks": ["SELECT", "T1.name", ",", "T1.date", ",", "T2.name", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "date", ",", "t2", ".", "name", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id"], "question": "Muestra el nombre y la fecha de cada carrera y el nombre de su pista.\n", "question_toks": ["Show", "the", "name", "and", "date", "for", "each", "race", "and", "its", "track", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "race_track", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id", "query_toks": ["SELECT", "T1.name", ",", "T1.date", ",", "T2.name", "FROM", "race", "AS", "T1", "JOIN", "track", "AS", "T2", "ON", "T1.track_id", "=", "T2.track_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "date", ",", "t2", ".", "name", "from", "race", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "track_id", "=", "t2", ".", "track_id"], "question": "¿Cuáles son los nombres y fechas de las carreras y los nombres de las pistas donde se llevan a cabo?\n", "question_toks": ["What", "are", "the", "names", "and", "dates", "of", "races", ",", "and", "the", "names", "of", "the", "tracks", "where", "they", "are", "held", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "coffee_shop", "query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'", "query_toks": ["SELECT", "name", "FROM", "member", "WHERE", "address", "=", "'Harford", "'", "OR", "address", "=", "'Waterbury", "'"], "query_toks_no_value": ["select", "name", "from", "member", "where", "address", "=", "value", "or", "address", "=", "value"], "question": "Dame los nombres de los miembros cuya dirección esté en Harford o Waterbury.\n", "question_toks": ["Give", "me", "the", "names", "of", "members", "whose", "address", "is", "in", "Harford", "or", "Waterbury", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Harford\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"Waterbury\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "coffee_shop", "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30", "query_toks": ["SELECT", "name", ",", "member_id", "FROM", "member", "WHERE", "Membership_card", "=", "'Black", "'", "OR", "age", "<", "30"], "query_toks_no_value": ["select", "name", ",", "member_id", "from", "member", "where", "membership_card", "=", "value", "or", "age", "<", "value"], "question": "Encuentre las identificaciones y nombres de miembros menores de 30 años o con tarjeta de membresía negra.\n", "question_toks": ["Find", "the", "ids", "and", "names", "of", "members", "who", "are", "under", "age", "30", "or", "with", "black", "membership", "card", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Black\"", null], "or", [false, 4, [0, [0, 9, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "coffee_shop", "query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)", "query_toks": ["SELECT", "shop_id", ",", "address", "FROM", "shop", "WHERE", "score", "<", "(", "SELECT", "avg", "(", "score", ")", "FROM", "shop", ")"], "query_toks_no_value": ["select", "shop_id", ",", "address", "from", "shop", "where", "score", "<", "(", "select", "avg", "(", "score", ")", "from", "shop", ")"], "question": "Encuentre la identificación y la dirección de las tiendas cuyo puntaje está por debajo del puntaje promedio.\n", "question_toks": ["Find", "the", "id", "and", "address", "of", "the", "shops", "whose", "score", "is", "below", "the", "average", "score", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "coffee_shop", "query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)", "query_toks": ["SELECT", "address", ",", "num_of_staff", "FROM", "shop", "WHERE", "shop_id", "NOT", "IN", "(", "SELECT", "shop_id", "FROM", "happy_hour", ")"], "query_toks_no_value": ["select", "address", ",", "num_of_staff", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "happy_hour", ")"], "question": "Encuentra la dirección y el número de personal de las tiendas que no tienen happy hour.\n", "question_toks": ["Find", "the", "address", "and", "staff", "number", "of", "the", "shops", "that", "do", "not", "have", "any", "happy", "hour", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "coffee_shop", "query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'", "query_toks": ["SELECT", "t1.address", ",", "t1.shop_id", "FROM", "shop", "AS", "t1", "JOIN", "happy_hour", "AS", "t2", "ON", "t1.shop_id", "=", "t2.shop_id", "WHERE", "MONTH", "=", "'May", "'"], "query_toks_no_value": ["select", "t1", ".", "address", ",", "t1", ".", "shop_id", "from", "shop", "as", "t1", "join", "happy_hour", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "shop_id", "where", "month", "=", "value"], "question": "¿Cuáles son el ID y la dirección de las tiendas que tienen happy hour en mayo?\n", "question_toks": ["What", "are", "the", "id", "and", "address", "of", "the", "shops", "which", "have", "a", "happy", "hour", "in", "May", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"May\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Name FROM GENRE", "query_toks": ["SELECT", "Name", "FROM", "GENRE"], "query_toks_no_value": ["select", "name", "from", "genre"], "question": "Enumere los nombres de todos los géneros musicales.\n", "question_toks": ["List", "the", "names", "of", "all", "music", "genres", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Name FROM GENRE", "query_toks": ["SELECT", "Name", "FROM", "GENRE"], "query_toks_no_value": ["select", "name", "from", "genre"], "question": "¿Cuáles son los nombres de los diferentes géneros musicales?\n", "question_toks": ["What", "are", "the", "names", "of", "different", "music", "genres", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"", "query_toks": ["SELECT", "*", "FROM", "CUSTOMER", "WHERE", "State", "=", "``", "NY", "''"], "query_toks_no_value": ["select", "*", "from", "customer", "where", "state", "=", "value"], "question": "Encuentra toda la información de clientes en el estado NY.\n", "question_toks": ["Find", "all", "the", "customer", "information", "in", "state", "NY", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"", "query_toks": ["SELECT", "*", "FROM", "CUSTOMER", "WHERE", "State", "=", "``", "NY", "''"], "query_toks_no_value": ["select", "*", "from", "customer", "where", "state", "=", "value"], "question": "¿Cuál es toda la información del cliente para los clientes en el estado de Nueva York?\n", "question_toks": ["What", "is", "all", "the", "customer", "information", "for", "customers", "in", "NY", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "EMPLOYEE", "WHERE", "City", "=", "``", "Calgary", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "employee", "where", "city", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de los empleados que viven en la ciudad de Calgary?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "employees", "who", "live", "in", "Calgary", "city", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Calgary\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "EMPLOYEE", "WHERE", "City", "=", "``", "Calgary", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "employee", "where", "city", "=", "value"], "question": "Encuentre los nombres completos de los empleados que viven en la ciudad de Calgary.\n", "question_toks": ["Find", "the", "full", "names", "of", "employees", "living", "in", "the", "city", "of", "Calgary", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Calgary\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT distinct(BillingCountry) FROM INVOICE", "query_toks": ["SELECT", "distinct", "(", "BillingCountry", ")", "FROM", "INVOICE"], "query_toks_no_value": ["select", "distinct", "(", "billingcountry", ")", "from", "invoice"], "question": "¿Cuáles son los distintos países de facturación de las facturas?\n", "question_toks": ["What", "are", "the", "distinct", "billing", "countries", "of", "the", "invoices", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT distinct(BillingCountry) FROM INVOICE", "query_toks": ["SELECT", "distinct", "(", "BillingCountry", ")", "FROM", "INVOICE"], "query_toks_no_value": ["select", "distinct", "(", "billingcountry", ")", "from", "invoice"], "question": "Encuentre los diferentes países de facturación para todas las facturas.\n", "question_toks": ["Find", "the", "different", "billing", "countries", "for", "all", "invoices", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"", "query_toks": ["SELECT", "Name", "FROM", "ARTIST", "WHERE", "Name", "LIKE", "``", "%", "a", "%", "''"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "name", "like", "value"], "question": "Encuentra los nombres de todos los artistas que tienen \"a\" en sus nombres.\n", "question_toks": ["Find", "the", "names", "of", "all", "artists", "that", "have", "``", "a", "''", "in", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"", "query_toks": ["SELECT", "Name", "FROM", "ARTIST", "WHERE", "Name", "LIKE", "``", "%", "a", "%", "''"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "name", "like", "value"], "question": "¿Cuáles son los nombres de los artistas que tienen la letra 'a' en su nombre?\n", "question_toks": ["What", "are", "the", "names", "of", "artist", "who", "have", "the", "letter", "'a", "'", "in", "their", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"", "query_toks": ["SELECT", "Title", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistId", "WHERE", "T2.Name", "=", "``", "AC/DC", "''"], "query_toks_no_value": ["select", "title", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "where", "t2", ".", "name", "=", "value"], "question": "Encuentra el título de todos los álbumes del artista \"AC/DC\".\n", "question_toks": ["Find", "the", "title", "of", "all", "the", "albums", "of", "the", "artist", "``", "AC/DC", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"AC/DC\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"", "query_toks": ["SELECT", "Title", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistId", "WHERE", "T2.Name", "=", "``", "AC/DC", "''"], "query_toks_no_value": ["select", "title", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuáles son los títulos de los álbumes del artista \"AC/DC\"?\n", "question_toks": ["What", "are", "the", "titles", "of", "albums", "by", "the", "artist", "``", "AC/DC", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"AC/DC\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistId", "WHERE", "T2.Name", "=", "``", "Metallica", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuántos álbumes tiene el artista \"Metallica\"?\n", "question_toks": ["Hom", "many", "albums", "does", "the", "artist", "``", "Metallica", "''", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Metallica\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistId", "WHERE", "T2.Name", "=", "``", "Metallica", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "where", "t2", ".", "name", "=", "value"], "question": "Encuentra el número de álbumes del artista \"Metallica\".\n", "question_toks": ["Find", "the", "number", "of", "albums", "by", "the", "artist", "``", "Metallica", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Metallica\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"", "query_toks": ["SELECT", "T2.Name", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistId", "WHERE", "T1.Title", "=", "``", "Balls", "to", "the", "Wall", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "where", "t1", ".", "title", "=", "value"], "question": "¿A qué artista pertenece el disco \"Balls to the Wall\"?\n", "question_toks": ["Which", "artist", "does", "the", "album", "``", "Balls", "to", "the", "Wall", "''", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Balls to the Wall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"", "query_toks": ["SELECT", "T2.Name", "FROM", "ALBUM", "AS", "T1", "JOIN", "ARTIST", "AS", "T2", "ON", "T1.ArtistId", "=", "T2.ArtistId", "WHERE", "T1.Title", "=", "``", "Balls", "to", "the", "Wall", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "album", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artistid", "=", "t2", ".", "artistid", "where", "t1", ".", "title", "=", "value"], "question": "Encuentra el nombre del artista que hizo el álbum \"Balls to the Wall\".\n", "question_toks": ["Find", "the", "name", "of", "the", "artist", "who", "made", "the", "album", "``", "Balls", "to", "the", "Wall", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Balls to the Wall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'", "query_toks": ["SELECT", "Name", "FROM", "TRACK", "WHERE", "Name", "LIKE", "'", "%", "you", "%", "'"], "query_toks_no_value": ["select", "name", "from", "track", "where", "name", "like", "value"], "question": "Encuentra los nombres de todas las pistas que contienen la palabra \"tú\".\n", "question_toks": ["Find", "the", "names", "of", "all", "the", "tracks", "that", "contain", "the", "word", "``", "you", "''", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 57, false], null]]]], "where": [[false, 9, [0, [0, 57, false], null], "\"%you%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'", "query_toks": ["SELECT", "Name", "FROM", "TRACK", "WHERE", "Name", "LIKE", "'", "%", "you", "%", "'"], "query_toks_no_value": ["select", "name", "from", "track", "where", "name", "like", "value"], "question": "¿Cuáles son los nombres de las pistas que contienen la palabra tú?\n", "question_toks": ["What", "are", "the", "names", "of", "tracks", "that", "contain", "the", "the", "word", "you", "in", "them", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 57, false], null]]]], "where": [[false, 9, [0, [0, 57, false], null], "\"%you%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(UnitPrice) FROM TRACK", "query_toks": ["SELECT", "AVG", "(", "UnitPrice", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "avg", "(", "unitprice", ")", "from", "track"], "question": "¿Cuál es el precio unitario promedio de todas las pistas?\n", "question_toks": ["What", "is", "the", "average", "unit", "price", "of", "all", "the", "tracks", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[5, [0, [0, 64, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(UnitPrice) FROM TRACK", "query_toks": ["SELECT", "AVG", "(", "UnitPrice", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "avg", "(", "unitprice", ")", "from", "track"], "question": "Encuentre el precio unitario promedio de una pista.\n", "question_toks": ["Find", "the", "average", "unit", "price", "for", "a", "track", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[5, [0, [0, 64, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Rock", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuántas pistas pertenecen al género rock?\n", "question_toks": ["How", "many", "tracks", "belong", "to", "rock", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Rock\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Rock", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "Cuente la cantidad de temas que forman parte del género rock.\n", "question_toks": ["Count", "the", "number", "of", "tracks", "that", "are", "part", "of", "the", "rock", "genre", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Rock\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\"", "query_toks": ["SELECT", "AVG", "(", "UnitPrice", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Jazz", "''"], "query_toks_no_value": ["select", "avg", "(", "unitprice", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuál es el precio unitario promedio de las pistas que pertenecen al género Jazz?\n", "question_toks": ["What", "is", "the", "average", "unit", "price", "of", "tracks", "that", "belong", "to", "Jazz", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[5, [0, [0, 64, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Jazz\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\"", "query_toks": ["SELECT", "AVG", "(", "UnitPrice", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Jazz", "''"], "query_toks_no_value": ["select", "avg", "(", "unitprice", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "Encuentre el precio unitario promedio de las pistas de jazz.\n", "question_toks": ["Find", "the", "average", "unit", "price", "of", "jazz", "tracks", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[5, [0, [0, 64, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Jazz\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "CUSTOMER", "WHERE", "Email", "=", "``", "luisg", "@", "embraer.com.br", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "customer", "where", "email", "=", "value"], "question": "¿Cuál es el nombre y apellido del cliente que tiene el correo electrónico \"luisg@embraer.com.br\"?\n", "question_toks": ["What", "is", "the", "first", "name", "and", "last", "name", "of", "the", "customer", "that", "has", "email", "``", "luisg", "@", "embraer.com.br", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"luisg@embraer.com.br\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"", "query_toks": ["SELECT", "FirstName", ",", "LastName", "FROM", "CUSTOMER", "WHERE", "Email", "=", "``", "luisg", "@", "embraer.com.br", "''"], "query_toks_no_value": ["select", "firstname", ",", "lastname", "from", "customer", "where", "email", "=", "value"], "question": "Encuentre el nombre completo del cliente con el correo electrónico \"luisg@embraer.com.br\".\n", "question_toks": ["Find", "the", "full", "name", "of", "the", "customer", "with", "the", "email", "``", "luisg", "@", "embraer.com.br", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"luisg@embraer.com.br\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CUSTOMER", "WHERE", "Email", "LIKE", "``", "%", "gmail.com", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customer", "where", "email", "like", "value"], "question": "¿Cuántos clientes tienen un correo electrónico que contiene \"gmail.com\"?\n", "question_toks": ["How", "many", "customers", "have", "email", "that", "contains", "``", "gmail.com", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 17, false], null], "\"%gmail.com%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "CUSTOMER", "WHERE", "Email", "LIKE", "``", "%", "gmail.com", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customer", "where", "email", "like", "value"], "question": "Cuente la cantidad de clientes que tienen un correo electrónico que contiene \"gmail.com\".\n", "question_toks": ["Count", "the", "number", "of", "customers", "that", "have", "an", "email", "containing", "``", "gmail.com", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 17, false], null], "\"%gmail.com%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "query_toks": ["SELECT", "T2.FirstName", ",", "T2.LastName", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "WHERE", "T1.FirstName", "=", "``", "Leonie", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "where", "t1", ".", "firstname", "=", "value"], "question": "¿Cuál es el nombre y apellido del empleado que ayuda al cliente con el nombre Leonie?\n", "question_toks": ["What", "is", "the", "first", "name", "and", "last", "name", "employee", "helps", "the", "customer", "with", "first", "name", "Leonie", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Leonie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"", "query_toks": ["SELECT", "T2.FirstName", ",", "T2.LastName", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "WHERE", "T1.FirstName", "=", "``", "Leonie", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "where", "t1", ".", "firstname", "=", "value"], "question": "Encuentre los nombres completos de los empleados que ayudan a los clientes con el nombre Leonie.\n", "question_toks": ["Find", "the", "full", "names", "of", "employees", "who", "help", "customers", "with", "the", "first", "name", "Leonie", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Leonie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\"", "query_toks": ["SELECT", "T2.City", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "WHERE", "T1.PostalCode", "=", "``", "70174", "''"], "query_toks_no_value": ["select", "t2", ".", "city", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "where", "t1", ".", "postalcode", "=", "value"], "question": "¿En qué ciudad vive el empleado que atiende al cliente con código postal 70174?\n", "question_toks": ["What", "city", "does", "the", "employee", "who", "helps", "the", "customer", "with", "postal", "code", "70174", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"70174\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\"", "query_toks": ["SELECT", "T2.City", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "EMPLOYEE", "AS", "T2", "ON", "T1.SupportRepId", "=", "T2.EmployeeId", "WHERE", "T1.PostalCode", "=", "``", "70174", "''"], "query_toks_no_value": ["select", "t2", ".", "city", "from", "customer", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "supportrepid", "=", "t2", ".", "employeeid", "where", "t1", ".", "postalcode", "=", "value"], "question": "Encuentra las ciudades correspondientes a los empleados que ayudan a los clientes con el código postal 70174.\n", "question_toks": ["Find", "the", "cities", "corresponding", "to", "employees", "who", "help", "customers", "with", "the", "postal", "code", "70174", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"70174\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "city", ")", "FROM", "EMPLOYEE"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "employee"], "question": "¿En cuántas ciudades distintas viven los empleados?\n", "question_toks": ["How", "many", "distinct", "cities", "does", "the", "employees", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "city", ")", "FROM", "EMPLOYEE"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "employee"], "question": "Encuentre el número de ciudades diferentes en las que viven los empleados.\n", "question_toks": ["Find", "the", "number", "of", "different", "cities", "that", "employees", "live", "in", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\"", "query_toks": ["SELECT", "T2.InvoiceDate", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "INVOICE", "AS", "T2", "ON", "T1.CustomerId", "=", "T2.CustomerId", "WHERE", "T1.FirstName", "=", "``", "Astrid", "''", "AND", "LastName", "=", "``", "Gruber", "''"], "query_toks_no_value": ["select", "t2", ".", "invoicedate", "from", "customer", "as", "t1", "join", "invoice", "as", "t2", "on", "t1", ".", "customerid", "=", "t2", ".", "customerid", "where", "t1", ".", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Encuentre todas las fechas de factura correspondientes a clientes con nombre Astrid y apellido Gruber.\n", "question_toks": ["Find", "all", "invoice", "dates", "corresponding", "to", "customers", "with", "first", "name", "Astrid", "and", "last", "name", "Gruber", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 37, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 8, false], null], "\"Gruber\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\"", "query_toks": ["SELECT", "T2.InvoiceDate", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "INVOICE", "AS", "T2", "ON", "T1.CustomerId", "=", "T2.CustomerId", "WHERE", "T1.FirstName", "=", "``", "Astrid", "''", "AND", "LastName", "=", "``", "Gruber", "''"], "query_toks_no_value": ["select", "t2", ".", "invoicedate", "from", "customer", "as", "t1", "join", "invoice", "as", "t2", "on", "t1", ".", "customerid", "=", "t2", ".", "customerid", "where", "t1", ".", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "¿Cuáles son las fechas de facturación para los clientes con el nombre Astrid y el apellido Gruber?\n", "question_toks": ["What", "are", "the", "invoice", "dates", "for", "customers", "with", "the", "first", "name", "Astrid", "and", "the", "last", "name", "Gruber", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 37, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 8, false], null], "\"Gruber\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"", "query_toks": ["SELECT", "DISTINCT", "T1.FirstName", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "INVOICE", "AS", "T2", "ON", "T1.CustomerId", "=", "T2.CustomerId", "WHERE", "T1.country", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "firstname", "from", "customer", "as", "t1", "join", "invoice", "as", "t2", "on", "t1", ".", "customerid", "=", "t2", ".", "customerid", "where", "t1", ".", "country", "=", "value"], "question": "Encuentre los nombres de todos los clientes que viven en Brasil y tienen factura.\n", "question_toks": ["Find", "the", "first", "names", "of", "all", "customers", "that", "live", "in", "Brazil", "and", "have", "an", "invoice", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 37, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"", "query_toks": ["SELECT", "DISTINCT", "T1.FirstName", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "INVOICE", "AS", "T2", "ON", "T1.CustomerId", "=", "T2.CustomerId", "WHERE", "T1.country", "=", "``", "Brazil", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "firstname", "from", "customer", "as", "t1", "join", "invoice", "as", "t2", "on", "t1", ".", "customerid", "=", "t2", ".", "customerid", "where", "t1", ".", "country", "=", "value"], "question": "¿Cuáles son los diferentes nombres de los clientes de Brasil que también han recibido una factura?\n", "question_toks": ["What", "are", "the", "different", "first", "names", "for", "customers", "from", "Brazil", "who", "have", "also", "had", "an", "invoice", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 37, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"", "query_toks": ["SELECT", "DISTINCT", "T1.Address", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "INVOICE", "AS", "T2", "ON", "T1.CustomerId", "=", "T2.CustomerId", "WHERE", "T1.country", "=", "``", "Germany", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "address", "from", "customer", "as", "t1", "join", "invoice", "as", "t2", "on", "t1", ".", "customerid", "=", "t2", ".", "customerid", "where", "t1", ".", "country", "=", "value"], "question": "Encuentre la dirección de todos los clientes que viven en Alemania y tienen factura.\n", "question_toks": ["Find", "the", "address", "of", "all", "customers", "that", "live", "in", "Germany", "and", "have", "invoice", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 37, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Germany\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"", "query_toks": ["SELECT", "DISTINCT", "T1.Address", "FROM", "CUSTOMER", "AS", "T1", "JOIN", "INVOICE", "AS", "T2", "ON", "T1.CustomerId", "=", "T2.CustomerId", "WHERE", "T1.country", "=", "``", "Germany", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "address", "from", "customer", "as", "t1", "join", "invoice", "as", "t2", "on", "t1", ".", "customerid", "=", "t2", ".", "customerid", "where", "t1", ".", "country", "=", "value"], "question": "¿Cuáles son las direcciones de los clientes que viven en Alemania y que han recibido una factura?\n", "question_toks": ["What", "are", "the", "addresses", "of", "customers", "living", "in", "Germany", "who", "have", "had", "an", "invoice", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 37, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Germany\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Phone FROM EMPLOYEE", "query_toks": ["SELECT", "Phone", "FROM", "EMPLOYEE"], "query_toks_no_value": ["select", "phone", "from", "employee"], "question": "Enumere los números de teléfono de todos los empleados.\n", "question_toks": ["List", "the", "phone", "numbers", "of", "all", "employees", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT Phone FROM EMPLOYEE", "query_toks": ["SELECT", "Phone", "FROM", "EMPLOYEE"], "query_toks_no_value": ["select", "phone", "from", "employee"], "question": "¿Cuáles son los números de teléfono de cada empleado?\n", "question_toks": ["What", "are", "the", "phone", "numbers", "for", "each", "employee", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "MEDIATYPE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.MediaTypeId", "=", "T2.MediaTypeId", "WHERE", "T1.Name", "=", "``", "AAC", "audio", "file", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "mediatype", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "mediatypeid", "=", "t2", ".", "mediatypeid", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuántas pistas hay en el tipo de archivo de audio AAC?\n", "question_toks": ["How", "many", "tracks", "are", "in", "the", "AAC", "audio", "file", "media", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 50, false], null], [0, 59, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 51, false], null], "\"AAC audio file\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "MEDIATYPE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.MediaTypeId", "=", "T2.MediaTypeId", "WHERE", "T1.Name", "=", "``", "AAC", "audio", "file", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "mediatype", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "mediatypeid", "=", "t2", ".", "mediatypeid", "where", "t1", ".", "name", "=", "value"], "question": "Cuente el número de pistas que son del tipo de medio \"archivo de audio AAC\".\n", "question_toks": ["Count", "the", "number", "of", "tracks", "that", "are", "of", "the", "media", "type", "``", "AAC", "audio", "file", "''", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 50, false], null], [0, 59, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 51, false], null], "\"AAC audio file\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\"", "query_toks": ["SELECT", "AVG", "(", "Milliseconds", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Latin", "''", "OR", "T1.Name", "=", "``", "Pop", "''"], "query_toks_no_value": ["select", "avg", "(", "milliseconds", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "¿Cuál es la duración promedio en milisegundos de las pistas que pertenecen al género latino o pop?\n", "question_toks": ["What", "is", "the", "average", "duration", "in", "milliseconds", "of", "tracks", "that", "belong", "to", "Latin", "or", "Pop", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[5, [0, [0, 62, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Latin\"", null], "or", [false, 2, [0, [0, 35, false], null], "\"Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\"", "query_toks": ["SELECT", "AVG", "(", "Milliseconds", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Latin", "''", "OR", "T1.Name", "=", "``", "Pop", "''"], "query_toks_no_value": ["select", "avg", "(", "milliseconds", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "Encuentra la duración promedio de milisegundos de las pistas latinas y pop.\n", "question_toks": ["Find", "the", "average", "millisecond", "length", "of", "Latin", "and", "Pop", "tracks", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[5, [0, [0, 62, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Latin\"", null], "or", [false, 2, [0, [0, 35, false], null], "\"Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "query_toks": ["SELECT", "AVG", "(", "T2.UnitPrice", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Rock", "''"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "unitprice", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuál es el precio unitario promedio de las orugas de roca?\n", "question_toks": ["What", "is", "the", "average", "unit", "price", "of", "rock", "tracks", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[5, [0, [0, 64, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Rock\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"", "query_toks": ["SELECT", "AVG", "(", "T2.UnitPrice", ")", "FROM", "GENRE", "AS", "T1", "JOIN", "TRACK", "AS", "T2", "ON", "T1.GenreId", "=", "T2.GenreId", "WHERE", "T1.Name", "=", "``", "Rock", "''"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "unitprice", ")", "from", "genre", "as", "t1", "join", "track", "as", "t2", "on", "t1", ".", "genreid", "=", "t2", ".", "genreid", "where", "t1", ".", "name", "=", "value"], "question": "Encuentre el precio unitario promedio de las pistas del género Rock.\n", "question_toks": ["Find", "the", "average", "unit", "price", "of", "tracks", "from", "the", "Rock", "genre", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 60, false], null]]}, "select": [false, [[5, [0, [0, 64, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Rock\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"", "query_toks": ["SELECT", "BirthDate", "FROM", "EMPLOYEE", "WHERE", "City", "=", "``", "Edmonton", "''"], "query_toks_no_value": ["select", "birthdate", "from", "employee", "where", "city", "=", "value"], "question": "¿Cuáles son las fechas de nacimiento de los empleados que viven en Edmonton?\n", "question_toks": ["What", "are", "the", "birth", "dates", "of", "employees", "living", "in", "Edmonton", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Edmonton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"", "query_toks": ["SELECT", "BirthDate", "FROM", "EMPLOYEE", "WHERE", "City", "=", "``", "Edmonton", "''"], "query_toks_no_value": ["select", "birthdate", "from", "employee", "where", "city", "=", "value"], "question": "Encuentre las fechas de nacimiento correspondientes a los empleados que viven en la ciudad de Edmonton.\n", "question_toks": ["Find", "the", "birth", "dates", "corresponding", "to", "employees", "who", "live", "in", "the", "city", "of", "Edmonton", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Edmonton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT distinct(UnitPrice) FROM TRACK", "query_toks": ["SELECT", "distinct", "(", "UnitPrice", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "distinct", "(", "unitprice", ")", "from", "track"], "question": "¿Cuáles son los distintos precios unitarios de todas las pistas?\n", "question_toks": ["What", "are", "the", "distinct", "unit", "prices", "of", "all", "tracks", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [true, [[0, [0, [0, 64, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "chinook_1", "query": "SELECT distinct(UnitPrice) FROM TRACK", "query_toks": ["SELECT", "distinct", "(", "UnitPrice", ")", "FROM", "TRACK"], "query_toks_no_value": ["select", "distinct", "(", "unitprice", ")", "from", "track"], "question": "Encuentre los distintos precios unitarios para las pistas.\n", "question_toks": ["Find", "the", "distinct", "unit", "prices", "for", "tracks", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [true, [[0, [0, [0, 64, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies"], "question": "Encuentra todos los números de teléfono.\n", "question_toks": ["Find", "all", "the", "phone", "numbers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies"], "question": "¿Cuáles son todos los números de teléfono?\n", "question_toks": ["What", "are", "all", "the", "phone", "numbers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies", "WHERE", "policy_type_code", "=", "``", "Life", "Insurance", "''"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies", "where", "policy_type_code", "=", "value"], "question": "¿Cuáles son los números de teléfono de los clientes bajo la póliza \"Seguro de Vida\"?\n", "question_toks": ["What", "are", "the", "customer", "phone", "numbers", "under", "the", "policy", "``", "Life", "Insurance", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Life Insurance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies", "WHERE", "policy_type_code", "=", "``", "Life", "Insurance", "''"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies", "where", "policy_type_code", "=", "value"], "question": "¿Cuáles son los números de teléfono de los clientes que utilizan la póliza con el código \"Seguro de Vida\"?\n", "question_toks": ["What", "are", "the", "phone", "numbers", "of", "customers", "using", "the", "policy", "with", "the", "code", "``", "Life", "Insurance", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Life Insurance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies", "WHERE", "policy_type_code", "=", "(", "SELECT", "policy_type_code", "FROM", "available_policies", "GROUP", "BY", "policy_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies", "where", "policy_type_code", "=", "(", "select", "policy_type_code", "from", "available_policies", "group", "by", "policy_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son todos los números de teléfono de los clientes bajo el tipo de póliza más popular?\n", "question_toks": ["What", "are", "all", "the", "customer", "phone", "numbers", "under", "the", "most", "popular", "policy", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "customer_phone", "FROM", "available_policies", "WHERE", "policy_type_code", "=", "(", "SELECT", "policy_type_code", "FROM", "available_policies", "GROUP", "BY", "policy_type_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "customer_phone", "from", "available_policies", "where", "policy_type_code", "=", "(", "select", "policy_type_code", "from", "available_policies", "group", "by", "policy_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Encuentre los números de teléfono de los clientes que utilizan el tipo de póliza más común entre las pólizas disponibles.\n", "question_toks": ["Find", "the", "phone", "numbers", "of", "customers", "using", "the", "most", "common", "policy", "type", "among", "the", "available", "policies", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"", "query_toks": ["SELECT", "DISTINCT", "t3.policy_type_code", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "available_policies", "AS", "t3", "ON", "t2.policy_id", "=", "t3.policy_id", "WHERE", "t1.customer_name", "=", "``", "Dayana", "Robel", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "policy_type_code", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "available_policies", "as", "t3", "on", "t2", ".", "policy_id", "=", "t3", ".", "policy_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "¿Cuáles son todos los tipos de póliza del cliente llamado \"Dayana Robel\"?\n", "question_toks": ["What", "are", "all", "the", "policy", "types", "of", "the", "customer", "named", "``", "Dayana", "Robel", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Dayana Robel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"", "query_toks": ["SELECT", "DISTINCT", "t3.policy_type_code", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "available_policies", "AS", "t3", "ON", "t2.policy_id", "=", "t3.policy_id", "WHERE", "t1.customer_name", "=", "``", "Dayana", "Robel", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "policy_type_code", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "available_policies", "as", "t3", "on", "t2", ".", "policy_id", "=", "t3", ".", "policy_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Dígame los tipos de póliza que utiliza la cliente llamada \"Dayana Robel\".\n", "question_toks": ["Tell", "me", "the", "types", "of", "the", "policy", "used", "by", "the", "customer", "named", "``", "Dayana", "Robel", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Dayana Robel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "DISTINCT", "t3.policy_type_code", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "available_policies", "AS", "t3", "ON", "t2.policy_id", "=", "t3.policy_id", "WHERE", "t1.customer_name", "=", "(", "SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "GROUP", "BY", "t1.customer_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "distinct", "t3", ".", "policy_type_code", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "available_policies", "as", "t3", "on", "t2", ".", "policy_id", "=", "t3", ".", "policy_id", "where", "t1", ".", "customer_name", "=", "(", "select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son todos los tipos de pólizas del cliente que tiene más pólizas enumeradas?\n", "question_toks": ["What", "are", "all", "the", "policy", "types", "of", "the", "customer", "that", "has", "the", "most", "policies", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "DISTINCT", "t3.policy_type_code", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "available_policies", "AS", "t3", "ON", "t2.policy_id", "=", "t3.policy_id", "WHERE", "t1.customer_name", "=", "(", "SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "GROUP", "BY", "t1.customer_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "distinct", "t3", ".", "policy_type_code", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "available_policies", "as", "t3", "on", "t2", ".", "policy_id", "=", "t3", ".", "policy_id", "where", "t1", ".", "customer_name", "=", "(", "select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "group", "by", "t1", ".", "customer_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Enumere todos los tipos de póliza utilizados por el cliente inscrito en la mayoría de las pólizas.\n", "question_toks": ["List", "all", "the", "policy", "types", "used", "by", "the", "customer", "enrolled", "in", "the", "most", "policies", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"", "query_toks": ["SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "first_notification_of_loss", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "WHERE", "t3.service_name", "=", "``", "Close", "a", "policy", "''", "OR", "t3.service_name", "=", "``", "Upgrade", "a", "policy", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "first_notification_of_loss", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "where", "t3", ".", "service_name", "=", "value", "or", "t3", ".", "service_name", "=", "value"], "question": "Encuentre los nombres de los clientes que han utilizado el servicio \"Cerrar una póliza\" o el servicio \"Actualizar una póliza\".\n", "question_toks": ["Find", "the", "names", "of", "customers", "who", "have", "used", "either", "the", "service", "``", "Close", "a", "policy", "''", "or", "the", "service", "``", "Upgrade", "a", "policy", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Close a policy\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Upgrade a policy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"", "query_toks": ["SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "first_notification_of_loss", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "services", "AS", "t3", "ON", "t2.service_id", "=", "t3.service_id", "WHERE", "t3.service_name", "=", "``", "Close", "a", "policy", "''", "OR", "t3.service_name", "=", "``", "Upgrade", "a", "policy", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "first_notification_of_loss", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "services", "as", "t3", "on", "t2", ".", "service_id", "=", "t3", ".", "service_id", "where", "t3", ".", "service_name", "=", "value", "or", "t3", ".", "service_name", "=", "value"], "question": "¿Qué clientes han utilizado el servicio denominado \"Cerrar una póliza\" o \"Actualizar una póliza\"? Dame los nombres de los clientes.\n", "question_toks": ["Which", "customers", "have", "used", "the", "service", "named", "``", "Close", "a", "policy", "''", "or", "``", "Upgrade", "a", "policy", "''", "?", "Give", "me", "the", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Close a policy\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Upgrade a policy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"", "query_toks": ["SELECT", "customer_id", "FROM", "customers", "WHERE", "customer_name", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "customer_id", "from", "customers", "where", "customer_name", "like", "value"], "question": "Encuentre las identificaciones de los clientes cuyo nombre contenga \"Diana\".\n", "question_toks": ["Find", "the", "IDs", "of", "customers", "whose", "name", "contains", "``", "Diana", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"", "query_toks": ["SELECT", "customer_id", "FROM", "customers", "WHERE", "customer_name", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "customer_id", "from", "customers", "where", "customer_name", "like", "value"], "question": "¿Cuáles son las identificaciones de los clientes que tienen \"Diana\" en parte de sus nombres?\n", "question_toks": ["What", "are", "the", "IDs", "of", "customers", "who", "have", "``", "Diana", "''", "in", "part", "of", "their", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "query_toks": ["SELECT", "t2.date_opened", ",", "t2.date_closed", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.customer_name", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "t2", ".", "date_opened", ",", "t2", ".", "date_closed", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "like", "value"], "question": "Recuperar las fechas de apertura y cierre de todas las pólizas asociadas al cliente cuyo nombre contiene \"Diana\"\n", "question_toks": ["Retrieve", "the", "open", "and", "close", "dates", "of", "all", "the", "policies", "associated", "with", "the", "customer", "whose", "name", "contains", "``", "Diana", "''"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_fnol", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"", "query_toks": ["SELECT", "t2.date_opened", ",", "t2.date_closed", "FROM", "customers", "AS", "t1", "JOIN", "customers_policies", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.customer_name", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "t2", ".", "date_opened", ",", "t2", ".", "date_closed", "from", "customers", "as", "t1", "join", "customers_policies", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "like", "value"], "question": "¿Cuáles son las fechas de apertura y cierre de todas las pólizas utilizadas por el cliente que tiene \"Diana\" en parte de su nombre?\n", "question_toks": ["What", "are", "the", "open", "and", "close", "dates", "of", "all", "the", "policies", "used", "by", "the", "customer", "who", "have", "``", "Diana", "''", "in", "part", "of", "their", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  LOCATION FROM enzyme", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "enzyme"], "query_toks_no_value": ["select", "name", ",", "location", "from", "enzyme"], "question": "Enumere los nombres y los lugares donde las enzimas pueden producir un efecto.\n", "question_toks": ["List", "the", "names", "and", "the", "locations", "that", "the", "enzymes", "can", "make", "an", "effect", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  LOCATION FROM enzyme", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "enzyme"], "query_toks_no_value": ["select", "name", ",", "location", "from", "enzyme"], "question": "¿Cuáles son los nombres y ubicaciones de todas las enzimas enumeradas?\n", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "all", "enzymes", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "query_toks": ["SELECT", "product", ",", "chromosome", ",", "porphyria", "FROM", "enzyme", "WHERE", "LOCATION", "=", "'Cytosol", "'"], "query_toks_no_value": ["select", "product", ",", "chromosome", ",", "porphyria", "from", "enzyme", "where", "location", "=", "value"], "question": "¿Cuál es el producto, cromosoma y porfiria relacionados con las enzimas que actúan en el lugar 'Citosol'?\n", "question_toks": ["What", "is", "the", "product", ",", "chromosome", "and", "porphyria", "related", "to", "the", "enzymes", "which", "take", "effect", "at", "the", "location", "'Cytosol", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Cytosol\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'", "query_toks": ["SELECT", "product", ",", "chromosome", ",", "porphyria", "FROM", "enzyme", "WHERE", "LOCATION", "=", "'Cytosol", "'"], "query_toks_no_value": ["select", "product", ",", "chromosome", ",", "porphyria", "from", "enzyme", "where", "location", "=", "value"], "question": "¿Cuál es el producto, cromosoma y porfiria de las enzimas ubicadas en el 'citosol'?\n", "question_toks": ["What", "is", "the", "product", ",", "chromosome", ",", "and", "porphyria", "of", "the", "enzymes", "located", "at", "'Cytosol", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Cytosol\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name FROM enzyme WHERE product != 'Heme'", "query_toks": ["SELECT", "name", "FROM", "enzyme", "WHERE", "product", "!", "=", "'Heme", "'"], "query_toks_no_value": ["select", "name", "from", "enzyme", "where", "product", "!", "=", "value"], "question": "¿Cuáles son los nombres de las enzimas que no producen 'hemo'?\n", "question_toks": ["What", "are", "the", "names", "of", "enzymes", "who", "does", "not", "produce", "'Heme", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Heme\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name FROM enzyme WHERE product != 'Heme'", "query_toks": ["SELECT", "name", "FROM", "enzyme", "WHERE", "product", "!", "=", "'Heme", "'"], "query_toks_no_value": ["select", "name", "from", "enzyme", "where", "product", "!", "=", "value"], "question": "¿Cuáles son los nombres de las enzimas cuyo producto no es 'hemo'?\n", "question_toks": ["What", "are", "the", "names", "of", "enzymes", "whose", "product", "is", "not", "'Heme", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Heme\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'", "query_toks": ["SELECT", "name", ",", "trade_name", "FROM", "medicine", "WHERE", "FDA_approved", "=", "'Yes", "'"], "query_toks_no_value": ["select", "name", ",", "trade_name", "from", "medicine", "where", "fda_approved", "=", "value"], "question": "¿Cuáles son los nombres y nombres comerciales de los medicamentos que tienen el valor \"Sí\" en el registro de la FDA?\n", "question_toks": ["What", "are", "the", "names", "and", "trade", "names", "of", "the", "medicines", "which", "has", "'Yes", "'", "value", "in", "the", "FDA", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'", "query_toks": ["SELECT", "name", ",", "trade_name", "FROM", "medicine", "WHERE", "FDA_approved", "=", "'Yes", "'"], "query_toks_no_value": ["select", "name", ",", "trade_name", "from", "medicine", "where", "fda_approved", "=", "value"], "question": "¿Cuáles son los nombres y nombres comerciales de los medicamentos aprobados por la FDA?\n", "question_toks": ["What", "are", "the", "names", "and", "trade", "names", "of", "the", "medcines", "that", "are", "FDA", "approved", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'", "query_toks": ["SELECT", "T1.name", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T1.id", "=", "T2.enzyme_id", "JOIN", "medicine", "AS", "T3", "ON", "T2.medicine_id", "=", "T3.id", "WHERE", "T3.name", "=", "'Amisulpride", "'", "AND", "T2.interaction_type", "=", "'inhibitor", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "enzyme_id", "join", "medicine", "as", "t3", "on", "t2", ".", "medicine_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value", "and", "t2", ".", "interaction_type", "=", "value"], "question": "¿Cuáles son los nombres de las enzimas del medicamento llamado 'amisulprida' que pueden servir como 'inhibidores'?\n", "question_toks": ["What", "are", "the", "names", "of", "enzymes", "in", "the", "medicine", "named", "'Amisulpride", "'", "that", "can", "serve", "as", "an", "'inhibitor", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Amisulpride\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'", "query_toks": ["SELECT", "T1.name", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T1.id", "=", "T2.enzyme_id", "JOIN", "medicine", "AS", "T3", "ON", "T2.medicine_id", "=", "T3.id", "WHERE", "T3.name", "=", "'Amisulpride", "'", "AND", "T2.interaction_type", "=", "'inhibitor", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "enzyme_id", "join", "medicine", "as", "t3", "on", "t2", ".", "medicine_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value", "and", "t2", ".", "interaction_type", "=", "value"], "question": "¿Cuáles son los nombres de las enzimas utilizadas en el medicamento Amisulprida que actúa como inhibidores?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "enzymes", "used", "in", "the", "medicine", "Amisulpride", "that", "acts", "as", "inhibitors", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Amisulpride\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'", "query_toks": ["SELECT", "T1.interaction_type", "FROM", "medicine_enzyme_interaction", "AS", "T1", "JOIN", "medicine", "AS", "T2", "ON", "T1.medicine_id", "=", "T2.id", "JOIN", "enzyme", "AS", "T3", "ON", "T1.enzyme_id", "=", "T3.id", "WHERE", "T3.name", "=", "'ALA", "synthase", "'", "AND", "T2.name", "=", "'Aripiprazole", "'"], "query_toks_no_value": ["select", "t1", ".", "interaction_type", "from", "medicine_enzyme_interaction", "as", "t1", "join", "medicine", "as", "t2", "on", "t1", ".", "medicine_id", "=", "t2", ".", "id", "join", "enzyme", "as", "t3", "on", "t1", ".", "enzyme_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "¿Cuál es el tipo de interacción de la enzima llamada 'ALA sintasa' y el medicamento llamado 'Aripiprazol'?\n", "question_toks": ["What", "is", "the", "interaction", "type", "of", "the", "enzyme", "named", "'ALA", "synthase", "'", "and", "the", "medicine", "named", "'Aripiprazole", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"ALA synthase\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Aripiprazole\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'", "query_toks": ["SELECT", "T1.interaction_type", "FROM", "medicine_enzyme_interaction", "AS", "T1", "JOIN", "medicine", "AS", "T2", "ON", "T1.medicine_id", "=", "T2.id", "JOIN", "enzyme", "AS", "T3", "ON", "T1.enzyme_id", "=", "T3.id", "WHERE", "T3.name", "=", "'ALA", "synthase", "'", "AND", "T2.name", "=", "'Aripiprazole", "'"], "query_toks_no_value": ["select", "t1", ".", "interaction_type", "from", "medicine_enzyme_interaction", "as", "t1", "join", "medicine", "as", "t2", "on", "t1", ".", "medicine_id", "=", "t2", ".", "id", "join", "enzyme", "as", "t3", "on", "t1", ".", "enzyme_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "¿Cuál es el tipo de interacción entre la enzima denominada 'ALA sintasa' y el medicamento denominado 'Aripiprazol'?\n", "question_toks": ["What", "is", "the", "type", "of", "interaction", "for", "the", "enzyme", "named", "'ALA", "synthase", "'", "and", "the", "medicine", "named", "'Aripiprazole", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"ALA synthase\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Aripiprazole\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.location", ",", "T1.product", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.enzyme_id", "=", "T1.id", "WHERE", "T2.interaction_type", "=", "'inhibitor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "location", ",", "t1", ".", "product", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "enzyme_id", "=", "t1", ".", "id", "where", "t2", ".", "interaction_type", "=", "value"], "question": "¿Cuáles son los distintos nombres, ubicaciones y productos de las enzimas que tienen alguna interacción \"inhibidora\"?\n", "question_toks": ["What", "are", "the", "distinct", "name", ",", "location", "and", "products", "of", "the", "enzymes", "which", "has", "any", "'inhibitor", "'", "interaction", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.location", ",", "T1.product", "FROM", "enzyme", "AS", "T1", "JOIN", "medicine_enzyme_interaction", "AS", "T2", "ON", "T2.enzyme_id", "=", "T1.id", "WHERE", "T2.interaction_type", "=", "'inhibitor", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "location", ",", "t1", ".", "product", "from", "enzyme", "as", "t1", "join", "medicine_enzyme_interaction", "as", "t2", "on", "t2", ".", "enzyme_id", "=", "t1", ".", "id", "where", "t2", ".", "interaction_type", "=", "value"], "question": "¿Cuáles son los diferentes nombres, ubicaciones y productos de las enzimas que son capaces de interactuar con inhibidores?\n", "question_toks": ["What", "are", "the", "different", "names", ",", "locations", ",", "and", "products", "of", "the", "enzymes", "that", "are", "capable", "inhibitor", "interactions", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"inhibitor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"", "query_toks": ["SELECT", "name", "FROM", "enzyme", "WHERE", "name", "LIKE", "``", "%", "ALA", "%", "''"], "query_toks_no_value": ["select", "name", "from", "enzyme", "where", "name", "like", "value"], "question": "¿Qué nombres de enzimas tienen la subcadena \"ALA\"?\n", "question_toks": ["Which", "enzyme", "names", "have", "the", "substring", "``", "ALA", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%ALA%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "medicine_enzyme_interaction", "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"", "query_toks": ["SELECT", "name", "FROM", "enzyme", "WHERE", "name", "LIKE", "``", "%", "ALA", "%", "''"], "query_toks_no_value": ["select", "name", "from", "enzyme", "where", "name", "like", "value"], "question": "¿Cuáles son los nombres de las enzimas que incluyen la cadena 'ALA'?\n", "question_toks": ["What", "are", "the", "names", "of", "enzymes", "that", "include", "the", "string", "'ALA", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%ALA%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "query_toks": ["SELECT", "school", ",", "LOCATION", "FROM", "university", "WHERE", "affiliation", "=", "'Public", "'"], "query_toks_no_value": ["select", "school", ",", "location", "from", "university", "where", "affiliation", "=", "value"], "question": "Enumere todas las escuelas públicas y sus ubicaciones.\n", "question_toks": ["List", "all", "public", "schools", "and", "their", "locations", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Public\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'", "query_toks": ["SELECT", "school", ",", "LOCATION", "FROM", "university", "WHERE", "affiliation", "=", "'Public", "'"], "query_toks_no_value": ["select", "school", ",", "location", "from", "university", "where", "affiliation", "=", "value"], "question": "¿Cuáles son las escuelas públicas y cuáles son sus ubicaciones?\n", "question_toks": ["What", "are", "the", "public", "schools", "and", "what", "are", "their", "locations", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Public\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'", "query_toks": ["SELECT", "t2.All_Games", ",", "t1.location", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "WHERE", "team_name", "=", "'Clemson", "'"], "query_toks_no_value": ["select", "t2", ".", "all_games", ",", "t1", ".", "location", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "team_name", "=", "value"], "question": "Encuentre la ubicación y la puntuación de todos los juegos de la escuela que tiene Clemson como nombre de equipo.\n", "question_toks": ["Find", "the", "location", "and", "all", "games", "score", "of", "the", "school", "that", "has", "Clemson", "as", "its", "team", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Clemson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'", "query_toks": ["SELECT", "t2.All_Games", ",", "t1.location", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "WHERE", "team_name", "=", "'Clemson", "'"], "query_toks_no_value": ["select", "t2", ".", "all_games", ",", "t1", ".", "location", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "team_name", "=", "value"], "question": "¿Cuáles son los puntajes de todos los juegos y la ubicación de la escuela llamada Clemson?\n", "question_toks": ["What", "are", "the", "all", "games", "score", "and", "location", "of", "the", "school", "called", "Clemson", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Clemson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'", "query_toks": ["SELECT", "school", "FROM", "university", "WHERE", "founded", ">", "1850", "OR", "affiliation", "=", "'Public", "'"], "query_toks_no_value": ["select", "school", "from", "university", "where", "founded", ">", "value", "or", "affiliation", "=", "value"], "question": "Encuentre las escuelas que fueron fundadas después de 1850 o públicas.\n", "question_toks": ["Find", "the", "schools", "that", "were", "either", "founded", "after", "1850", "or", "public", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], 1850.0, null], "or", [false, 2, [0, [0, 17, false], null], "\"Public\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'", "query_toks": ["SELECT", "school", "FROM", "university", "WHERE", "founded", ">", "1850", "OR", "affiliation", "=", "'Public", "'"], "query_toks_no_value": ["select", "school", "from", "university", "where", "founded", ">", "value", "or", "affiliation", "=", "value"], "question": "¿Cuáles son las escuelas que se fundaron antes de 1850 o son públicas?\n", "question_toks": ["What", "are", "the", "schools", "that", "were", "either", "founded", "before", "1850", "or", "are", "public", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], 1850.0, null], "or", [false, 2, [0, [0, 17, false], null], "\"Public\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)", "query_toks": ["SELECT", "t2.team_name", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "WHERE", "enrollment", "<", "(", "SELECT", "avg", "(", "enrollment", ")", "FROM", "university", ")"], "query_toks_no_value": ["select", "t2", ".", "team_name", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "enrollment", "<", "(", "select", "avg", "(", "enrollment", ")", "from", "university", ")"], "question": "Encuentre los nombres de los equipos de las universidades cuyas inscripciones son menores que el tamaño promedio de inscripción.\n", "question_toks": ["Find", "the", "team", "names", "of", "the", "universities", "whose", "enrollments", "are", "smaller", "than", "the", "average", "enrollment", "size", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)", "query_toks": ["SELECT", "t2.team_name", "FROM", "university", "AS", "t1", "JOIN", "basketball_match", "AS", "t2", "ON", "t1.school_id", "=", "t2.school_id", "WHERE", "enrollment", "<", "(", "SELECT", "avg", "(", "enrollment", ")", "FROM", "university", ")"], "query_toks_no_value": ["select", "t2", ".", "team_name", "from", "university", "as", "t1", "join", "basketball_match", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "enrollment", "<", "(", "select", "avg", "(", "enrollment", ")", "from", "university", ")"], "question": "¿Cómo se llaman los equipos de universidades que tienen una matrícula inferior al promedio?\n", "question_toks": ["What", "are", "the", "names", "of", "teams", "from", "universities", "that", "have", "a", "below", "average", "enrollment", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT * FROM basketball_match", "query_toks": ["SELECT", "*", "FROM", "basketball_match"], "query_toks_no_value": ["select", "*", "from", "basketball_match"], "question": "Enumera toda la información relativa al partido de baloncesto.\n", "question_toks": ["List", "all", "information", "regarding", "the", "basketball", "match", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "university_basketball", "query": "SELECT * FROM basketball_match", "query_toks": ["SELECT", "*", "FROM", "basketball_match"], "query_toks_no_value": ["select", "*", "from", "basketball_match"], "question": "¿Cuál es toda la información sobre el partido de baloncesto?\n", "question_toks": ["What", "is", "all", "the", "information", "about", "the", "basketball", "match", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;", "query_toks": ["SELECT", "Model_name", "FROM", "chip_model", "WHERE", "Launch_year", "BETWEEN", "2002", "AND", "2004", ";"], "query_toks_no_value": ["select", "model_name", "from", "chip_model", "where", "launch_year", "between", "value", "and", "value"], "question": "los nombres de los modelos que se lanzaron entre 2002 y 2004.\n", "question_toks": ["the", "names", "of", "models", "that", "launched", "between", "2002", "and", "2004", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 1, [0, [0, 2, false], null], 2002.0, 2004.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";", "query_toks": ["SELECT", "chip_model", ",", "screen_mode", "FROM", "phone", "WHERE", "Hardware_Model_name", "=", "``", "LG-P760", "''", ";"], "query_toks_no_value": ["select", "chip_model", ",", "screen_mode", "from", "phone", "where", "hardware_model_name", "=", "value"], "question": "¿Cuáles son el modelo de chip y el modo de pantalla del teléfono con el nombre de modelo de hardware \"LG-P760\"?\n", "question_toks": ["What", "are", "the", "chip", "model", "and", "screen", "mode", "of", "the", "phone", "with", "hardware", "model", "name", "``", "LG-P760", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"LG-P760\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;", "query_toks": ["SELECT", "T2.Hardware_Model_name", ",", "T2.Company_name", "FROM", "chip_model", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Model_name", "=", "T2.chip_model", "WHERE", "T1.Launch_year", "=", "2002", "OR", "T1.RAM_MiB", ">", "32", ";"], "query_toks_no_value": ["select", "t2", ".", "hardware_model_name", ",", "t2", ".", "company_name", "from", "chip_model", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "model_name", "=", "t2", ".", "chip_model", "where", "t1", ".", "launch_year", "=", "value", "or", "t1", ".", "ram_mib", ">", "value"], "question": "Indique el nombre del modelo de hardware y el nombre de la empresa de todos los teléfonos que se lanzaron en el año 2002 o que tengan un tamaño de RAM superior a 32.\n", "question_toks": ["List", "the", "hardware", "model", "name", "and", "company", "name", "for", "all", "the", "phones", "that", "were", "launched", "in", "year", "2002", "or", "have", "RAM", "size", "greater", "than", "32", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], 2002.0, null], "or", [false, 3, [0, [0, 3, false], null], 32.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';", "query_toks": ["SELECT", "Hardware_Model_name", ",", "Company_name", "FROM", "phone", "WHERE", "Accreditation_type", "LIKE", "'Full", "'", ";"], "query_toks_no_value": ["select", "hardware_model_name", ",", "company_name", "from", "phone", "where", "accreditation_type", "like", "value"], "question": "Encuentre todos los teléfonos que tengan la palabra \"Completo\" en sus tipos de acreditación. Indique el nombre del modelo de hardware y el nombre de la empresa.\n", "question_toks": ["Find", "all", "phones", "that", "have", "word", "'Full", "'", "in", "their", "accreditation", "types", ".", "List", "the", "Hardware", "Model", "name", "and", "Company", "name", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 9, [0, [0, 17, false], null], "\"Full\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "query_toks": ["SELECT", "T1.Char_cells", ",", "T1.Pixels", ",", "T1.Hardware_colours", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T2.Hardware_Model_name", "=", "``", "LG-P760", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "char_cells", ",", "t1", ".", "pixels", ",", "t1", ".", "hardware_colours", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t2", ".", "hardware_model_name", "=", "value"], "question": "Busque las celdas Char, los píxeles y los colores del hardware para la pantalla del teléfono cuyo nombre de modelo de hardware es \"LG-P760\".\n", "question_toks": ["Find", "the", "Char", "cells", ",", "Pixels", "and", "Hardware", "colours", "for", "the", "screen", "of", "the", "phone", "whose", "hardware", "model", "name", "is", "``", "LG-P760", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"LG-P760\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\";", "query_toks": ["SELECT", "T2.Hardware_Model_name", ",", "T2.Company_name", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T1.Type", "=", "``", "Graphics", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "hardware_model_name", ",", "t2", ".", "company_name", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t1", ".", "type", "=", "value"], "question": "Indique el nombre del modelo de hardware y el nombre de la empresa del teléfono cuyo tipo de modo de pantalla es \"Gráficos\".\n", "question_toks": ["List", "the", "hardware", "model", "name", "and", "company", "name", "for", "the", "phone", "whose", "screen", "mode", "type", "is", "``", "Graphics", ".", "''"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Graphics\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\";", "query_toks": ["SELECT", "T1.WiFi", ",", "T3.Type", "FROM", "chip_model", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Model_name", "=", "T2.chip_model", "JOIN", "screen_mode", "AS", "T3", "ON", "T2.screen_mode", "=", "T3.Graphics_mode", "WHERE", "T2.Hardware_Model_name", "=", "``", "LG-P760", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "wifi", ",", "t3", ".", "type", "from", "chip_model", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "model_name", "=", "t2", ".", "chip_model", "join", "screen_mode", "as", "t3", "on", "t2", ".", "screen_mode", "=", "t3", ".", "graphics_mode", "where", "t2", ".", "hardware_model_name", "=", "value"], "question": "¿Cuáles son el tipo de modo de pantalla y wifi del modelo de hardware llamado \"LG-P760\"?\n", "question_toks": ["What", "are", "the", "wifi", "and", "screen", "mode", "type", "of", "the", "hardware", "model", "named", "``", "LG-P760", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"LG-P760\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Text\" OR T1.RAM_MiB  >  32;", "query_toks": ["SELECT", "T2.Hardware_Model_name", "FROM", "chip_model", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Model_name", "=", "T2.chip_model", "JOIN", "screen_mode", "AS", "T3", "ON", "T2.screen_mode", "=", "T3.Graphics_mode", "WHERE", "T3.Type", "=", "``", "Text", "''", "OR", "T1.RAM_MiB", ">", "32", ";"], "query_toks_no_value": ["select", "t2", ".", "hardware_model_name", "from", "chip_model", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "model_name", "=", "t2", ".", "chip_model", "join", "screen_mode", "as", "t3", "on", "t2", ".", "screen_mode", "=", "t3", ".", "graphics_mode", "where", "t3", ".", "type", "=", "value", "or", "t1", ".", "ram_mib", ">", "value"], "question": "Indique el nombre del modelo de hardware para los teléfonos que tienen un modo de pantalla tipo \"Texto\" o un tamaño de RAM superior a 32.\n", "question_toks": ["List", "the", "hardware", "model", "name", "for", "the", "phones", "that", "have", "screen", "mode", "type", "``", "Text", "''", "or", "RAM", "size", "greater", "than", "32", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Text\"", null], "or", [false, 3, [0, [0, 3, false], null], 32.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\" OR t2.Company_name  =  \"Nokia Corporation\"", "query_toks": ["SELECT", "DISTINCT", "T2.Hardware_Model_name", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T1.Type", "=", "``", "Graphics", "''", "OR", "t2.Company_name", "=", "``", "Nokia", "Corporation", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "hardware_model_name", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t1", ".", "type", "=", "value", "or", "t2", ".", "company_name", "=", "value"], "question": "Indique el nombre del modelo de hardware de los teléfonos fabricados por \"Nokia Corporation\" o cuyo tipo de modo de pantalla sea \"Gráficos\".\n", "question_toks": ["List", "the", "hardware", "model", "name", "for", "the", "phones", "that", "were", "produced", "by", "``", "Nokia", "Corporation", "''", "or", "whose", "screen", "mode", "type", "is", "``", "Graphics", ".", "''"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Graphics\"", null], "or", [false, 2, [0, [0, 15, false], null], "\"Nokia Corporation\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";", "query_toks": ["SELECT", "DISTINCT", "T2.Hardware_Model_name", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "t2.Company_name", "=", "``", "Nokia", "Corporation", "''", "AND", "T1.Type", "!", "=", "``", "Text", "''", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "hardware_model_name", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t2", ".", "company_name", "=", "value", "and", "t1", ".", "type", "!", "=", "value"], "question": "Indique el nombre del modelo de hardware de los teléfonos fabricados por \"Nokia Corporation\" pero cuyo tipo de modo de pantalla no es Texto.\n", "question_toks": ["List", "the", "hardware", "model", "name", "for", "the", "phons", "that", "were", "produced", "by", "``", "Nokia", "Corporation", "''", "but", "whose", "screen", "mode", "type", "is", "not", "Text", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Nokia Corporation\"", null], "and", [false, 7, [0, [0, 14, false], null], "\"Text\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;", "query_toks": ["SELECT", "DISTINCT", "T2.Hardware_Model_name", ",", "T2.Company_name", "FROM", "screen_mode", "AS", "T1", "JOIN", "phone", "AS", "T2", "ON", "T1.Graphics_mode", "=", "T2.screen_mode", "WHERE", "T1.used_kb", "BETWEEN", "10", "AND", "15", ";"], "query_toks_no_value": ["select", "distinct", "t2", ".", "hardware_model_name", ",", "t2", ".", "company_name", "from", "screen_mode", "as", "t1", "join", "phone", "as", "t2", "on", "t1", ".", "graphics_mode", "=", "t2", ".", "screen_mode", "where", "t1", ".", "used_kb", "between", "value", "and", "value"], "question": "Indique el modelo de hardware del teléfono y el nombre de la empresa para los teléfonos cuyo uso de pantalla en kb esté entre 10 y 15.\n", "question_toks": ["List", "the", "phone", "hardware", "model", "and", "company", "name", "for", "the", "phones", "whose", "screen", "usage", "in", "kb", "is", "between", "10", "and", "15", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 1, [0, [0, 12, false], null], 10.0, 15.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_1", "query": "SELECT * FROM chip_model", "query_toks": ["SELECT", "*", "FROM", "chip_model"], "query_toks_no_value": ["select", "*", "from", "chip_model"], "question": "Encuentre los detalles de todos los modelos de chips.\n", "question_toks": ["Find", "the", "details", "for", "all", "chip", "models", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Country_name ,  Capital FROM country", "query_toks": ["SELECT", "Country_name", ",", "Capital", "FROM", "country"], "query_toks_no_value": ["select", "country_name", ",", "capital", "from", "country"], "question": "Muestra el nombre del país y la capital de todos los países.\n", "question_toks": ["Show", "the", "country", "name", "and", "capital", "of", "all", "countries", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Country_name ,  Capital FROM country", "query_toks": ["SELECT", "Country_name", ",", "Capital", "FROM", "country"], "query_toks_no_value": ["select", "country_name", ",", "capital", "from", "country"], "question": "¿Cuáles son los nombres y capitales de cada país?\n", "question_toks": ["What", "are", "the", "names", "and", "capitals", "of", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"", "query_toks": ["SELECT", "Official_native_language", "FROM", "country", "WHERE", "Official_native_language", "LIKE", "``", "%", "English", "%", "''"], "query_toks_no_value": ["select", "official_native_language", "from", "country", "where", "official_native_language", "like", "value"], "question": "Mostrar todos los idiomas nativos oficiales que contienen la palabra \"inglés\".\n", "question_toks": ["Show", "all", "official", "native", "languages", "that", "contain", "the", "word", "``", "English", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%English%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"", "query_toks": ["SELECT", "Official_native_language", "FROM", "country", "WHERE", "Official_native_language", "LIKE", "``", "%", "English", "%", "''"], "query_toks_no_value": ["select", "official_native_language", "from", "country", "where", "official_native_language", "like", "value"], "question": "¿Cuáles son los idiomas nativos oficiales que contienen la cadena \"inglés\"?\n", "question_toks": ["What", "are", "the", "official", "native", "languages", "that", "contain", "the", "string", "``", "English", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%English%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT DISTINCT POSITION FROM match_season", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "match_season"], "query_toks_no_value": ["select", "distinct", "position", "from", "match_season"], "question": "Mostrar todas las distintas posiciones de los partidos.\n", "question_toks": ["Show", "all", "distinct", "positions", "of", "matches", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT DISTINCT POSITION FROM match_season", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "match_season"], "query_toks_no_value": ["select", "distinct", "position", "from", "match_season"], "question": "¿Cuáles son las diferentes posiciones para la temporada de partidos?\n", "question_toks": ["What", "are", "the", "different", "positions", "for", "match", "season", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"", "query_toks": ["SELECT", "Player", "FROM", "match_season", "WHERE", "College", "=", "``", "UCLA", "''"], "query_toks_no_value": ["select", "player", "from", "match_season", "where", "college", "=", "value"], "question": "Muestre a los jugadores de la universidad UCLA.\n", "question_toks": ["Show", "the", "players", "from", "college", "UCLA", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"UCLA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"", "query_toks": ["SELECT", "Player", "FROM", "match_season", "WHERE", "College", "=", "``", "UCLA", "''"], "query_toks_no_value": ["select", "player", "from", "match_season", "where", "college", "=", "value"], "question": "¿Quiénes son los jugadores de UCLA?\n", "question_toks": ["Who", "are", "the", "players", "from", "UCLA", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"UCLA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "match_season", "WHERE", "College", "=", "``", "UCLA", "''", "OR", "College", "=", "``", "Duke", "''"], "query_toks_no_value": ["select", "distinct", "position", "from", "match_season", "where", "college", "=", "value", "or", "college", "=", "value"], "question": "Muestre la posición distintiva de los jugadores de la universidad UCLA o Duke.\n", "question_toks": ["Show", "the", "distinct", "position", "of", "players", "from", "college", "UCLA", "or", "Duke", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"UCLA\"", null], "or", [false, 2, [0, [0, 14, false], null], "\"Duke\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "match_season", "WHERE", "College", "=", "``", "UCLA", "''", "OR", "College", "=", "``", "Duke", "''"], "query_toks_no_value": ["select", "distinct", "position", "from", "match_season", "where", "college", "=", "value", "or", "college", "=", "value"], "question": "¿Cuáles son las diferentes posiciones de los jugadores de las universidades de UCLA o Duke?\n", "question_toks": ["What", "are", "the", "different", "positions", "of", "players", "from", "UCLA", "or", "Duke", "colleges", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"UCLA\"", null], "or", [false, 2, [0, [0, 14, false], null], "\"Duke\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "query_toks": ["SELECT", "Draft_Pick_Number", ",", "Draft_Class", "FROM", "match_season", "WHERE", "POSITION", "=", "``", "Defender", "''"], "query_toks_no_value": ["select", "draft_pick_number", ",", "draft_class", "from", "match_season", "where", "position", "=", "value"], "question": "Muestra los números de selección del draft y las clases de draft de los jugadores cuyas posiciones son defensores.\n", "question_toks": ["Show", "the", "draft", "pick", "numbers", "and", "draft", "classes", "of", "players", "whose", "positions", "are", "defenders", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Defender\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"", "query_toks": ["SELECT", "Draft_Pick_Number", ",", "Draft_Class", "FROM", "match_season", "WHERE", "POSITION", "=", "``", "Defender", "''"], "query_toks_no_value": ["select", "draft_pick_number", ",", "draft_class", "from", "match_season", "where", "position", "=", "value"], "question": "¿Cuáles son los números de selección y las clases de draft para los jugadores que desempeñan la posición de Defensor?\n", "question_toks": ["What", "are", "the", "draft", "pick", "numbers", "and", "draft", "classes", "for", "players", "who", "play", "the", "Defender", "position", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Defender\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Player ,  Years_Played FROM player", "query_toks": ["SELECT", "Player", ",", "Years_Played", "FROM", "player"], "query_toks_no_value": ["select", "player", ",", "years_played", "from", "player"], "question": "Muestra los jugadores y los años jugados.\n", "question_toks": ["Show", "the", "players", "and", "the", "years", "played", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Player ,  Years_Played FROM player", "query_toks": ["SELECT", "Player", ",", "Years_Played", "FROM", "player"], "query_toks_no_value": ["select", "player", ",", "years_played", "from", "player"], "question": "¿Quiénes son los diferentes jugadores y cuántos años ha jugado cada uno?\n", "question_toks": ["Who", "are", "the", "different", "players", "and", "how", "many", "years", "has", "each", "played", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Name FROM Team", "query_toks": ["SELECT", "Name", "FROM", "Team"], "query_toks_no_value": ["select", "name", "from", "team"], "question": "Mostrar todos los nombres de los equipos.\n", "question_toks": ["Show", "all", "team", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Name FROM Team", "query_toks": ["SELECT", "Name", "FROM", "Team"], "query_toks_no_value": ["select", "name", "from", "team"], "question": "¿Cuáles son los nombres de todos los equipos?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "teams", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country", "query_toks": ["SELECT", "T2.Season", ",", "T2.Player", ",", "T1.Country_name", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country"], "query_toks_no_value": ["select", "t2", ".", "season", ",", "t2", ".", "player", ",", "t1", ".", "country_name", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country"], "question": "Muestra la temporada, el jugador y el nombre del país al que pertenece ese jugador.\n", "question_toks": ["Show", "the", "season", ",", "the", "player", ",", "and", "the", "name", "of", "the", "country", "that", "player", "belongs", "to", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country", "query_toks": ["SELECT", "T2.Season", ",", "T2.Player", ",", "T1.Country_name", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country"], "query_toks_no_value": ["select", "t2", ".", "season", ",", "t2", ".", "player", ",", "t1", ".", "country_name", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country"], "question": "Para cada jugador, ¿cuál es su nombre, temporada y país al que pertenece?\n", "question_toks": ["For", "each", "player", ",", "what", "are", "their", "name", ",", "season", ",", "and", "country", "that", "they", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"", "query_toks": ["SELECT", "T2.Player", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "WHERE", "T1.Country_name", "=", "``", "Indonesia", "''"], "query_toks_no_value": ["select", "t2", ".", "player", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "where", "t1", ".", "country_name", "=", "value"], "question": "¿Qué jugadores son de Indonesia?\n", "question_toks": ["Which", "players", "are", "from", "Indonesia", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Indonesia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"", "query_toks": ["SELECT", "T2.Player", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "WHERE", "T1.Country_name", "=", "``", "Indonesia", "''"], "query_toks_no_value": ["select", "t2", ".", "player", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "where", "t1", ".", "country_name", "=", "value"], "question": "¿Quiénes son los jugadores de Indonesia?\n", "question_toks": ["Who", "are", "the", "players", "from", "Indonesia", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Indonesia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"", "query_toks": ["SELECT", "DISTINCT", "T2.Position", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "WHERE", "T1.Capital", "=", "``", "Dublin", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "position", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "where", "t1", ".", "capital", "=", "value"], "question": "¿Cuáles son las distintas posiciones de los jugadores de un país cuya capital es Dublín?\n", "question_toks": ["What", "are", "the", "distinct", "positions", "of", "the", "players", "from", "a", "country", "whose", "capital", "is", "Dublin", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Dublin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"", "query_toks": ["SELECT", "DISTINCT", "T2.Position", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "WHERE", "T1.Capital", "=", "``", "Dublin", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "position", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "where", "t1", ".", "capital", "=", "value"], "question": "Indique las diferentes posiciones de los jugadores que juegan para el país con la capital Dublín.\n", "question_toks": ["Give", "the", "different", "positions", "of", "players", "who", "play", "for", "the", "country", "with", "the", "capital", "Dublin", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Dublin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"", "query_toks": ["SELECT", "T1.Official_native_language", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "WHERE", "T2.College", "=", "``", "Maryland", "''", "OR", "T2.College", "=", "``", "Duke", "''"], "query_toks_no_value": ["select", "t1", ".", "official_native_language", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "where", "t2", ".", "college", "=", "value", "or", "t2", ".", "college", "=", "value"], "question": "¿Cuáles son los idiomas oficiales de los países de los jugadores de Maryland o Duke College?\n", "question_toks": ["What", "are", "the", "official", "languages", "of", "the", "countries", "of", "players", "from", "Maryland", "or", "Duke", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Maryland\"", null], "or", [false, 2, [0, [0, 14, false], null], "\"Duke\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\"", "query_toks": ["SELECT", "T1.Official_native_language", "FROM", "country", "AS", "T1", "JOIN", "match_season", "AS", "T2", "ON", "T1.Country_id", "=", "T2.Country", "WHERE", "T2.College", "=", "``", "Maryland", "''", "OR", "T2.College", "=", "``", "Duke", "''"], "query_toks_no_value": ["select", "t1", ".", "official_native_language", "from", "country", "as", "t1", "join", "match_season", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country", "where", "t2", ".", "college", "=", "value", "or", "t2", ".", "college", "=", "value"], "question": "Devuelve los idiomas nativos oficiales de los países que tienen jugadores de las universidades de Maryland o Duke.\n", "question_toks": ["Return", "the", "official", "native", "languages", "of", "countries", "who", "have", "players", "from", "Maryland", "or", "Duke", "colleges", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Maryland\"", null], "or", [false, 2, [0, [0, 14, false], null], "\"Duke\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id", "query_toks": ["SELECT", "T1.Season", ",", "T1.Player", ",", "T2.Name", "FROM", "match_season", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id"], "query_toks_no_value": ["select", "t1", ".", "season", ",", "t1", ".", "player", ",", "t2", ".", "name", "from", "match_season", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id"], "question": "Muestra la temporada, el jugador y el nombre del equipo al que pertenecen los jugadores.\n", "question_toks": ["Show", "the", "season", ",", "the", "player", ",", "and", "the", "name", "of", "the", "team", "that", "players", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id", "query_toks": ["SELECT", "T1.Season", ",", "T1.Player", ",", "T2.Name", "FROM", "match_season", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id"], "query_toks_no_value": ["select", "t1", ".", "season", ",", "t1", ".", "player", ",", "t2", ".", "name", "from", "match_season", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id"], "question": "¿Quiénes son los diferentes jugadores, en qué temporada juegan y cómo se llama el equipo en el que están?\n", "question_toks": ["Who", "are", "the", "different", "players", ",", "what", "season", "do", "they", "play", "in", ",", "and", "what", "is", "the", "name", "of", "the", "team", "they", "are", "on", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"", "query_toks": ["SELECT", "T1.Position", "FROM", "match_season", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id", "WHERE", "T2.Name", "=", "``", "Ryley", "Goldner", "''"], "query_toks_no_value": ["select", "t1", ".", "position", "from", "match_season", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id", "where", "t2", ".", "name", "=", "value"], "question": "Muestra las posiciones de los jugadores del equipo con nombre \"Ryley Goldner\".\n", "question_toks": ["Show", "the", "positions", "of", "the", "players", "from", "the", "team", "with", "name", "``", "Ryley", "Goldner", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Ryley Goldner\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"", "query_toks": ["SELECT", "T1.Position", "FROM", "match_season", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id", "WHERE", "T2.Name", "=", "``", "Ryley", "Goldner", "''"], "query_toks_no_value": ["select", "t1", ".", "position", "from", "match_season", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id", "where", "t2", ".", "name", "=", "value"], "question": "Devuelve las posiciones de los jugadores del equipo Ryley Goldner.\n", "question_toks": ["Return", "the", "positions", "of", "players", "on", "the", "team", "Ryley", "Goldner", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Ryley Goldner\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "query_toks": ["SELECT", "T1.Player", ",", "T1.Years_Played", "FROM", "player", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id", "WHERE", "T2.Name", "=", "``", "Columbus", "Crew", "''"], "query_toks_no_value": ["select", "t1", ".", "player", ",", "t1", ".", "years_played", "from", "player", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id", "where", "t2", ".", "name", "=", "value"], "question": "Muestra los jugadores y los años jugados por los jugadores del equipo \"Columbus Crew\".\n", "question_toks": ["Show", "the", "players", "and", "years", "played", "for", "players", "from", "team", "``", "Columbus", "Crew", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Columbus Crew\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"", "query_toks": ["SELECT", "T1.Player", ",", "T1.Years_Played", "FROM", "player", "AS", "T1", "JOIN", "team", "AS", "T2", "ON", "T1.Team", "=", "T2.Team_id", "WHERE", "T2.Name", "=", "``", "Columbus", "Crew", "''"], "query_toks_no_value": ["select", "t1", ".", "player", ",", "t1", ".", "years_played", "from", "player", "as", "t1", "join", "team", "as", "t2", "on", "t1", ".", "team", "=", "t2", ".", "team_id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuáles son los jugadores que jugaron en el Columbus Crew y durante cuántos años jugó cada uno?\n", "question_toks": ["What", "are", "the", "players", "who", "played", "for", "Columbus", "Crew", ",", "and", "how", "many", "years", "did", "each", "play", "for", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Columbus Crew\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)", "query_toks": ["SELECT", "Name", "FROM", "team", "WHERE", "Team_id", "NOT", "IN", "(", "SELECT", "Team", "FROM", "match_season", ")"], "query_toks_no_value": ["select", "name", "from", "team", "where", "team_id", "not", "in", "(", "select", "team", "from", "match_season", ")"], "question": "¿Cuáles son los nombres de los equipos que no tienen récord de temporada de partidos?\n", "question_toks": ["What", "are", "the", "names", "of", "teams", "that", "do", "no", "have", "match", "season", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "match_season", "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)", "query_toks": ["SELECT", "Name", "FROM", "team", "WHERE", "Team_id", "NOT", "IN", "(", "SELECT", "Team", "FROM", "match_season", ")"], "query_toks_no_value": ["select", "name", "from", "team", "where", "team_id", "not", "in", "(", "select", "team", "from", "match_season", ")"], "question": "Devuelve los nombres de los equipos que no tienen récord de temporada de partidos.\n", "question_toks": ["Return", "the", "names", "of", "teams", "that", "have", "no", "match", "season", "record", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"", "query_toks": ["SELECT", "Name", "FROM", "climber", "WHERE", "Country", "!", "=", "``", "Switzerland", "''"], "query_toks_no_value": ["select", "name", "from", "climber", "where", "country", "!", "=", "value"], "question": "Enumere los nombres de escaladores cuyo país no sea Suiza.\n", "question_toks": ["List", "the", "names", "of", "climbers", "whose", "country", "is", "not", "Switzerland", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"Switzerland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"", "query_toks": ["SELECT", "Name", "FROM", "climber", "WHERE", "Country", "!", "=", "``", "Switzerland", "''"], "query_toks_no_value": ["select", "name", "from", "climber", "where", "country", "!", "=", "value"], "question": "¿Cómo se llaman los escaladores que no son del país de Suiza?\n", "question_toks": ["What", "are", "the", "names", "of", "climbers", "who", "are", "not", "from", "the", "country", "of", "Switzerland", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"Switzerland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT COUNT(DISTINCT Country) FROM climber", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Country", ")", "FROM", "climber"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "climber"], "question": "¿De cuántos países distintos son los escaladores?\n", "question_toks": ["How", "many", "distinct", "countries", "are", "the", "climbers", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT COUNT(DISTINCT Country) FROM climber", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Country", ")", "FROM", "climber"], "query_toks_no_value": ["select", "count", "(", "distinct", "country", ")", "from", "climber"], "question": "Cuente el número de países diferentes de donde provienen los escaladores.\n", "question_toks": ["Count", "the", "number", "of", "different", "countries", "that", "climbers", "are", "from", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Country FROM mountain WHERE Height  >  5000", "query_toks": ["SELECT", "Country", "FROM", "mountain", "WHERE", "Height", ">", "5000"], "query_toks_no_value": ["select", "country", "from", "mountain", "where", "height", ">", "value"], "question": "¿Cuáles son los países de montañas con una altura mayor a 5000?\n", "question_toks": ["What", "are", "the", "countries", "of", "mountains", "with", "height", "bigger", "than", "5000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Country FROM mountain WHERE Height  >  5000", "query_toks": ["SELECT", "Country", "FROM", "mountain", "WHERE", "Height", ">", "5000"], "query_toks_no_value": ["select", "country", "from", "mountain", "where", "height", ">", "value"], "question": "Devuelven los países de las montañas que tengan una altura mayor a 5000.\n", "question_toks": ["Return", "the", "countries", "of", "the", "mountains", "that", "have", "a", "height", "larger", "than", "5000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "Muestra los nombres de los escaladores y los nombres de las montañas que escalan.\n", "question_toks": ["Show", "names", "of", "climbers", "and", "the", "names", "of", "mountains", "they", "climb", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "¿Cuáles son los nombres de los escaladores y los nombres correspondientes de las montañas que escalan?\n", "question_toks": ["What", "are", "the", "names", "of", "climbers", "and", "the", "corresponding", "names", "of", "mountains", "that", "they", "climb", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Height", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "height", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "Muestre los nombres de los escaladores y las alturas de las montañas que escalan.\n", "question_toks": ["Show", "the", "names", "of", "climbers", "and", "the", "heights", "of", "mountains", "they", "climb", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Height", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "height", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "¿Cuáles son los nombres de los escaladores y las alturas correspondientes de las montañas que escalan?\n", "question_toks": ["What", "are", "the", "names", "of", "climbers", "and", "the", "corresponding", "heights", "of", "the", "mountains", "that", "they", "climb", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID", "WHERE", "T1.Country", "=", "``", "West", "Germany", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id", "where", "t1", ".", "country", "=", "value"], "question": "Muestre los distintos nombres de las montañas escaladas por escaladores del país \"Alemania Occidental\".\n", "question_toks": ["Show", "the", "distinct", "names", "of", "mountains", "climbed", "by", "climbers", "from", "country", "``", "West", "Germany", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"West Germany\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID", "WHERE", "T1.Country", "=", "``", "West", "Germany", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id", "where", "t1", ".", "country", "=", "value"], "question": "¿Cuáles son los diferentes nombres de las montañas ascendidas por escaladores del país de Alemania Occidental?\n", "question_toks": ["What", "are", "the", "different", "names", "of", "mountains", "ascended", "by", "climbers", "from", "the", "country", "of", "West", "Germany", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"West Germany\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"", "query_toks": ["SELECT", "T1.Time", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID", "WHERE", "T2.Country", "=", "``", "Uganda", "''"], "query_toks_no_value": ["select", "t1", ".", "time", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id", "where", "t2", ".", "country", "=", "value"], "question": "Muestra los tiempos utilizados por los escaladores para escalar montañas en el País Uganda.\n", "question_toks": ["Show", "the", "times", "used", "by", "climbers", "to", "climb", "mountains", "in", "Country", "Uganda", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Uganda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"", "query_toks": ["SELECT", "T1.Time", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID", "WHERE", "T2.Country", "=", "``", "Uganda", "''"], "query_toks_no_value": ["select", "t1", ".", "time", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id", "where", "t2", ".", "country", "=", "value"], "question": "¿Cuáles son los tiempos utilizados por los escaladores que escalaron montañas en el país de Uganda?\n", "question_toks": ["What", "are", "the", "times", "used", "by", "climbers", "who", "climbed", "mountains", "in", "the", "country", "of", "Uganda", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Uganda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)", "query_toks": ["SELECT", "Name", "FROM", "mountain", "WHERE", "Mountain_ID", "NOT", "IN", "(", "SELECT", "Mountain_ID", "FROM", "climber", ")"], "query_toks_no_value": ["select", "name", "from", "mountain", "where", "mountain_id", "not", "in", "(", "select", "mountain_id", "from", "climber", ")"], "question": "Enumere los nombres de las montañas que no tienen ningún escalador.\n", "question_toks": ["List", "the", "names", "of", "mountains", "that", "do", "not", "have", "any", "climber", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)", "query_toks": ["SELECT", "Name", "FROM", "mountain", "WHERE", "Mountain_ID", "NOT", "IN", "(", "SELECT", "Mountain_ID", "FROM", "climber", ")"], "query_toks_no_value": ["select", "name", "from", "mountain", "where", "mountain_id", "not", "in", "(", "select", "mountain_id", "from", "climber", ")"], "question": "¿Cómo se llaman las montañas que ningún escalador ha escalado?\n", "question_toks": ["What", "are", "the", "names", "of", "countains", "that", "no", "climber", "has", "climbed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000", "query_toks": ["SELECT", "Name", "FROM", "mountain", "WHERE", "Height", ">", "5000", "OR", "Prominence", ">", "1000"], "query_toks_no_value": ["select", "name", "from", "mountain", "where", "height", ">", "value", "or", "prominence", ">", "value"], "question": "Muestra los nombres de las montañas con una altura superior a 5000 o una prominencia superior a 1000.\n", "question_toks": ["Show", "the", "names", "of", "mountains", "with", "height", "more", "than", "5000", "or", "prominence", "more", "than", "1000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5000.0, null], "or", [false, 3, [0, [0, 4, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "climbing", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000", "query_toks": ["SELECT", "Name", "FROM", "mountain", "WHERE", "Height", ">", "5000", "OR", "Prominence", ">", "1000"], "query_toks_no_value": ["select", "name", "from", "mountain", "where", "height", ">", "value", "or", "prominence", ">", "value"], "question": "¿Cómo se llaman las montañas que tienen una altura de más de 5000 o una prominencia de más de 1000?\n", "question_toks": ["What", "are", "the", "names", "of", "mountains", "that", "have", "a", "height", "of", "over", "5000", "or", "a", "prominence", "of", "over", "1000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5000.0, null], "or", [false, 3, [0, [0, 4, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "body_builder", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T2.Name", "FROM", "body_builder", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "body_builder", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "¿Cuáles son los nombres de los culturistas?\n", "question_toks": ["What", "are", "the", "names", "of", "body", "builders", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "body_builder", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300", "query_toks": ["SELECT", "T2.Name", "FROM", "body_builder", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Total", ">", "300"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "body_builder", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "total", ">", "value"], "question": "¿Cómo se llaman los culturistas cuya puntuación total es superior a 300?\n", "question_toks": ["What", "are", "the", "names", "of", "body", "builders", "whose", "total", "score", "is", "higher", "than", "300", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "body_builder", "query": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315", "query_toks": ["SELECT", "T2.Height", "FROM", "body_builder", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Total", "<", "315"], "query_toks_no_value": ["select", "t2", ".", "height", "from", "body_builder", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "total", "<", "value"], "question": "¿Cuáles son las alturas de los culturistas con una puntuación total inferior a 315?\n", "question_toks": ["What", "are", "the", "heights", "of", "body", "builders", "with", "total", "score", "smaller", "than", "315", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], 315.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "body_builder", "query": "SELECT * FROM body_builder", "query_toks": ["SELECT", "*", "FROM", "body_builder"], "query_toks_no_value": ["select", "*", "from", "body_builder"], "question": "Muestra toda la información sobre cada carrocero.\n", "question_toks": ["Show", "all", "information", "about", "each", "body", "builder", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "body_builder", "query": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;", "query_toks": ["SELECT", "T2.weight", "FROM", "body_builder", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.people_id", "=", "T2.people_id", "WHERE", "T1.snatch", ">", "140", "OR", "T2.height", ">", "200", ";"], "query_toks_no_value": ["select", "t2", ".", "weight", "from", "body_builder", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "snatch", ">", "value", "or", "t2", ".", "height", ">", "value"], "question": "Enumere el peso de los culturistas que tienen una puntuación de arranque superior a 140 o una altura superior a 200.\n", "question_toks": ["List", "the", "weight", "of", "the", "body", "builders", "who", "have", "snatch", "score", "higher", "than", "140", "or", "have", "the", "height", "greater", "than", "200", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 140.0, null], "or", [false, 3, [0, [0, 8, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "body_builder", "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";", "query_toks": ["SELECT", "T1.total", "FROM", "body_builder", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.people_id", "=", "T2.people_id", "WHERE", "T2.Birth_Date", "LIKE", "``", "%", "January", "%", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "total", "from", "body_builder", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "birth_date", "like", "value"], "question": "¿Cuáles son las puntuaciones totales de los culturistas cuyo cumpleaños contiene la cadena \"enero\"?\n", "question_toks": ["What", "are", "the", "total", "scores", "of", "the", "body", "builders", "whose", "birthday", "contains", "the", "string", "``", "January", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 10, false], null], "\"%January%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT Date ,  Vote_Percent FROM election", "query_toks": ["SELECT", "Date", ",", "Vote_Percent", "FROM", "election"], "query_toks_no_value": ["select", "date", ",", "vote_percent", "from", "election"], "question": "Enumere las fechas y los porcentajes de votos de las elecciones.\n", "question_toks": ["List", "the", "dates", "and", "vote", "percents", "of", "elections", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT Name ,  Party FROM representative", "query_toks": ["SELECT", "Name", ",", "Party", "FROM", "representative"], "query_toks_no_value": ["select", "name", ",", "party", "from", "representative"], "question": "¿Cuáles son los nombres y partidos de los representantes?\n", "question_toks": ["What", "are", "the", "names", "and", "parties", "of", "representatives", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT Name FROM Representative WHERE Party != \"Republican\"", "query_toks": ["SELECT", "Name", "FROM", "Representative", "WHERE", "Party", "!", "=", "``", "Republican", "''"], "query_toks_no_value": ["select", "name", "from", "representative", "where", "party", "!", "=", "value"], "question": "¿Cuáles son los nombres de los representantes cuyo partido no es \"republicano\"?\n", "question_toks": ["What", "are", "the", "names", "of", "representatives", "whose", "party", "is", "not", "``", "Republican", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 11, false], null], "\"Republican\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"", "query_toks": ["SELECT", "Lifespan", "FROM", "representative", "WHERE", "State", "=", "``", "New", "York", "''", "OR", "State", "=", "``", "Indiana", "''"], "query_toks_no_value": ["select", "lifespan", "from", "representative", "where", "state", "=", "value", "or", "state", "=", "value"], "question": "¿Cuál es la esperanza de vida de los representantes del estado de Nueva York o del estado de Indiana?\n", "question_toks": ["What", "are", "the", "life", "spans", "of", "representatives", "from", "New", "York", "state", "or", "Indiana", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"New York\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Date", "FROM", "election", "AS", "T1", "JOIN", "representative", "AS", "T2", "ON", "T1.Representative_ID", "=", "T2.Representative_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "date", "from", "election", "as", "t1", "join", "representative", "as", "t2", "on", "t1", ".", "representative_id", "=", "t2", ".", "representative_id"], "question": "¿Cuáles son los nombres de los representantes y las fechas de las elecciones en las que participaron?\n", "question_toks": ["What", "are", "the", "names", "of", "representatives", "and", "the", "dates", "of", "elections", "they", "participated", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000", "query_toks": ["SELECT", "T2.Name", "FROM", "election", "AS", "T1", "JOIN", "representative", "AS", "T2", "ON", "T1.Representative_ID", "=", "T2.Representative_ID", "WHERE", "Votes", ">", "10000"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "election", "as", "t1", "join", "representative", "as", "t2", "on", "t1", ".", "representative_id", "=", "t2", ".", "representative_id", "where", "votes", ">", "value"], "question": "¿Cuáles son los nombres de los representantes con más de 10000 votos en las elecciones?\n", "question_toks": ["What", "are", "the", "names", "of", "representatives", "with", "more", "than", "10000", "votes", "in", "election", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election_representative", "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)", "query_toks": ["SELECT", "Name", "FROM", "representative", "WHERE", "Representative_ID", "NOT", "IN", "(", "SELECT", "Representative_ID", "FROM", "election", ")"], "query_toks_no_value": ["select", "name", "from", "representative", "where", "representative_id", "not", "in", "(", "select", "representative_id", "from", "election", ")"], "question": "Enumere los nombres de los representantes que no han participado en las elecciones enumeradas aquí.\n", "question_toks": ["List", "the", "names", "of", "representatives", "that", "have", "not", "participated", "in", "elections", "listed", "here", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "query_toks": ["SELECT", "booking_start_date", ",", "booking_end_date", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "booking_start_date", ",", "booking_end_date", "from", "apartment_bookings"], "question": "Muestra las fechas de inicio y finalización de todas las reservas de apartamentos.\n", "question_toks": ["Show", "the", "start", "dates", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings", "query_toks": ["SELECT", "booking_start_date", ",", "booking_end_date", "FROM", "Apartment_Bookings"], "query_toks_no_value": ["select", "booking_start_date", ",", "booking_end_date", "from", "apartment_bookings"], "question": "¿Cuáles son la fecha de inicio y finalización de cada reserva de apartamento?\n", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings", "query_toks": ["SELECT", "DISTINCT", "building_description", "FROM", "Apartment_Buildings"], "query_toks_no_value": ["select", "distinct", "building_description", "from", "apartment_buildings"], "question": "Mostrar todas las descripciones de edificios distintos.\n", "question_toks": ["Show", "all", "distinct", "building", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings", "query_toks": ["SELECT", "DISTINCT", "building_description", "FROM", "Apartment_Buildings"], "query_toks_no_value": ["select", "distinct", "building_description", "from", "apartment_buildings"], "question": "Dame una lista de todas las descripciones de edificios distintos.\n", "question_toks": ["Give", "me", "a", "list", "of", "all", "the", "distinct", "building", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"", "query_toks": ["SELECT", "building_short_name", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Emma", "''"], "query_toks_no_value": ["select", "building_short_name", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "Muestra los nombres cortos de los edificios gestionados por \"Emma\".\n", "question_toks": ["Show", "the", "short", "names", "of", "the", "buildings", "managed", "by", "``", "Emma", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Emma\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"", "query_toks": ["SELECT", "building_short_name", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Emma", "''"], "query_toks_no_value": ["select", "building_short_name", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "¿Qué edificios gestiona \"Emma\"? Dame los nombres cortos de los edificios.\n", "question_toks": ["Which", "buildings", "does", "``", "Emma", "''", "manage", "?", "Give", "me", "the", "short", "names", "of", "the", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Emma\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "query_toks": ["SELECT", "building_address", ",", "building_phone", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Brenden", "''"], "query_toks_no_value": ["select", "building_address", ",", "building_phone", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "Muestra las direcciones y teléfonos de todos los edificios gestionados por \"Brenden\".\n", "question_toks": ["Show", "the", "addresses", "and", "phones", "of", "all", "the", "buildings", "managed", "by", "``", "Brenden", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Brenden\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"", "query_toks": ["SELECT", "building_address", ",", "building_phone", "FROM", "Apartment_Buildings", "WHERE", "building_manager", "=", "``", "Brenden", "''"], "query_toks_no_value": ["select", "building_address", ",", "building_phone", "from", "apartment_buildings", "where", "building_manager", "=", "value"], "question": "¿Cuáles son la dirección y el número de teléfono de los edificios gestionados por \"Brenden\"?\n", "question_toks": ["What", "are", "the", "address", "and", "phone", "number", "of", "the", "buildings", "managed", "by", "``", "Brenden", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Brenden\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"", "query_toks": ["SELECT", "building_full_name", "FROM", "Apartment_Buildings", "WHERE", "building_full_name", "LIKE", "``", "%", "court", "%", "''"], "query_toks_no_value": ["select", "building_full_name", "from", "apartment_buildings", "where", "building_full_name", "like", "value"], "question": "¿Cuáles son los nombres completos de los edificios que contienen la palabra \"tribunal\"?\n", "question_toks": ["What", "are", "the", "building", "full", "names", "that", "contain", "the", "word", "``", "court", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%court%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"", "query_toks": ["SELECT", "building_full_name", "FROM", "Apartment_Buildings", "WHERE", "building_full_name", "LIKE", "``", "%", "court", "%", "''"], "query_toks_no_value": ["select", "building_full_name", "from", "apartment_buildings", "where", "building_full_name", "like", "value"], "question": "Encuentre todos los nombres completos de los edificios que contienen la palabra \"tribunal\".\n", "question_toks": ["Find", "all", "the", "building", "full", "names", "containing", "the", "word", "``", "court", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%court%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT apt_number ,  room_count FROM Apartments", "query_toks": ["SELECT", "apt_number", ",", "room_count", "FROM", "Apartments"], "query_toks_no_value": ["select", "apt_number", ",", "room_count", "from", "apartments"], "question": "Devuelve el número de apartamento y el número de habitaciones de cada apartamento.\n", "question_toks": ["Return", "the", "apartment", "number", "and", "the", "number", "of", "rooms", "for", "each", "apartment", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT apt_number ,  room_count FROM Apartments", "query_toks": ["SELECT", "apt_number", ",", "room_count", "FROM", "Apartments"], "query_toks_no_value": ["select", "apt_number", ",", "room_count", "from", "apartments"], "question": "¿Cuáles son el número de apartamento y el número de habitaciones de cada apartamento?\n", "question_toks": ["What", "are", "the", "apartment", "number", "and", "the", "room", "count", "of", "each", "apartment", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Flat", "''"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "Devuelve los números de apartamento de los apartamentos con código de tipo \"Piso\".\n", "question_toks": ["Return", "the", "apartment", "numbers", "of", "the", "apartments", "with", "type", "code", "``", "Flat", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Flat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"", "query_toks": ["SELECT", "apt_number", "FROM", "Apartments", "WHERE", "apt_type_code", "=", "``", "Flat", "''"], "query_toks_no_value": ["select", "apt_number", "from", "apartments", "where", "apt_type_code", "=", "value"], "question": "¿Qué apartamentos tienen el código de tipo \"Piso\"? Dame los números de sus apartamentos.\n", "question_toks": ["Which", "apartments", "have", "type", "code", "``", "Flat", "''", "?", "Give", "me", "their", "apartment", "numbers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Flat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "query_toks": ["SELECT", "guest_first_name", ",", "guest_last_name", "FROM", "Guests"], "query_toks_no_value": ["select", "guest_first_name", ",", "guest_last_name", "from", "guests"], "question": "Devolver los nombres y apellidos de todos los invitados.\n", "question_toks": ["Return", "the", "first", "names", "and", "last", "names", "of", "all", "guests"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests", "query_toks": ["SELECT", "guest_first_name", ",", "guest_last_name", "FROM", "Guests"], "query_toks_no_value": ["select", "guest_first_name", ",", "guest_last_name", "from", "guests"], "question": "¿Cuáles son los nombres y apellidos de todos los invitados?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "all", "the", "guests", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"", "query_toks": ["SELECT", "date_of_birth", "FROM", "Guests", "WHERE", "gender_code", "=", "``", "Male", "''"], "query_toks_no_value": ["select", "date_of_birth", "from", "guests", "where", "gender_code", "=", "value"], "question": "Devuelve la fecha de nacimiento de todos los invitados con el código de género \"Masculino\".\n", "question_toks": ["Return", "the", "date", "of", "birth", "for", "all", "the", "guests", "with", "gender", "code", "``", "Male", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"", "query_toks": ["SELECT", "date_of_birth", "FROM", "Guests", "WHERE", "gender_code", "=", "``", "Male", "''"], "query_toks_no_value": ["select", "date_of_birth", "from", "guests", "where", "gender_code", "=", "value"], "question": "¿Cuáles son las fechas de nacimiento de todos los invitados cuyo género es \"masculino\"?\n", "question_toks": ["What", "are", "dates", "of", "birth", "of", "all", "the", "guests", "whose", "gender", "is", "``", "Male", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "query_toks": ["SELECT", "T2.apt_number", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id"], "query_toks_no_value": ["select", "t2", ".", "apt_number", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id"], "question": "Muestra los números de apartamento, las fechas de inicio y finalización de todas las reservas de apartamentos.\n", "question_toks": ["Show", "the", "apartment", "numbers", ",", "start", "dates", ",", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id", "query_toks": ["SELECT", "T2.apt_number", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id"], "query_toks_no_value": ["select", "t2", ".", "apt_number", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id"], "question": "¿Cuáles son el número de apartamento, la fecha de inicio y la fecha de finalización de cada reserva de apartamento?\n", "question_toks": ["What", "are", "the", "apartment", "number", ",", "start", "date", ",", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_type_code", "=", "``", "Duplex", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_type_code", "=", "value"], "question": "¿Cuáles son las fechas de inicio y fin de reserva de los apartamentos con código de tipo \"Duplex\"?\n", "question_toks": ["What", "are", "the", "booking", "start", "and", "end", "dates", "of", "the", "apartments", "with", "type", "code", "``", "Duplex", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Duplex\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_type_code", "=", "``", "Duplex", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_type_code", "=", "value"], "question": "Devolver la fecha de inicio y finalización de la reserva de los apartamentos que tengan código de tipo \"Dúplex\".\n", "question_toks": ["Return", "the", "booking", "start", "date", "and", "end", "date", "for", "the", "apartments", "that", "have", "type", "code", "``", "Duplex", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Duplex\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "¿Cuáles son las fechas de inicio y fin de reserva de los apartamentos de más de 2 dormitorios?\n", "question_toks": ["What", "are", "the", "booking", "start", "and", "end", "dates", "of", "the", "apartments", "with", "more", "than", "2", "bedrooms", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "Encuentra la fecha de inicio y finalización de la reserva de los apartamentos de más de dos dormitorios.\n", "question_toks": ["Find", "the", "booking", "start", "date", "and", "end", "date", "for", "the", "apartments", "that", "have", "more", "than", "two", "bedrooms", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"", "query_toks": ["SELECT", "T1.booking_status_code", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_number", "=", "``", "Suite", "634", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_status_code", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_number", "=", "value"], "question": "¿Cuál es el código de estado de reserva del apartamento con número de apartamento \"Suite 634\"?\n", "question_toks": ["What", "is", "the", "booking", "status", "code", "of", "the", "apartment", "with", "apartment", "number", "``", "Suite", "634", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Suite 634\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"", "query_toks": ["SELECT", "T1.booking_status_code", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.apt_number", "=", "``", "Suite", "634", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_status_code", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "apt_number", "=", "value"], "question": "Dime el código de estado de la reserva del apartamento con el número \"Suite 634\".\n", "question_toks": ["Tell", "me", "the", "booking", "status", "code", "for", "the", "apartment", "with", "number", "``", "Suite", "634", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Suite 634\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "DISTINCT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Muestra los distintos números de apartamento de los apartamentos que tienen reservas con código de estado \"Confirmado\".\n", "question_toks": ["Show", "the", "distinct", "apartment", "numbers", "of", "the", "apartments", "that", "have", "bookings", "with", "status", "code", "``", "Confirmed", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Confirmed\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "DISTINCT", "T2.apt_number", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "apt_number", "from", "apartment_bookings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "¿Qué apartamentos tienen reservas con el código de estado \"Confirmado\"? Devuélvales los números de sus apartamentos.\n", "question_toks": ["Which", "apartments", "have", "bookings", "with", "status", "code", "``", "Confirmed", "''", "?", "Return", "their", "apartment", "numbers", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Confirmed\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id"], "question": "Muestre los nombres de los huéspedes, las fechas de inicio y finalización de todas las reservas de apartamentos.\n", "question_toks": ["Show", "the", "guest", "first", "names", ",", "start", "dates", ",", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id"], "question": "¿Cuáles son el nombre del huésped, la fecha de inicio y la fecha de finalización de cada reserva de apartamento?\n", "question_toks": ["What", "are", "the", "guest", "first", "name", ",", "start", "date", ",", "and", "end", "date", "of", "each", "apartment", "booking", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T2.gender_code", "=", "``", "Female", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t2", ".", "gender_code", "=", "value"], "question": "Muestra las fechas de inicio y finalización de todas las reservas de apartamentos realizadas por huéspedes con código de género \"Mujer\".\n", "question_toks": ["Show", "the", "start", "dates", "and", "end", "dates", "of", "all", "the", "apartment", "bookings", "made", "by", "guests", "with", "gender", "code", "``", "Female", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"", "query_toks": ["SELECT", "T1.booking_start_date", ",", "T1.booking_start_date", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T2.gender_code", "=", "``", "Female", "''"], "query_toks_no_value": ["select", "t1", ".", "booking_start_date", ",", "t1", ".", "booking_start_date", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t2", ".", "gender_code", "=", "value"], "question": "¿Cuáles son las fechas de inicio y finalización de las reservas de apartamentos realizadas por huéspedes femeninas (código de género \"Mujer\")?\n", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "the", "apartment", "bookings", "made", "by", "female", "guests", "(", "gender", "code", "``", "Female", "''", ")", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T2.guest_last_name", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t2", ".", "guest_last_name", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "Muestra los nombres y apellidos de todos los huéspedes que tienen reservas de apartamentos con código de estado \"Confirmado\".\n", "question_toks": ["Show", "the", "first", "names", "and", "last", "names", "of", "all", "the", "guests", "that", "have", "apartment", "bookings", "with", "status", "code", "``", "Confirmed", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Confirmed\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"", "query_toks": ["SELECT", "T2.guest_first_name", ",", "T2.guest_last_name", "FROM", "Apartment_Bookings", "AS", "T1", "JOIN", "Guests", "AS", "T2", "ON", "T1.guest_id", "=", "T2.guest_id", "WHERE", "T1.booking_status_code", "=", "``", "Confirmed", "''"], "query_toks_no_value": ["select", "t2", ".", "guest_first_name", ",", "t2", ".", "guest_last_name", "from", "apartment_bookings", "as", "t1", "join", "guests", "as", "t2", "on", "t1", ".", "guest_id", "=", "t2", ".", "guest_id", "where", "t1", ".", "booking_status_code", "=", "value"], "question": "¿Qué huéspedes tienen reservas de apartamentos con el código de estado \"Confirmado\"? Devuelve sus nombres y apellidos.\n", "question_toks": ["Which", "guests", "have", "apartment", "bookings", "with", "status", "code", "``", "Confirmed", "''", "?", "Return", "their", "first", "names", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Confirmed\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4", "query_toks": ["SELECT", "T1.facility_code", "FROM", "Apartment_Facilities", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "4"], "query_toks_no_value": ["select", "t1", ".", "facility_code", "from", "apartment_facilities", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "Mostrar los códigos de instalaciones de apartamentos de más de 4 dormitorios.\n", "question_toks": ["Show", "the", "facility", "codes", "of", "apartments", "with", "more", "than", "4", "bedrooms", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4", "query_toks": ["SELECT", "T1.facility_code", "FROM", "Apartment_Facilities", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.apt_id", "=", "T2.apt_id", "WHERE", "T2.bedroom_count", ">", "4"], "query_toks_no_value": ["select", "t1", ".", "facility_code", "from", "apartment_facilities", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "apt_id", "=", "t2", ".", "apt_id", "where", "t2", ".", "bedroom_count", ">", "value"], "question": "¿Cuáles son los códigos de instalación de los apartamentos de más de cuatro dormitorios?\n", "question_toks": ["What", "are", "the", "facility", "codes", "of", "the", "apartments", "with", "more", "than", "four", "bedrooms", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "query_toks": ["SELECT", "T1.building_address", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T2.bathroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "building_address", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t2", ".", "bathroom_count", ">", "value"], "question": "Muestra las direcciones de los edificios que cuentan con departamentos con más de 2 baños.\n", "question_toks": ["Show", "the", "addresses", "of", "the", "buildings", "that", "have", "apartments", "with", "more", "than", "2", "bathrooms", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2", "query_toks": ["SELECT", "T1.building_address", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T2.bathroom_count", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "building_address", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t2", ".", "bathroom_count", ">", "value"], "question": "¿Qué edificios tienen apartamentos que tienen más de dos baños? Dame las direcciones de los edificios.\n", "question_toks": ["Which", "buildings", "have", "apartments", "that", "have", "more", "than", "two", "bathrooms", "?", "Give", "me", "the", "addresses", "of", "the", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "query_toks": ["SELECT", "T2.apt_type_code", ",", "T2.apt_number", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_manager", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_type_code", ",", "t2", ".", "apt_number", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_manager", "=", "value"], "question": "Muestre los códigos de tipo de apartamento y los números de apartamento en los edificios administrados por \"Kyle\".\n", "question_toks": ["Show", "the", "apartment", "type", "codes", "and", "apartment", "numbers", "in", "the", "buildings", "managed", "by", "``", "Kyle", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "apartment_rentals", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"", "query_toks": ["SELECT", "T2.apt_type_code", ",", "T2.apt_number", "FROM", "Apartment_Buildings", "AS", "T1", "JOIN", "Apartments", "AS", "T2", "ON", "T1.building_id", "=", "T2.building_id", "WHERE", "T1.building_manager", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "t2", ".", "apt_type_code", ",", "t2", ".", "apt_number", "from", "apartment_buildings", "as", "t1", "join", "apartments", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "building_id", "where", "t1", ".", "building_manager", "=", "value"], "question": "¿Qué códigos de tipo de departamento y números de departamento tienen los edificios administrados por \"Kyle\"?\n", "question_toks": ["What", "apartment", "type", "codes", "and", "apartment", "numbers", "do", "the", "buildings", "managed", "by", "``", "Kyle", "''", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_injury", "query": "SELECT season ,  home_team ,  away_team FROM game", "query_toks": ["SELECT", "season", ",", "home_team", ",", "away_team", "FROM", "game"], "query_toks_no_value": ["select", "season", ",", "home_team", ",", "away_team", "from", "game"], "question": "Enumere la temporada, equipo local, equipo visitante de todos los juegos.\n", "question_toks": ["List", "the", "season", ",", "home", "team", ",", "away", "team", "of", "all", "the", "games", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_injury", "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100", "query_toks": ["SELECT", "average_attendance", "FROM", "stadium", "WHERE", "capacity_percentage", ">", "100"], "query_toks_no_value": ["select", "average_attendance", "from", "stadium", "where", "capacity_percentage", ">", "value"], "question": "¿Cuál es la asistencia promedio de los estadios con porcentaje de capacidad superior al 100%?\n", "question_toks": ["What", "is", "the", "average", "attendance", "of", "stadiums", "with", "capacity", "percentage", "higher", "than", "100", "%", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_injury", "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'", "query_toks": ["SELECT", "player", ",", "number_of_matches", ",", "SOURCE", "FROM", "injury_accident", "WHERE", "injury", "!", "=", "'Knee", "problem", "'"], "query_toks_no_value": ["select", "player", ",", "number_of_matches", ",", "source", "from", "injury_accident", "where", "injury", "!", "=", "value"], "question": "¿Cuáles son el nombre del jugador, el número de partidos y la fuente de información de los jugadores que no sufren la lesión del \"problema de rodilla\"?\n", "question_toks": ["What", "are", "the", "player", "name", ",", "number", "of", "matches", ",", "and", "information", "source", "for", "players", "who", "do", "not", "suffer", "from", "injury", "of", "'Knee", "problem", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 7, [0, [0, 18, false], null], "\"Knee problem\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_injury", "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'", "query_toks": ["SELECT", "T1.season", "FROM", "game", "AS", "T1", "JOIN", "injury_accident", "AS", "T2", "ON", "T1.id", "=", "T2.game_id", "WHERE", "T2.player", "=", "'Walter", "Samuel", "'"], "query_toks_no_value": ["select", "t1", ".", "season", "from", "game", "as", "t1", "join", "injury_accident", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "game_id", "where", "t2", ".", "player", "=", "value"], "question": "¿Cuál es la temporada del partido que provoca que el jugador 'Walter Samuel' se lesione?\n", "question_toks": ["What", "is", "the", "season", "of", "the", "game", "which", "causes", "the", "player", "'Walter", "Samuel", "'", "to", "get", "injured", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Walter Samuel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_injury", "query": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'", "query_toks": ["SELECT", "T1.season", ",", "T2.name", "FROM", "game", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.id", "JOIN", "injury_accident", "AS", "T3", "ON", "T1.id", "=", "T3.game_id", "WHERE", "T3.injury", "=", "'Foot", "injury", "'", "OR", "T3.injury", "=", "'Knee", "problem", "'"], "query_toks_no_value": ["select", "t1", ".", "season", ",", "t2", ".", "name", "from", "game", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "id", "join", "injury_accident", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "game_id", "where", "t3", ".", "injury", "=", "value", "or", "t3", ".", "injury", "=", "value"], "question": "¿En qué temporada y en qué estadio algún jugador tuvo alguna lesión de 'Lesión en el pie' o 'Problema de rodilla'?\n", "question_toks": ["In", "which", "season", "and", "which", "stadium", "did", "any", "player", "have", "an", "injury", "of", "'Foot", "injury", "'", "or", "'Knee", "problem", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Foot injury\"", null], "or", [false, 2, [0, [0, 18, false], null], "\"Knee problem\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_injury", "query": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\"", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "name", "LIKE", "``", "%", "Bank", "%", "''"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "name", "like", "value"], "question": "¿Qué nombre de estadio contiene la subcadena \"Banco\"?\n", "question_toks": ["Which", "stadium", "name", "contains", "the", "substring", "``", "Bank", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Bank%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_1", "query": "SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id", "query_toks": ["SELECT", "T1.name", ",", "T2.name", "FROM", "Country", "AS", "T1", "JOIN", "League", "AS", "T2", "ON", "T1.id", "=", "T2.country_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "country", "as", "t1", "join", "league", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "country_id"], "question": "Enumere todos los nombres de países y ligas.\n", "question_toks": ["List", "all", "country", "and", "league", "names", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 55, false], null], [0, 53, false], null]]}, "select": [false, [[0, [0, [0, 56, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_1", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )", "query_toks": ["SELECT", "DISTINCT", "T1.player_name", "FROM", "Player", "AS", "T1", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "WHERE", "T2.overall_rating", ">", "(", "SELECT", "avg", "(", "overall_rating", ")", "FROM", "Player_Attributes", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "player_name", "from", "player", "as", "t1", "join", "player_attributes", "as", "t2", "on", "t1", ".", "player_api_id", "=", "t2", ".", "player_api_id", "where", "t2", ".", "overall_rating", ">", "(", "select", "avg", "(", "overall_rating", ")", "from", "player_attributes", ")"], "question": "Enumere todos los nombres de jugadores que tengan una calificación general superior al promedio.\n", "question_toks": ["List", "all", "player", "names", "who", "have", "an", "overall", "rating", "higher", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 47, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_1", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)", "query_toks": ["SELECT", "DISTINCT", "T1.player_name", "FROM", "Player", "AS", "T1", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "WHERE", "T2.dribbling", "=", "(", "SELECT", "max", "(", "overall_rating", ")", "FROM", "Player_Attributes", ")"], "query_toks_no_value": ["select", "distinct", "t1", ".", "player_name", "from", "player", "as", "t1", "join", "player_attributes", "as", "t2", "on", "t1", ".", "player_api_id", "=", "t2", ".", "player_api_id", "where", "t2", ".", "dribbling", "=", "(", "select", "max", "(", "overall_rating", ")", "from", "player_attributes", ")"], "question": "¿Cuáles son los nombres de los jugadores que tienen mejor regate?\n", "question_toks": ["What", "are", "the", "names", "of", "players", "who", "have", "the", "best", "dribbling", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 47, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_1", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"right\"", "query_toks": ["SELECT", "DISTINCT", "T1.player_name", "FROM", "Player", "AS", "T1", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "WHERE", "T2.crossing", ">", "90", "AND", "T2.preferred_foot", "=", "``", "right", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "player_name", "from", "player", "as", "t1", "join", "player_attributes", "as", "t2", "on", "t1", ".", "player_api_id", "=", "t2", ".", "player_api_id", "where", "t2", ".", "crossing", ">", "value", "and", "t2", ".", "preferred_foot", "=", "value"], "question": "Enumere los nombres de todos los jugadores que tienen una puntuación de cruce superior a 90 y prefieren su pie derecho.\n", "question_toks": ["List", "the", "names", "of", "all", "players", "who", "have", "a", "crossing", "score", "higher", "than", "90", "and", "prefer", "their", "right", "foot", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 47, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 90.0, null], "and", [false, 2, [0, [0, 7, false], null], "\"right\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_1", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90", "query_toks": ["SELECT", "DISTINCT", "T1.player_name", "FROM", "Player", "AS", "T1", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "WHERE", "T2.preferred_foot", "=", "``", "left", "''", "AND", "T2.overall_rating", ">", "=", "85", "AND", "T2.overall_rating", "<", "=", "90"], "query_toks_no_value": ["select", "distinct", "t1", ".", "player_name", "from", "player", "as", "t1", "join", "player_attributes", "as", "t2", "on", "t1", ".", "player_api_id", "=", "t2", ".", "player_api_id", "where", "t2", ".", "preferred_foot", "=", "value", "and", "t2", ".", "overall_rating", ">", "=", "value", "and", "t2", ".", "overall_rating", "<", "=", "value"], "question": "Enumere los nombres de todos los jugadores zurdos que tengan una calificación general entre 85 y 90.\n", "question_toks": ["List", "the", "names", "of", "all", "left-footed", "players", "who", "have", "overall", "rating", "between", "85", "and", "90", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 47, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"left\"", null], "and", [false, 5, [0, [0, 5, false], null], 85.0, null], "and", [false, 6, [0, [0, 5, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "performance_attendance", "query": "SELECT Date ,  LOCATION FROM performance", "query_toks": ["SELECT", "Date", ",", "LOCATION", "FROM", "performance"], "query_toks_no_value": ["select", "date", ",", "location", "from", "performance"], "question": "¿Cuáles son las fechas y lugares de las actuaciones?\n", "question_toks": ["What", "are", "the", "dates", "and", "locations", "of", "performances", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "performance_attendance", "query": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\"", "query_toks": ["SELECT", "Attendance", "FROM", "performance", "WHERE", "LOCATION", "=", "``", "TD", "Garden", "''", "OR", "LOCATION", "=", "``", "Bell", "Centre", "''"], "query_toks_no_value": ["select", "attendance", "from", "performance", "where", "location", "=", "value", "or", "location", "=", "value"], "question": "Mostrar la asistencia a las actuaciones en el lugar \"TD Garden\" o \"Bell Centre\"\n", "question_toks": ["Show", "the", "attendances", "of", "the", "performances", "at", "location", "``", "TD", "Garden", "''", "or", "``", "Bell", "Centre", "''"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"TD Garden\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"Bell Centre\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "performance_attendance", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Location", "FROM", "member_attendance", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID", "JOIN", "performance", "AS", "T3", "ON", "T1.Performance_ID", "=", "T3.Performance_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "location", "from", "member_attendance", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "join", "performance", "as", "t3", "on", "t1", ".", "performance_id", "=", "t3", ".", "performance_id"], "question": "Muestra los nombres de los miembros y la ubicación de las actuaciones a las que asistieron.\n", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "location", "of", "the", "performances", "they", "attended", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "performance_attendance", "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\"", "query_toks": ["SELECT", "T3.Date", "FROM", "member_attendance", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID", "JOIN", "performance", "AS", "T3", "ON", "T1.Performance_ID", "=", "T3.Performance_ID", "WHERE", "T2.Role", "=", "``", "Violin", "''"], "query_toks_no_value": ["select", "t3", ".", "date", "from", "member_attendance", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "join", "performance", "as", "t3", "on", "t1", ".", "performance_id", "=", "t3", ".", "performance_id", "where", "t2", ".", "role", "=", "value"], "question": "Muestre las fechas de las actuaciones con los miembros asistentes cuyos roles son \"Violín\".\n", "question_toks": ["Show", "the", "dates", "of", "performances", "with", "attending", "members", "whose", "roles", "are", "``", "Violin", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Violin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "performance_attendance", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)", "query_toks": ["SELECT", "Name", "FROM", "member", "WHERE", "Member_ID", "NOT", "IN", "(", "SELECT", "Member_ID", "FROM", "member_attendance", ")"], "query_toks_no_value": ["select", "name", "from", "member", "where", "member_id", "not", "in", "(", "select", "member_id", "from", "member_attendance", ")"], "question": "Enumere los nombres de los miembros que no asistieron a ninguna actuación.\n", "question_toks": ["List", "the", "names", "of", "members", "who", "did", "not", "attend", "any", "performance", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50", "query_toks": ["SELECT", "DISTINCT", "building", "FROM", "classroom", "WHERE", "capacity", ">", "50"], "query_toks_no_value": ["select", "distinct", "building", "from", "classroom", "where", "capacity", ">", "value"], "question": "Encuentra los edificios que tienen habitaciones con capacidad para más de 50.\n", "question_toks": ["Find", "the", "buildings", "which", "have", "rooms", "with", "capacity", "more", "than", "50", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50", "query_toks": ["SELECT", "DISTINCT", "building", "FROM", "classroom", "WHERE", "capacity", ">", "50"], "query_toks_no_value": ["select", "distinct", "building", "from", "classroom", "where", "capacity", ">", "value"], "question": "¿Cuáles son los distintos edificios con capacidades superiores a 50?\n", "question_toks": ["What", "are", "the", "distinct", "buildings", "with", "capacities", "of", "greater", "than", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "¿Cuál es el nombre y edificio de los departamentos cuyo presupuesto supera el presupuesto promedio?\n", "question_toks": ["What", "is", "the", "name", "and", "building", "of", "the", "departments", "whose", "budget", "is", "more", "than", "the", "average", "budget", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "building", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "building", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "Indique el nombre y edificio de los departamentos con presupuesto superior al promedio.\n", "question_toks": ["Give", "the", "name", "and", "building", "of", "the", "departments", "with", "greater", "than", "average", "budget", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100", "query_toks": ["SELECT", "building", ",", "room_number", "FROM", "classroom", "WHERE", "capacity", "BETWEEN", "50", "AND", "100"], "query_toks_no_value": ["select", "building", ",", "room_number", "from", "classroom", "where", "capacity", "between", "value", "and", "value"], "question": "Encuentre el número de sala de las salas con capacidad para entre 50 y 100 estudiantes y sus edificios.\n", "question_toks": ["Find", "the", "room", "number", "of", "the", "rooms", "which", "can", "sit", "50", "to", "100", "students", "and", "their", "buildings", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 3, false], null], 50.0, 100.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100", "query_toks": ["SELECT", "building", ",", "room_number", "FROM", "classroom", "WHERE", "capacity", "BETWEEN", "50", "AND", "100"], "query_toks_no_value": ["select", "building", ",", "room_number", "from", "classroom", "where", "capacity", "between", "value", "and", "value"], "question": "¿Cuáles son los números de aulas y los edificios correspondientes para las aulas con capacidad para entre 50 y 100 estudiantes?\n", "question_toks": ["What", "are", "the", "room", "numbers", "and", "corresponding", "buildings", "for", "classrooms", "which", "can", "seat", "between", "50", "to", "100", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 3, false], null], 50.0, 100.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "NOT", "IN", "(", "SELECT", "course_id", "FROM", "prereq", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "not", "in", "(", "select", "course_id", "from", "prereq", ")"], "question": "¿Encontrar el nombre de los cursos que no tienen ningún requisito previo?\n", "question_toks": ["Find", "the", "name", "of", "the", "courses", "that", "do", "not", "have", "any", "prerequisite", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "NOT", "IN", "(", "SELECT", "course_id", "FROM", "prereq", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "not", "in", "(", "select", "course_id", "from", "prereq", ")"], "question": "¿Cuáles son los títulos de los cursos sin requisitos previos?\n", "question_toks": ["What", "are", "the", "titles", "of", "courses", "without", "prerequisites", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT COUNT (DISTINCT id) FROM teaches", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "id", ")", "FROM", "teaches"], "query_toks_no_value": ["select", "count", "(", "distinct", "id", ")", "from", "teaches"], "question": "¿Cuántos instructores diferentes han impartido algún curso?\n", "question_toks": ["How", "many", "different", "instructors", "have", "taught", "some", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT COUNT (DISTINCT id) FROM teaches", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "id", ")", "FROM", "teaches"], "query_toks_no_value": ["select", "count", "(", "distinct", "id", ")", "from", "teaches"], "question": "Cuente el número de instructores distintos que han impartido un curso.\n", "question_toks": ["Count", "the", "number", "of", "distinct", "instructors", "who", "have", "taught", "a", "course", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'", "query_toks": ["SELECT", "dept_name", "FROM", "instructor", "WHERE", "name", "LIKE", "'", "%", "Soisalon", "%", "'"], "query_toks_no_value": ["select", "dept_name", "from", "instructor", "where", "name", "like", "value"], "question": "Busque el nombre del departamento del instructor cuyo nombre contiene 'Soisalon'.\n", "question_toks": ["Find", "the", "department", "name", "of", "the", "instructor", "whose", "name", "contains", "'Soisalon", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%Soisalon%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'", "query_toks": ["SELECT", "dept_name", "FROM", "instructor", "WHERE", "name", "LIKE", "'", "%", "Soisalon", "%", "'"], "query_toks_no_value": ["select", "dept_name", "from", "instructor", "where", "name", "like", "value"], "question": "¿Cómo se llama el departamento con una estructura que se llama 'Soisalon'?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "department", "with", "an", "instructure", "who", "has", "a", "name", "like", "'Soisalon", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%Soisalon%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "budget", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "budget", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "Encuentre el nombre y el presupuesto de los departamentos cuyos presupuestos son superiores al presupuesto promedio.\n", "question_toks": ["Find", "the", "name", "and", "budget", "of", "departments", "whose", "budgets", "are", "more", "than", "the", "average", "budget", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)", "query_toks": ["SELECT", "dept_name", ",", "budget", "FROM", "department", "WHERE", "budget", ">", "(", "SELECT", "avg", "(", "budget", ")", "FROM", "department", ")"], "query_toks_no_value": ["select", "dept_name", ",", "budget", "from", "department", "where", "budget", ">", "(", "select", "avg", "(", "budget", ")", "from", "department", ")"], "question": "¿Cuáles son los nombres y presupuestos de los departamentos con presupuestos superiores al promedio?\n", "question_toks": ["What", "are", "the", "names", "and", "budgets", "of", "departments", "with", "budgets", "greater", "than", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "student", "AS", "T1", "JOIN", "takes", "AS", "T2", "ON", "T1.id", "=", "T2.id", "WHERE", "YEAR", "=", "2009", "OR", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "student", "as", "t1", "join", "takes", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "Encuentre el nombre de los estudiantes que tomaron alguna clase en los años 2009 y 2010.\n", "question_toks": ["Find", "the", "name", "of", "students", "who", "took", "any", "class", "in", "the", "years", "of", "2009", "and", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 31, false], null]]}, "select": [true, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], 2009.0, null], "or", [false, 2, [0, [0, 35, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "student", "AS", "T1", "JOIN", "takes", "AS", "T2", "ON", "T1.id", "=", "T2.id", "WHERE", "YEAR", "=", "2009", "OR", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "student", "as", "t1", "join", "takes", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "¿Cómo se llaman los estudiantes que tomaron clases en 2009 o 2010?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "students", "who", "took", "classes", "in", "2009", "or", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 31, false], null]]}, "select": [true, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], 2009.0, null], "or", [false, 2, [0, [0, 35, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'", "query_toks": ["SELECT", "i_id", "FROM", "advisor", "AS", "T1", "JOIN", "student", "AS", "T2", "ON", "T1.s_id", "=", "T2.id", "WHERE", "T2.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "i_id", "from", "advisor", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "s_id", "=", "t2", ".", "id", "where", "t2", ".", "dept_name", "=", "value"], "question": "¿Cuál es la identificación del instructor que asesora a todos los estudiantes del departamento de Historia?\n", "question_toks": ["What", "is", "the", "id", "of", "the", "instructor", "who", "advises", "of", "all", "students", "from", "History", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'", "query_toks": ["SELECT", "i_id", "FROM", "advisor", "AS", "T1", "JOIN", "student", "AS", "T2", "ON", "T1.s_id", "=", "T2.id", "WHERE", "T2.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "i_id", "from", "advisor", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "s_id", "=", "t2", ".", "id", "where", "t2", ".", "dept_name", "=", "value"], "question": "Dar identificación del instructor que asesora a los estudiantes en el departamento de Historia.\n", "question_toks": ["Give", "id", "of", "the", "instructor", "who", "advises", "students", "in", "the", "History", "department", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "¿Encontrar el nombre y salario de los instructores que son asesores de cualquier estudiante del departamento de Historia?\n", "question_toks": ["Find", "the", "name", "and", "salary", "of", "the", "instructors", "who", "are", "advisors", "of", "any", "student", "from", "History", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 37, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "¿Cuáles son los nombres y salarios de los instructores que asesoran a los estudiantes en el departamento de Historia?\n", "question_toks": ["What", "are", "the", "names", "and", "salaries", "of", "instructors", "who", "advises", "students", "in", "the", "History", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 37, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "NOT", "IN", "(", "SELECT", "course_id", "FROM", "prereq", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "not", "in", "(", "select", "course_id", "from", "prereq", ")"], "question": "¿Encontrar el nombre de los cursos que no tienen ningún requisito previo?\n", "question_toks": ["Find", "the", "name", "of", "the", "courses", "that", "do", "not", "have", "any", "prerequisite", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "NOT", "IN", "(", "SELECT", "course_id", "FROM", "prereq", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "not", "in", "(", "select", "course_id", "from", "prereq", ")"], "question": "¿Cuáles son los nombres de los cursos sin requisitos previos?\n", "question_toks": ["What", "are", "the", "names", "of", "courses", "without", "prerequisites", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "IN", "(", "SELECT", "T1.prereq_id", "FROM", "prereq", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T2.title", "=", "'International", "Finance", "'", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "in", "(", "select", "t1", ".", "prereq_id", "from", "prereq", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t2", ".", "title", "=", "value", ")"], "question": "¿Cuál es el título de la clase de requisito previo del curso de Finanzas Internacionales?\n", "question_toks": ["What", "is", "the", "title", "of", "the", "prerequisite", "class", "of", "International", "Finance", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 45, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"International Finance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "IN", "(", "SELECT", "T1.prereq_id", "FROM", "prereq", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T2.title", "=", "'International", "Finance", "'", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "in", "(", "select", "t1", ".", "prereq_id", "from", "prereq", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t2", ".", "title", "=", "value", ")"], "question": "Indique el título del prerrequisito del curso Finanzas Internacionales.\n", "question_toks": ["Give", "the", "title", "of", "the", "prerequisite", "to", "the", "course", "International", "Finance", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 45, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"International Finance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "IN", "(", "SELECT", "T1.course_id", "FROM", "prereq", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.prereq_id", "=", "T2.course_id", "WHERE", "T2.title", "=", "'Differential", "Geometry", "'", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "in", "(", "select", "t1", ".", "course_id", "from", "prereq", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "prereq_id", "=", "t2", ".", "course_id", "where", "t2", ".", "title", "=", "value", ")"], "question": "Encuentre el título del curso cuyo prerrequisito es el curso Geometría Diferencial.\n", "question_toks": ["Find", "the", "title", "of", "course", "whose", "prerequisite", "is", "course", "Differential", "Geometry", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Differential Geometry\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "IN", "(", "SELECT", "T1.course_id", "FROM", "prereq", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.prereq_id", "=", "T2.course_id", "WHERE", "T2.title", "=", "'Differential", "Geometry", "'", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "in", "(", "select", "t1", ".", "course_id", "from", "prereq", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "prereq_id", "=", "t2", ".", "course_id", "where", "t2", ".", "title", "=", "value", ")"], "question": "¿Cuál es el título del curso con Geometría Diferencial como prerrequisito?\n", "question_toks": ["What", "is", "the", "title", "of", "the", "course", "with", "Differential", "Geometry", "as", "a", "prerequisite", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Differential Geometry\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)", "query_toks": ["SELECT", "name", "FROM", "student", "WHERE", "id", "IN", "(", "SELECT", "id", "FROM", "takes", "WHERE", "semester", "=", "'Fall", "'", "AND", "YEAR", "=", "2003", ")"], "query_toks_no_value": ["select", "name", "from", "student", "where", "id", "in", "(", "select", "id", "from", "takes", "where", "semester", "=", "value", "and", "year", "=", "value", ")"], "question": "Encuentre los nombres de los estudiantes que tomaron algún curso en el semestre de otoño del año 2003.\n", "question_toks": ["Find", "the", "names", "of", "students", "who", "have", "taken", "any", "course", "in", "the", "fall", "semester", "of", "year", "2003", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"Fall\"", null], "and", [false, 2, [0, [0, 35, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)", "query_toks": ["SELECT", "name", "FROM", "student", "WHERE", "id", "IN", "(", "SELECT", "id", "FROM", "takes", "WHERE", "semester", "=", "'Fall", "'", "AND", "YEAR", "=", "2003", ")"], "query_toks_no_value": ["select", "name", "from", "student", "where", "id", "in", "(", "select", "id", "from", "takes", "where", "semester", "=", "value", "and", "year", "=", "value", ")"], "question": "¿Cuáles son los nombres de los estudiantes que tomaron un curso en el otoño de 2003?\n", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "took", "a", "course", "in", "the", "Fall", "of", "2003", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"Fall\"", null], "and", [false, 2, [0, [0, 35, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010", "query_toks": ["SELECT", "T1.title", "FROM", "course", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "building", "=", "'Chandler", "'", "AND", "semester", "=", "'Fall", "'", "AND", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "course", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "building", "=", "value", "and", "semester", "=", "value", "and", "year", "=", "value"], "question": "¿Cuál es el título del curso que se ofreció en el edificio Chandler durante el semestre de otoño del año 2010?\n", "question_toks": ["What", "is", "the", "title", "of", "the", "course", "that", "was", "offered", "at", "building", "Chandler", "during", "the", "fall", "semester", "in", "the", "year", "of", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Chandler\"", null], "and", [false, 2, [0, [0, 17, false], null], "\"Fall\"", null], "and", [false, 2, [0, [0, 18, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010", "query_toks": ["SELECT", "T1.title", "FROM", "course", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "building", "=", "'Chandler", "'", "AND", "semester", "=", "'Fall", "'", "AND", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "course", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "building", "=", "value", "and", "semester", "=", "value", "and", "year", "=", "value"], "question": "Dé el título del curso ofrecido en Chandler durante el otoño de 2010.\n", "question_toks": ["Give", "the", "title", "of", "the", "course", "offered", "in", "Chandler", "during", "the", "Fall", "of", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Chandler\"", null], "and", [false, 2, [0, [0, 17, false], null], "\"Fall\"", null], "and", [false, 2, [0, [0, 18, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'", "query_toks": ["SELECT", "T1.name", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.id", "=", "T2.id", "JOIN", "course", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "WHERE", "T3.title", "=", "'C", "Programming", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "join", "course", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "where", "t3", ".", "title", "=", "value"], "question": "Busque el nombre de los instructores que impartieron el curso de programación C anteriormente.\n", "question_toks": ["Find", "the", "name", "of", "the", "instructors", "who", "taught", "C", "Programming", "course", "before", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null], "and", [false, 2, [0, [0, 23, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"C Programming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'", "query_toks": ["SELECT", "T1.name", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.id", "=", "T2.id", "JOIN", "course", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "WHERE", "T3.title", "=", "'C", "Programming", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "join", "course", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "where", "t3", ".", "title", "=", "value"], "question": "¿Cuáles son los nombres de los instructores que han impartido cursos de programación en C?\n", "question_toks": ["What", "are", "the", "names", "of", "instructors", "who", "have", "taught", "C", "Programming", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null], "and", [false, 2, [0, [0, 23, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"C Programming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'Math", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "Encuentre el nombre y salario de los instructores que son asesores de los estudiantes del departamento de Matemáticas.\n", "question_toks": ["Find", "the", "name", "and", "salary", "of", "instructors", "who", "are", "advisors", "of", "the", "students", "from", "the", "Math", "department", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 37, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"Math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'", "query_toks": ["SELECT", "T2.name", ",", "T2.salary", "FROM", "advisor", "AS", "T1", "JOIN", "instructor", "AS", "T2", "ON", "T1.i_id", "=", "T2.id", "JOIN", "student", "AS", "T3", "ON", "T1.s_id", "=", "T3.id", "WHERE", "T3.dept_name", "=", "'Math", "'"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "salary", "from", "advisor", "as", "t1", "join", "instructor", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "id", "join", "student", "as", "t3", "on", "t1", ".", "s_id", "=", "t3", ".", "id", "where", "t3", ".", "dept_name", "=", "value"], "question": "¿Cuáles son los nombres y salarios de los profesores que asesoran a los estudiantes en el departamento de Matemáticas?\n", "question_toks": ["What", "are", "the", "names", "and", "salaries", "of", "instructors", "who", "advise", "students", "in", "the", "Math", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 38, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 37, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"Math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "IN", "(", "SELECT", "T1.prereq_id", "FROM", "prereq", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T2.title", "=", "'Mobile", "Computing", "'", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "in", "(", "select", "t1", ".", "prereq_id", "from", "prereq", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t2", ".", "title", "=", "value", ")"], "question": "¿Cuál es el título del curso de prerrequisito del curso Computación móvil?\n", "question_toks": ["What", "is", "the", "course", "title", "of", "the", "prerequisite", "of", "course", "Mobile", "Computing", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 45, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Mobile Computing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')", "query_toks": ["SELECT", "title", "FROM", "course", "WHERE", "course_id", "IN", "(", "SELECT", "T1.prereq_id", "FROM", "prereq", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T2.title", "=", "'Mobile", "Computing", "'", ")"], "query_toks_no_value": ["select", "title", "from", "course", "where", "course_id", "in", "(", "select", "t1", ".", "prereq_id", "from", "prereq", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t2", ".", "title", "=", "value", ")"], "question": "¿Cuál es el título del curso que es un requisito previo para la Computación Móvil?\n", "question_toks": ["What", "is", "the", "title", "of", "the", "course", "that", "is", "a", "prerequisite", "for", "Mobile", "Computing", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 10], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 45, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Mobile Computing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "id", "FROM", "teaches", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "id", "not", "in", "(", "select", "id", "from", "teaches", ")"], "question": "¿Encontrar el nombre de los instructores que no impartieron ningún curso?\n", "question_toks": ["Find", "the", "name", "of", "instructors", "who", "did", "n't", "teach", "any", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "id", "FROM", "teaches", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "id", "not", "in", "(", "select", "id", "from", "teaches", ")"], "question": "¿Cuáles son los nombres de los instructores que no enseñaron?\n", "question_toks": ["What", "are", "the", "names", "of", "instructors", "who", "did", "n't", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "id", "FROM", "teaches", "WHERE", "semester", "=", "'Spring", "'", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "id", "not", "in", "(", "select", "id", "from", "teaches", "where", "semester", "=", "value", ")"], "question": "Encuentre los nombres de los instructores que no tomaron ningún curso en ningún semestre de primavera.\n", "question_toks": ["Find", "the", "names", "of", "instructors", "who", "did", "n't", "each", "any", "courses", "in", "any", "Spring", "semester", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Spring\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "id", "NOT", "IN", "(", "SELECT", "id", "FROM", "teaches", "WHERE", "semester", "=", "'Spring", "'", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "id", "not", "in", "(", "select", "id", "from", "teaches", "where", "semester", "=", "value", ")"], "question": "¿Cuáles son los nombres de los instructores que no impartieron cursos en la primavera?\n", "question_toks": ["What", "are", "the", "names", "of", "instructors", "who", "did", "n't", "teach", "courses", "in", "the", "Spring", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Spring\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "query_toks": ["SELECT", "T3.title", ",", "T3.credits", "FROM", "classroom", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.building", "=", "T2.building", "AND", "T1.room_number", "=", "T2.room_number", "JOIN", "course", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "WHERE", "T1.capacity", "=", "(", "SELECT", "max", "(", "capacity", ")", "FROM", "classroom", ")"], "query_toks_no_value": ["select", "t3", ".", "title", ",", "t3", ".", "credits", "from", "classroom", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "building", "=", "t2", ".", "building", "and", "t1", ".", "room_number", "=", "t2", ".", "room_number", "join", "course", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "where", "t1", ".", "capacity", "=", "(", "select", "max", "(", "capacity", ")", "from", "classroom", ")"], "question": "¿Cuál es el título y créditos del curso que se imparte en el aula más grande (con mayor capacidad)?\n", "question_toks": ["What", "is", "the", "title", "and", "credits", "of", "the", "course", "that", "is", "taught", "in", "the", "largest", "classroom", "(", "with", "the", "highest", "capacity", ")", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)", "query_toks": ["SELECT", "T3.title", ",", "T3.credits", "FROM", "classroom", "AS", "T1", "JOIN", "SECTION", "AS", "T2", "ON", "T1.building", "=", "T2.building", "AND", "T1.room_number", "=", "T2.room_number", "JOIN", "course", "AS", "T3", "ON", "T2.course_id", "=", "T3.course_id", "WHERE", "T1.capacity", "=", "(", "SELECT", "max", "(", "capacity", ")", "FROM", "classroom", ")"], "query_toks_no_value": ["select", "t3", ".", "title", ",", "t3", ".", "credits", "from", "classroom", "as", "t1", "join", "section", "as", "t2", "on", "t1", ".", "building", "=", "t2", ".", "building", "and", "t1", ".", "room_number", "=", "t2", ".", "room_number", "join", "course", "as", "t3", "on", "t2", ".", "course_id", "=", "t3", ".", "course_id", "where", "t1", ".", "capacity", "=", "(", "select", "max", "(", "capacity", ")", "from", "classroom", ")"], "question": "Dar el título y créditos del curso que se imparte en el aula con mayor capacidad.\n", "question_toks": ["Give", "the", "title", "and", "credits", "for", "the", "course", "that", "is", "taught", "in", "the", "classroom", "with", "the", "greatest", "capacity", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')", "query_toks": ["SELECT", "name", "FROM", "student", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.id", "FROM", "takes", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T2.dept_name", "=", "'Biology", "'", ")"], "query_toks_no_value": ["select", "name", "from", "student", "where", "id", "not", "in", "(", "select", "t1", ".", "id", "from", "takes", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t2", ".", "dept_name", "=", "value", ")"], "question": "Busque el nombre de los estudiantes que no tomaron ningún curso del departamento de Biología.\n", "question_toks": ["Find", "the", "name", "of", "students", "who", "did", "n't", "take", "any", "course", "from", "Biology", "department", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[true, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 7], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')", "query_toks": ["SELECT", "name", "FROM", "student", "WHERE", "id", "NOT", "IN", "(", "SELECT", "T1.id", "FROM", "takes", "AS", "T1", "JOIN", "course", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T2.dept_name", "=", "'Biology", "'", ")"], "query_toks_no_value": ["select", "name", "from", "student", "where", "id", "not", "in", "(", "select", "t1", ".", "id", "from", "takes", "as", "t1", "join", "course", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t2", ".", "dept_name", "=", "value", ")"], "question": "¿Cómo se llaman los estudiantes que no han tomado ningún curso de Biología?\n", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "n't", "taken", "any", "Biology", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[true, 8, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 7], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')", "query_toks": ["SELECT", "T1.name", "FROM", "student", "AS", "T1", "JOIN", "takes", "AS", "T2", "ON", "T1.id", "=", "T2.id", "WHERE", "T2.course_id", "IN", "(", "SELECT", "T4.prereq_id", "FROM", "course", "AS", "T3", "JOIN", "prereq", "AS", "T4", "ON", "T3.course_id", "=", "T4.course_id", "WHERE", "T3.title", "=", "'International", "Finance", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "student", "as", "t1", "join", "takes", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "t2", ".", "course_id", "in", "(", "select", "t4", ".", "prereq_id", "from", "course", "as", "t3", "join", "prereq", "as", "t4", "on", "t3", ".", "course_id", "=", "t4", ".", "course_id", "where", "t3", ".", "title", "=", "value", ")"], "question": "Busque el nombre de los estudiantes que han tomado el curso de requisito previo del curso con título Finanzas Internacionales.\n", "question_toks": ["Find", "the", "name", "of", "students", "who", "have", "taken", "the", "prerequisite", "course", "of", "the", "course", "with", "title", "International", "Finance", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 8, [0, [0, 32, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"International Finance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')", "query_toks": ["SELECT", "T1.name", "FROM", "student", "AS", "T1", "JOIN", "takes", "AS", "T2", "ON", "T1.id", "=", "T2.id", "WHERE", "T2.course_id", "IN", "(", "SELECT", "T4.prereq_id", "FROM", "course", "AS", "T3", "JOIN", "prereq", "AS", "T4", "ON", "T3.course_id", "=", "T4.course_id", "WHERE", "T3.title", "=", "'International", "Finance", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "student", "as", "t1", "join", "takes", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "t2", ".", "course_id", "in", "(", "select", "t4", ".", "prereq_id", "from", "course", "as", "t3", "join", "prereq", "as", "t4", "on", "t3", ".", "course_id", "=", "t4", ".", "course_id", "where", "t3", ".", "title", "=", "value", ")"], "question": "¿Cuáles son los nombres de los estudiantes que han tomado el requisito previo para el curso de Finanzas Internacionales?\n", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "taken", "the", "prerequisite", "for", "the", "course", "International", "Finance", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 31, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 8, [0, [0, 32, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"International Finance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "instructor", "WHERE", "salary", "<", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Physics", "'", ")"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "instructor", "where", "salary", "<", "(", "select", "avg", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "Encuentre el nombre y el salario de los instructores cuyo salario está por debajo del salario promedio de los instructores del departamento de Física.\n", "question_toks": ["Find", "the", "name", "and", "salary", "of", "instructors", "whose", "salary", "is", "below", "the", "average", "salary", "of", "the", "instructors", "in", "the", "Physics", "department", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Physics\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "instructor", "WHERE", "salary", "<", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Physics", "'", ")"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "instructor", "where", "salary", "<", "(", "select", "avg", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "¿Cuáles son los nombres y salarios de los instructores que ganan menos que el salario promedio de los instructores del departamento de Física?\n", "question_toks": ["What", "are", "the", "names", "and", "salaries", "for", "instructors", "who", "earn", "less", "than", "the", "average", "salary", "of", "instructors", "in", "the", "Physics", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Physics\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'", "query_toks": ["SELECT", "T3.name", "FROM", "course", "AS", "T1", "JOIN", "takes", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "JOIN", "student", "AS", "T3", "ON", "T2.id", "=", "T3.id", "WHERE", "T1.dept_name", "=", "'Statistics", "'"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "course", "as", "t1", "join", "takes", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "student", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "id", "where", "t1", ".", "dept_name", "=", "value"], "question": "Encuentre el nombre de los estudiantes que tomaron algún curso ofrecido por el departamento de Estadística.\n", "question_toks": ["Find", "the", "name", "of", "students", "who", "took", "some", "course", "offered", "by", "Statistics", "department", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Statistics\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'", "query_toks": ["SELECT", "T3.name", "FROM", "course", "AS", "T1", "JOIN", "takes", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "JOIN", "student", "AS", "T3", "ON", "T2.id", "=", "T3.id", "WHERE", "T1.dept_name", "=", "'Statistics", "'"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "course", "as", "t1", "join", "takes", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "join", "student", "as", "t3", "on", "t2", ".", "id", "=", "t3", ".", "id", "where", "t1", ".", "dept_name", "=", "value"], "question": "¿Cómo se llaman los estudiantes que han tomado cursos de Estadística?\n", "question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "taken", "Statistics", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 32, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Statistics\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "dept_name", "=", "'Comp", ".", "Sci", ".", "'"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "dept_name", "=", "value"], "question": "Encuentre los nombres de todos los profesores del departamento de informática.\n", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "in", "computer", "science", "department"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Comp. Sci.\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "dept_name", "=", "'Comp", ".", "Sci", ".", "'"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "dept_name", "=", "value"], "question": "¿Cuáles son los nombres de todos los instructores del Comp. Ciencia. ¿departamento?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "instructors", "in", "the", "Comp", ".", "Sci", ".", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Comp. Sci.\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "dept_name", "=", "'Comp", ".", "Sci", ".", "'", "AND", "salary", ">", "80000"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "dept_name", "=", "value", "and", "salary", ">", "value"], "question": "Encuentre los nombres de todos los instructores en Comp. Ciencia. departamento con salario > 80000.\n", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "in", "Comp", ".", "Sci", ".", "department", "with", "salary", ">", "80000", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Comp. Sci.\"", null], "and", [false, 3, [0, [0, 14, false], null], 80000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "dept_name", "=", "'Comp", ".", "Sci", ".", "'", "AND", "salary", ">", "80000"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "dept_name", "=", "value", "and", "salary", ">", "value"], "question": "¿Cuáles son los nombres de los instructores del Comp. Ciencia. departamento que gana más de 80000?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "instructors", "in", "the", "Comp", ".", "Sci", ".", "department", "who", "earn", "more", "than", "80000", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Comp. Sci.\"", null], "and", [false, 3, [0, [0, 14, false], null], 80000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id"], "question": "Busque los nombres de todos los instructores que han impartido algún curso y el course_id.\n", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course_id", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id"], "question": "¿Cuáles son los nombres de todos los instructores que han impartido un curso, así como la identificación del curso correspondiente?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "instructors", "who", "have", "taught", "a", "course", ",", "as", "well", "as", "the", "corresponding", "course", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID", "WHERE", "T1.dept_name", "=", "'Art", "'"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "t1", ".", "dept_name", "=", "value"], "question": "Busque los nombres de todos los instructores del departamento de Arte que hayan impartido algún curso y el course_id.\n", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "in", "the", "Art", "department", "who", "have", "taught", "some", "course", "and", "the", "course_id", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Art\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'", "query_toks": ["SELECT", "name", ",", "course_id", "FROM", "instructor", "AS", "T1", "JOIN", "teaches", "AS", "T2", "ON", "T1.ID", "=", "T2.ID", "WHERE", "T1.dept_name", "=", "'Art", "'"], "query_toks_no_value": ["select", "name", ",", "course_id", "from", "instructor", "as", "t1", "join", "teaches", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "id", "where", "t1", ".", "dept_name", "=", "value"], "question": "¿Cuáles son los nombres de los instructores de arte que han impartido un curso y la identificación del curso correspondiente?\n", "question_toks": ["What", "are", "the", "names", "of", "Art", "instructors", "who", "have", "taught", "a", "course", ",", "and", "the", "corresponding", "course", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 22, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Art\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "name", "LIKE", "'", "%", "dar", "%", "'"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "name", "like", "value"], "question": "Busque los nombres de todos los instructores cuyo nombre incluya la subcadena \"dar\".\n", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "whose", "name", "includes", "the", "substring", "“dar”", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%dar%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "name", "LIKE", "'", "%", "dar", "%", "'"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "name", "like", "value"], "question": "¿Cuáles son los nombres de todos los instructores con nombres que incluyen \"dar\"?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "instructors", "with", "names", "that", "include", "``", "dar", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%dar%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)", "query_toks": ["SELECT", "DISTINCT", "salary", "FROM", "instructor", "WHERE", "salary", "<", "(", "SELECT", "max", "(", "salary", ")", "FROM", "instructor", ")"], "query_toks_no_value": ["select", "distinct", "salary", "from", "instructor", "where", "salary", "<", "(", "select", "max", "(", "salary", ")", "from", "instructor", ")"], "question": "Encuentre los salarios de todos los instructores distintos que sean menores que el salario más alto.\n", "question_toks": ["Find", "the", "salaries", "of", "all", "distinct", "instructors", "that", "are", "less", "than", "the", "largest", "salary", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)", "query_toks": ["SELECT", "DISTINCT", "salary", "FROM", "instructor", "WHERE", "salary", "<", "(", "SELECT", "max", "(", "salary", ")", "FROM", "instructor", ")"], "query_toks_no_value": ["select", "distinct", "salary", "from", "instructor", "where", "salary", "<", "(", "select", "max", "(", "salary", ")", "from", "instructor", ")"], "question": "¿Cuáles son los distintos salarios de todos los instructores que ganaron menos que el salario máximo?\n", "question_toks": ["What", "are", "the", "distinct", "salaries", "of", "all", "instructors", "who", "earned", "less", "than", "the", "maximum", "salary", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "ID", ")", "FROM", "teaches", "WHERE", "semester", "=", "'Spring", "'", "AND", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "count", "(", "distinct", "id", ")", "from", "teaches", "where", "semester", "=", "value", "and", "year", "=", "value"], "question": "Encuentre el número total de instructores que imparten un curso en el semestre de primavera de 2010.\n", "question_toks": ["Find", "the", "total", "number", "of", "instructors", "who", "teach", "a", "course", "in", "the", "Spring", "2010", "semester", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Spring\"", null], "and", [false, 2, [0, [0, 26, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "ID", ")", "FROM", "teaches", "WHERE", "semester", "=", "'Spring", "'", "AND", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "count", "(", "distinct", "id", ")", "from", "teaches", "where", "semester", "=", "value", "and", "year", "=", "value"], "question": "¿Cuántos instructores imparten un curso en la primavera de 2010?\n", "question_toks": ["How", "many", "instructors", "teach", "a", "course", "in", "the", "Spring", "of", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 22, true], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"Spring\"", null], "and", [false, 2, [0, [0, 26, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "salary", ">", "(", "SELECT", "min", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Biology", "'", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "salary", ">", "(", "select", "min", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "Encuentre nombres de instructores con salario mayor que el de algún (al menos uno) instructor en el departamento de Biología.\n", "question_toks": ["Find", "names", "of", "instructors", "with", "salary", "greater", "than", "that", "of", "some", "(", "at", "least", "one", ")", "instructor", "in", "the", "Biology", "department", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "salary", ">", "(", "SELECT", "min", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Biology", "'", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "salary", ">", "(", "select", "min", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "¿Cómo se llaman los instructores que ganan más de al menos un instructor del departamento de Biología?\n", "question_toks": ["What", "are", "the", "names", "of", "instructors", "who", "earn", "more", "than", "at", "least", "one", "instructor", "from", "the", "Biology", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "salary", ">", "(", "SELECT", "max", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Biology", "'", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "salary", ">", "(", "select", "max", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "Encuentre los nombres de todos los instructores cuyo salario es mayor que el salario de todos los instructores del departamento de Biología.\n", "question_toks": ["Find", "the", "names", "of", "all", "instructors", "whose", "salary", "is", "greater", "than", "the", "salary", "of", "all", "instructors", "in", "the", "Biology", "department", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_2", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')", "query_toks": ["SELECT", "name", "FROM", "instructor", "WHERE", "salary", ">", "(", "SELECT", "max", "(", "salary", ")", "FROM", "instructor", "WHERE", "dept_name", "=", "'Biology", "'", ")"], "query_toks_no_value": ["select", "name", "from", "instructor", "where", "salary", ">", "(", "select", "max", "(", "salary", ")", "from", "instructor", "where", "dept_name", "=", "value", ")"], "question": "¿Cuáles son los nombres de todos los instructores con un salario más alto que cualquiera de los instructores del departamento de Biología?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "instructors", "with", "a", "higher", "salary", "than", "any", "of", "the", "instructors", "in", "the", "Biology", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT Date ,  Venue FROM debate", "query_toks": ["SELECT", "Date", ",", "Venue", "FROM", "debate"], "query_toks_no_value": ["select", "date", ",", "venue", "from", "debate"], "question": "¿Cuáles son la fecha y el lugar de cada debate?\n", "question_toks": ["What", "are", "the", "date", "and", "venue", "of", "each", "debate", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150", "query_toks": ["SELECT", "Date", "FROM", "debate", "WHERE", "Num_of_Audience", ">", "150"], "query_toks_no_value": ["select", "date", "from", "debate", "where", "num_of_audience", ">", "value"], "question": "Enumere las fechas de los debates con un número de audiencia superior a 150\n", "question_toks": ["List", "the", "dates", "of", "debates", "with", "number", "of", "audience", "bigger", "than", "150"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "Age", "=", "35", "OR", "Age", "=", "36"], "query_toks_no_value": ["select", "name", "from", "people", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "Muestra los nombres de personas de 35 o 36 años.\n", "question_toks": ["Show", "the", "names", "of", "people", "aged", "either", "35", "or", "36", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 35.0, null], "or", [false, 2, [0, [0, 5, false], null], 36.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT DISTINCT Venue FROM debate", "query_toks": ["SELECT", "DISTINCT", "Venue", "FROM", "debate"], "query_toks_no_value": ["select", "distinct", "venue", "from", "debate"], "question": "Mostrar los distintos lugares de debate\n", "question_toks": ["Show", "the", "distinct", "venues", "of", "debates"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Date", ",", "T2.Venue", "FROM", "debate_people", "AS", "T1", "JOIN", "debate", "AS", "T2", "ON", "T1.Debate_ID", "=", "T2.Debate_ID", "JOIN", "people", "AS", "T3", "ON", "T1.Affirmative", "=", "T3.People_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "date", ",", "t2", ".", "venue", "from", "debate_people", "as", "t1", "join", "debate", "as", "t2", "on", "t1", ".", "debate_id", "=", "t2", ".", "debate_id", "join", "people", "as", "t3", "on", "t1", ".", "affirmative", "=", "t3", ".", "people_id"], "question": "Muestre los nombres de las personas, fechas y lugares de los debates si están en el lado afirmativo.\n", "question_toks": ["Show", "the", "names", "of", "people", ",", "and", "dates", "and", "venues", "of", "debates", "they", "are", "on", "the", "affirmative", "side", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200", "query_toks": ["SELECT", "T3.Name", "FROM", "debate_people", "AS", "T1", "JOIN", "debate", "AS", "T2", "ON", "T1.Debate_ID", "=", "T2.Debate_ID", "JOIN", "people", "AS", "T3", "ON", "T1.Affirmative", "=", "T3.People_ID", "WHERE", "T2.Num_of_Audience", ">", "200"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "debate_people", "as", "t1", "join", "debate", "as", "t2", "on", "t1", ".", "debate_id", "=", "t2", ".", "debate_id", "join", "people", "as", "t3", "on", "t1", ".", "affirmative", "=", "t3", ".", "people_id", "where", "t2", ".", "num_of_audience", ">", "value"], "question": "Muestra los nombres de las personas que están en el lado afirmativo de los debates con un número de audiencia superior a 200.\n", "question_toks": ["Show", "the", "names", "of", "people", "that", "are", "on", "affirmative", "side", "of", "debates", "with", "number", "of", "audience", "bigger", "than", "200", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "debate", "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_id", "NOT", "IN", "(", "SELECT", "Affirmative", "FROM", "debate_people", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "affirmative", "from", "debate_people", ")"], "question": "Enumere los nombres de las personas que no han estado del lado afirmativo de los debates.\n", "question_toks": ["List", "the", "names", "of", "people", "that", "have", "not", "been", "on", "the", "affirmative", "side", "of", "debates", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"", "query_toks": ["SELECT", "policy_type_code", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.customer_details", "=", "``", "Dayana", "Robel", "''"], "query_toks_no_value": ["select", "policy_type_code", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_details", "=", "value"], "question": "Encuentra todos los códigos de tipos de póliza asociados al cliente \"Dayana Robel\"\n", "question_toks": ["Find", "all", "the", "policy", "type", "codes", "associated", "with", "the", "customer", "``", "Dayana", "Robel", "''"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Dayana Robel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"", "query_toks": ["SELECT", "policy_type_code", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.customer_details", "=", "``", "Dayana", "Robel", "''"], "query_toks_no_value": ["select", "policy_type_code", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_details", "=", "value"], "question": "¿Cuáles son los códigos de tipo de las pólizas utilizadas por el cliente \"Dayana Robel\"?\n", "question_toks": ["What", "are", "the", "type", "codes", "of", "the", "policies", "used", "by", "the", "customer", "``", "Dayana", "Robel", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Dayana Robel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)", "query_toks": ["SELECT", "t3.customer_details", "FROM", "claim_headers", "AS", "t1", "JOIN", "policies", "AS", "t2", "ON", "t1.policy_id", "=", "t2.policy_id", "JOIN", "customers", "AS", "t3", "ON", "t2.customer_id", "=", "t3.customer_id", "WHERE", "t1.amount_claimed", "=", "(", "SELECT", "max", "(", "amount_claimed", ")", "FROM", "claim_headers", ")"], "query_toks_no_value": ["select", "t3", ".", "customer_details", "from", "claim_headers", "as", "t1", "join", "policies", "as", "t2", "on", "t1", ".", "policy_id", "=", "t2", ".", "policy_id", "join", "customers", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t1", ".", "amount_claimed", "=", "(", "select", "max", "(", "amount_claimed", ")", "from", "claim_headers", ")"], "question": "¿Cómo se llama el cliente que ha realizado la mayor cantidad de reclamo en un solo reclamo?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "customer", "who", "has", "made", "the", "largest", "amount", "of", "claim", "in", "a", "single", "claim", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)", "query_toks": ["SELECT", "t3.customer_details", "FROM", "claim_headers", "AS", "t1", "JOIN", "policies", "AS", "t2", "ON", "t1.policy_id", "=", "t2.policy_id", "JOIN", "customers", "AS", "t3", "ON", "t2.customer_id", "=", "t3.customer_id", "WHERE", "t1.amount_claimed", "=", "(", "SELECT", "max", "(", "amount_claimed", ")", "FROM", "claim_headers", ")"], "query_toks_no_value": ["select", "t3", ".", "customer_details", "from", "claim_headers", "as", "t1", "join", "policies", "as", "t2", "on", "t1", ".", "policy_id", "=", "t2", ".", "policy_id", "join", "customers", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t1", ".", "amount_claimed", "=", "(", "select", "max", "(", "amount_claimed", ")", "from", "claim_headers", ")"], "question": "¿Qué cliente presentó la mayor cantidad de reclamo en un solo reclamo? Devolver los datos del cliente.\n", "question_toks": ["Which", "customer", "made", "the", "largest", "amount", "of", "claim", "in", "a", "single", "claim", "?", "Return", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)", "query_toks": ["SELECT", "t3.customer_details", "FROM", "claim_headers", "AS", "t1", "JOIN", "policies", "AS", "t2", "ON", "t1.policy_id", "=", "t2.policy_id", "JOIN", "customers", "AS", "t3", "ON", "t2.customer_id", "=", "t3.customer_id", "WHERE", "t1.amount_piad", "=", "(", "SELECT", "min", "(", "amount_piad", ")", "FROM", "claim_headers", ")"], "query_toks_no_value": ["select", "t3", ".", "customer_details", "from", "claim_headers", "as", "t1", "join", "policies", "as", "t2", "on", "t1", ".", "policy_id", "=", "t2", ".", "policy_id", "join", "customers", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t1", ".", "amount_piad", "=", "(", "select", "min", "(", "amount_piad", ")", "from", "claim_headers", ")"], "question": "¿Cómo se llama el cliente que ha realizado el pago mínimo en un solo reclamo?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "customer", "who", "has", "made", "the", "minimum", "amount", "of", "payment", "in", "one", "claim", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)", "query_toks": ["SELECT", "t3.customer_details", "FROM", "claim_headers", "AS", "t1", "JOIN", "policies", "AS", "t2", "ON", "t1.policy_id", "=", "t2.policy_id", "JOIN", "customers", "AS", "t3", "ON", "t2.customer_id", "=", "t3.customer_id", "WHERE", "t1.amount_piad", "=", "(", "SELECT", "min", "(", "amount_piad", ")", "FROM", "claim_headers", ")"], "query_toks_no_value": ["select", "t3", ".", "customer_details", "from", "claim_headers", "as", "t1", "join", "policies", "as", "t2", "on", "t1", ".", "policy_id", "=", "t2", ".", "policy_id", "join", "customers", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t1", ".", "amount_piad", "=", "(", "select", "min", "(", "amount_piad", ")", "from", "claim_headers", ")"], "question": "¿Qué cliente presentó la menor cantidad de reclamo en un solo reclamo? Devolver los datos del cliente.\n", "question_toks": ["Which", "customer", "made", "the", "smallest", "amount", "of", "claim", "in", "one", "claim", "?", "Return", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"", "query_toks": ["SELECT", "customer_details", "FROM", "customers", "WHERE", "customer_details", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "customer_details", "from", "customers", "where", "customer_details", "like", "value"], "question": "Encuentre los nombres de los clientes cuyo nombre contiene \"Diana\".\n", "question_toks": ["Find", "the", "names", "of", "customers", "whose", "name", "contains", "``", "Diana", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"", "query_toks": ["SELECT", "customer_details", "FROM", "customers", "WHERE", "customer_details", "LIKE", "``", "%", "Diana", "%", "''"], "query_toks_no_value": ["select", "customer_details", "from", "customers", "where", "customer_details", "like", "value"], "question": "¿Qué clientes tienen la subcadena \"Diana\" en sus nombres? Devolver los datos del cliente.\n", "question_toks": ["Which", "customers", "have", "the", "substring", "``", "Diana", "''", "in", "their", "names", "?", "Return", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Diana%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"", "query_toks": ["SELECT", "DISTINCT", "t2.customer_details", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.policy_type_code", "=", "``", "Deputy", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "customer_details", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "policy_type_code", "=", "value"], "question": "Encuentre los nombres de los clientes que tienen una póliza adjunta.\n", "question_toks": ["Find", "the", "names", "of", "the", "customers", "who", "have", "an", "deputy", "policy", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Deputy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"", "query_toks": ["SELECT", "DISTINCT", "t2.customer_details", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.policy_type_code", "=", "``", "Deputy", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "customer_details", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "policy_type_code", "=", "value"], "question": "¿Qué clientes tienen una póliza de seguro con el código tipo \"Diputado\"? Dame los datos del cliente.\n", "question_toks": ["Which", "customers", "have", "an", "insurance", "policy", "with", "the", "type", "code", "``", "Deputy", "''", "?", "Give", "me", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Deputy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"", "query_toks": ["SELECT", "DISTINCT", "t2.customer_details", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.policy_type_code", "=", "``", "Deputy", "''", "OR", "t1.policy_type_code", "=", "``", "Uniform", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "customer_details", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "policy_type_code", "=", "value", "or", "t1", ".", "policy_type_code", "=", "value"], "question": "Encuentre los nombres de los clientes que tienen una póliza adjunta o una póliza uniformada.\n", "question_toks": ["Find", "the", "names", "of", "customers", "who", "either", "have", "an", "deputy", "policy", "or", "uniformed", "policy", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Deputy\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Uniform\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"", "query_toks": ["SELECT", "DISTINCT", "t2.customer_details", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.policy_type_code", "=", "``", "Deputy", "''", "OR", "t1.policy_type_code", "=", "``", "Uniform", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "customer_details", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "policy_type_code", "=", "value", "or", "t1", ".", "policy_type_code", "=", "value"], "question": "¿Qué clientes tienen una póliza de seguro con el código tipo \"Diputado\" o \"Uniforme\"? Devolver los datos del cliente.\n", "question_toks": ["Which", "customers", "have", "an", "insurance", "policy", "with", "the", "type", "code", "``", "Deputy", "''", "or", "``", "Uniform", "''", "?", "Return", "the", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Deputy\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Uniform\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"", "query_toks": ["SELECT", "claim_status_description", "FROM", "claims_processing_stages", "WHERE", "claim_status_name", "=", "``", "Open", "''"], "query_toks_no_value": ["select", "claim_status_description", "from", "claims_processing_stages", "where", "claim_status_name", "=", "value"], "question": "¿Cuál es la descripción del estado del reclamo \"Abierto\"?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "claim", "status", "``", "Open", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Open\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"", "query_toks": ["SELECT", "claim_status_description", "FROM", "claims_processing_stages", "WHERE", "claim_status_name", "=", "``", "Open", "''"], "query_toks_no_value": ["select", "claim_status_description", "from", "claims_processing_stages", "where", "claim_status_name", "=", "value"], "question": "Encuentre la descripción del estado del reclamo \"Abierto\".\n", "question_toks": ["Find", "the", "description", "of", "the", "claim", "status", "``", "Open", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Open\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)", "query_toks": ["SELECT", "t2.customer_details", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.start_date", "=", "(", "SELECT", "max", "(", "start_date", ")", "FROM", "policies", ")"], "query_toks_no_value": ["select", "t2", ".", "customer_details", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "start_date", "=", "(", "select", "max", "(", "start_date", ")", "from", "policies", ")"], "question": "¿Qué cliente está asociado con la última póliza?\n", "question_toks": ["Which", "customer", "is", "associated", "with", "the", "latest", "policy", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_and_eClaims", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)", "query_toks": ["SELECT", "t2.customer_details", "FROM", "policies", "AS", "t1", "JOIN", "customers", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.start_date", "=", "(", "SELECT", "max", "(", "start_date", ")", "FROM", "policies", ")"], "query_toks_no_value": ["select", "t2", ".", "customer_details", "from", "policies", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "start_date", "=", "(", "select", "max", "(", "start_date", ")", "from", "policies", ")"], "question": "Encuentre el cliente que inició una póliza más recientemente.\n", "question_toks": ["Find", "the", "customer", "who", "started", "a", "policy", "most", "recently", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "from", "accounts"], "question": "Muestre la identificación, la fecha de apertura de la cuenta, el nombre de la cuenta y otros detalles de la cuenta para todas las cuentas.\n", "question_toks": ["Show", "the", "id", ",", "the", "date", "of", "account", "opened", ",", "the", "account", "name", ",", "and", "other", "account", "detail", "for", "all", "accounts", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "date_account_opened", ",", "account_name", ",", "other_account_details", "from", "accounts"], "question": "¿Cuáles son los identificadores, la fecha de apertura, el nombre y otros detalles de todas las cuentas?\n", "question_toks": ["What", "are", "the", "ids", ",", "date", "opened", ",", "name", ",", "and", "other", "details", "for", "all", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'", "query_toks": ["SELECT", "T1.account_id", ",", "T1.date_account_opened", ",", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "'Meaghan", "'"], "query_toks_no_value": ["select", "t1", ".", "account_id", ",", "t1", ".", "date_account_opened", ",", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value"], "question": "Muestre la identificación, el nombre de la cuenta y otros detalles de la cuenta para todas las cuentas del cliente con el nombre 'Meaghan'.\n", "question_toks": ["Show", "the", "id", ",", "the", "account", "name", ",", "and", "other", "account", "details", "for", "all", "accounts", "by", "the", "customer", "with", "first", "name", "'Meaghan", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'", "query_toks": ["SELECT", "T1.account_id", ",", "T1.date_account_opened", ",", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "'Meaghan", "'"], "query_toks_no_value": ["select", "t1", ".", "account_id", ",", "t1", ".", "date_account_opened", ",", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value"], "question": "¿Cuáles son los identificadores, nombres, fechas de apertura y otros detalles de las cuentas correspondientes al cliente con el nombre \"Meaghan\"?\n", "question_toks": ["What", "are", "the", "ids", ",", "names", ",", "dates", "of", "opening", ",", "and", "other", "details", "for", "accounts", "corresponding", "to", "the", "customer", "with", "the", "first", "name", "``", "Meaghan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "query_toks": ["SELECT", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "``", "Meaghan", "''", "AND", "T2.customer_last_name", "=", "``", "Keeling", "''"], "query_toks_no_value": ["select", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value", "and", "t2", ".", "customer_last_name", "=", "value"], "question": "Muestre el nombre de la cuenta y otros detalles de la cuenta para todas las cuentas del cliente con el nombre Meaghan y el apellido Keeling.\n", "question_toks": ["Show", "the", "account", "name", "and", "other", "account", "detail", "for", "all", "accounts", "by", "the", "customer", "with", "first", "name", "Meaghan", "and", "last", "name", "Keeling", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"Keeling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"", "query_toks": ["SELECT", "T1.account_name", ",", "T1.other_account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.customer_first_name", "=", "``", "Meaghan", "''", "AND", "T2.customer_last_name", "=", "``", "Keeling", "''"], "query_toks_no_value": ["select", "t1", ".", "account_name", ",", "t1", ".", "other_account_details", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "customer_first_name", "=", "value", "and", "t2", ".", "customer_last_name", "=", "value"], "question": "¿Cuáles son los nombres y otros detalles de las cuentas correspondientes al cliente llamado Meaghan Keeling?\n", "question_toks": ["What", "are", "the", "names", "and", "other", "details", "for", "accounts", "corresponding", "to", "the", "customer", "named", "Meaghan", "Keeling", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Meaghan\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"Keeling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "900", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "Muestre el nombre y apellido del cliente con nombre de cuenta 900.\n", "question_toks": ["Show", "the", "first", "name", "and", "last", "name", "for", "the", "customer", "with", "account", "name", "900", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"900\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", "FROM", "Accounts", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.account_name", "=", "``", "900", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", "from", "accounts", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "account_name", "=", "value"], "question": "¿Cuáles son los nombres completos de los clientes con el nombre de cuenta 900?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "customers", "with", "the", "account", "name", "900", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"900\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", ",", "T1.phone_number", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", ",", "t1", ".", "phone_number", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "Muestre los nombres, apellidos y números de teléfono únicos de todos los clientes con cualquier cuenta.\n", "question_toks": ["Show", "the", "unique", "first", "names", ",", "last", "names", ",", "and", "phone", "numbers", "for", "all", "customers", "with", "any", "account", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "DISTINCT", "T1.customer_first_name", ",", "T1.customer_last_name", ",", "T1.phone_number", "FROM", "Customers", "AS", "T1", "JOIN", "Accounts", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_first_name", ",", "t1", ".", "customer_last_name", ",", "t1", ".", "phone_number", "from", "customers", "as", "t1", "join", "accounts", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "¿Cuáles son los nombres, apellidos y números de teléfono distintos de los clientes con cuentas?\n", "question_toks": ["What", "are", "the", "distinct", "first", "names", ",", "last", "names", ",", "and", "phone", "numbers", "for", "customers", "with", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)", "query_toks": ["SELECT", "transaction_id", "FROM", "Financial_transactions", "WHERE", "transaction_amount", ">", "(", "SELECT", "avg", "(", "transaction_amount", ")", "FROM", "Financial_transactions", ")"], "query_toks_no_value": ["select", "transaction_id", "from", "financial_transactions", "where", "transaction_amount", ">", "(", "select", "avg", "(", "transaction_amount", ")", "from", "financial_transactions", ")"], "question": "Muestra identificadores de todas las transacciones cuyos montos sean mayores que el promedio.\n", "question_toks": ["Show", "ids", "for", "all", "transactions", "whose", "amounts", "are", "greater", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 3, [0, [0, 40, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[5, [0, [0, 40, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)", "query_toks": ["SELECT", "transaction_id", "FROM", "Financial_transactions", "WHERE", "transaction_amount", ">", "(", "SELECT", "avg", "(", "transaction_amount", ")", "FROM", "Financial_transactions", ")"], "query_toks_no_value": ["select", "transaction_id", "from", "financial_transactions", "where", "transaction_amount", ">", "(", "select", "avg", "(", "transaction_amount", ")", "from", "financial_transactions", ")"], "question": "¿Cuáles son los identificadores de las transacciones que tienen un monto mayor que el monto promedio de una transacción?\n", "question_toks": ["What", "are", "the", "ids", "for", "transactions", "that", "have", "an", "amount", "greater", "than", "the", "average", "amount", "of", "a", "transaction", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 3, [0, [0, 40, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[5, [0, [0, 40, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT DISTINCT product_size FROM Products", "query_toks": ["SELECT", "DISTINCT", "product_size", "FROM", "Products"], "query_toks_no_value": ["select", "distinct", "product_size", "from", "products"], "question": "Mostrar todos los tamaños de productos.\n", "question_toks": ["Show", "all", "product", "sizes", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT DISTINCT product_size FROM Products", "query_toks": ["SELECT", "DISTINCT", "product_size", "FROM", "Products"], "query_toks_no_value": ["select", "distinct", "product_size", "from", "products"], "question": "¿Cuáles son los diferentes tamaños de productos?\n", "question_toks": ["What", "are", "the", "different", "product", "sizes", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT DISTINCT product_color FROM Products", "query_toks": ["SELECT", "DISTINCT", "product_color", "FROM", "Products"], "query_toks_no_value": ["select", "distinct", "product_color", "from", "products"], "question": "Mostrar todos los colores del producto.\n", "question_toks": ["Show", "all", "product", "colors", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT DISTINCT product_color FROM Products", "query_toks": ["SELECT", "DISTINCT", "product_color", "FROM", "Products"], "query_toks_no_value": ["select", "distinct", "product_color", "from", "products"], "question": "¿Cuáles son los diferentes colores de los productos?\n", "question_toks": ["What", "are", "the", "different", "product", "colors", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.order_id", ",", "T2.order_details", "FROM", "Invoices", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "order_id", ",", "t2", ".", "order_details", "from", "invoices", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id"], "question": "Muestre las fechas de las facturas, la identificación del pedido y los detalles de todas las facturas.\n", "question_toks": ["Show", "invoice", "dates", "and", "order", "id", "and", "details", "for", "all", "invoices", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_invoices", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id", "query_toks": ["SELECT", "T1.invoice_date", ",", "T1.order_id", ",", "T2.order_details", "FROM", "Invoices", "AS", "T1", "JOIN", "Orders", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id"], "query_toks_no_value": ["select", "t1", ".", "invoice_date", ",", "t1", ".", "order_id", ",", "t2", ".", "order_details", "from", "invoices", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id"], "question": "¿Cuáles son las fechas de las facturas, los identificadores de los pedidos y los detalles de los pedidos de todas las facturas?\n", "question_toks": ["What", "are", "the", "invoice", "dates", ",", "order", "ids", ",", "and", "order", "details", "for", "all", "invoices", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT name ,  open_date ,  organized_by FROM Church", "query_toks": ["SELECT", "name", ",", "open_date", ",", "organized_by", "FROM", "Church"], "query_toks_no_value": ["select", "name", ",", "open_date", ",", "organized_by", "from", "church"], "question": "Muestre el nombre, la fecha de apertura y el organizador de todas las iglesias.\n", "question_toks": ["Show", "the", "name", ",", "open", "date", ",", "and", "organizer", "for", "all", "churches", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840", "query_toks": ["SELECT", "organized_by", ",", "name", "FROM", "church", "WHERE", "open_date", "BETWEEN", "1830", "AND", "1840"], "query_toks_no_value": ["select", "organized_by", ",", "name", "from", "church", "where", "open_date", "between", "value", "and", "value"], "question": "Muestre el organizador y el nombre de las iglesias que abrieron entre 1830 y 1840.\n", "question_toks": ["Show", "the", "organizer", "and", "name", "for", "churches", "that", "opened", "between", "1830", "and", "1840", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 1830.0, 1840.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)", "query_toks": ["SELECT", "name", ",", "country", "FROM", "people", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "people", ")"], "query_toks_no_value": ["select", "name", ",", "country", "from", "people", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "people", ")"], "question": "Muestra el nombre y el país de todas las personas cuya edad sea menor que el promedio.\n", "question_toks": ["Show", "the", "name", "and", "country", "for", "all", "people", "whose", "age", "is", "smaller", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "wedding", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.male_id", "=", "T2.people_id", "JOIN", "people", "AS", "T3", "ON", "T1.female_id", "=", "T3.people_id", "WHERE", "T1.year", ">", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "wedding", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "male_id", "=", "t2", ".", "people_id", "join", "people", "as", "t3", "on", "t1", ".", "female_id", "=", "t3", ".", "people_id", "where", "t1", ".", "year", ">", "value"], "question": "Mostrar la pareja de nombres masculino y femenino en todas las bodas posteriores al año 2014.\n", "question_toks": ["Show", "the", "pair", "of", "male", "and", "female", "names", "in", "all", "weddings", "after", "year", "2014"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)", "query_toks": ["SELECT", "name", ",", "age", "FROM", "people", "WHERE", "is_male", "=", "'T", "'", "AND", "people_id", "NOT", "IN", "(", "SELECT", "male_id", "FROM", "wedding", ")"], "query_toks_no_value": ["select", "name", ",", "age", "from", "people", "where", "is_male", "=", "value", "and", "people_id", "not", "in", "(", "select", "male_id", "from", "wedding", ")"], "question": "Muestra el nombre y la edad de todos los hombres que no se casan.\n", "question_toks": ["Show", "the", "name", "and", "age", "for", "all", "male", "people", "who", "do", "n't", "have", "a", "wedding", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"T\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada'", "query_toks": ["SELECT", "T2.name", "FROM", "wedding", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.female_id", "=", "T2.people_id", "WHERE", "T1.year", "=", "2016", "AND", "T2.is_male", "=", "'F", "'", "AND", "T2.country", "=", "'Canada", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "wedding", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "female_id", "=", "t2", ".", "people_id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "is_male", "=", "value", "and", "t2", ".", "country", "=", "value"], "question": "Muestre los nombres de todas las mujeres de Canadá que se casarán en el año 2016.\n", "question_toks": ["Show", "the", "names", "for", "all", "females", "from", "Canada", "having", "a", "wedding", "in", "year", "2016", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null], "and", [false, 2, [0, [0, 4, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30", "query_toks": ["SELECT", "T4.name", "FROM", "wedding", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.male_id", "=", "T2.people_id", "JOIN", "people", "AS", "T3", "ON", "T1.female_id", "=", "T3.people_id", "JOIN", "church", "AS", "T4", "ON", "T4.church_id", "=", "T1.church_id", "WHERE", "T2.age", ">", "30", "OR", "T3.age", ">", "30"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "wedding", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "male_id", "=", "t2", ".", "people_id", "join", "people", "as", "t3", "on", "t1", ".", "female_id", "=", "t3", ".", "people_id", "join", "church", "as", "t4", "on", "t4", ".", "church_id", "=", "t1", ".", "church_id", "where", "t2", ".", "age", ">", "value", "or", "t3", ".", "age", ">", "value"], "question": "Muestre los nombres de las iglesias para las bodas de todas las personas mayores de 30 años.\n", "question_toks": ["Show", "the", "church", "names", "for", "the", "weddings", "of", "all", "people", "older", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 30.0, null], "or", [false, 3, [0, [0, 5, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wedding", "query": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "church_id", ")", "FROM", "wedding", "WHERE", "YEAR", "=", "2016"], "query_toks_no_value": ["select", "count", "(", "distinct", "church_id", ")", "from", "wedding", "where", "year", "=", "value"], "question": "¿Cuántas iglesias tienen una boda en el año 2016?\n", "question_toks": ["How", "many", "churches", "have", "a", "wedding", "in", "year", "2016", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT DISTINCT country FROM artist", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "country", "from", "artist"], "question": "¿Cuáles son todos los países distintos para los artistas?\n", "question_toks": ["What", "are", "all", "distinct", "country", "for", "artists", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT DISTINCT country FROM artist", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "country", "from", "artist"], "question": "Devolver los diferentes países para artistas.\n", "question_toks": ["Return", "the", "different", "countries", "for", "artists", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "Muestra todos los nombres de los artistas y el año en que se unieron que no son de Estados Unidos.\n", "question_toks": ["Show", "all", "artist", "names", "and", "the", "year", "joined", "who", "are", "not", "from", "United", "States", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "¿Cuáles son los nombres y año de incorporación para los artistas que no tienen el país \"Estados Unidos\"?\n", "question_toks": ["What", "are", "the", "names", "and", "year", "of", "joining", "for", "artists", "that", "do", "not", "have", "the", "country", "``", "United", "States", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "Tema del espectáculo y año para todas las exposiciones con precios de entradas inferiores a 15.\n", "question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "with", "ticket", "prices", "lower", "than", "15", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "¿Cuál es el tema y el año de todas las exposiciones cuyo precio de entrada es menor de 15 años?\n", "question_toks": ["What", "are", "the", "theme", "and", "year", "for", "all", "exhibitions", "that", "have", "a", "ticket", "price", "under", "15", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "query_toks": ["SELECT", "name", "FROM", "artist", "WHERE", "artist_id", "NOT", "IN", "(", "SELECT", "artist_id", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "exhibition", ")"], "question": "Mostrar nombres de artistas sin exposición alguna.\n", "question_toks": ["Show", "names", "for", "artists", "without", "any", "exhibition", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "query_toks": ["SELECT", "name", "FROM", "artist", "WHERE", "artist_id", "NOT", "IN", "(", "SELECT", "artist_id", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "exhibition", ")"], "question": "¿Cómo se llaman los artistas que no han tenido exposiciones?\n", "question_toks": ["What", "are", "the", "names", "of", "artists", "that", "have", "not", "had", "any", "exhibitions", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "query_toks": ["SELECT", "T1.theme", ",", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.ticket_price", ">", "(", "SELECT", "avg", "(", "ticket_price", ")", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "t1", ".", "theme", ",", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "ticket_price", ">", "(", "select", "avg", "(", "ticket_price", ")", "from", "exhibition", ")"], "question": "¿Cuál es el tema y el nombre del artista para la exposición con un precio de entrada superior al promedio?\n", "question_toks": ["What", "is", "the", "theme", "and", "artist", "name", "for", "the", "exhibition", "with", "a", "ticket", "price", "higher", "than", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "query_toks": ["SELECT", "T1.theme", ",", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.ticket_price", ">", "(", "SELECT", "avg", "(", "ticket_price", ")", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "t1", ".", "theme", ",", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "ticket_price", ">", "(", "select", "avg", "(", "ticket_price", ")", "from", "exhibition", ")"], "question": "Devolver los nombres de los artistas y los temas de sus exposiciones que tuvieron un precio de entrada superior al promedio.\n", "question_toks": ["Return", "the", "names", "of", "artists", "and", "the", "themes", "of", "their", "exhibitions", "that", "had", "a", "ticket", "price", "higher", "than", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "¿Cuál es el tema, fecha y asistencia a la exposición en el año 2004?\n", "question_toks": ["What", "is", "the", "theme", ",", "date", ",", "and", "attendance", "for", "the", "exhibition", "in", "year", "2004", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 2004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "Devuelva los temas, fechas y asistencia a las exposiciones realizadas en 2004.\n", "question_toks": ["Return", "the", "themes", ",", "dates", ",", "and", "attendance", "for", "exhibitions", "that", "happened", "in", "2004", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 2004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT i_id FROM item WHERE title  =  \"orange\"", "query_toks": ["SELECT", "i_id", "FROM", "item", "WHERE", "title", "=", "``", "orange", "''"], "query_toks_no_value": ["select", "i_id", "from", "item", "where", "title", "=", "value"], "question": "Busque la identificación del elemento cuyo título es \"naranja\".\n", "question_toks": ["Find", "the", "id", "of", "the", "item", "whose", "title", "is", "``", "orange", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"orange\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT * FROM item", "query_toks": ["SELECT", "*", "FROM", "item"], "query_toks_no_value": ["select", "*", "from", "item"], "question": "Enumere toda la información en la tabla de elementos.\n", "question_toks": ["List", "all", "information", "in", "the", "item", "table", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)", "query_toks": ["SELECT", "name", "FROM", "useracct", "WHERE", "u_id", "NOT", "IN", "(", "SELECT", "u_id", "FROM", "review", ")"], "query_toks_no_value": ["select", "name", "from", "useracct", "where", "u_id", "not", "in", "(", "select", "u_id", "from", "review", ")"], "question": "Encuentra los nombres de los usuarios que no dejaron ninguna reseña.\n", "question_toks": ["Find", "the", "names", "of", "users", "who", "did", "not", "leave", "any", "review", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10", "query_toks": ["SELECT", "T1.title", "FROM", "item", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.i_id", "=", "T2.i_id", "WHERE", "T2.rating", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "item", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "i_id", "where", "t2", ".", "rating", "=", "value"], "question": "Encuentre los nombres de los productos que reciben una calificación de 10.\n", "question_toks": ["Find", "the", "names", "of", "goods", "that", "receive", "a", "rating", "of", "10", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)", "query_toks": ["SELECT", "T1.title", "FROM", "item", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.i_id", "=", "T2.i_id", "WHERE", "T2.rating", ">", "(", "SELECT", "avg", "(", "rating", ")", "FROM", "review", ")"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "item", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "i_id", "where", "t2", ".", "rating", ">", "(", "select", "avg", "(", "rating", ")", "from", "review", ")"], "question": "Encuentre los títulos de los elementos cuya calificación sea superior a la calificación promedio de revisión de todos los elementos.\n", "question_toks": ["Find", "the", "titles", "of", "items", "whose", "rating", "is", "higher", "than", "the", "average", "review", "rating", "of", "all", "items", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5", "query_toks": ["SELECT", "T1.title", "FROM", "item", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.i_id", "=", "T2.i_id", "WHERE", "T2.rating", "<", "5"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "item", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "i_id", "where", "t2", ".", "rating", "<", "value"], "question": "Encuentre los títulos de los elementos que recibieron una calificación inferior a 5.\n", "question_toks": ["Find", "the", "titles", "of", "items", "that", "received", "any", "rating", "below", "5", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)", "query_toks": ["SELECT", "title", "FROM", "item", "WHERE", "i_id", "NOT", "IN", "(", "SELECT", "i_id", "FROM", "review", ")"], "query_toks_no_value": ["select", "title", "from", "item", "where", "i_id", "not", "in", "(", "select", "i_id", "from", "review", ")"], "question": "Busque los nombres de los artículos que no recibieron ninguna reseña.\n", "question_toks": ["Find", "the", "names", "of", "the", "items", "that", "did", "not", "receive", "any", "review", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "epinions_1", "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)", "query_toks": ["SELECT", "name", "FROM", "useracct", "WHERE", "u_id", "NOT", "IN", "(", "SELECT", "u_id", "FROM", "review", ")"], "query_toks_no_value": ["select", "name", "from", "useracct", "where", "u_id", "not", "in", "(", "select", "u_id", "from", "review", ")"], "question": "Encuentra los nombres de los usuarios que no dejaron ninguna reseña.\n", "question_toks": ["Find", "the", "names", "of", "users", "who", "did", "not", "leave", "any", "review", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT Gender ,  Occupation FROM player", "query_toks": ["SELECT", "Gender", ",", "Occupation", "FROM", "player"], "query_toks_no_value": ["select", "gender", ",", "occupation", "from", "player"], "question": "¿Cuáles son el género y la ocupación de los jugadores?\n", "question_toks": ["What", "are", "the", "gender", "and", "occupation", "of", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\"", "query_toks": ["SELECT", "Player_name", ",", "residence", "FROM", "player", "WHERE", "Occupation", "!", "=", "``", "Researcher", "''"], "query_toks_no_value": ["select", "player_name", ",", "residence", "from", "player", "where", "occupation", "!", "=", "value"], "question": "Indique el nombre y la residencia de los jugadores cuya ocupación no sea \"Investigador\".\n", "question_toks": ["List", "the", "name", "and", "residence", "for", "players", "whose", "occupation", "is", "not", "``", "Researcher", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"Researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\"", "query_toks": ["SELECT", "Sponsor_name", "FROM", "player", "WHERE", "Residence", "=", "``", "Brandon", "''", "OR", "Residence", "=", "``", "Birtle", "''"], "query_toks_no_value": ["select", "sponsor_name", "from", "player", "where", "residence", "=", "value", "or", "residence", "=", "value"], "question": "Muestra los nombres de los patrocinadores de los jugadores cuya residencia es \"Brandon\" o \"Birtle\".\n", "question_toks": ["Show", "the", "names", "of", "sponsors", "of", "players", "whose", "residence", "is", "either", "``", "Brandon", "''", "or", "``", "Birtle", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Brandon\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Birtle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID", "query_toks": ["SELECT", "T3.Player_name", ",", "T2.coach_name", "FROM", "player_coach", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.Coach_ID", "=", "T2.Coach_ID", "JOIN", "player", "AS", "T3", "ON", "T1.Player_ID", "=", "T3.Player_ID"], "query_toks_no_value": ["select", "t3", ".", "player_name", ",", "t2", ".", "coach_name", "from", "player_coach", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "coach_id", "=", "t2", ".", "coach_id", "join", "player", "as", "t3", "on", "t1", ".", "player_id", "=", "t3", ".", "player_id"], "question": "Muestra los nombres de los jugadores y los nombres de sus entrenadores.\n", "question_toks": ["Show", "the", "names", "of", "players", "and", "names", "of", "their", "coaches", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1", "query_toks": ["SELECT", "T3.Player_name", "FROM", "player_coach", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.Coach_ID", "=", "T2.Coach_ID", "JOIN", "player", "AS", "T3", "ON", "T1.Player_ID", "=", "T3.Player_ID", "WHERE", "T2.Rank", "=", "1"], "query_toks_no_value": ["select", "t3", ".", "player_name", "from", "player_coach", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "coach_id", "=", "t2", ".", "coach_id", "join", "player", "as", "t3", "on", "t1", ".", "player_id", "=", "t3", ".", "player_id", "where", "t2", ".", "rank", "=", "value"], "question": "Muestra los nombres de los jugadores entrenados por el entrenador de rango 1.\n", "question_toks": ["Show", "the", "names", "of", "players", "coached", "by", "the", "rank", "1", "coach", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011", "query_toks": ["SELECT", "T3.Player_name", ",", "T3.gender", "FROM", "player_coach", "AS", "T1", "JOIN", "coach", "AS", "T2", "ON", "T1.Coach_ID", "=", "T2.Coach_ID", "JOIN", "player", "AS", "T3", "ON", "T1.Player_ID", "=", "T3.Player_ID", "WHERE", "T1.Starting_year", ">", "2011"], "query_toks_no_value": ["select", "t3", ".", "player_name", ",", "t3", ".", "gender", "from", "player_coach", "as", "t1", "join", "coach", "as", "t2", "on", "t1", ".", "coach_id", "=", "t2", ".", "coach_id", "join", "player", "as", "t3", "on", "t1", ".", "player_id", "=", "t3", ".", "player_id", "where", "t1", ".", "starting_year", ">", "value"], "question": "Muestra los nombres y géneros de los jugadores con entrenador a partir de 2011.\n", "question_toks": ["Show", "the", "names", "and", "genders", "of", "players", "with", "a", "coach", "starting", "after", "2011", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 2011.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "riding_club", "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)", "query_toks": ["SELECT", "Player_name", "FROM", "player", "WHERE", "Player_ID", "NOT", "IN", "(", "SELECT", "Player_ID", "FROM", "player_coach", ")"], "query_toks_no_value": ["select", "player_name", "from", "player", "where", "player_id", "not", "in", "(", "select", "player_id", "from", "player_coach", ")"], "question": "Enumere los nombres de los jugadores que no tienen entrenador.\n", "question_toks": ["List", "the", "names", "of", "players", "that", "do", "not", "have", "coaches", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gymnast", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "query_toks": ["SELECT", "T2.Name", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id"], "question": "¿Cómo se llaman las gimnastas?\n", "question_toks": ["What", "are", "the", "names", "of", "gymnasts", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gymnast", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID", "query_toks": ["SELECT", "T2.Name", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id"], "question": "Devuelve los nombres de las gimnastas.\n", "question_toks": ["Return", "the", "names", "of", "the", "gymnasts", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gymnast", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"", "query_toks": ["SELECT", "T2.Name", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID", "WHERE", "T2.Hometown", "!", "=", "``", "Santo", "Domingo", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id", "where", "t2", ".", "hometown", "!", "=", "value"], "question": "¿Cómo se llaman las gimnastas cuya ciudad natal no es \"Santo Domingo\"?\n", "question_toks": ["What", "are", "the", "names", "of", "gymnasts", "whose", "hometown", "is", "not", "``", "Santo", "Domingo", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 7, [0, [0, 13, false], null], "\"Santo Domingo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gymnast", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"", "query_toks": ["SELECT", "T2.Name", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID", "WHERE", "T2.Hometown", "!", "=", "``", "Santo", "Domingo", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id", "where", "t2", ".", "hometown", "!", "=", "value"], "question": "Devuelve los nombres de gimnastas que no crecieron en Santo Domingo.\n", "question_toks": ["Return", "the", "names", "of", "gymnasts", "who", "did", "not", "grow", "up", "in", "Santo", "Domingo", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 7, [0, [0, 13, false], null], "\"Santo Domingo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gymnast", "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5", "query_toks": ["SELECT", "DISTINCT", "T2.Hometown", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID", "WHERE", "T1.Total_Points", ">", "57.5"], "query_toks_no_value": ["select", "distinct", "t2", ".", "hometown", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id", "where", "t1", ".", "total_points", ">", "value"], "question": "¿Cuáles son las distintas ciudades de origen de las gimnastas con un total de puntos superior a 57,5?\n", "question_toks": ["What", "are", "the", "distinct", "hometowns", "of", "gymnasts", "with", "total", "points", "more", "than", "57.5", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 57.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gymnast", "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5", "query_toks": ["SELECT", "DISTINCT", "T2.Hometown", "FROM", "gymnast", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.Gymnast_ID", "=", "T2.People_ID", "WHERE", "T1.Total_Points", ">", "57.5"], "query_toks_no_value": ["select", "distinct", "t2", ".", "hometown", "from", "gymnast", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "gymnast_id", "=", "t2", ".", "people_id", "where", "t1", ".", "total_points", ">", "value"], "question": "Indique las diferentes ciudades de origen de las gimnastas que tienen una puntuación total superior a 57,5.\n", "question_toks": ["Give", "the", "different", "hometowns", "of", "gymnasts", "that", "have", "a", "total", "point", "score", "of", "above", "57.5", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 57.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "query_toks": ["SELECT", "T1.custid", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "max", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "custid", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "max", "(", "balance", ")", "from", "checking", ")"], "question": "Encuentre el nombre y la identificación de las cuentas cuyo saldo corriente está por debajo del saldo corriente máximo.\n", "question_toks": ["Find", "the", "name", "and", "id", "of", "accounts", "whose", "checking", "balance", "is", "below", "the", "maximum", "checking", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "query_toks": ["SELECT", "T1.custid", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "max", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "custid", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "max", "(", "balance", ")", "from", "checking", ")"], "question": "¿Cuáles son la identificación y el nombre del cliente correspondientes a las cuentas con un saldo corriente menor que el saldo corriente más grande?\n", "question_toks": ["What", "are", "the", "customer", "id", "and", "name", "corresponding", "to", "accounts", "with", "a", "checking", "balance", "less", "than", "the", "largest", "checking", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "LIKE", "'", "%", "ee", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "like", "value"], "question": "¿Cuál es el saldo corriente de la cuenta cuyo nombre del propietario contiene la subcadena 'ee'?\n", "question_toks": ["What", "is", "the", "checking", "balance", "of", "the", "account", "whose", "owner’s", "name", "contains", "the", "substring", "‘ee’", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%ee%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "LIKE", "'", "%", "ee", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "like", "value"], "question": "Encuentre el saldo de la cuenta corriente perteneciente a un propietario cuyo nombre contiene 'ee'.\n", "question_toks": ["Find", "the", "balance", "of", "the", "checking", "account", "belonging", "to", "an", "owner", "whose", "name", "contains", "'ee", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%ee%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T1.name", "=", "'Brown", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t1", ".", "name", "=", "value"], "question": "Encuentre el saldo corriente y el saldo de ahorro en la cuenta de Brown.\n", "question_toks": ["Find", "the", "checking", "balance", "and", "saving", "balance", "in", "the", "Brown’s", "account", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Brown\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T1.name", "=", "'Brown", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuáles son los saldos de cheques y ahorros en las cuentas que pertenecen a Brown?\n", "question_toks": ["What", "are", "the", "checking", "and", "savings", "balances", "in", "accounts", "belonging", "to", "Brown", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Brown\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "IN", "(", "SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")", ")"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "in", "(", "select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")", ")"], "question": "Encuentre el saldo corriente de las cuentas cuyo saldo de ahorro es mayor que el saldo de ahorro promedio.\n", "question_toks": ["Find", "the", "checking", "balance", "of", "the", "accounts", "whose", "savings", "balance", "is", "higher", "than", "the", "average", "savings", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "IN", "(", "SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")", ")"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "in", "(", "select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")", ")"], "question": "¿Cuáles son los saldos de las cuentas corrientes de personas con saldos de ahorro superiores al saldo de ahorro promedio?\n", "question_toks": ["What", "are", "the", "balances", "of", "checking", "accounts", "belonging", "to", "people", "with", "savings", "balances", "greater", "than", "the", "average", "savings", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "+", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "+", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "Encuentre los nombres y los saldos totales de cheques y de ahorro de las cuentas cuyo saldo de ahorro es mayor que el saldo de ahorro promedio.\n", "question_toks": ["Find", "the", "names", "and", "total", "checking", "and", "savings", "balances", "of", "accounts", "whose", "savings", "balance", "is", "higher", "than", "the", "average", "savings", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 6, false], [0, 4, false]]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "+", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "+", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "¿Cuáles son los nombres y la suma de los saldos de cheques y de ahorro para las cuentas con saldos de ahorro superiores al saldo de ahorro promedio?\n", "question_toks": ["What", "are", "the", "names", "and", "sum", "of", "checking", "and", "savings", "balances", "for", "accounts", "with", "savings", "balances", "higher", "than", "the", "average", "savings", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 6, false], [0, 4, false]]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "avg", "(", "balance", ")", "from", "checking", ")"], "question": "Encuentre el nombre de las cuentas cuyo saldo corriente está por debajo del saldo corriente promedio.\n", "question_toks": ["Find", "the", "name", "of", "accounts", "whose", "checking", "balance", "is", "below", "the", "average", "checking", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "avg", "(", "balance", ")", "from", "checking", ")"], "question": "¿Cuáles son los nombres de los clientes con saldos de cheques inferiores al saldo de cheques promedio?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "with", "checking", "balances", "lower", "than", "the", "average", "checking", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid"], "question": "Encuentre el nombre, el saldo corriente y el saldo de ahorro de todas las cuentas del banco.\n", "question_toks": ["Find", "the", "name", ",", "checking", "balance", "and", "saving", "balance", "of", "all", "accounts", "in", "the", "bank", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid"], "question": "¿Cuáles son los nombres, saldos de cheques y saldos de ahorro de todos los clientes?\n", "question_toks": ["What", "are", "the", "names", ",", "checking", "balances", ",", "and", "savings", "balances", "for", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T2.balance", ">", "T3.balance"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t2", ".", "balance", ">", "t3", ".", "balance"], "question": "Encuentre el nombre de las cuentas cuyo saldo corriente es mayor que el saldo de ahorro correspondiente.\n", "question_toks": ["Find", "the", "name", "of", "accounts", "whose", "checking", "balance", "is", "higher", "than", "corresponding", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], [0, 4, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T2.balance", ">", "T3.balance"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t2", ".", "balance", ">", "t3", ".", "balance"], "question": "¿Cuáles son los nombres de los clientes con un saldo corriente más alto que el saldo de ahorro?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "with", "a", "higher", "checking", "balance", "than", "savings", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], [0, 4, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "query_toks": ["SELECT", "T1.name", ",", "T3.balance", "+", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", "<", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "balance", "+", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", "<", "t2", ".", "balance"], "question": "Encuentre el nombre y el saldo total de cheques y de ahorro de las cuentas cuyo saldo de ahorro es menor que el saldo de cheques correspondiente.\n", "question_toks": ["Find", "the", "name", "and", "total", "checking", "and", "savings", "balance", "of", "the", "accounts", "whose", "savings", "balance", "is", "lower", "than", "corresponding", "checking", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 4, false], [0, 6, false]]]]], "where": [[false, 4, [0, [0, 4, false], null], [0, 6, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "small_bank_1", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "query_toks": ["SELECT", "T1.name", ",", "T3.balance", "+", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", "<", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "balance", "+", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", "<", "t2", ".", "balance"], "question": "¿Cuáles son los nombres de los clientes que tienen un saldo de ahorro inferior a su saldo de cheques y cuál es el total de sus saldos de cheques y de ahorros?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "have", "a", "savings", "balance", "lower", "than", "their", "checking", "balance", ",", "and", "what", "is", "the", "total", "of", "their", "checking", "and", "savings", "balances", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 4, false], [0, 6, false]]]]], "where": [[false, 4, [0, [0, 4, false], null], [0, 6, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT id ,  name ,  market_share FROM browser", "query_toks": ["SELECT", "id", ",", "name", ",", "market_share", "FROM", "browser"], "query_toks_no_value": ["select", "id", ",", "name", ",", "market_share", "from", "browser"], "question": "Enumere los identificadores, nombres y cuotas de mercado de todos los navegadores.\n", "question_toks": ["List", "the", "ids", ",", "names", "and", "market", "shares", "of", "all", "browsers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'", "query_toks": ["SELECT", "id", ",", "market_share", "FROM", "browser", "WHERE", "name", "=", "'Safari", "'"], "query_toks_no_value": ["select", "id", ",", "market_share", "from", "browser", "where", "name", "=", "value"], "question": "¿Cuál es la identificación y la cuota de mercado del navegador Safari?\n", "question_toks": ["What", "is", "the", "id", "and", "market", "share", "of", "the", "browser", "Safari", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Safari\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'", "query_toks": ["SELECT", "name", ",", "operating_system", "FROM", "web_client_accelerator", "WHERE", "CONNECTION", "!", "=", "'Broadband", "'"], "query_toks_no_value": ["select", "name", ",", "operating_system", "from", "web_client_accelerator", "where", "connection", "!", "=", "value"], "question": "¿Cuáles son el nombre y el sistema operativo de los aceleradores de clientes web que no funcionan únicamente con una conexión de tipo \"Banda ancha\"?\n", "question_toks": ["What", "are", "the", "name", "and", "os", "of", "web", "client", "accelerators", "that", "do", "not", "work", "with", "only", "a", "'Broadband", "'", "type", "connection", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Broadband\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998", "query_toks": ["SELECT", "T1.name", "FROM", "browser", "AS", "T1", "JOIN", "accelerator_compatible_browser", "AS", "T2", "ON", "T1.id", "=", "T2.browser_id", "JOIN", "web_client_accelerator", "AS", "T3", "ON", "T2.accelerator_id", "=", "T3.id", "WHERE", "T3.name", "=", "'CProxy", "'", "AND", "T2.compatible_since_year", ">", "1998"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "browser", "as", "t1", "join", "accelerator_compatible_browser", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "browser_id", "join", "web_client_accelerator", "as", "t3", "on", "t2", ".", "accelerator_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value", "and", "t2", ".", "compatible_since_year", ">", "value"], "question": "¿Cómo se llama el navegador que se volvió compatible con el acelerador 'CProxy' después del año 1998?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "browser", "that", "became", "compatible", "with", "the", "accelerator", "'CProxy", "'", "after", "year", "1998", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"CProxy\"", null], "and", [false, 3, [0, [0, 11, false], null], 1998.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'Internet Explorer'", "query_toks": ["SELECT", "T1.compatible_since_year", "FROM", "accelerator_compatible_browser", "AS", "T1", "JOIN", "browser", "AS", "T2", "ON", "T1.browser_id", "=", "T2.id", "JOIN", "web_client_accelerator", "AS", "T3", "ON", "T1.accelerator_id", "=", "T3.id", "WHERE", "T3.name", "=", "'CACHEbox", "'", "AND", "T2.name", "=", "'Internet", "Explorer", "'"], "query_toks_no_value": ["select", "t1", ".", "compatible_since_year", "from", "accelerator_compatible_browser", "as", "t1", "join", "browser", "as", "t2", "on", "t1", ".", "browser_id", "=", "t2", ".", "id", "join", "web_client_accelerator", "as", "t3", "on", "t1", ".", "accelerator_id", "=", "t3", ".", "id", "where", "t3", ".", "name", "=", "value", "and", "t2", ".", "name", "=", "value"], "question": "¿Cuándo se volvieron compatibles el acelerador web 'CACHEbox' y el navegador 'Internet Explorer'?\n", "question_toks": ["When", "did", "the", "web", "accelerator", "'CACHEbox", "'", "and", "browser", "'Internet", "Explorer", "'", "become", "compatible", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"CACHEbox\"", null], "and", [false, 2, [0, [0, 7, false], null], "\"Internet Explorer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "web_client_accelerator", "AS", "T1", "JOIN", "accelerator_compatible_browser", "AS", "T2", "ON", "T2.accelerator_id", "=", "T1.id", "JOIN", "browser", "AS", "T3", "ON", "T2.browser_id", "=", "T3.id", "WHERE", "T3.market_share", ">", "15", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "web_client_accelerator", "as", "t1", "join", "accelerator_compatible_browser", "as", "t2", "on", "t2", ".", "accelerator_id", "=", "t1", ".", "id", "join", "browser", "as", "t3", "on", "t2", ".", "browser_id", "=", "t3", ".", "id", "where", "t3", ".", "market_share", ">", "value"], "question": "¿Qué nombres distintos de aceleradores son compatibles con los navegadores que tienen una cuota de mercado superior a 15?\n", "question_toks": ["What", "distinct", "accelerator", "names", "are", "compatible", "with", "the", "browswers", "that", "have", "market", "share", "higher", "than", "15", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "browser_web", "query": "SELECT name FROM web_client_accelerator WHERE name LIKE \"%Opera%\"", "query_toks": ["SELECT", "name", "FROM", "web_client_accelerator", "WHERE", "name", "LIKE", "``", "%", "Opera", "%", "''"], "query_toks_no_value": ["select", "name", "from", "web_client_accelerator", "where", "name", "like", "value"], "question": "¿Qué nombre de acelerador contiene la subcadena \"Opera\"?\n", "question_toks": ["Which", "accelerator", "name", "contains", "substring", "``", "Opera", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Opera%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\"", "query_toks": ["SELECT", "DISTINCT", "Reign", "FROM", "wrestler", "WHERE", "LOCATION", "!", "=", "``", "Tokyo", ",", "Japan", "''"], "query_toks_no_value": ["select", "distinct", "reign", "from", "wrestler", "where", "location", "!", "=", "value"], "question": "¿Cuáles son los distintos reinados de los luchadores cuya ubicación no es \"Tokio, Japón\"?\n", "question_toks": ["What", "are", "the", "distinct", "reigns", "of", "wrestlers", "whose", "location", "is", "not", "``", "Tokyo", ",", "Japan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Tokyo , Japan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\"", "query_toks": ["SELECT", "DISTINCT", "Reign", "FROM", "wrestler", "WHERE", "LOCATION", "!", "=", "``", "Tokyo", ",", "Japan", "''"], "query_toks_no_value": ["select", "distinct", "reign", "from", "wrestler", "where", "location", "!", "=", "value"], "question": "Da los diferentes reinados de luchadores que no se encuentran ubicados en Tokio, Japón.\n", "question_toks": ["Give", "the", "different", "reigns", "of", "wrestlers", "who", "are", "not", "located", "in", "Tokyo", ",", "Japan", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Tokyo , Japan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Name ,  LOCATION FROM wrestler", "query_toks": ["SELECT", "Name", ",", "LOCATION", "FROM", "wrestler"], "query_toks_no_value": ["select", "name", ",", "location", "from", "wrestler"], "question": "¿Cuáles son los nombres y la ubicación de los luchadores?\n", "question_toks": ["What", "are", "the", "names", "and", "location", "of", "the", "wrestlers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Name ,  LOCATION FROM wrestler", "query_toks": ["SELECT", "Name", ",", "LOCATION", "FROM", "wrestler"], "query_toks_no_value": ["select", "name", ",", "location", "from", "wrestler"], "question": "Da los nombres y ubicaciones de todos los luchadores.\n", "question_toks": ["Give", "the", "names", "and", "locations", "of", "all", "wrestlers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"", "query_toks": ["SELECT", "Elimination_Move", "FROM", "Elimination", "WHERE", "Team", "=", "``", "Team", "Orton", "''"], "query_toks_no_value": ["select", "elimination_move", "from", "elimination", "where", "team", "=", "value"], "question": "¿Cuáles son los movimientos de eliminación de los luchadores cuyo equipo es el \"Team Orton\"?\n", "question_toks": ["What", "are", "the", "elimination", "moves", "of", "wrestlers", "whose", "team", "is", "``", "Team", "Orton", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Team Orton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"", "query_toks": ["SELECT", "Elimination_Move", "FROM", "Elimination", "WHERE", "Team", "=", "``", "Team", "Orton", "''"], "query_toks_no_value": ["select", "elimination_move", "from", "elimination", "where", "team", "=", "value"], "question": "Devuelve las películas de eliminación de luchadores del Equipo Orton.\n", "question_toks": ["Return", "the", "elimination", "movies", "of", "wrestlers", "on", "Team", "Orton", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Team Orton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Elimination_Move", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "elimination_move", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id"], "question": "¿Cuáles son los nombres de los luchadores y los movimientos de eliminación?\n", "question_toks": ["What", "are", "the", "names", "of", "wrestlers", "and", "the", "elimination", "moves", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Elimination_Move", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "elimination_move", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id"], "question": "Da los nombres de los luchadores y sus movimientos de eliminación.\n", "question_toks": ["Give", "the", "names", "of", "wrestlers", "and", "their", "elimination", "moves", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50", "query_toks": ["SELECT", "T1.Time", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID", "WHERE", "T2.Days_held", ">", "50"], "query_toks_no_value": ["select", "t1", ".", "time", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id", "where", "t2", ".", "days_held", ">", "value"], "question": "Mostrar tiempos de eliminación de luchadores con jornadas celebradas más de 50.\n", "question_toks": ["Show", "times", "of", "elimination", "of", "wrestlers", "with", "days", "held", "more", "than", "50", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50", "query_toks": ["SELECT", "T1.Time", "FROM", "elimination", "AS", "T1", "JOIN", "wrestler", "AS", "T2", "ON", "T1.Wrestler_ID", "=", "T2.Wrestler_ID", "WHERE", "T2.Days_held", ">", "50"], "query_toks_no_value": ["select", "t1", ".", "time", "from", "elimination", "as", "t1", "join", "wrestler", "as", "t2", "on", "t1", ".", "wrestler_id", "=", "t2", ".", "wrestler_id", "where", "t2", ".", "days_held", ">", "value"], "question": "¿Cuáles son los tiempos de eliminación para los luchadores con más de 50 días celebrados?\n", "question_toks": ["What", "are", "the", "times", "of", "elimination", "for", "wrestlers", "with", "over", "50", "days", "held", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Reign ,  Days_held FROM wrestler", "query_toks": ["SELECT", "Reign", ",", "Days_held", "FROM", "wrestler"], "query_toks_no_value": ["select", "reign", ",", "days_held", "from", "wrestler"], "question": "Muestra el reinado y los días de los luchadores.\n", "question_toks": ["Show", "the", "reign", "and", "days", "held", "of", "wrestlers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Reign ,  Days_held FROM wrestler", "query_toks": ["SELECT", "Reign", ",", "Days_held", "FROM", "wrestler"], "query_toks_no_value": ["select", "reign", ",", "days_held", "from", "wrestler"], "question": "¿Cuáles son los reinados y días de todos los luchadores?\n", "question_toks": ["What", "are", "the", "reigns", "and", "days", "held", "of", "all", "wrestlers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Name FROM wrestler WHERE Days_held  <  100", "query_toks": ["SELECT", "Name", "FROM", "wrestler", "WHERE", "Days_held", "<", "100"], "query_toks_no_value": ["select", "name", "from", "wrestler", "where", "days_held", "<", "value"], "question": "¿Cuáles son los nombres de los luchadores que tienen menos de 100 días?\n", "question_toks": ["What", "are", "the", "names", "of", "wrestlers", "days", "held", "less", "than", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Name FROM wrestler WHERE Days_held  <  100", "query_toks": ["SELECT", "Name", "FROM", "wrestler", "WHERE", "Days_held", "<", "100"], "query_toks_no_value": ["select", "name", "from", "wrestler", "where", "days_held", "<", "value"], "question": "Devuelve los nombres de los luchadores con menos de 100 días de participación.\n", "question_toks": ["Return", "the", "names", "of", "wrestlers", "with", "fewer", "than", "100", "days", "held", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)", "query_toks": ["SELECT", "Name", "FROM", "wrestler", "WHERE", "Wrestler_ID", "NOT", "IN", "(", "SELECT", "Wrestler_ID", "FROM", "elimination", ")"], "query_toks_no_value": ["select", "name", "from", "wrestler", "where", "wrestler_id", "not", "in", "(", "select", "wrestler_id", "from", "elimination", ")"], "question": "Enumera los nombres de los luchadores que no han sido eliminados.\n", "question_toks": ["List", "the", "names", "of", "wrestlers", "that", "have", "not", "been", "eliminated", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)", "query_toks": ["SELECT", "Name", "FROM", "wrestler", "WHERE", "Wrestler_ID", "NOT", "IN", "(", "SELECT", "Wrestler_ID", "FROM", "elimination", ")"], "query_toks_no_value": ["select", "name", "from", "wrestler", "where", "wrestler_id", "not", "in", "(", "select", "wrestler_id", "from", "elimination", ")"], "question": "¿Cómo se llaman los luchadores que nunca han sido eliminados?\n", "question_toks": ["What", "are", "the", "names", "of", "wrestlers", "who", "have", "never", "been", "eliminated", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT COUNT (DISTINCT team) FROM elimination", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "team", ")", "FROM", "elimination"], "query_toks_no_value": ["select", "count", "(", "distinct", "team", ")", "from", "elimination"], "question": "¿Cuál es el número de equipos distintos que sufren eliminación?\n", "question_toks": ["What", "is", "the", "number", "of", "distinct", "teams", "that", "suffer", "elimination", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT COUNT (DISTINCT team) FROM elimination", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "team", ")", "FROM", "elimination"], "query_toks_no_value": ["select", "count", "(", "distinct", "team", ")", "from", "elimination"], "question": "¿Cuántos equipos diferentes han eliminado a los luchadores?\n", "question_toks": ["How", "many", "different", "teams", "have", "had", "eliminated", "wrestlers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 9, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"", "query_toks": ["SELECT", "TIME", "FROM", "elimination", "WHERE", "Eliminated_By", "=", "``", "Punk", "''", "OR", "Eliminated_By", "=", "``", "Orton", "''"], "query_toks_no_value": ["select", "time", "from", "elimination", "where", "eliminated_by", "=", "value", "or", "eliminated_by", "=", "value"], "question": "Muestra los tiempos de eliminación por parte de \"Punk\" u \"Orton\".\n", "question_toks": ["Show", "the", "times", "of", "elimination", "by", "``", "Punk", "''", "or", "``", "Orton", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Punk\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Orton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wrestler", "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"", "query_toks": ["SELECT", "TIME", "FROM", "elimination", "WHERE", "Eliminated_By", "=", "``", "Punk", "''", "OR", "Eliminated_By", "=", "``", "Orton", "''"], "query_toks_no_value": ["select", "time", "from", "elimination", "where", "eliminated_by", "=", "value", "or", "eliminated_by", "=", "value"], "question": "¿Cuáles son los tiempos de eliminación para cualquier instancia en la que la eliminación fue realizada por Punk u Orton?\n", "question_toks": ["What", "are", "the", "times", "of", "elimination", "for", "any", "instances", "in", "which", "the", "elimination", "was", "done", "by", "Punk", "or", "Orton", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Punk\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Orton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_finance", "query": "SELECT school_name ,  LOCATION ,  mascot FROM school", "query_toks": ["SELECT", "school_name", ",", "LOCATION", ",", "mascot", "FROM", "school"], "query_toks_no_value": ["select", "school_name", ",", "location", ",", "mascot", "from", "school"], "question": "Indique el nombre, la ubicación y la mascota de todas las escuelas.\n", "question_toks": ["List", "the", "name", ",", "location", ",", "mascot", "for", "all", "schools", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_finance", "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)", "query_toks": ["SELECT", "mascot", "FROM", "school", "WHERE", "enrollment", ">", "(", "SELECT", "avg", "(", "enrollment", ")", "FROM", "school", ")"], "query_toks_no_value": ["select", "mascot", "from", "school", "where", "enrollment", ">", "(", "select", "avg", "(", "enrollment", ")", "from", "school", ")"], "question": "¿Cuáles son las mascotas de los colegios con matrículas superiores a la media?\n", "question_toks": ["What", "are", "the", "mascots", "for", "schools", "with", "enrollments", "above", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_finance", "query": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)", "query_toks": ["SELECT", "school_name", "FROM", "school", "WHERE", "school_id", "NOT", "IN", "(", "SELECT", "school_id", "FROM", "endowment", ")"], "query_toks_no_value": ["select", "school_name", "from", "school", "where", "school_id", "not", "in", "(", "select", "school_id", "from", "endowment", ")"], "question": "Enumere los nombres de las escuelas sin dotación alguna.\n", "question_toks": ["List", "the", "names", "of", "the", "schools", "without", "any", "endowment", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_finance", "query": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002", "query_toks": ["SELECT", "T2.school_name", ",", "T1.budgeted", ",", "T1.invested", "FROM", "budget", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.school_id", "=", "T2.school_id", "WHERE", "T1.year", ">", "=", "2002"], "query_toks_no_value": ["select", "t2", ".", "school_name", ",", "t1", ".", "budgeted", ",", "t1", ".", "invested", "from", "budget", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "where", "t1", ".", "year", ">", "=", "value"], "question": "Muestre el nombre de cada escuela, su monto presupuestado y el monto invertido en el año 2002 o después.\n", "question_toks": ["Show", "each", "school", "name", ",", "its", "budgeted", "amount", ",", "and", "invested", "amount", "in", "year", "2002", "or", "after", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 5, [0, [0, 10, false], null], 2002.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_finance", "query": "SELECT DISTINCT donator_name FROM endowment", "query_toks": ["SELECT", "DISTINCT", "donator_name", "FROM", "endowment"], "query_toks_no_value": ["select", "distinct", "donator_name", "from", "endowment"], "question": "Mostrar todos los nombres de los donantes.\n", "question_toks": ["Show", "all", "donor", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "protein_institute", "query": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20", "query_toks": ["SELECT", "name", "FROM", "building", "WHERE", "height_feet", ">", "=", "200", "AND", "floors", ">", "=", "20"], "query_toks_no_value": ["select", "name", "from", "building", "where", "height_feet", ">", "=", "value", "and", "floors", ">", "=", "value"], "question": "Enumere los nombres de edificios con al menos 200 pies de altura y con al menos 20 pisos.\n", "question_toks": ["List", "the", "names", "of", "buildings", "with", "at", "least", "200", "feet", "of", "height", "and", "with", "at", "least", "20", "floors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 5, false], null], 200.0, null], "and", [false, 5, [0, [0, 6, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "protein_institute", "query": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'", "query_toks": ["SELECT", "institution", ",", "LOCATION", "FROM", "institution", "WHERE", "founded", ">", "1990", "AND", "TYPE", "=", "'Private", "'"], "query_toks_no_value": ["select", "institution", ",", "location", "from", "institution", "where", "founded", ">", "value", "and", "type", "=", "value"], "question": "Muestra los nombres y ubicaciones de las instituciones fundadas después de 1990 y que tienen el tipo \"Privada\".\n", "question_toks": ["Show", "the", "names", "and", "locations", "of", "institutions", "that", "are", "founded", "after", "1990", "and", "have", "the", "type", "``", "Private", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1990.0, null], "and", [false, 2, [0, [0, 11, false], null], "\"Private\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "protein_institute", "query": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000", "query_toks": ["SELECT", "TYPE", "FROM", "institution", "WHERE", "founded", ">", "1990", "AND", "enrollment", ">", "=", "1000"], "query_toks_no_value": ["select", "type", "from", "institution", "where", "founded", ">", "value", "and", "enrollment", ">", "=", "value"], "question": "Muestre el tipo de institución con una institución fundada después de 1990 y una institución con al menos 1000 inscritos.\n", "question_toks": ["Show", "the", "institution", "type", "with", "an", "institution", "founded", "after", "1990", "and", "an", "institution", "with", "at", "least", "1000", "enrollment", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1990.0, null], "and", [false, 5, [0, [0, 12, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "protein_institute", "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)", "query_toks": ["SELECT", "name", "FROM", "building", "WHERE", "building_id", "NOT", "IN", "(", "SELECT", "building_id", "FROM", "institution", ")"], "query_toks_no_value": ["select", "name", "from", "building", "where", "building_id", "not", "in", "(", "select", "building_id", "from", "institution", ")"], "question": "Mostrar el nombre de los edificios que no cuentan con ninguna institución.\n", "question_toks": ["Show", "the", "name", "of", "buildings", "that", "do", "not", "have", "any", "institution", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "protein_institute", "query": "SELECT DISTINCT TYPE FROM institution", "query_toks": ["SELECT", "DISTINCT", "TYPE", "FROM", "institution"], "query_toks_no_value": ["select", "distinct", "type", "from", "institution"], "question": "Mostrar todos los distintos tipos de instituciones.\n", "question_toks": ["Show", "all", "the", "distinct", "institution", "types", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "protein_institute", "query": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id", "query_toks": ["SELECT", "T2.protein_name", ",", "T1.institution", "FROM", "institution", "AS", "T1", "JOIN", "protein", "AS", "T2", "ON", "T1.institution_id", "=", "T2.institution_id"], "query_toks_no_value": ["select", "t2", ".", "protein_name", ",", "t1", ".", "institution", "from", "institution", "as", "t1", "join", "protein", "as", "t2", "on", "t1", ".", "institution_id", "=", "t2", ".", "institution_id"], "question": "Muestre el nombre de la proteína y el nombre de la institución.\n", "question_toks": ["Show", "the", "protein", "name", "and", "the", "institution", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 22, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT name ,  openning_year ,  capacity FROM cinema", "query_toks": ["SELECT", "name", ",", "openning_year", ",", "capacity", "FROM", "cinema"], "query_toks_no_value": ["select", "name", ",", "openning_year", ",", "capacity", "from", "cinema"], "question": "Nombre del espectáculo, año de apertura y aforo de cada sala de cine.\n", "question_toks": ["Show", "name", ",", "opening", "year", ",", "and", "capacity", "for", "each", "cinema", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "cinema", "WHERE", "capacity", ">", "(", "SELECT", "avg", "(", "capacity", ")", "FROM", "cinema", ")"], "query_toks_no_value": ["select", "name", ",", "location", "from", "cinema", "where", "capacity", ">", "(", "select", "avg", "(", "capacity", ")", "from", "cinema", ")"], "question": "Muestra el nombre del cine y la ubicación de los cines con capacidad superior al promedio.\n", "question_toks": ["Show", "the", "cinema", "name", "and", "location", "for", "cinemas", "with", "capacity", "above", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT DISTINCT LOCATION FROM cinema", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "cinema"], "query_toks_no_value": ["select", "distinct", "location", "from", "cinema"], "question": "¿Cuáles son todas las ubicaciones con cine?\n", "question_toks": ["What", "are", "all", "the", "locations", "with", "a", "cinema", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT DISTINCT LOCATION FROM cinema", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "cinema"], "query_toks_no_value": ["select", "distinct", "location", "from", "cinema"], "question": "Encuentra las distintas ubicaciones que tiene un cine.\n", "question_toks": ["Find", "the", "distinct", "locations", "that", "has", "a", "cinema", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT title ,  directed_by FROM film", "query_toks": ["SELECT", "title", ",", "directed_by", "FROM", "film"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "film"], "question": "Muestra el título y director de todas las películas.\n", "question_toks": ["Show", "the", "title", "and", "director", "for", "all", "films", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT title ,  directed_by FROM film", "query_toks": ["SELECT", "title", ",", "directed_by", "FROM", "film"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "film"], "question": "¿Cuáles son el título y director de cada película?\n", "question_toks": ["What", "are", "the", "title", "and", "director", "of", "each", "film", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT DISTINCT directed_by FROM film", "query_toks": ["SELECT", "DISTINCT", "directed_by", "FROM", "film"], "query_toks_no_value": ["select", "distinct", "directed_by", "from", "film"], "question": "Mostrar todos los directores.\n", "question_toks": ["Show", "all", "directors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT DISTINCT directed_by FROM film", "query_toks": ["SELECT", "DISTINCT", "directed_by", "FROM", "film"], "query_toks_no_value": ["select", "distinct", "directed_by", "from", "film"], "question": "¿Quiénes son todos los directores?\n", "question_toks": ["Who", "are", "all", "the", "directors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id", "query_toks": ["SELECT", "T3.name", ",", "T2.title", ",", "T1.date", ",", "T1.price", "FROM", "schedule", "AS", "T1", "JOIN", "film", "AS", "T2", "ON", "T1.film_id", "=", "T2.film_id", "JOIN", "cinema", "AS", "T3", "ON", "T1.cinema_id", "=", "T3.cinema_id"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "date", ",", "t1", ".", "price", "from", "schedule", "as", "t1", "join", "film", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "join", "cinema", "as", "t3", "on", "t1", ".", "cinema_id", "=", "t3", ".", "cinema_id"], "question": "Muestra el nombre del cine, el título de la película, la fecha y el precio de cada grabación en la programación.\n", "question_toks": ["Show", "cinema", "name", ",", "film", "title", ",", "date", ",", "and", "price", "for", "each", "record", "in", "schedule", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cinema", "query": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)", "query_toks": ["SELECT", "title", ",", "directed_by", "FROM", "film", "WHERE", "film_id", "NOT", "IN", "(", "SELECT", "film_id", "FROM", "schedule", ")"], "query_toks_no_value": ["select", "title", ",", "directed_by", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "schedule", ")"], "question": "¿Cuáles son el título y director de las películas sin programación?\n", "question_toks": ["What", "are", "the", "title", "and", "director", "of", "the", "films", "without", "any", "schedule", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500", "query_toks": ["SELECT", "T1.good_or_bad_customer", "FROM", "customers", "AS", "T1", "JOIN", "discount_coupons", "AS", "T2", "ON", "T1.coupon_id", "=", "T2.coupon_id", "WHERE", "T2.coupon_amount", "=", "500"], "query_toks_no_value": ["select", "t1", ".", "good_or_bad_customer", "from", "customers", "as", "t1", "join", "discount_coupons", "as", "t2", "on", "t1", ".", "coupon_id", "=", "t2", ".", "coupon_id", "where", "t2", ".", "coupon_amount", "=", "value"], "question": "¿Los clientes que tienen cupones con un monto de 500 son malos o buenos?\n", "question_toks": ["Are", "the", "customers", "holding", "coupons", "with", "amount", "500", "bad", "or", "good", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76", "query_toks": ["SELECT", "T2.product_description", "FROM", "products_booked", "AS", "T1", "JOIN", "products_for_hire", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.booked_amount", "=", "102.76"], "query_toks_no_value": ["select", "t2", ".", "product_description", "from", "products_booked", "as", "t1", "join", "products_for_hire", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "booked_amount", "=", "value"], "question": "¿Cuál es la descripción del producto reservado con un importe de 102,76?\n", "question_toks": ["What", "is", "the", "product", "description", "of", "the", "product", "booked", "with", "an", "amount", "of", "102.76", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 41, false], null], 102.76, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'", "query_toks": ["SELECT", "T3.booking_start_date", ",", "T3.booking_end_date", "FROM", "Products_for_hire", "AS", "T1", "JOIN", "products_booked", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "JOIN", "bookings", "AS", "T3", "ON", "T2.booking_id", "=", "T3.booking_id", "WHERE", "T1.product_name", "=", "'Book", "collection", "A", "'"], "query_toks_no_value": ["select", "t3", ".", "booking_start_date", ",", "t3", ".", "booking_end_date", "from", "products_for_hire", "as", "t1", "join", "products_booked", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "bookings", "as", "t3", "on", "t2", ".", "booking_id", "=", "t3", ".", "booking_id", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuáles son la fecha de inicio y la fecha de finalización de la reserva que ha reservado el producto denominado 'Colección de libros A'?\n", "question_toks": ["What", "are", "the", "start", "date", "and", "end", "date", "of", "the", "booking", "that", "has", "booked", "the", "product", "named", "'Book", "collection", "A", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 23, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 36, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"Book collection A\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1", "query_toks": ["SELECT", "T2.product_name", "FROM", "view_product_availability", "AS", "T1", "JOIN", "products_for_hire", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.available_yn", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "product_name", "from", "view_product_availability", "as", "t1", "join", "products_for_hire", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "available_yn", "=", "value"], "question": "¿Cómo se llaman los productos cuya disponibilidad es igual a 1?\n", "question_toks": ["What", "are", "the", "names", "of", "products", "whose", "availability", "equals", "to", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 42, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 45, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT DISTINCT payment_type_code FROM payments", "query_toks": ["SELECT", "DISTINCT", "payment_type_code", "FROM", "payments"], "query_toks_no_value": ["select", "distinct", "payment_type_code", "from", "payments"], "question": "¿Cuáles son los distintos tipos de pago?\n", "question_toks": ["What", "are", "all", "the", "distinct", "payment", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'", "query_toks": ["SELECT", "daily_hire_cost", "FROM", "Products_for_hire", "WHERE", "product_name", "LIKE", "'", "%", "Book", "%", "'"], "query_toks_no_value": ["select", "daily_hire_cost", "from", "products_for_hire", "where", "product_name", "like", "value"], "question": "¿Cuáles son los costos de alquiler diarios para los productos con la subcadena 'Libro' en su nombre?\n", "question_toks": ["What", "are", "the", "daily", "hire", "costs", "for", "the", "products", "with", "substring", "'Book", "'", "in", "its", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 9, [0, [0, 26, false], null], "\"%Book%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'", "query_toks": ["SELECT", "payment_date", "FROM", "payments", "WHERE", "amount_paid", ">", "300", "OR", "payment_type_code", "=", "'Check", "'"], "query_toks_no_value": ["select", "payment_date", "from", "payments", "where", "amount_paid", ">", "value", "or", "payment_type_code", "=", "value"], "question": "¿Cuál es la fecha de pago del pago con un monto pagado superior a 300 o con el tipo de pago es 'Cheque'?\n", "question_toks": ["What", "are", "the", "payment", "date", "of", "the", "payment", "with", "amount", "paid", "higher", "than", "300", "or", "with", "payment", "type", "is", "'Check", "'"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 3, [0, [0, 35, false], null], 300.0, null], "or", [false, 2, [0, [0, 31, false], null], "\"Check\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_for_hire", "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20", "query_toks": ["SELECT", "product_name", ",", "product_description", "FROM", "products_for_hire", "WHERE", "product_type_code", "=", "'Cutlery", "'", "AND", "daily_hire_cost", "<", "20"], "query_toks_no_value": ["select", "product_name", ",", "product_description", "from", "products_for_hire", "where", "product_type_code", "=", "value", "and", "daily_hire_cost", "<", "value"], "question": "¿Cuáles son los nombres y descripciones de los productos que son del tipo 'Cubertería' y tienen un coste de alquiler diario inferior a 20?\n", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "products", "that", "are", "of", "'Cutlery", "'", "type", "and", "have", "daily", "hire", "cost", "lower", "than", "20", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Cutlery\"", null], "and", [false, 4, [0, [0, 25, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_market", "query": "SELECT Memory_in_G ,  Carrier FROM phone", "query_toks": ["SELECT", "Memory_in_G", ",", "Carrier", "FROM", "phone"], "query_toks_no_value": ["select", "memory_in_g", ",", "carrier", "from", "phone"], "question": "¿Cuáles son las memorias y portadores de los teléfonos?\n", "question_toks": ["What", "are", "the", "memories", "and", "carriers", "of", "phones", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_market", "query": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32", "query_toks": ["SELECT", "DISTINCT", "Carrier", "FROM", "phone", "WHERE", "Memory_in_G", ">", "32"], "query_toks_no_value": ["select", "distinct", "carrier", "from", "phone", "where", "memory_in_g", ">", "value"], "question": "Enumere los distintos operadores de teléfonos con memorias mayores a 32.\n", "question_toks": ["List", "the", "distinct", "carriers", "of", "phones", "with", "memories", "bigger", "than", "32", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 32.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_market", "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"", "query_toks": ["SELECT", "Name", "FROM", "phone", "WHERE", "Carrier", "=", "``", "Sprint", "''", "OR", "Carrier", "=", "``", "TMobile", "''"], "query_toks_no_value": ["select", "name", "from", "phone", "where", "carrier", "=", "value", "or", "carrier", "=", "value"], "question": "Muestra los nombres de los teléfonos con operador \"Sprint\" o \"TMobile\".\n", "question_toks": ["Show", "the", "names", "of", "phones", "with", "carrier", "either", "``", "Sprint", "''", "or", "``", "TMobile", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Sprint\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"TMobile\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_market", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.District", "FROM", "phone_market", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID", "JOIN", "phone", "AS", "T3", "ON", "T1.Phone_ID", "=", "T3.Phone_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "district", "from", "phone_market", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "join", "phone", "as", "t3", "on", "t1", ".", "phone_id", "=", "t3", ".", "phone_id"], "question": "Muestra los nombres de los teléfonos y los distritos de mercados en los que se encuentran.\n", "question_toks": ["Show", "the", "names", "of", "phones", "and", "the", "districts", "of", "markets", "they", "are", "on", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_market", "query": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50", "query_toks": ["SELECT", "T3.Name", "FROM", "phone_market", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID", "JOIN", "phone", "AS", "T3", "ON", "T1.Phone_ID", "=", "T3.Phone_ID", "WHERE", "T2.Num_of_shops", ">", "50"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "phone_market", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "join", "phone", "as", "t3", "on", "t1", ".", "phone_id", "=", "t3", ".", "phone_id", "where", "t2", ".", "num_of_shops", ">", "value"], "question": "Muestra los nombres de los teléfonos que hay en el mercado con un número de tiendas superior a 50.\n", "question_toks": ["Show", "the", "names", "of", "phones", "that", "are", "on", "market", "with", "number", "of", "shops", "greater", "than", "50", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "phone_market", "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)", "query_toks": ["SELECT", "Name", "FROM", "phone", "WHERE", "Phone_id", "NOT", "IN", "(", "SELECT", "Phone_ID", "FROM", "phone_market", ")"], "query_toks_no_value": ["select", "name", "from", "phone", "where", "phone_id", "not", "in", "(", "select", "phone_id", "from", "phone_market", ")"], "question": "Enumere los nombres de los teléfonos que no están en ningún mercado.\n", "question_toks": ["List", "the", "names", "of", "phones", "that", "are", "not", "on", "any", "market", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[true, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "headquarters", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "headquarters", "!", "=", "value"], "question": "Muestre el nombre de la empresa y la industria principal de todas las empresas cuyas oficinas centrales no sean de EE. UU.\n", "question_toks": ["Show", "the", "company", "name", "and", "the", "main", "industry", "for", "all", "companies", "whose", "headquarters", "are", "not", "from", "USA", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "headquarters", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "headquarters", "!", "=", "value"], "question": "¿Cuáles son las empresas y principales industrias de todas las empresas que no tienen su sede en Estados Unidos?\n", "question_toks": ["What", "are", "the", "companies", "and", "main", "industries", "of", "all", "companies", "that", "are", "not", "headquartered", "in", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT DISTINCT main_industry FROM company", "query_toks": ["SELECT", "DISTINCT", "main_industry", "FROM", "company"], "query_toks_no_value": ["select", "distinct", "main_industry", "from", "company"], "question": "Mostrar todas las industrias principales para todas las empresas.\n", "question_toks": ["Show", "all", "main", "industry", "for", "all", "companies", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT DISTINCT main_industry FROM company", "query_toks": ["SELECT", "DISTINCT", "main_industry", "FROM", "company"], "query_toks_no_value": ["select", "distinct", "main_industry", "from", "company"], "question": "¿Cuáles son las diferentes industrias principales para todas las empresas?\n", "question_toks": ["What", "are", "the", "different", "main", "industries", "for", "all", "companies", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "company_id", "NOT", "IN", "(", "SELECT", "company_id", "FROM", "station_company", ")"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "company_id", "not", "in", "(", "select", "company_id", "from", "station_company", ")"], "question": "Mostrar el nombre de la empresa y la industria principal sin gasolinera.\n", "question_toks": ["Show", "company", "name", "and", "main", "industry", "without", "a", "gas", "station", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)", "query_toks": ["SELECT", "company", ",", "main_industry", "FROM", "company", "WHERE", "company_id", "NOT", "IN", "(", "SELECT", "company_id", "FROM", "station_company", ")"], "query_toks_no_value": ["select", "company", ",", "main_industry", "from", "company", "where", "company_id", "not", "in", "(", "select", "company_id", "from", "station_company", ")"], "question": "¿Cuáles son las principales industrias de las empresas sin gasolineras y cuáles son las empresas?\n", "question_toks": ["What", "are", "the", "main", "industries", "of", "the", "companies", "without", "gas", "stations", "and", "what", "are", "the", "companies", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'", "query_toks": ["SELECT", "T3.manager_name", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "JOIN", "gas_station", "AS", "T3", "ON", "T1.station_id", "=", "T3.station_id", "WHERE", "T2.company", "=", "'ExxonMobil", "'"], "query_toks_no_value": ["select", "t3", ".", "manager_name", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "join", "gas_station", "as", "t3", "on", "t1", ".", "station_id", "=", "t3", ".", "station_id", "where", "t2", ".", "company", "=", "value"], "question": "Muestra el nombre del administrador de las gasolineras pertenecientes a la empresa ExxonMobil.\n", "question_toks": ["Show", "the", "manager", "name", "for", "gas", "stations", "belonging", "to", "the", "ExxonMobil", "company", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"ExxonMobil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'", "query_toks": ["SELECT", "T3.manager_name", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "JOIN", "gas_station", "AS", "T3", "ON", "T1.station_id", "=", "T3.station_id", "WHERE", "T2.company", "=", "'ExxonMobil", "'"], "query_toks_no_value": ["select", "t3", ".", "manager_name", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "join", "gas_station", "as", "t3", "on", "t1", ".", "station_id", "=", "t3", ".", "station_id", "where", "t2", ".", "company", "=", "value"], "question": "¿Cómo se llaman los gerentes de las gasolineras operadas por la empresa ExxonMobil?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "managers", "for", "gas", "stations", "that", "are", "operated", "by", "the", "ExxonMobil", "company", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"ExxonMobil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100", "query_toks": ["SELECT", "T3.location", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "JOIN", "gas_station", "AS", "T3", "ON", "T1.station_id", "=", "T3.station_id", "WHERE", "T2.market_value", ">", "100"], "query_toks_no_value": ["select", "t3", ".", "location", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "join", "gas_station", "as", "t3", "on", "t1", ".", "station_id", "=", "t3", ".", "station_id", "where", "t2", ".", "market_value", ">", "value"], "question": "Mostrar todas las ubicaciones donde se encuentra una gasolinera para empresa con valor de mercado superior a 100.\n", "question_toks": ["Show", "all", "locations", "where", "a", "gas", "station", "for", "company", "with", "market", "value", "greater", "than", "100", "is", "located", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "gas_company", "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100", "query_toks": ["SELECT", "T3.location", "FROM", "station_company", "AS", "T1", "JOIN", "company", "AS", "T2", "ON", "T1.company_id", "=", "T2.company_id", "JOIN", "gas_station", "AS", "T3", "ON", "T1.station_id", "=", "T3.station_id", "WHERE", "T2.market_value", ">", "100"], "query_toks_no_value": ["select", "t3", ".", "location", "from", "station_company", "as", "t1", "join", "company", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "company_id", "join", "gas_station", "as", "t3", "on", "t1", ".", "station_id", "=", "t3", ".", "station_id", "where", "t2", ".", "market_value", ">", "value"], "question": "¿Cuáles son las localidades que cuentan con gasolineras propiedad de una empresa con un valor de mercado superior a 100?\n", "question_toks": ["What", "are", "the", "locations", "that", "have", "gas", "stations", "owned", "by", "a", "company", "with", "a", "market", "value", "greater", "than", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "took_office", ">", "1961", "OR", "took_office", "<", "1959"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "took_office", ">", "value", "or", "took_office", "<", "value"], "question": "Muestre el ministro que asumió el cargo después de 1961 o antes de 1959.\n", "question_toks": ["Show", "the", "minister", "who", "took", "office", "after", "1961", "or", "before", "1959", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 1961.0, null], "or", [false, 4, [0, [0, 9, false], null], 1959.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "took_office", ">", "1961", "OR", "took_office", "<", "1959"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "took_office", ">", "value", "or", "took_office", "<", "value"], "question": "¿Quiénes son los ministros que asumieron el cargo después de 1961 o antes de 1959?\n", "question_toks": ["Who", "are", "the", "ministers", "who", "took", "office", "after", "1961", "or", "before", "1959", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 1961.0, null], "or", [false, 4, [0, [0, 9, false], null], 1959.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "party_name", "!", "=", "'Progress", "Party", "'"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "party_name", "!", "=", "value"], "question": "Mostrar todos los ministros que no pertenecen al Partido del Progreso.\n", "question_toks": ["Show", "all", "ministers", "who", "do", "not", "belong", "to", "Progress", "Party", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 12, false], null], "\"Progress Party\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'", "query_toks": ["SELECT", "minister", "FROM", "party", "WHERE", "party_name", "!", "=", "'Progress", "Party", "'"], "query_toks_no_value": ["select", "minister", "from", "party", "where", "party_name", "!", "=", "value"], "question": "¿Qué ministros no forman parte del Partido del Progreso?\n", "question_toks": ["Which", "ministers", "are", "not", "a", "part", "of", "the", "Progress", "Party", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 12, false], null], "\"Progress Party\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "query_toks": ["SELECT", "T1.member_name", ",", "T2.party_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id"], "query_toks_no_value": ["select", "t1", ".", "member_name", ",", "t2", ".", "party_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id"], "question": "Enumere los nombres de los miembros y los nombres de sus partidos.\n", "question_toks": ["List", "member", "names", "and", "their", "party", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id", "query_toks": ["SELECT", "T1.member_name", ",", "T2.party_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id"], "query_toks_no_value": ["select", "t1", ".", "member_name", ",", "t2", ".", "party_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id"], "question": "¿Cuáles son los nombres de los miembros y sus partidos correspondientes?\n", "question_toks": ["What", "are", "the", "names", "of", "members", "and", "their", "corresponding", "parties", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "query_toks": ["SELECT", "T1.party_name", ",", "T2.region_name", "FROM", "party", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id"], "query_toks_no_value": ["select", "t1", ".", "party_name", ",", "t2", ".", "region_name", "from", "party", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "Muestra todos los nombres de los partidos y los nombres de sus regiones.\n", "question_toks": ["Show", "all", "party", "names", "and", "their", "region", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id", "query_toks": ["SELECT", "T1.party_name", ",", "T2.region_name", "FROM", "party", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id"], "query_toks_no_value": ["select", "t1", ".", "party_name", ",", "t2", ".", "region_name", "from", "party", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id"], "question": "¿Cuáles son los nombres de los partidos y sus respectivas regiones?\n", "question_toks": ["What", "are", "the", "names", "of", "parties", "and", "their", "respective", "regions", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)", "query_toks": ["SELECT", "party_name", "FROM", "party", "WHERE", "party_id", "NOT", "IN", "(", "SELECT", "party_id", "FROM", "Member", ")"], "query_toks_no_value": ["select", "party_name", "from", "party", "where", "party_id", "not", "in", "(", "select", "party_id", "from", "member", ")"], "question": "Mostrar nombres de partidos que no tienen miembros.\n", "question_toks": ["Show", "names", "of", "parties", "that", "does", "not", "have", "any", "members", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)", "query_toks": ["SELECT", "party_name", "FROM", "party", "WHERE", "party_id", "NOT", "IN", "(", "SELECT", "party_id", "FROM", "Member", ")"], "query_toks_no_value": ["select", "party_name", "from", "party", "where", "party_id", "not", "in", "(", "select", "party_id", "from", "member", ")"], "question": "¿Cómo se llaman los partidos que no tienen miembros?\n", "question_toks": ["What", "are", "the", "names", "of", "parties", "that", "have", "no", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "query_toks": ["SELECT", "T1.member_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "WHERE", "T2.Party_name", "!", "=", "``", "Progress", "Party", "''"], "query_toks_no_value": ["select", "t1", ".", "member_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "where", "t2", ".", "party_name", "!", "=", "value"], "question": "Mostrar nombres de miembros que no están en el Partido del Progreso.\n", "question_toks": ["Show", "member", "names", "that", "are", "not", "in", "the", "Progress", "Party", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 7, [0, [0, 12, false], null], "\"Progress Party\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_people", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\"", "query_toks": ["SELECT", "T1.member_name", "FROM", "Member", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.party_id", "=", "T2.party_id", "WHERE", "T2.Party_name", "!", "=", "``", "Progress", "Party", "''"], "query_toks_no_value": ["select", "t1", ".", "member_name", "from", "member", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "where", "t2", ".", "party_name", "!", "=", "value"], "question": "¿Qué nombres de miembros corresponden a miembros que no están en el Partido del Progreso?\n", "question_toks": ["Which", "member", "names", "corresponding", "to", "members", "who", "are", "not", "in", "the", "Progress", "Party", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 7, [0, [0, 12, false], null], "\"Progress Party\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "pilot_record", "query": "SELECT POSITION ,  Team FROM pilot", "query_toks": ["SELECT", "POSITION", ",", "Team", "FROM", "pilot"], "query_toks_no_value": ["select", "position", ",", "team", "from", "pilot"], "question": "¿Cuáles son las posiciones y equipos de pilotos?\n", "question_toks": ["What", "are", "the", "positions", "and", "teams", "of", "pilots", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "pilot_record", "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "pilot", "WHERE", "Age", ">", "30"], "query_toks_no_value": ["select", "distinct", "position", "from", "pilot", "where", "age", ">", "value"], "question": "Enumere los distintos puestos de los pilotos mayores de 30 años.\n", "question_toks": ["List", "the", "distinct", "positions", "of", "pilots", "older", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "WHERE", "Team", "=", "``", "Bradley", "''", "OR", "Team", "=", "``", "Fordham", "''"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "where", "team", "=", "value", "or", "team", "=", "value"], "question": "Muestra los nombres de los pilotos del equipo \"Bradley\" o \"Fordham\".\n", "question_toks": ["Show", "the", "names", "of", "pilots", "from", "team", "``", "Bradley", "''", "or", "``", "Fordham", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Bradley\"", null], "or", [false, 2, [0, [0, 15, false], null], "\"Fordham\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Model", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "model", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id"], "question": "Muestra los nombres de los pilotos y modelos de aeronaves con las que han volado.\n", "question_toks": ["Show", "the", "names", "of", "pilots", "and", "models", "of", "aircrafts", "they", "have", "flied", "with", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "pilot_record", "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34", "query_toks": ["SELECT", "T2.Fleet_Series", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID", "WHERE", "T3.Age", "<", "34"], "query_toks_no_value": ["select", "t2", ".", "fleet_series", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id", "where", "t3", ".", "age", "<", "value"], "question": "Mostrar la serie de flota de las aeronaves pilotadas por pilotos menores de 34 años.\n", "question_toks": ["Show", "the", "fleet", "series", "of", "the", "aircrafts", "flied", "by", "pilots", "younger", "than", "34"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], 34.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "WHERE", "Pilot_ID", "NOT", "IN", "(", "SELECT", "Pilot_ID", "FROM", "pilot_record", ")"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "pilot_id", "from", "pilot_record", ")"], "question": "Enumere los nombres de los pilotos que no tienen ningún registro.\n", "question_toks": ["List", "the", "names", "of", "pilots", "that", "do", "not", "have", "any", "record", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_status_code FROM Ref_Document_Status;", "query_toks": ["SELECT", "document_status_code", "FROM", "Ref_Document_Status", ";"], "query_toks_no_value": ["select", "document_status_code", "from", "ref_document_status"], "question": "¿Qué códigos de estado de documentos tenemos?\n", "question_toks": ["What", "document", "status", "codes", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";", "query_toks": ["SELECT", "document_status_description", "FROM", "Ref_Document_Status", "WHERE", "document_status_code", "=", "``", "working", "''", ";"], "query_toks_no_value": ["select", "document_status_description", "from", "ref_document_status", "where", "document_status_code", "=", "value"], "question": "¿Cuál es la descripción del código de estado del documento \"en funcionamiento\"?\n", "question_toks": ["What", "is", "the", "description", "of", "document", "status", "code", "'working", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"working\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_type_code FROM Ref_Document_Types;", "query_toks": ["SELECT", "document_type_code", "FROM", "Ref_Document_Types", ";"], "query_toks_no_value": ["select", "document_type_code", "from", "ref_document_types"], "question": "¿Qué códigos de tipo de documento tenemos?\n", "question_toks": ["What", "document", "type", "codes", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";", "query_toks": ["SELECT", "document_type_description", "FROM", "Ref_Document_Types", "WHERE", "document_type_code", "=", "``", "Paper", "''", ";"], "query_toks_no_value": ["select", "document_type_description", "from", "ref_document_types", "where", "document_type_code", "=", "value"], "question": "¿Cuál es la descripción del tipo de documento 'Papel'?\n", "question_toks": ["What", "is", "the", "description", "of", "document", "type", "'Paper", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Paper\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;", "query_toks": ["SELECT", "shipping_agent_name", "FROM", "Ref_Shipping_Agents", ";"], "query_toks_no_value": ["select", "shipping_agent_name", "from", "ref_shipping_agents"], "question": "¿Cuáles son los nombres de los agentes de envío?\n", "question_toks": ["What", "are", "the", "shipping", "agent", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";", "query_toks": ["SELECT", "shipping_agent_code", "FROM", "Ref_Shipping_Agents", "WHERE", "shipping_agent_name", "=", "``", "UPS", "''", ";"], "query_toks_no_value": ["select", "shipping_agent_code", "from", "ref_shipping_agents", "where", "shipping_agent_name", "=", "value"], "question": "¿Cuál es el código del agente de envío del agente de envío UPS?\n", "question_toks": ["What", "is", "the", "shipping", "agent", "code", "of", "shipping", "agent", "UPS", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"UPS\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT role_code FROM ROLES;", "query_toks": ["SELECT", "role_code", "FROM", "ROLES", ";"], "query_toks_no_value": ["select", "role_code", "from", "roles"], "question": "¿Cuáles son todos los códigos de rol?\n", "question_toks": ["What", "are", "all", "role", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";", "query_toks": ["SELECT", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "``", "ED", "''", ";"], "query_toks_no_value": ["select", "role_description", "from", "roles", "where", "role_code", "=", "value"], "question": "¿Cuál es la descripción del código de función ED?\n", "question_toks": ["What", "is", "the", "description", "of", "role", "code", "ED", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"ED\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";", "query_toks": ["SELECT", "T1.role_description", "FROM", "ROLES", "AS", "T1", "JOIN", "Employees", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T2.employee_name", "=", "``", "Koby", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "role_description", "from", "roles", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t2", ".", "employee_name", "=", "value"], "question": "¿Cuál es el papel del empleado llamado Koby?\n", "question_toks": ["What", "is", "the", "role", "of", "the", "employee", "named", "Koby", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Koby\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_id ,  receipt_date FROM Documents;", "query_toks": ["SELECT", "document_id", ",", "receipt_date", "FROM", "Documents", ";"], "query_toks_no_value": ["select", "document_id", ",", "receipt_date", "from", "documents"], "question": "Enumere todos los identificadores de documentos y las fechas de recepción de los documentos.\n", "question_toks": ["List", "all", "document", "ids", "and", "receipt", "dates", "of", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;", "query_toks": ["SELECT", "Ref_Document_Status.document_status_description", "FROM", "Ref_Document_Status", "JOIN", "Documents", "ON", "Documents.document_status_code", "=", "Ref_Document_Status.document_status_code", "WHERE", "Documents.document_id", "=", "1", ";"], "query_toks_no_value": ["select", "ref_document_status.document_status_description", "from", "ref_document_status", "join", "documents", "on", "documents.document_status_code", "=", "ref_document_status.document_status_code", "where", "documents.document_id", "=", "value"], "question": "¿Cuál es la descripción del estado del documento con ID 1?\n", "question_toks": ["What", "is", "the", "document", "status", "description", "of", "the", "document", "with", "id", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_type_code FROM Documents WHERE document_id = 2;", "query_toks": ["SELECT", "document_type_code", "FROM", "Documents", "WHERE", "document_id", "=", "2", ";"], "query_toks_no_value": ["select", "document_type_code", "from", "documents", "where", "document_id", "=", "value"], "question": "Enumere el código de tipo de documento para el documento con la identificación 2.\n", "question_toks": ["List", "the", "document", "type", "code", "for", "the", "document", "with", "the", "id", "2", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";", "query_toks": ["SELECT", "document_id", "FROM", "Documents", "WHERE", "document_status_code", "=", "``", "done", "''", "AND", "document_type_code", "=", "``", "Paper", "''", ";"], "query_toks_no_value": ["select", "document_id", "from", "documents", "where", "document_status_code", "=", "value", "and", "document_type_code", "=", "value"], "question": "Enumere los identificadores de documentos para cualquier documento con el código de estado realizado y el código de tipo de papel.\n", "question_toks": ["List", "the", "document", "ids", "for", "any", "documents", "with", "the", "status", "code", "done", "and", "the", "type", "code", "paper", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"done\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"Paper\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;", "query_toks": ["SELECT", "Ref_Shipping_Agents.shipping_agent_name", "FROM", "Ref_Shipping_Agents", "JOIN", "Documents", "ON", "Documents.shipping_agent_code", "=", "Ref_Shipping_Agents.shipping_agent_code", "WHERE", "Documents.document_id", "=", "2", ";"], "query_toks_no_value": ["select", "ref_shipping_agents.shipping_agent_name", "from", "ref_shipping_agents", "join", "documents", "on", "documents.shipping_agent_code", "=", "ref_shipping_agents.shipping_agent_code", "where", "documents.document_id", "=", "value"], "question": "¿Cuál es el nombre del transportista del documento con id 2?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "shipping", "agent", "of", "the", "document", "with", "id", "2", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT receipt_date FROM Documents WHERE document_id = 3;", "query_toks": ["SELECT", "receipt_date", "FROM", "Documents", "WHERE", "document_id", "=", "3", ";"], "query_toks_no_value": ["select", "receipt_date", "from", "documents", "where", "document_id", "=", "value"], "question": "¿Cuál es la fecha de recepción del documento con id 3?\n", "question_toks": ["What", "is", "the", "receipt", "date", "of", "the", "document", "with", "id", "3", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;", "query_toks": ["SELECT", "Addresses.address_details", "FROM", "Addresses", "JOIN", "Documents_Mailed", "ON", "Documents_Mailed.mailed_to_address_id", "=", "Addresses.address_id", "WHERE", "document_id", "=", "4", ";"], "query_toks_no_value": ["select", "addresses.address_details", "from", "addresses", "join", "documents_mailed", "on", "documents_mailed.mailed_to_address_id", "=", "addresses.address_id", "where", "document_id", "=", "value"], "question": "¿A qué dirección se envió el documento con identificación 4?\n", "question_toks": ["What", "address", "was", "the", "document", "with", "id", "4", "mailed", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 10]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;", "query_toks": ["SELECT", "mailing_date", "FROM", "Documents_Mailed", "WHERE", "document_id", "=", "7", ";"], "query_toks_no_value": ["select", "mailing_date", "from", "documents_mailed", "where", "document_id", "=", "value"], "question": "¿Cuál es la fecha de envío del documento con id 7?\n", "question_toks": ["What", "is", "the", "mail", "date", "of", "the", "document", "with", "id", "7", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;", "query_toks": ["SELECT", "draft_details", "FROM", "Document_Drafts", "WHERE", "document_id", "=", "7", ";"], "query_toks_no_value": ["select", "draft_details", "from", "document_drafts", "where", "document_id", "=", "value"], "question": "¿Cuál es el detalle del borrador del documento con id 7?\n", "question_toks": ["What", "is", "draft", "detail", "of", "the", "document", "with", "id", "7", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 7.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Control_Systems", "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;", "query_toks": ["SELECT", "Employees.employee_name", "FROM", "Employees", "JOIN", "Circulation_History", "ON", "Circulation_History.employee_id", "=", "Employees.employee_id", "WHERE", "Circulation_History.document_id", "=", "1", ";"], "query_toks_no_value": ["select", "employees.employee_name", "from", "employees", "join", "circulation_history", "on", "circulation_history.employee_id", "=", "employees.employee_id", "where", "circulation_history.document_id", "=", "value"], "question": "Enumere todos los empleados en el historial de circulación del documento con ID 1. Indique el nombre del empleado.\n", "question_toks": ["List", "all", "employees", "in", "the", "circulation", "history", "of", "the", "document", "with", "id", "1", ".", "List", "the", "employee", "'s", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_1", "query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'", "query_toks": ["SELECT", "Dependent_name", "FROM", "dependent", "WHERE", "relationship", "=", "'Spouse", "'"], "query_toks_no_value": ["select", "dependent_name", "from", "dependent", "where", "relationship", "=", "value"], "question": "busque todos los nombres de dependientes que tengan una relación de cónyuge con algún empleado.\n", "question_toks": ["find", "all", "dependent", "names", "who", "have", "a", "spouse", "relation", "with", "some", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"Spouse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_1", "query": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'", "query_toks": ["SELECT", "t1.dname", "FROM", "department", "AS", "t1", "JOIN", "dept_locations", "AS", "t2", "ON", "t1.dnumber", "=", "t2.dnumber", "WHERE", "t2.dlocation", "=", "'Houston", "'"], "query_toks_no_value": ["select", "t1", ".", "dname", "from", "department", "as", "t1", "join", "dept_locations", "as", "t2", "on", "t1", ".", "dnumber", "=", "t2", ".", "dnumber", "where", "t2", ".", "dlocation", "=", "value"], "question": "Encuentre los nombres de los departamentos que están ubicados en Houston.\n", "question_toks": ["Find", "the", "names", "of", "departments", "that", "are", "located", "in", "Houston", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], "\"Houston\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_1", "query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "employee", "WHERE", "salary", ">", "30000"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "employee", "where", "salary", ">", "value"], "question": "Devuelva los nombres y apellidos de los empleados que ganan más de 30000 en salario.\n", "question_toks": ["Return", "the", "first", "names", "and", "last", "names", "of", "employees", "who", "earn", "more", "than", "30000", "in", "salary", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 30000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_in_alabama", "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage'", "query_toks": ["SELECT", "T1.event_details", "FROM", "EVENTS", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_ID", "=", "T2.Service_ID", "WHERE", "T2.Service_Type_Code", "=", "'Marriage", "'"], "query_toks_no_value": ["select", "t1", ".", "event_details", "from", "events", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_id", "=", "t2", ".", "service_id", "where", "t2", ".", "service_type_code", "=", "value"], "question": "¿Cuáles son los detalles del evento de los servicios que tienen el código de tipo 'Matrimonio'?\n", "question_toks": ["what", "are", "the", "event", "details", "of", "the", "services", "that", "have", "the", "type", "code", "'Marriage", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Marriage\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_in_alabama", "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants", "query_toks": ["SELECT", "Participant_ID", ",", "Participant_Type_Code", ",", "Participant_Details", "FROM", "Participants"], "query_toks_no_value": ["select", "participant_id", ",", "participant_type_code", ",", "participant_details", "from", "participants"], "question": "¿Cuáles son todas las identificaciones de los participantes, el código de tipo y los detalles?\n", "question_toks": ["What", "are", "all", "the", "the", "participant", "ids", ",", "type", "code", "and", "details", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_in_alabama", "query": "SELECT service_id ,  event_details FROM EVENTS", "query_toks": ["SELECT", "service_id", ",", "event_details", "FROM", "EVENTS"], "query_toks_no_value": ["select", "service_id", ",", "event_details", "from", "events"], "question": "Enumere la identificación del servicio y los detalles de los eventos.\n", "question_toks": ["List", "the", "service", "id", "and", "details", "for", "the", "events", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM races WHERE YEAR = 2017", "query_toks": ["SELECT", "name", "FROM", "races", "WHERE", "YEAR", "=", "2017"], "query_toks_no_value": ["select", "name", "from", "races", "where", "year", "=", "value"], "question": "Encuentra los nombres de todas las carreras celebradas en 2017.\n", "question_toks": ["Find", "the", "names", "of", "all", "races", "held", "in", "2017", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], 2017.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM races WHERE YEAR = 2017", "query_toks": ["SELECT", "name", "FROM", "races", "WHERE", "YEAR", "=", "2017"], "query_toks_no_value": ["select", "name", "from", "races", "where", "year", "=", "value"], "question": "¿Cuáles son los nombres de todas las carreras que ocurrieron en el año 2017?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "races", "that", "occurred", "in", "the", "year", "2017", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], 2017.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "races", "WHERE", "YEAR", "BETWEEN", "2014", "AND", "2017"], "query_toks_no_value": ["select", "distinct", "name", "from", "races", "where", "year", "between", "value", "and", "value"], "question": "¿Encuentra los nombres distintos de todas las carreras celebradas entre 2014 y 2017?\n", "question_toks": ["Find", "the", "distinct", "names", "of", "all", "races", "held", "between", "2014", "and", "2017", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 1, [0, [0, 11, false], null], 2014.0, 2017.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "races", "WHERE", "YEAR", "BETWEEN", "2014", "AND", "2017"], "query_toks_no_value": ["select", "distinct", "name", "from", "races", "where", "year", "between", "value", "and", "value"], "question": "¿Cuáles son los nombres únicos de todas las carreras celebradas entre 2014 y 2017?\n", "question_toks": ["What", "are", "the", "unique", "names", "of", "all", "race", "held", "between", "2014", "and", "2017", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 1, [0, [0, 11, false], null], 2014.0, 2017.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "query_toks": ["SELECT", "DISTINCT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", "<", "93000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", "<", "value"], "question": "¿Enumere el nombre y apellido de todos los conductores distintos que alguna vez tuvieron un tiempo de vuelta inferior a 93000 milisegundos?\n", "question_toks": ["List", "the", "forename", "and", "surname", "of", "all", "distinct", "drivers", "who", "once", "had", "laptime", "less", "than", "93000", "milliseconds", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]]}, "select": [true, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 4, [0, [0, 94, false], null], 93000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000", "query_toks": ["SELECT", "DISTINCT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", "<", "93000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", ",", "t1", ".", "surname", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", "<", "value"], "question": "¿Cuáles son los nombres y apellidos de todos los conductores únicos que tuvieron un tiempo de vuelta de menos de 93000 milisegundos?\n", "question_toks": ["What", "are", "the", "forenames", "and", "surnames", "of", "all", "unique", "drivers", "who", "had", "a", "lap", "time", "of", "less", "than", "93000", "milliseconds", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]]}, "select": [true, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 4, [0, [0, 94, false], null], 93000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "query_toks": ["SELECT", "DISTINCT", "T1.driverid", ",", "T1.nationality", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", ">", "100000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "driverid", ",", "t1", ".", "nationality", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", ">", "value"], "question": "¿Encontrar todas las identificaciones y nacionalidades distintas de los conductores que han tenido un tiempo de vuelta de más de 100000 milisegundos?\n", "question_toks": ["Find", "all", "the", "distinct", "id", "and", "nationality", "of", "drivers", "who", "have", "had", "laptime", "more", "than", "100000", "milliseconds", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 3, [0, [0, 94, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000", "query_toks": ["SELECT", "DISTINCT", "T1.driverid", ",", "T1.nationality", "FROM", "drivers", "AS", "T1", "JOIN", "laptimes", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.milliseconds", ">", "100000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "driverid", ",", "t1", ".", "nationality", "from", "drivers", "as", "t1", "join", "laptimes", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "milliseconds", ">", "value"], "question": "¿Cuáles son las diferentes identificaciones y nacionalidades de todos los conductores que tuvieron un tiempo de vuelta de más de 100.000 milisegundos?\n", "question_toks": ["What", "are", "the", "different", "driver", "ids", "and", "nationalities", "of", "all", "drivers", "who", "had", "a", "laptime", "of", "more", "than", "100000", "milliseconds", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 90, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 3, [0, [0, 94, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "query_toks": ["SELECT", "T2.name", ",", "T2.year", "FROM", "results", "AS", "T1", "JOIN", "races", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T1.driverid", "=", "T3.driverid", "WHERE", "T3.forename", "=", "``", "Lewis", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "year", "from", "results", "as", "t1", "join", "races", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t1", ".", "driverid", "=", "t3", ".", "driverid", "where", "t3", ".", "forename", "=", "value"], "question": "¿Dame una lista de nombres y años de carreras que tuvo algún piloto cuyo nombre sea Lewis?\n", "question_toks": ["Give", "me", "a", "list", "of", "names", "and", "years", "of", "races", "that", "had", "any", "driver", "whose", "forename", "is", "Lewis", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 44, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Lewis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"", "query_toks": ["SELECT", "T2.name", ",", "T2.year", "FROM", "results", "AS", "T1", "JOIN", "races", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "JOIN", "drivers", "AS", "T3", "ON", "T1.driverid", "=", "T3.driverid", "WHERE", "T3.forename", "=", "``", "Lewis", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "year", "from", "results", "as", "t1", "join", "races", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "join", "drivers", "as", "t3", "on", "t1", ".", "driverid", "=", "t3", ".", "driverid", "where", "t3", ".", "forename", "=", "value"], "question": "¿Cuáles son los nombres y años de todas las carreras que tuvieron un piloto con el apellido Lewis?\n", "question_toks": ["What", "are", "the", "names", "and", "years", "of", "all", "races", "that", "had", "a", "driver", "with", "the", "last", "name", "Lewis", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 44, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Lewis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "query_toks": ["SELECT", "forename", ",", "surname", "FROM", "drivers", "WHERE", "nationality", "=", "``", "German", "''"], "query_toks_no_value": ["select", "forename", ",", "surname", "from", "drivers", "where", "nationality", "=", "value"], "question": "¿Encontrar el nombre y apellido de los conductores cuya nacionalidad es alemana?\n", "question_toks": ["Find", "the", "forename", "and", "surname", "of", "drivers", "whose", "nationality", "is", "German", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"German\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"", "query_toks": ["SELECT", "forename", ",", "surname", "FROM", "drivers", "WHERE", "nationality", "=", "``", "German", "''"], "query_toks_no_value": ["select", "forename", ",", "surname", "from", "drivers", "where", "nationality", "=", "value"], "question": "¿Cuál es el nombre y apellido de todos los conductores alemanes?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "the", "German", "drivers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"German\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1", "query_toks": ["SELECT", "DISTINCT", "T1.forename", "FROM", "drivers", "AS", "T1", "JOIN", "driverstandings", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.position", "=", "1", "AND", "T2.wins", "=", "1"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", "from", "drivers", "as", "t1", "join", "driverstandings", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "position", "=", "value", "and", "t2", ".", "wins", "=", "value"], "question": "¿Encontrar todos los nombres de los distintos pilotos que estaban en la posición 1 y ganaron?\n", "question_toks": ["Find", "all", "the", "forenames", "of", "distinct", "drivers", "who", "was", "in", "position", "1", "as", "standing", "and", "won", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 63, false], null]]}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 65, false], null], 1.0, null], "and", [false, 2, [0, [0, 67, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1", "query_toks": ["SELECT", "DISTINCT", "T1.forename", "FROM", "drivers", "AS", "T1", "JOIN", "driverstandings", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.position", "=", "1", "AND", "T2.wins", "=", "1"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", "from", "drivers", "as", "t1", "join", "driverstandings", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "position", "=", "value", "and", "t2", ".", "wins", "=", "value"], "question": "¿Cuáles son los diferentes nombres de los pilotos que están en posición de estar en pie y ganaron?\n", "question_toks": ["What", "are", "all", "the", "different", "first", "names", "of", "the", "drivers", "who", "are", "in", "position", "as", "standing", "and", "won", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 63, false], null]]}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 65, false], null], 1.0, null], "and", [false, 2, [0, [0, 67, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20", "query_toks": ["SELECT", "DISTINCT", "T1.forename", "FROM", "drivers", "AS", "T1", "JOIN", "driverstandings", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.position", "=", "1", "AND", "T2.wins", "=", "1", "AND", "T2.points", ">", "20"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", "from", "drivers", "as", "t1", "join", "driverstandings", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "position", "=", "value", "and", "t2", ".", "wins", "=", "value", "and", "t2", ".", "points", ">", "value"], "question": "¿Encontrar todos los nombres de los distintos pilotos que ganaron en la posición 1 como piloto y obtuvieron más de 20 puntos?\n", "question_toks": ["Find", "all", "the", "forenames", "of", "distinct", "drivers", "who", "won", "in", "position", "1", "as", "driver", "standing", "and", "had", "more", "than", "20", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 63, false], null]]}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 65, false], null], 1.0, null], "and", [false, 2, [0, [0, 67, false], null], 1.0, null], "and", [false, 3, [0, [0, 64, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20", "query_toks": ["SELECT", "DISTINCT", "T1.forename", "FROM", "drivers", "AS", "T1", "JOIN", "driverstandings", "AS", "T2", "ON", "T1.driverid", "=", "T2.driverid", "WHERE", "T2.position", "=", "1", "AND", "T2.wins", "=", "1", "AND", "T2.points", ">", "20"], "query_toks_no_value": ["select", "distinct", "t1", ".", "forename", "from", "drivers", "as", "t1", "join", "driverstandings", "as", "t2", "on", "t1", ".", "driverid", "=", "t2", ".", "driverid", "where", "t2", ".", "position", "=", "value", "and", "t2", ".", "wins", "=", "value", "and", "t2", ".", "points", ">", "value"], "question": "¿Cuáles son los nombres de los diferentes pilotos que ganaron en la posición 1 como piloto permanente y obtuvieron más de 20 puntos?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "the", "different", "drivers", "who", "won", "in", "position", "1", "as", "driver", "standing", "and", "had", "more", "than", "20", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 63, false], null]]}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 65, false], null], 1.0, null], "and", [false, 2, [0, [0, 67, false], null], 1.0, null], "and", [false, 3, [0, [0, 64, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017", "query_toks": ["SELECT", "T1.name", "FROM", "races", "AS", "T1", "JOIN", "circuits", "AS", "T2", "ON", "T1.circuitid", "=", "T2.circuitid", "WHERE", "T2.country", "=", "``", "Spain", "''", "AND", "T1.year", ">", "2017"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "races", "as", "t1", "join", "circuits", "as", "t2", "on", "t1", ".", "circuitid", "=", "t2", ".", "circuitid", "where", "t2", ".", "country", "=", "value", "and", "t1", ".", "year", ">", "value"], "question": "¿Cómo se llaman las carreras que se disputaron después de 2017 y los circuitos fueron en el país de España?\n", "question_toks": ["What", "are", "the", "names", "of", "races", "that", "were", "held", "after", "2017", "and", "the", "circuits", "were", "in", "the", "country", "of", "Spain", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Spain\"", null], "and", [false, 3, [0, [0, 11, false], null], 2017.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017", "query_toks": ["SELECT", "T1.name", "FROM", "races", "AS", "T1", "JOIN", "circuits", "AS", "T2", "ON", "T1.circuitid", "=", "T2.circuitid", "WHERE", "T2.country", "=", "``", "Spain", "''", "AND", "T1.year", ">", "2017"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "races", "as", "t1", "join", "circuits", "as", "t2", "on", "t1", ".", "circuitid", "=", "t2", ".", "circuitid", "where", "t2", ".", "country", "=", "value", "and", "t1", ".", "year", ">", "value"], "question": "¿Cómo se llaman las carreras que se celebran después de 2017 en España?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "races", "held", "after", "2017", "in", "Spain", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Spain\"", null], "and", [false, 3, [0, [0, 11, false], null], 2017.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "races", "AS", "T1", "JOIN", "circuits", "AS", "T2", "ON", "T1.circuitid", "=", "T2.circuitid", "WHERE", "T2.country", "=", "``", "Spain", "''", "AND", "T1.year", ">", "2000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "races", "as", "t1", "join", "circuits", "as", "t2", "on", "t1", ".", "circuitid", "=", "t2", ".", "circuitid", "where", "t2", ".", "country", "=", "value", "and", "t1", ".", "year", ">", "value"], "question": "¿Cuáles son los nombres únicos de las carreras que se celebraron después del 2000 y los circuitos fueron en España?\n", "question_toks": ["What", "are", "the", "unique", "names", "of", "races", "that", "held", "after", "2000", "and", "the", "circuits", "were", "in", "Spain", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Spain\"", null], "and", [false, 3, [0, [0, 11, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "races", "AS", "T1", "JOIN", "circuits", "AS", "T2", "ON", "T1.circuitid", "=", "T2.circuitid", "WHERE", "T2.country", "=", "``", "Spain", "''", "AND", "T1.year", ">", "2000"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "races", "as", "t1", "join", "circuits", "as", "t2", "on", "t1", ".", "circuitid", "=", "t2", ".", "circuitid", "where", "t2", ".", "country", "=", "value", "and", "t1", ".", "year", ">", "value"], "question": "¿Cómo se llaman todas las carreras celebradas después del 2000 en España?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "races", "held", "after", "2000", "in", "Spain", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Spain\"", null], "and", [false, 3, [0, [0, 11, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", "<", "(", "SELECT", "max", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", "<", "(", "select", "max", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "Encuentre la identificación distintiva del conductor y el número de parada de todos los conductores que tienen una duración de parada en boxes más corta que algunos conductores en la carrera con identificación 841.\n", "question_toks": ["Find", "the", "distinct", "driver", "id", "and", "the", "stop", "number", "of", "all", "drivers", "that", "have", "a", "shorter", "pit", "stop", "duration", "than", "some", "drivers", "in", "the", "race", "with", "id", "841", "."], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "where": [[false, 4, [0, [0, 87, false], null], {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[1, [0, [0, 87, false], null]]]], "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", "<", "(", "SELECT", "max", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", "<", "(", "select", "max", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "¿Cuál es la identificación y el número de parada de cada piloto que tiene una parada en boxes más corta que el piloto de la carrera con identificación 841?\n", "question_toks": ["What", "is", "the", "id", "and", "stop", "number", "for", "each", "driver", "that", "has", "a", "shorter", "pit", "stop", "than", "the", "driver", "in", "the", "race", "with", "id", "841", "?"], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "where": [[false, 4, [0, [0, 87, false], null], {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[1, [0, [0, 87, false], null]]]], "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", ">", "(", "SELECT", "min", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", ">", "(", "select", "min", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "¿Encontrar la identificación distintiva del conductor de todos los conductores que tienen una duración de parada más larga que algunos conductores en la carrera cuya identificación es 841?\n", "question_toks": ["Find", "the", "distinct", "driver", "id", "of", "all", "drivers", "that", "have", "a", "longer", "stop", "duration", "than", "some", "drivers", "in", "the", "race", "whose", "id", "is", "841", "?"], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "where": [[false, 3, [0, [0, 87, false], null], {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[2, [0, [0, 87, false], null]]]], "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)", "query_toks": ["SELECT", "DISTINCT", "driverid", ",", "STOP", "FROM", "pitstops", "WHERE", "duration", ">", "(", "SELECT", "min", "(", "duration", ")", "FROM", "pitstops", "WHERE", "raceid", "=", "841", ")"], "query_toks_no_value": ["select", "distinct", "driverid", ",", "stop", "from", "pitstops", "where", "duration", ">", "(", "select", "min", "(", "duration", ")", "from", "pitstops", "where", "raceid", "=", "value", ")"], "question": "¿Cuáles son las diferentes identificaciones y duraciones de las paradas de todos los conductores cuya parada duró más que el conductor en la carrera con la identificación 841?\n", "question_toks": ["What", "are", "the", "different", "ids", "and", "stop", "durations", "of", "all", "the", "drivers", "whose", "stop", "lasted", "longer", "than", "the", "driver", "in", "the", "race", "with", "the", "id", "841", "?"], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [true, [[0, [0, [0, 83, false], null]], [0, [0, [0, 84, false], null]]]], "where": [[false, 3, [0, [0, 87, false], null], {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[2, [0, [0, 87, false], null]]]], "where": [[false, 2, [0, [0, 82, false], null], 841.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011", "query_toks": ["SELECT", "name", "FROM", "races", "WHERE", "YEAR", "BETWEEN", "2009", "AND", "2011"], "query_toks_no_value": ["select", "name", "from", "races", "where", "year", "between", "value", "and", "value"], "question": "¿Cómo se llaman las carreras celebradas entre 2009 y 2011?\n", "question_toks": ["What", "are", "the", "names", "of", "races", "held", "between", "2009", "and", "2011", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 1, [0, [0, 11, false], null], 2009.0, 2011.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011", "query_toks": ["SELECT", "name", "FROM", "races", "WHERE", "YEAR", "BETWEEN", "2009", "AND", "2011"], "query_toks_no_value": ["select", "name", "from", "races", "where", "year", "between", "value", "and", "value"], "question": "¿Cuáles son los nombres de todas las carreras celebradas entre 2009 y 2011?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "races", "held", "between", "2009", "and", "2011", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 1, [0, [0, 11, false], null], 2009.0, 2011.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"", "query_toks": ["SELECT", "name", "FROM", "races", "WHERE", "TIME", ">", "``", "12:00:00", "''", "OR", "TIME", "<", "``", "09:00:00", "''"], "query_toks_no_value": ["select", "name", "from", "races", "where", "time", ">", "value", "or", "time", "<", "value"], "question": "¿Cómo se llaman las carreras que se celebran después de las 12:00:00 o antes de las 09:00:00?\n", "question_toks": ["What", "are", "the", "names", "of", "races", "held", "after", "12:00:00", "or", "before", "09:00:00", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], "\"12:00:00\"", null], "or", [false, 4, [0, [0, 16, false], null], "\"09:00:00\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"", "query_toks": ["SELECT", "name", "FROM", "races", "WHERE", "TIME", ">", "``", "12:00:00", "''", "OR", "TIME", "<", "``", "09:00:00", "''"], "query_toks_no_value": ["select", "name", "from", "races", "where", "time", ">", "value", "or", "time", "<", "value"], "question": "¿Cuáles son los nombres de todas las carreras que ocurrieron después de las 12:00:00 o antes de las 09:00:00?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "races", "that", "occurred", "after", "12:00:00", "or", "before", "09:00:00", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], "\"12:00:00\"", null], "or", [false, 4, [0, [0, 16, false], null], "\"09:00:00\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"", "query_toks": ["SELECT", "name", "FROM", "circuits", "WHERE", "country", "=", "``", "UK", "''", "OR", "country", "=", "``", "Malaysia", "''"], "query_toks_no_value": ["select", "name", "from", "circuits", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "¿Cómo se llaman los circuitos que pertenecen al Reino Unido o Malasia?\n", "question_toks": ["What", "are", "the", "names", "of", "circuits", "that", "belong", "to", "UK", "or", "Malaysia", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"UK\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Malaysia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"", "query_toks": ["SELECT", "name", "FROM", "circuits", "WHERE", "country", "=", "``", "UK", "''", "OR", "country", "=", "``", "Malaysia", "''"], "query_toks_no_value": ["select", "name", "from", "circuits", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "¿Cómo se llaman todos los circuitos que hay en Reino Unido o Malasia?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "circuits", "that", "are", "in", "the", "UK", "or", "Malaysia", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"UK\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Malaysia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "query_toks": ["SELECT", "circuitid", ",", "LOCATION", "FROM", "circuits", "WHERE", "country", "=", "``", "France", "''", "OR", "country", "=", "``", "Belgium", "''"], "query_toks_no_value": ["select", "circuitid", ",", "location", "from", "circuits", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "¿Encontrar el id y ubicación de circuitos que pertenecen a Francia o Bélgica?\n", "question_toks": ["Find", "the", "id", "and", "location", "of", "circuits", "that", "belong", "to", "France", "or", "Belgium", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"France\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Belgium\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"", "query_toks": ["SELECT", "circuitid", ",", "LOCATION", "FROM", "circuits", "WHERE", "country", "=", "``", "France", "''", "OR", "country", "=", "``", "Belgium", "''"], "query_toks_no_value": ["select", "circuitid", ",", "location", "from", "circuits", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "¿Cuáles son los identificadores y ubicaciones de todos los circuitos en Francia o Bélgica?\n", "question_toks": ["What", "are", "the", "ids", "and", "locations", "of", "all", "circuits", "in", "France", "or", "Belgium", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"France\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Belgium\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5", "query_toks": ["SELECT", "T1.name", "FROM", "constructors", "AS", "T1", "JOIN", "constructorstandings", "AS", "T2", "ON", "T1.constructorid", "=", "T2.constructorid", "WHERE", "T1.nationality", "=", "``", "Japanese", "''", "AND", "T2.points", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "constructors", "as", "t1", "join", "constructorstandings", "as", "t2", "on", "t1", ".", "constructorid", "=", "t2", ".", "constructorid", "where", "t1", ".", "nationality", "=", "value", "and", "t2", ".", "points", ">", "value"], "question": "¿Encontrar los nombres de los constructores japoneses que alguna vez obtuvieron más de 5 puntos?\n", "question_toks": ["Find", "the", "names", "of", "Japanese", "constructors", "that", "have", "once", "earned", "more", "than", "5", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 31, false], null], [0, 38, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"Japanese\"", null], "and", [false, 3, [0, [0, 39, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "formula_1", "query": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5", "query_toks": ["SELECT", "T1.name", "FROM", "constructors", "AS", "T1", "JOIN", "constructorstandings", "AS", "T2", "ON", "T1.constructorid", "=", "T2.constructorid", "WHERE", "T1.nationality", "=", "``", "Japanese", "''", "AND", "T2.points", ">", "5"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "constructors", "as", "t1", "join", "constructorstandings", "as", "t2", "on", "t1", ".", "constructorid", "=", "t2", ".", "constructorid", "where", "t1", ".", "nationality", "=", "value", "and", "t2", ".", "points", ">", "value"], "question": "¿Cómo se llaman todos los constructores japoneses que han obtenido más de 5 puntos?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "Japanese", "constructors", "that", "have", "earned", "more", "than", "5", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 31, false], null], [0, 38, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"Japanese\"", null], "and", [false, 3, [0, [0, 39, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Team ,  Starting_Year FROM technician", "query_toks": ["SELECT", "Team", ",", "Starting_Year", "FROM", "technician"], "query_toks_no_value": ["select", "team", ",", "starting_year", "from", "technician"], "question": "¿Cuál es el equipo y año de inicio de los técnicos?\n", "question_toks": ["What", "are", "the", "team", "and", "starting", "year", "of", "technicians", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Team ,  Starting_Year FROM technician", "query_toks": ["SELECT", "Team", ",", "Starting_Year", "FROM", "technician"], "query_toks_no_value": ["select", "team", ",", "starting_year", "from", "technician"], "question": "¿Cuál es el equipo y año de inicio de cada técnico?\n", "question_toks": ["What", "is", "the", "team", "and", "starting", "year", "for", "each", "technician", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE Team != \"NYY\"", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "Team", "!", "=", "``", "NYY", "''"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "team", "!", "=", "value"], "question": "Indique el nombre de los técnicos cuyo equipo no sea \"NYY\".\n", "question_toks": ["List", "the", "name", "of", "technicians", "whose", "team", "is", "not", "``", "NYY", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"NYY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE Team != \"NYY\"", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "Team", "!", "=", "``", "NYY", "''"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "team", "!", "=", "value"], "question": "¿Cómo se llama el técnico cuyo equipo no es 'NYY'?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "technician", "whose", "team", "is", "not", "'NYY", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"NYY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "Age", "=", "36", "OR", "Age", "=", "37"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "Mostrar el nombre de los técnicos de 36 o 37 años.\n", "question_toks": ["Show", "the", "name", "of", "technicians", "aged", "either", "36", "or", "37"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 36.0, null], "or", [false, 2, [0, [0, 16, false], null], 37.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "Age", "=", "36", "OR", "Age", "=", "37"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "age", "=", "value", "or", "age", "=", "value"], "question": "¿Cómo se llaman los técnicos de 36 o 37 años?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "technicians", "aged", "either", "36", "or", "37", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 36.0, null], "or", [false, 2, [0, [0, 16, false], null], 37.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Machine_series", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "machine_series", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id"], "question": "Muestra los nombres de los técnicos y la serie de máquinas que deben reparar.\n", "question_toks": ["Show", "names", "of", "technicians", "and", "series", "of", "machines", "they", "are", "assigned", "to", "repair", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Machine_series", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "machine_series", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id"], "question": "¿Cómo se llaman los técnicos y las series de máquinas que reparan?\n", "question_toks": ["What", "are", "the", "names", "of", "technicians", "and", "the", "machine", "series", "that", "they", "repair", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70", "query_toks": ["SELECT", "T3.Name", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID", "WHERE", "T2.value_points", ">", "70"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id", "where", "t2", ".", "value_points", ">", "value"], "question": "Muestra los nombres de los técnicos asignados a reparar máquinas con un valor superior a 70.\n", "question_toks": ["Show", "names", "of", "technicians", "who", "are", "assigned", "to", "repair", "machines", "with", "value", "point", "more", "than", "70", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 70.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70", "query_toks": ["SELECT", "T3.Name", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID", "WHERE", "T2.value_points", ">", "70"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id", "where", "t2", ".", "value_points", ">", "value"], "question": "¿Cuáles son los nombres de los técnicos asignados a reparar máquinas con valores superiores a 70?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "technicians", "that", "are", "assigned", "to", "repair", "machines", "with", "more", "point", "values", "than", "70", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 70.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "technician_id", "NOT", "IN", "(", "SELECT", "technician_id", "FROM", "repair_assignment", ")"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "technician_id", "not", "in", "(", "select", "technician_id", "from", "repair_assignment", ")"], "question": "Enumere los nombres de los técnicos que no han sido asignados a reparar máquinas.\n", "question_toks": ["List", "the", "names", "of", "technicians", "who", "have", "not", "been", "assigned", "to", "repair", "machines", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[true, 8, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "technician_id", "NOT", "IN", "(", "SELECT", "technician_id", "FROM", "repair_assignment", ")"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "technician_id", "not", "in", "(", "select", "technician_id", "from", "repair_assignment", ")"], "question": "¿Cómo se llaman los técnicos que no han sido asignados a reparar máquinas?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "technicians", "that", "have", "not", "been", "assigned", "to", "repair", "machines", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[true, 8, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT Company ,  Investor FROM entrepreneur", "query_toks": ["SELECT", "Company", ",", "Investor", "FROM", "entrepreneur"], "query_toks_no_value": ["select", "company", ",", "investor", "from", "entrepreneur"], "question": "Enumerar las empresas y los inversores de los emprendedores.\n", "question_toks": ["List", "the", "companies", "and", "the", "investors", "of", "entrepreneurs", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT Company ,  Investor FROM entrepreneur", "query_toks": ["SELECT", "Company", ",", "Investor", "FROM", "entrepreneur"], "query_toks_no_value": ["select", "company", ",", "investor", "from", "entrepreneur"], "question": "¿Cuáles son las empresas e inversores que corresponden a cada emprendedor?\n", "question_toks": ["What", "are", "the", "companies", "and", "investors", "that", "correspond", "to", "each", "entrepreneur", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T2.Name", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "¿Cómo se llaman los emprendedores?\n", "question_toks": ["What", "are", "the", "names", "of", "entrepreneurs", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T2.Name", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "Devuelve los nombres de los empresarios.\n", "question_toks": ["Return", "the", "names", "of", "entrepreneurs", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"", "query_toks": ["SELECT", "T2.Name", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Investor", "!", "=", "``", "Rachel", "Elnaugh", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "investor", "!", "=", "value"], "question": "¿Cómo se llaman los empresarios cuyo inversor no es \"Rachel Elnaugh\"?\n", "question_toks": ["What", "are", "the", "names", "of", "entrepreneurs", "whose", "investor", "is", "not", "``", "Rachel", "Elnaugh", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Rachel Elnaugh\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"", "query_toks": ["SELECT", "T2.Name", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Investor", "!", "=", "``", "Rachel", "Elnaugh", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "investor", "!", "=", "value"], "question": "Devolver los nombres de los empresarios no tiene la inversionista Rachel Elnaugh.\n", "question_toks": ["Return", "the", "names", "of", "entrepreneurs", "do", "no", "not", "have", "the", "investor", "Rachel", "Elnaugh", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Rachel Elnaugh\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"", "query_toks": ["SELECT", "T2.Date_of_Birth", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Investor", "=", "``", "Simon", "Woodroffe", "''", "OR", "T1.Investor", "=", "``", "Peter", "Jones", "''"], "query_toks_no_value": ["select", "t2", ".", "date_of_birth", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "investor", "=", "value", "or", "t1", ".", "investor", "=", "value"], "question": "¿Cuáles son las fechas de nacimiento de los emprendedores con el inversor \"Simon Woodroffe\" o \"Peter Jones\"?\n", "question_toks": ["What", "are", "the", "dates", "of", "birth", "of", "entrepreneurs", "with", "investor", "``", "Simon", "Woodroffe", "''", "or", "``", "Peter", "Jones", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Simon Woodroffe\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Peter Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"", "query_toks": ["SELECT", "T2.Date_of_Birth", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Investor", "=", "``", "Simon", "Woodroffe", "''", "OR", "T1.Investor", "=", "``", "Peter", "Jones", "''"], "query_toks_no_value": ["select", "t2", ".", "date_of_birth", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "investor", "=", "value", "or", "t1", ".", "investor", "=", "value"], "question": "Devuelve las fechas de nacimiento de los empresarios que tienen al inversor Simon Woodroffe o Peter Jones.\n", "question_toks": ["Return", "the", "dates", "of", "birth", "for", "entrepreneurs", "who", "have", "either", "the", "investor", "Simon", "Woodroffe", "or", "Peter", "Jones", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Simon Woodroffe\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Peter Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "entrepreneur", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "entrepreneur", ")"], "question": "Enumere los nombres de personas que no sean empresarios.\n", "question_toks": ["List", "the", "names", "of", "people", "that", "are", "not", "entrepreneurs", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entrepreneur", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "entrepreneur", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "entrepreneur", ")"], "question": "¿Cómo se llaman las personas que no son emprendedoras?\n", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "are", "not", "entrepreneurs", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "perpetrator", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "perpetrator", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "perpetrator", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id"], "question": "¿Cuáles son los nombres de los perpetradores?\n", "question_toks": ["What", "are", "the", "names", "of", "perpetrators", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "perpetrator", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\"", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "perpetrator", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T2.Country", "!", "=", "``", "China", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "perpetrator", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "country", "!", "=", "value"], "question": "¿Cómo se llaman los perpetradores cuyo país no es \"China\"?\n", "question_toks": ["What", "are", "the", "names", "of", "perpetrators", "whose", "country", "is", "not", "``", "China", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "perpetrator", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\" OR T2.Country  =  \"Japan\"", "query_toks": ["SELECT", "T1.Name", "FROM", "people", "AS", "T1", "JOIN", "perpetrator", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T2.Country", "=", "``", "China", "''", "OR", "T2.Country", "=", "``", "Japan", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "perpetrator", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "country", "=", "value", "or", "t2", ".", "country", "=", "value"], "question": "¿Cuáles son los nombres de los perpetradores en el país \"China\" o \"Japón\"?\n", "question_toks": ["What", "are", "the", "names", "of", "perpetrators", "in", "country", "``", "China", "''", "or", "``", "Japan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"China\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Japan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "perpetrator", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "perpetrator", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "perpetrator", ")"], "question": "Enumere los nombres de las personas que no son perpetradores.\n", "question_toks": ["List", "the", "names", "of", "people", "that", "are", "not", "perpetrators", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value"], "question": "Informe el nombre de todos los campus en el condado de Los Ángeles.\n", "question_toks": ["Report", "the", "name", "of", "all", "campuses", "in", "Los", "Angeles", "county", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value"], "question": "¿Qué campus están ubicados en el condado de Los Ángeles?\n", "question_toks": ["What", "campuses", "are", "located", "in", "the", "county", "of", "Los", "Angeles", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "LOCATION", "=", "``", "Chico", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "location", "=", "value"], "question": "¿Cuáles son los nombres de todos los campus ubicados en Chico?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "campuses", "located", "at", "Chico", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Chico\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "LOCATION", "=", "``", "Chico", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "location", "=", "value"], "question": "¿Qué campus están ubicados en Chico?\n", "question_toks": ["What", "campuses", "are", "located", "in", "Chico", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Chico\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE YEAR  =  1958", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "YEAR", "=", "1958"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "year", "=", "value"], "question": "Encuentra todos los campus abiertos en 1958.\n", "question_toks": ["Find", "all", "the", "campuses", "opened", "in", "1958", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 1958.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE YEAR  =  1958", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "YEAR", "=", "1958"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "year", "=", "value"], "question": "¿Cuáles son los campus que abrieron en 1958?\n", "question_toks": ["What", "are", "the", "campuses", "that", "opened", "in", "1958", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 1958.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE YEAR  <  1800", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "YEAR", "<", "1800"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "year", "<", "value"], "question": "Encuentre el nombre de los campus abiertos antes de 1800.\n", "question_toks": ["Find", "the", "name", "of", "the", "campuses", "opened", "before", "1800", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], 1800.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE YEAR  <  1800", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "YEAR", "<", "1800"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "year", "<", "value"], "question": "¿Qué campus abrieron antes de 1800?\n", "question_toks": ["What", "campuses", "opened", "before", "1800", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], 1800.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "YEAR", ">", "=", "1935", "AND", "YEAR", "<", "=", "1939"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "year", ">", "=", "value", "and", "year", "<", "=", "value"], "question": "¿Qué campus se abrió entre 1935 y 1939?\n", "question_toks": ["Which", "campus", "was", "opened", "between", "1935", "and", "1939", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 5, false], null], 1935.0, null], "and", [false, 6, [0, [0, 5, false], null], 1939.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "YEAR", ">", "=", "1935", "AND", "YEAR", "<", "=", "1939"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "year", ">", "=", "value", "and", "year", "<", "=", "value"], "question": "¿Qué campus abrieron entre 1935 y 1939?\n", "question_toks": ["What", "campuses", "opened", "between", "1935", "and", "1939", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 5, false], null], 1935.0, null], "and", [false, 6, [0, [0, 5, false], null], 1939.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996", "query_toks": ["SELECT", "campusfee", "FROM", "campuses", "AS", "T1", "JOIN", "csu_fees", "AS", "T2", "ON", "T1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Jose", "State", "University", "''", "AND", "T2.year", "=", "1996"], "query_toks_no_value": ["select", "campusfee", "from", "campuses", "as", "t1", "join", "csu_fees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuál es la tarifa del campus de la \"Universidad Estatal de San José\" en el año 1996?\n", "question_toks": ["What", "is", "the", "campus", "fee", "of", "``", "San", "Jose", "State", "University", "''", "in", "year", "1996", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Jose State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 1996.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996", "query_toks": ["SELECT", "campusfee", "FROM", "campuses", "AS", "T1", "JOIN", "csu_fees", "AS", "T2", "ON", "T1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Jose", "State", "University", "''", "AND", "T2.year", "=", "1996"], "query_toks_no_value": ["select", "campusfee", "from", "campuses", "as", "t1", "join", "csu_fees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuál es la tarifa del campus de la Universidad Estatal de San José en 1996?\n", "question_toks": ["What", "is", "the", "campus", "fee", "for", "San", "Jose", "State", "University", "in", "1996", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Jose State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 1996.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996", "query_toks": ["SELECT", "campusfee", "FROM", "campuses", "AS", "T1", "JOIN", "csu_fees", "AS", "T2", "ON", "T1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "T2.year", "=", "1996"], "query_toks_no_value": ["select", "campusfee", "from", "campuses", "as", "t1", "join", "csu_fees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuál es la tarifa del campus de la \"Universidad Estatal de San Francisco\" en el año 1996?\n", "question_toks": ["What", "is", "the", "campus", "fee", "of", "``", "San", "Francisco", "State", "University", "''", "in", "year", "1996", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 1996.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996", "query_toks": ["SELECT", "campusfee", "FROM", "campuses", "AS", "T1", "JOIN", "csu_fees", "AS", "T2", "ON", "T1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "T2.year", "=", "1996"], "query_toks_no_value": ["select", "campusfee", "from", "campuses", "as", "t1", "join", "csu_fees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuál fue la tarifa del campus de la Universidad Estatal de San Francisco en 1996?\n", "question_toks": ["What", "is", "the", "campus", "fee", "for", "San", "Francisco", "State", "University", "in", "1996", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 1996.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''", "AND", "YEAR", ">", "1950"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value", "and", "year", ">", "value"], "question": "¿Qué universidad está en el condado de Los Ángeles y abrió después de 1950?\n", "question_toks": ["Which", "university", "is", "in", "Los", "Angeles", "county", "and", "opened", "after", "1950", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null], "and", [false, 3, [0, [0, 5, false], null], 1950.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''", "AND", "YEAR", ">", "1950"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value", "and", "year", ">", "value"], "question": "¿Qué campus están ubicados en el condado de Los Ángeles y abrieron después de 1950?\n", "question_toks": ["What", "campuses", "are", "located", "in", "Los", "Angeles", "county", "and", "opened", "after", "1950", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null], "and", [false, 3, [0, [0, 5, false], null], 1950.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")", "query_toks": ["SELECT", "T1.campus", "FROM", "campuses", "AS", "T1", "JOIN", "faculty", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T2.year", "=", "2002", "AND", "faculty", ">", "(", "SELECT", "max", "(", "faculty", ")", "FROM", "campuses", "AS", "T1", "JOIN", "faculty", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T2.year", "=", "2002", "AND", "T1.county", "=", "``", "Orange", "''", ")"], "query_toks_no_value": ["select", "t1", ".", "campus", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", "=", "value", "and", "faculty", ">", "(", "select", "max", "(", "faculty", ")", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", "=", "value", "and", "t1", ".", "county", "=", "value", ")"], "question": "Encuentre los nombres del campus que tenía más facultades en 2002 que todos los campus del condado de Orange.\n", "question_toks": ["Find", "the", "names", "of", "the", "campus", "which", "has", "more", "faculties", "in", "2002", "than", "every", "campus", "in", "Orange", "county", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null], "and", [false, 3, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[1, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null], "and", [false, 2, [0, [0, 4, false], null], "\"Orange\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")", "query_toks": ["SELECT", "T1.campus", "FROM", "campuses", "AS", "T1", "JOIN", "faculty", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T2.year", "=", "2002", "AND", "faculty", ">", "(", "SELECT", "max", "(", "faculty", ")", "FROM", "campuses", "AS", "T1", "JOIN", "faculty", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T2.year", "=", "2002", "AND", "T1.county", "=", "``", "Orange", "''", ")"], "query_toks_no_value": ["select", "t1", ".", "campus", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", "=", "value", "and", "faculty", ">", "(", "select", "max", "(", "faculty", ")", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", "=", "value", "and", "t1", ".", "county", "=", "value", ")"], "question": "¿Cuáles son los nombres de los campus que tienen más facultades en 2002 que el número máximo en el condado de Orange?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "campus", "that", "have", "more", "faculties", "in", "2002", "than", "the", "maximum", "number", "in", "Orange", "county", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null], "and", [false, 3, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[1, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null], "and", [false, 2, [0, [0, 4, false], null], "\"Orange\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200", "query_toks": ["SELECT", "T1.campus", "FROM", "campuses", "AS", "t1", "JOIN", "enrollments", "AS", "t2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t2.year", "=", "1956", "AND", "totalenrollment_ay", ">", "400", "AND", "FTE_AY", ">", "200"], "query_toks_no_value": ["select", "t1", ".", "campus", "from", "campuses", "as", "t1", "join", "enrollments", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", "=", "value", "and", "totalenrollment_ay", ">", "value", "and", "fte_ay", ">", "value"], "question": "¿Qué campus tenía más de 400 inscritos en total pero más de 200 inscritos a tiempo completo en el año 1956?\n", "question_toks": ["What", "campus", "had", "more", "than", "400", "total", "enrollment", "but", "more", "than", "200", "full", "time", "enrollment", "in", "year", "1956", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 1956.0, null], "and", [false, 3, [0, [0, 19, false], null], 400.0, null], "and", [false, 3, [0, [0, 20, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200", "query_toks": ["SELECT", "T1.campus", "FROM", "campuses", "AS", "t1", "JOIN", "enrollments", "AS", "t2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t2.year", "=", "1956", "AND", "totalenrollment_ay", ">", "400", "AND", "FTE_AY", ">", "200"], "query_toks_no_value": ["select", "t1", ".", "campus", "from", "campuses", "as", "t1", "join", "enrollments", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "year", "=", "value", "and", "totalenrollment_ay", ">", "value", "and", "fte_ay", ">", "value"], "question": "¿Qué campus comenzó en el año 1956, tiene más de 200 estudiantes de tiempo completo y más de 400 estudiantes matriculados?\n", "question_toks": ["What", "campus", "started", "in", "year", "1956", ",", "has", "more", "than", "200", "full", "time", "students", ",", "and", "more", "than", "400", "students", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 1956.0, null], "and", [false, 3, [0, [0, 19, false], null], 400.0, null], "and", [false, 3, [0, [0, 20, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value"], "question": "Enumere los campus en el condado de Los Ángeles.\n", "question_toks": ["List", "the", "campuses", "in", "Los", "Angeles", "county", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value"], "question": "¿Qué campus hay en el condado de Los Ángeles?\n", "question_toks": ["What", "campuses", "are", "in", "Los", "Angeles", "county", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000", "query_toks": ["SELECT", "degrees", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Jose", "State", "University", "''", "AND", "t2.year", "=", "2000"], "query_toks_no_value": ["select", "degrees", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuántos títulos se otorgaron en la \"Universidad Estatal de San José\" en 2000?\n", "question_toks": ["How", "many", "degrees", "were", "conferred", "in", "``", "San", "Jose", "State", "University", "''", "in", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Jose State University\"", null], "and", [false, 2, [0, [0, 9, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000", "query_toks": ["SELECT", "degrees", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Jose", "State", "University", "''", "AND", "t2.year", "=", "2000"], "query_toks_no_value": ["select", "degrees", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuántos títulos se otorgaron en la Universidad Estatal de San José en 2000?\n", "question_toks": ["How", "many", "degrees", "were", "conferred", "at", "San", "Jose", "State", "University", "in", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Jose State University\"", null], "and", [false, 2, [0, [0, 9, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001", "query_toks": ["SELECT", "degrees", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "t2.year", "=", "2001"], "query_toks_no_value": ["select", "degrees", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Cuáles son los títulos otorgados en la \"Universidad Estatal de San Francisco\" en 2001?\n", "question_toks": ["What", "are", "the", "degrees", "conferred", "in", "``", "San", "Francisco", "State", "University", "''", "in", "2001", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 9, false], null], 2001.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001", "query_toks": ["SELECT", "degrees", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t1.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "t2.year", "=", "2001"], "query_toks_no_value": ["select", "degrees", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "campus", "=", "value", "and", "t2", ".", "year", "=", "value"], "question": "¿Qué títulos se otorgaron en la Universidad Estatal de San Francisco en el año 2001?\n", "question_toks": ["What", "degrees", "were", "conferred", "in", "San", "Francisco", "State", "University", "in", "the", "year", "2001", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 9, false], null], 2001.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"", "query_toks": ["SELECT", "faculty", "FROM", "faculty", "AS", "T1", "JOIN", "campuses", "AS", "T2", "ON", "T1.campus", "=", "T2.id", "WHERE", "T1.year", "=", "2002", "AND", "T2.campus", "=", "``", "Long", "Beach", "State", "University", "''"], "query_toks_no_value": ["select", "faculty", "from", "faculty", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "campus", "=", "value"], "question": "¿Cuál es el número de líneas de profesores en el campus de la \"Universidad Estatal de Long Beach\" en 2002?\n", "question_toks": ["What", "is", "the", "number", "of", "faculty", "lines", "in", "campus", "``", "Long", "Beach", "State", "University", "''", "in", "2002", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"Long Beach State University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\"", "query_toks": ["SELECT", "faculty", "FROM", "faculty", "AS", "T1", "JOIN", "campuses", "AS", "T2", "ON", "T1.campus", "=", "T2.id", "WHERE", "T1.year", "=", "2002", "AND", "T2.campus", "=", "``", "Long", "Beach", "State", "University", "''"], "query_toks_no_value": ["select", "faculty", "from", "faculty", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "campus", "=", "value"], "question": "¿Cuál es el número de profesores de la Universidad Estatal de Long Beach en 2002?\n", "question_toks": ["What", "is", "the", "number", "of", "faculty", "at", "Long", "Beach", "State", "University", "in", "2002", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"Long Beach State University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"", "query_toks": ["SELECT", "faculty", "FROM", "faculty", "AS", "T1", "JOIN", "campuses", "AS", "T2", "ON", "T1.campus", "=", "T2.id", "WHERE", "T1.year", "=", "2004", "AND", "T2.campus", "=", "``", "San", "Francisco", "State", "University", "''"], "query_toks_no_value": ["select", "faculty", "from", "faculty", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "campus", "=", "value"], "question": "¿Cuántas líneas de profesores hay en la \"Universidad Estatal de San Francisco\" en el año 2004?\n", "question_toks": ["How", "many", "faculty", "lines", "are", "there", "in", "``", "San", "Francisco", "State", "University", "''", "in", "year", "2004", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2004.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"", "query_toks": ["SELECT", "faculty", "FROM", "faculty", "AS", "T1", "JOIN", "campuses", "AS", "T2", "ON", "T1.campus", "=", "T2.id", "WHERE", "T1.year", "=", "2004", "AND", "T2.campus", "=", "``", "San", "Francisco", "State", "University", "''"], "query_toks_no_value": ["select", "faculty", "from", "faculty", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "campus", "=", "value"], "question": "¿Cuántas líneas de profesores había en la Universidad Estatal de San Francisco en 2004?\n", "question_toks": ["How", "many", "faculty", "lines", "are", "there", "at", "San", "Francisco", "State", "University", "in", "2004", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2004.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004", "query_toks": ["SELECT", "T1.campus", "FROM", "campuses", "AS", "t1", "JOIN", "faculty", "AS", "t2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t2.faculty", ">", "=", "600", "AND", "t2.faculty", "<", "=", "1000", "AND", "T1.year", "=", "2004"], "query_toks_no_value": ["select", "t1", ".", "campus", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "faculty", ">", "=", "value", "and", "t2", ".", "faculty", "<", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "Enumere los campus que tienen entre 600 y 1000 líneas de profesores en el año 2004.\n", "question_toks": ["List", "the", "campus", "that", "have", "between", "600", "and", "1000", "faculty", "lines", "in", "year", "2004", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 23, false], null], 600.0, null], "and", [false, 6, [0, [0, 23, false], null], 1000.0, null], "and", [false, 2, [0, [0, 5, false], null], 2004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004", "query_toks": ["SELECT", "T1.campus", "FROM", "campuses", "AS", "t1", "JOIN", "faculty", "AS", "t2", "ON", "t1.id", "=", "t2.campus", "WHERE", "t2.faculty", ">", "=", "600", "AND", "t2.faculty", "<", "=", "1000", "AND", "T1.year", "=", "2004"], "query_toks_no_value": ["select", "t1", ".", "campus", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t2", ".", "faculty", ">", "=", "value", "and", "t2", ".", "faculty", "<", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "¿Cuáles son los campus que tenían entre 600 y 1000 profesores en 2004?\n", "question_toks": ["What", "are", "the", "campuses", "that", "had", "between", "600", "and", "1000", "faculty", "members", "in", "2004", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 23, false], null], 600.0, null], "and", [false, 6, [0, [0, 23, false], null], 1000.0, null], "and", [false, 2, [0, [0, 5, false], null], 2004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000", "query_toks": ["SELECT", "t1.campusfee", "FROM", "csu_fees", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t2.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "t1.year", "=", "2000"], "query_toks_no_value": ["select", "t1", ".", "campusfee", "from", "csu_fees", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t2", ".", "campus", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "¿Cuál es la tarifa del campus de la \"Universidad Estatal de San Francisco\" en el año 2000?\n", "question_toks": ["What", "is", "the", "campus", "fee", "of", "``", "San", "Francisco", "State", "University", "''", "in", "year", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000", "query_toks": ["SELECT", "t1.campusfee", "FROM", "csu_fees", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t2.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "t1.year", "=", "2000"], "query_toks_no_value": ["select", "t1", ".", "campusfee", "from", "csu_fees", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t2", ".", "campus", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "En el año 2000, ¿cuál es la tarifa del campus de la Universidad Estatal de San Francisco?\n", "question_toks": ["In", "the", "year", "2000", ",", "what", "is", "the", "campus", "fee", "for", "San", "Francisco", "State", "University", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000", "query_toks": ["SELECT", "t1.campusfee", "FROM", "csu_fees", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t2.campus", "=", "``", "San", "Jose", "State", "University", "''", "AND", "t1.year", "=", "2000"], "query_toks_no_value": ["select", "t1", ".", "campusfee", "from", "csu_fees", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t2", ".", "campus", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "Encuentre la tarifa del campus de la \"Universidad Estatal de San José\" en el año 2000.\n", "question_toks": ["Find", "the", "campus", "fee", "of", "``", "San", "Jose", "State", "University", "''", "in", "year", "2000", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Jose State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "csu_1", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000", "query_toks": ["SELECT", "t1.campusfee", "FROM", "csu_fees", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t2.campus", "=", "``", "San", "Jose", "State", "University", "''", "AND", "t1.year", "=", "2000"], "query_toks_no_value": ["select", "t1", ".", "campusfee", "from", "csu_fees", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t2", ".", "campus", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "¿Cuál es la tarifa del campus en el año 2000 para la Universidad Estatal de San José?\n", "question_toks": ["What", "is", "the", "campus", "fee", "in", "the", "year", "2000", "for", "San", "Jose", "State", "University", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Jose State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190", "query_toks": ["SELECT", "name", "FROM", "people", "WHERE", "height", ">", "200", "OR", "height", "<", "190"], "query_toks_no_value": ["select", "name", "from", "people", "where", "height", ">", "value", "or", "height", "<", "value"], "question": "encuentre los nombres de personas que midan más de 200 o menos de 190.\n", "question_toks": ["find", "the", "names", "of", "people", "who", "are", "taller", "than", "200", "or", "lower", "than", "190", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 200.0, null], "or", [false, 4, [0, [0, 13, false], null], 190.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190", "query_toks": ["SELECT", "name", "FROM", "people", "WHERE", "height", ">", "200", "OR", "height", "<", "190"], "query_toks_no_value": ["select", "name", "from", "people", "where", "height", ">", "value", "or", "height", "<", "value"], "question": "¿Cómo se llaman las personas que tienen una altura mayor a 200 o menor a 190?\n", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "have", "a", "height", "greater", "than", "200", "or", "less", "than", "190", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 200.0, null], "or", [false, 4, [0, [0, 13, false], null], 190.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)", "query_toks": ["SELECT", "name", "FROM", "people", "WHERE", "people_id", "NOT", "IN", "(", "SELECT", "people_id", "FROM", "candidate", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "candidate", ")"], "question": "¿Cuáles son los nombres de las personas que no participaron en la elección de candidatos?\n", "question_toks": ["what", "are", "the", "names", "of", "people", "who", "did", "not", "participate", "in", "the", "candidate", "election", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)", "query_toks": ["SELECT", "name", "FROM", "people", "WHERE", "people_id", "NOT", "IN", "(", "SELECT", "people_id", "FROM", "candidate", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "candidate", ")"], "question": "Dé los nombres de las personas que no participaron en la elección de candidatos.\n", "question_toks": ["Give", "the", "names", "of", "people", "who", "did", "not", "participate", "in", "the", "candidate", "election", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate", "query_toks": ["SELECT", "t1.name", "FROM", "people", "AS", "t1", "JOIN", "candidate", "AS", "t2", "ON", "t1.people_id", "=", "t2.people_id", "WHERE", "t2.support_rate", "<", "t2.oppose_rate"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "candidate", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "support_rate", "<", "t2", ".", "oppose_rate"], "question": "Encuentre los nombres de los candidatos cuyo porcentaje de apoyo es menor que su tasa de oposición.\n", "question_toks": ["Find", "the", "names", "of", "the", "candidates", "whose", "support", "percentage", "is", "lower", "than", "their", "oppose", "rate", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], [0, 7, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate", "query_toks": ["SELECT", "t1.name", "FROM", "people", "AS", "t1", "JOIN", "candidate", "AS", "t2", "ON", "t1.people_id", "=", "t2.people_id", "WHERE", "t2.support_rate", "<", "t2.oppose_rate"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "people", "as", "t1", "join", "candidate", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t2", ".", "support_rate", "<", "t2", ".", "oppose_rate"], "question": "¿Cuáles son los nombres de los candidatos que tienen una tasa de apoyo más baja que la tasa de oposición?\n", "question_toks": ["What", "are", "the", "names", "of", "candidates", "who", "have", "a", "lower", "support", "rate", "than", "oppose", "rate", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], [0, 7, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)", "query_toks": ["SELECT", "name", "FROM", "people", "WHERE", "height", "<", "(", "SELECT", "avg", "(", "height", ")", "FROM", "people", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "height", "<", "(", "select", "avg", "(", "height", ")", "from", "people", ")"], "question": "Encuentra el nombre de personas cuya altura es inferior a la media.\n", "question_toks": ["find", "the", "name", "of", "people", "whose", "height", "is", "lower", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)", "query_toks": ["SELECT", "name", "FROM", "people", "WHERE", "height", "<", "(", "SELECT", "avg", "(", "height", ")", "FROM", "people", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "height", "<", "(", "select", "avg", "(", "height", ")", "from", "people", ")"], "question": "¿Cómo se llaman las personas que son más bajas que el promedio?\n", "question_toks": ["What", "are", "the", "names", "of", "people", "who", "are", "shorter", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT * FROM people", "query_toks": ["SELECT", "*", "FROM", "people"], "query_toks_no_value": ["select", "*", "from", "people"], "question": "Enumere toda la información sobre todas las personas.\n", "question_toks": ["List", "all", "info", "about", "all", "people", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "candidate_poll", "query": "SELECT * FROM people", "query_toks": ["SELECT", "*", "FROM", "people"], "query_toks_no_value": ["select", "*", "from", "people"], "question": "¿Cuál es toda la información sobre todas las personas?\n", "question_toks": ["What", "is", "all", "the", "information", "about", "all", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "director", "=", "'Steven", "Spielberg", "'"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "director", "=", "value"], "question": "Encuentra los títulos de todas las películas dirigidas por Steven Spielberg.\n", "question_toks": ["Find", "the", "titles", "of", "all", "movies", "directed", "by", "steven", "spielberg", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Steven Spielberg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "director", "=", "'Steven", "Spielberg", "'"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "director", "=", "value"], "question": "¿Cómo se llaman todas las películas dirigidas por Steven Spielberg?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "movies", "directed", "by", "Steven", "Spielberg", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Steven Spielberg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "director", "=", "'James", "Cameron", "'", "AND", "YEAR", ">", "2000"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "director", "=", "value", "and", "year", ">", "value"], "question": "¿Cómo se llama la película producida después del 2000 y dirigida por James Cameron?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "movie", "produced", "after", "2000", "and", "directed", "by", "James", "Cameron", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null], "and", [false, 3, [0, [0, 3, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "director", "=", "'James", "Cameron", "'", "AND", "YEAR", ">", "2000"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "director", "=", "value", "and", "year", ">", "value"], "question": "¿Cuáles son los títulos de todas las películas que dirigió James Cameron después del 2000?\n", "question_toks": ["What", "are", "the", "titles", "of", "all", "movies", "that", "James", "Cameron", "directed", "after", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null], "and", [false, 3, [0, [0, 3, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT director FROM Movie WHERE title  = 'Avatar'", "query_toks": ["SELECT", "director", "FROM", "Movie", "WHERE", "title", "=", "'Avatar", "'"], "query_toks_no_value": ["select", "director", "from", "movie", "where", "title", "=", "value"], "question": "¿Quién es el director de la película Avatar?\n", "question_toks": ["Who", "is", "the", "director", "of", "movie", "Avatar", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Avatar\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT director FROM Movie WHERE title  = 'Avatar'", "query_toks": ["SELECT", "director", "FROM", "Movie", "WHERE", "title", "=", "'Avatar", "'"], "query_toks_no_value": ["select", "director", "from", "movie", "where", "title", "=", "value"], "question": "¿Quién dirigió Avatar?\n", "question_toks": ["Who", "directed", "Avatar", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Avatar\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"", "query_toks": ["SELECT", "rID", "FROM", "Reviewer", "WHERE", "name", "LIKE", "``", "%", "Mike", "%", "''"], "query_toks_no_value": ["select", "rid", "from", "reviewer", "where", "name", "like", "value"], "question": "¿Cuál es la identificación del revisor cuyo nombre tiene la subcadena \"Mike\"?\n", "question_toks": ["What", "is", "the", "id", "of", "the", "reviewer", "whose", "name", "has", "substring", "“Mike”", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%Mike%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"", "query_toks": ["SELECT", "rID", "FROM", "Reviewer", "WHERE", "name", "LIKE", "``", "%", "Mike", "%", "''"], "query_toks_no_value": ["select", "rid", "from", "reviewer", "where", "name", "like", "value"], "question": "¿Cuál es la identificación del revisor cuyo nombre incluye la palabra \"Mike\"?\n", "question_toks": ["What", "is", "the", "id", "of", "the", "reviewer", "whose", "name", "includes", "the", "word", "``", "Mike", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%Mike%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"", "query_toks": ["SELECT", "rID", "FROM", "Reviewer", "WHERE", "name", "=", "``", "Daniel", "Lewis", "''"], "query_toks_no_value": ["select", "rid", "from", "reviewer", "where", "name", "=", "value"], "question": "¿Cuál es la identificación del revisor de Daniel Lewis?\n", "question_toks": ["What", "is", "the", "reviewer", "id", "of", "Daniel", "Lewis", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Daniel Lewis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"", "query_toks": ["SELECT", "rID", "FROM", "Reviewer", "WHERE", "name", "=", "``", "Daniel", "Lewis", "''"], "query_toks_no_value": ["select", "rid", "from", "reviewer", "where", "name", "=", "value"], "question": "¿Cuál es la identificación del crítico llamado Daniel Lewis?\n", "question_toks": ["What", "is", "the", "id", "of", "the", "reviewer", "named", "Daniel", "Lewis", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Daniel Lewis\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "query_toks": ["SELECT", "T1.director", ",", "T1.title", "FROM", "Movie", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.stars", "=", "5"], "query_toks_no_value": ["select", "t1", ".", "director", ",", "t1", ".", "title", "from", "movie", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "stars", "=", "value"], "question": "¿Cómo se llaman los directores que dirigieron películas con calificación de 5 estrellas? También devuelva el título de estas películas.\n", "question_toks": ["What", "are", "the", "names", "of", "directors", "who", "directed", "movies", "with", "5", "star", "rating", "?", "Also", "return", "the", "title", "of", "these", "movies", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5", "query_toks": ["SELECT", "T1.director", ",", "T1.title", "FROM", "Movie", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.stars", "=", "5"], "query_toks_no_value": ["select", "t1", ".", "director", ",", "t1", ".", "title", "from", "movie", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "stars", "=", "value"], "question": "¿Cuáles son los nombres de los directores que crearon una película con una calificación de 5 estrellas y cómo se llamaban esas películas?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "directors", "who", "created", "a", "movie", "with", "a", "5", "star", "rating", ",", "and", "what", "was", "the", "name", "of", "those", "movies", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "mID", "NOT", "IN", "(", "SELECT", "mID", "FROM", "Rating", ")"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "mid", "not", "in", "(", "select", "mid", "from", "rating", ")"], "question": "Encuentra los títulos de todas las películas que no tienen calificaciones.\n", "question_toks": ["Find", "the", "titles", "of", "all", "movies", "that", "have", "no", "ratings", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "mID", "NOT", "IN", "(", "SELECT", "mID", "FROM", "Rating", ")"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "mid", "not", "in", "(", "select", "mid", "from", "rating", ")"], "question": "¿Cuáles son los títulos de todas las películas que no han sido calificadas?\n", "question_toks": ["What", "are", "the", "titles", "of", "all", "movies", "that", "have", "not", "been", "rated", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "Reviewer", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "WHERE", "ratingDate", "=", "``", "null", "''"], "query_toks_no_value": ["select", "distinct", "name", "from", "reviewer", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "where", "ratingdate", "=", "value"], "question": "Busque los nombres de todos los revisores que tengan calificaciones con un valor NULL para la fecha.\n", "question_toks": ["Find", "the", "names", "of", "all", "reviewers", "who", "have", "ratings", "with", "a", "NULL", "value", "for", "the", "date", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"", "query_toks": ["SELECT", "DISTINCT", "name", "FROM", "Reviewer", "AS", "T1", "JOIN", "Rating", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "WHERE", "ratingDate", "=", "``", "null", "''"], "query_toks_no_value": ["select", "distinct", "name", "from", "reviewer", "as", "t1", "join", "rating", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "where", "ratingdate", "=", "value"], "question": "¿Cuáles son los diferentes nombres de todos los revisores cuyas calificaciones no tienen un campo de fecha?\n", "question_toks": ["What", "are", "the", "different", "names", "of", "all", "reviewers", "whose", "ratings", "do", "not", "have", "a", "date", "field", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "YEAR", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "Movie", ")"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "year", "=", "(", "select", "max", "(", "year", ")", "from", "movie", ")"], "question": "¿Cómo se llama la película más reciente?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "most", "recent", "movie", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "YEAR", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "Movie", ")"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "year", "=", "(", "select", "max", "(", "year", ")", "from", "movie", ")"], "question": "¿Cuál es el título de la película más nueva?\n", "question_toks": ["What", "is", "the", "title", "of", "the", "newest", "movie", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "YEAR", ">", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "Movie", "WHERE", "director", "=", "``", "Steven", "Spielberg", "''", ")"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "year", ">", "(", "select", "max", "(", "year", ")", "from", "movie", "where", "director", "=", "value", ")"], "question": "¿Cuáles son los nombres de las películas cuyo año de creación es, después de todo, películas dirigidas por Steven Spielberg?\n", "question_toks": ["What", "is", "the", "names", "of", "movies", "whose", "created", "year", "is", "after", "all", "movies", "directed", "by", "Steven", "Spielberg", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Steven Spielberg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "YEAR", ">", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "Movie", "WHERE", "director", "=", "``", "Steven", "Spielberg", "''", ")"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "year", ">", "(", "select", "max", "(", "year", ")", "from", "movie", "where", "director", "=", "value", ")"], "question": "¿Cuáles son los nombres de todas las películas que se crearon después de la película más reciente de Steven Spielberg?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "movies", "that", "were", "created", "after", "the", "most", "recent", "Steven", "Spielberg", "film", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Steven Spielberg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "query_toks": ["SELECT", "T2.title", ",", "T2.director", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T1.stars", ">", "(", "SELECT", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.director", "=", "``", "James", "Cameron", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "director", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t1", ".", "stars", ">", "(", "select", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "director", "=", "value", ")"], "question": "¿Cuáles son los títulos y directores de las películas cuya estrella es mayor que el promedio de estrellas de las películas dirigidas por James Cameron?\n", "question_toks": ["What", "are", "the", "titles", "and", "directors", "of", "the", "movies", "whose", "star", "is", "greater", "than", "the", "average", "stars", "of", "the", "movies", "directed", "by", "James", "Cameron", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")", "query_toks": ["SELECT", "T2.title", ",", "T2.director", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T1.stars", ">", "(", "SELECT", "avg", "(", "T1.stars", ")", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T2.director", "=", "``", "James", "Cameron", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "title", ",", "t2", ".", "director", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t1", ".", "stars", ">", "(", "select", "avg", "(", "t1", ".", "stars", ")", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t2", ".", "director", "=", "value", ")"], "question": "¿Cuáles son los títulos y directores de todas las películas que tienen una calificación superior a la calificación promedio de las películas de James Cameron?\n", "question_toks": ["What", "are", "the", "titles", "and", "directors", "of", "all", "movies", "that", "have", "a", "rating", "higher", "than", "the", "average", "James", "Cameron", "film", "rating", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'", "query_toks": ["SELECT", "DISTINCT", "T3.name", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T2.title", "=", "'Gone", "with", "the", "Wind", "'"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t2", ".", "title", "=", "value"], "question": "Encuentre los nombres de todos los críticos que calificaron Lo que el viento se llevó.\n", "question_toks": ["Find", "the", "names", "of", "all", "reviewers", "who", "rated", "Gone", "with", "the", "Wind", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Gone with the Wind\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'", "query_toks": ["SELECT", "DISTINCT", "T3.name", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T2.title", "=", "'Gone", "with", "the", "Wind", "'"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t2", ".", "title", "=", "value"], "question": "¿Cuáles son los nombres de los diferentes críticos que califican Lo que el viento se llevó?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "different", "reviewers", "who", "rates", "Gone", "with", "the", "Wind", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Gone with the Wind\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'", "query_toks": ["SELECT", "DISTINCT", "T2.director", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T3.name", "=", "'Sarah", "Martinez", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "director", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t3", ".", "name", "=", "value"], "question": "Encuentre los nombres de todos los directores cuyas películas están calificadas por Sarah Martinez.\n", "question_toks": ["Find", "the", "names", "of", "all", "directors", "whose", "movies", "are", "rated", "by", "Sarah", "Martinez", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Sarah Martinez\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'", "query_toks": ["SELECT", "DISTINCT", "T2.director", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T3.name", "=", "'Sarah", "Martinez", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "director", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t3", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de todos los directores cuyas películas han sido reseñadas por Sarah Martinez?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "directors", "whose", "movies", "have", "been", "reviewed", "by", "Sarah", "Martinez", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Sarah Martinez\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name", "query_toks": ["SELECT", "DISTINCT", "T3.name", ",", "T2.title", ",", "T1.stars", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T2.director", "=", "T3.name"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t2", ".", "director", "=", "t3", ".", "name"], "question": "Para cualquier calificación en la que el nombre del crítico sea el mismo que el del director de la película, devuelva el nombre del crítico, el título de la película y el número de estrellas.\n", "question_toks": ["For", "any", "rating", "where", "the", "name", "of", "reviewer", "is", "the", "same", "as", "the", "director", "of", "the", "movie", ",", "return", "the", "reviewer", "name", ",", "movie", "title", ",", "and", "number", "of", "stars", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], [0, 6, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name", "query_toks": ["SELECT", "DISTINCT", "T3.name", ",", "T2.title", ",", "T1.stars", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T2.director", "=", "T3.name"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", ",", "t2", ".", "title", ",", "t1", ".", "stars", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t2", ".", "director", "=", "t3", ".", "name"], "question": "¿Cuáles son los diferentes nombres de críticos, títulos de películas y estrellas para cada calificación en la que el crítico tenía el mismo nombre que el director?\n", "question_toks": ["What", "are", "the", "different", "reviewer", "names", ",", "movie", "titles", ",", "and", "stars", "for", "every", "rating", "where", "the", "reviewer", "had", "the", "same", "name", "as", "the", "director", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], [0, 6, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title", "query_toks": ["SELECT", "T1.title", ",", "T1.year", "FROM", "Movie", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.director", "=", "T2.director", "WHERE", "T1.title", "!", "=", "T2.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "year", "from", "movie", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "director", "=", "t2", ".", "director", "where", "t1", ".", "title", "!", "=", "t2", ".", "title"], "question": "Para directores que tuvieron más de una película, devuelva los títulos y los años de producción de todas las películas dirigidas por ellos.\n", "question_toks": ["For", "directors", "who", "had", "more", "than", "one", "movie", ",", "return", "the", "titles", "and", "produced", "years", "of", "all", "movies", "directed", "by", "them", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 2, false], null], [0, 2, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title", "query_toks": ["SELECT", "T1.title", ",", "T1.year", "FROM", "Movie", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.director", "=", "T2.director", "WHERE", "T1.title", "!", "=", "T2.title"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "year", "from", "movie", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "director", "=", "t2", ".", "director", "where", "t1", ".", "title", "!", "=", "t2", ".", "title"], "question": "Para cada director que dirigió más de una película, ¿cuáles son los títulos y fechas de estreno de todas esas películas?\n", "question_toks": ["For", "each", "director", "who", "directed", "more", "than", "one", "movie", ",", "what", "are", "the", "titles", "and", "dates", "of", "release", "for", "all", "those", "movies", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 2, false], null], [0, 2, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5", "query_toks": ["SELECT", "T2.title", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T1.stars", "BETWEEN", "3", "AND", "5"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t1", ".", "stars", "between", "value", "and", "value"], "question": "¿Cuáles son los títulos de todas las películas que tienen calificación de estrellas entre 3 y 5?\n", "question_toks": ["What", "are", "the", "titles", "of", "all", "movies", "that", "have", "rating", "star", "is", "between", "3", "and", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 3.0, 5.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5", "query_toks": ["SELECT", "T2.title", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "WHERE", "T1.stars", "BETWEEN", "3", "AND", "5"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "where", "t1", ".", "stars", "between", "value", "and", "value"], "question": "¿Cuáles son los títulos de todas las películas que tienen entre 3 y 5 estrellas?\n", "question_toks": ["What", "are", "the", "titles", "of", "all", "movies", "that", "have", "between", "3", "and", "5", "stars", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 9, false], null], 3.0, 5.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3", "query_toks": ["SELECT", "T2.name", "FROM", "Rating", "AS", "T1", "JOIN", "Reviewer", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "WHERE", "T1.stars", ">", "3"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "rating", "as", "t1", "join", "reviewer", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "where", "t1", ".", "stars", ">", "value"], "question": "Encuentre los nombres de los revisores que otorgaron calificaciones superiores a 3 estrellas.\n", "question_toks": ["Find", "the", "names", "of", "reviewers", "who", "had", "given", "higher", "than", "3", "star", "ratings", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3", "query_toks": ["SELECT", "T2.name", "FROM", "Rating", "AS", "T1", "JOIN", "Reviewer", "AS", "T2", "ON", "T1.rID", "=", "T2.rID", "WHERE", "T1.stars", ">", "3"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "rating", "as", "t1", "join", "reviewer", "as", "t2", "on", "t1", ".", "rid", "=", "t2", ".", "rid", "where", "t1", ".", "stars", ">", "value"], "question": "¿Cuáles son los nombres de los críticos que han calificado una película con más de 3 estrellas anteriormente?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "reviewers", "who", "have", "rated", "a", "movie", "more", "than", "3", "stars", "before", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT rID FROM Rating WHERE stars != 4", "query_toks": ["SELECT", "rID", "FROM", "Rating", "WHERE", "stars", "!", "=", "4"], "query_toks_no_value": ["select", "rid", "from", "rating", "where", "stars", "!", "=", "value"], "question": "Encuentre las identificaciones de los revisores que no solo dieron 4 estrellas.\n", "question_toks": ["Find", "the", "ids", "of", "reviewers", "who", "did", "n't", "only", "give", "4", "star", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT rID FROM Rating WHERE stars != 4", "query_toks": ["SELECT", "rID", "FROM", "Rating", "WHERE", "stars", "!", "=", "4"], "query_toks_no_value": ["select", "rid", "from", "rating", "where", "stars", "!", "=", "value"], "question": "¿Cuáles son los identificadores de todos los revisores que no han dado 4 estrellas al menos una vez?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "reviewers", "who", "have", "not", "given", "4", "stars", "at", "least", "once", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000", "query_toks": ["SELECT", "DISTINCT", "T2.title", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T3.name", "=", "'Brittany", "Harris", "'", "OR", "T2.year", ">", "2000"], "query_toks_no_value": ["select", "distinct", "t2", ".", "title", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t3", ".", "name", "=", "value", "or", "t2", ".", "year", ">", "value"], "question": "¿Cuáles son los nombres de las películas realizadas después del 2000 o reseñadas por Brittany Harris?\n", "question_toks": ["What", "are", "names", "of", "the", "movies", "that", "are", "either", "made", "after", "2000", "or", "reviewed", "by", "Brittany", "Harris", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Brittany Harris\"", null], "or", [false, 3, [0, [0, 3, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000", "query_toks": ["SELECT", "DISTINCT", "T2.title", "FROM", "Rating", "AS", "T1", "JOIN", "Movie", "AS", "T2", "ON", "T1.mID", "=", "T2.mID", "JOIN", "Reviewer", "AS", "T3", "ON", "T1.rID", "=", "T3.rID", "WHERE", "T3.name", "=", "'Brittany", "Harris", "'", "OR", "T2.year", ">", "2000"], "query_toks_no_value": ["select", "distinct", "t2", ".", "title", "from", "rating", "as", "t1", "join", "movie", "as", "t2", "on", "t1", ".", "mid", "=", "t2", ".", "mid", "join", "reviewer", "as", "t3", "on", "t1", ".", "rid", "=", "t3", ".", "rid", "where", "t3", ".", "name", "=", "value", "or", "t2", ".", "year", ">", "value"], "question": "¿Cuáles son los nombres de todas las películas realizadas después del 2000 o reseñadas por Brittany Harris?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "movies", "that", "were", "made", "after", "2000", "or", "reviewed", "by", "Brittany", "Harris", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Brittany Harris\"", null], "or", [false, 3, [0, [0, 3, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "director", "=", "``", "James", "Cameron", "''", "OR", "YEAR", "<", "1980"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "director", "=", "value", "or", "year", "<", "value"], "question": "¿Cuáles son los nombres de las películas realizadas antes de 1980 o dirigidas por James Cameron?\n", "question_toks": ["What", "are", "names", "of", "the", "movies", "that", "are", "either", "made", "before", "1980", "or", "directed", "by", "James", "Cameron", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null], "or", [false, 4, [0, [0, 3, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "movie_1", "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980", "query_toks": ["SELECT", "title", "FROM", "Movie", "WHERE", "director", "=", "``", "James", "Cameron", "''", "OR", "YEAR", "<", "1980"], "query_toks_no_value": ["select", "title", "from", "movie", "where", "director", "=", "value", "or", "year", "<", "value"], "question": "¿Cuáles son los nombres de todas las películas realizadas antes de 1980 o que tuvieron a James Cameron como director?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "movies", "made", "before", "1980", "or", "had", "James", "Cameron", "as", "the", "director", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James Cameron\"", null], "or", [false, 4, [0, [0, 3, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"", "query_toks": ["SELECT", "DISTINCT", "Police_force", "FROM", "county_public_safety", "WHERE", "LOCATION", "!", "=", "``", "East", "''"], "query_toks_no_value": ["select", "distinct", "police_force", "from", "county_public_safety", "where", "location", "!", "=", "value"], "question": "Enumere las distintas fuerzas policiales de los condados cuya ubicación no está en el lado este.\n", "question_toks": ["List", "the", "distinct", "police", "forces", "of", "counties", "whose", "location", "is", "not", "on", "east", "side", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"East\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"", "query_toks": ["SELECT", "DISTINCT", "Police_force", "FROM", "county_public_safety", "WHERE", "LOCATION", "!", "=", "``", "East", "''"], "query_toks_no_value": ["select", "distinct", "police_force", "from", "county_public_safety", "where", "location", "!", "=", "value"], "question": "¿Cuáles son las diferentes fuerzas policiales de los condados que no están ubicados en el Este?\n", "question_toks": ["What", "are", "the", "different", "police", "forces", "of", "counties", "that", "are", "not", "located", "in", "the", "East", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"East\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT Hispanic FROM city WHERE Black  >  10", "query_toks": ["SELECT", "Hispanic", "FROM", "city", "WHERE", "Black", ">", "10"], "query_toks_no_value": ["select", "hispanic", "from", "city", "where", "black", ">", "value"], "question": "¿Cuál es el porcentaje de hispanos en ciudades con un porcentaje de negros superior a 10?\n", "question_toks": ["What", "are", "the", "percentage", "of", "hispanics", "in", "cities", "with", "the", "black", "percentage", "higher", "than", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT Hispanic FROM city WHERE Black  >  10", "query_toks": ["SELECT", "Hispanic", "FROM", "city", "WHERE", "Black", ">", "10"], "query_toks_no_value": ["select", "hispanic", "from", "city", "where", "black", ">", "value"], "question": "Devuelve el porcentaje de hispanos para las ciudades en las que el porcentaje de negros es mayor que 10.\n", "question_toks": ["Return", "the", "hispanic", "percentage", "for", "cities", "in", "which", "the", "black", "percentage", "is", "greater", "than", "10", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "Muestra los nombres de las ciudades y los nombres de los condados en los que se encuentran.\n", "question_toks": ["Show", "names", "of", "cities", "and", "names", "of", "counties", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "¿Cuáles son los nombres de las ciudades, así como los nombres de los condados a los que corresponden?\n", "question_toks": ["What", "are", "the", "names", "of", "cities", ",", "as", "well", "as", "the", "names", "of", "the", "counties", "they", "correspond", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.White", ",", "T2.Crime_rate", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "white", ",", "t2", ".", "crime_rate", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "Muestra los porcentajes de blancos de las ciudades y las tasas de criminalidad de los condados en los que se encuentran.\n", "question_toks": ["Show", "white", "percentages", "of", "cities", "and", "the", "crime", "rates", "of", "counties", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "query_toks": ["SELECT", "T1.White", ",", "T2.Crime_rate", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID"], "query_toks_no_value": ["select", "t1", ".", "white", ",", "t2", ".", "crime_rate", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id"], "question": "¿Cuáles son los porcentajes de blancos en las ciudades y las tasas de criminalidad correspondientes de los condados a los que corresponden?\n", "question_toks": ["What", "are", "the", "white", "percentages", "of", "cities", ",", "and", "the", "corresponding", "crime", "rates", "of", "the", "counties", "they", "correspond", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "county_ID", "=", "(", "SELECT", "county_ID", "FROM", "county_public_safety", "ORDER", "BY", "Police_officers", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "name", "from", "city", "where", "county_id", "=", "(", "select", "county_id", "from", "county_public_safety", "order", "by", "police_officers", "desc", "limit", "value", ")"], "question": "Muestra el nombre de las ciudades del condado que tiene la mayor cantidad de agentes de policía.\n", "question_toks": ["Show", "the", "name", "of", "cities", "in", "the", "county", "that", "has", "the", "largest", "number", "of", "police", "officers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "county_ID", "=", "(", "SELECT", "county_ID", "FROM", "county_public_safety", "ORDER", "BY", "Police_officers", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "name", "from", "city", "where", "county_id", "=", "(", "select", "county_id", "from", "county_public_safety", "order", "by", "police_officers", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de las ciudades que se encuentran en el condado con más agentes de policía?\n", "question_toks": ["What", "are", "the", "names", "of", "cities", "that", "are", "in", "the", "county", "with", "the", "most", "police", "officers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "query_toks": ["SELECT", "T2.Crime_rate", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID", "WHERE", "T1.White", ">", "90"], "query_toks_no_value": ["select", "t2", ".", "crime_rate", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id", "where", "t1", ".", "white", ">", "value"], "question": "Muestre la tasa de criminalidad de los condados con una ciudad que tiene un porcentaje de blancos superior al 90.\n", "question_toks": ["Show", "the", "crime", "rate", "of", "counties", "with", "a", "city", "having", "white", "percentage", "more", "than", "90", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "query_toks": ["SELECT", "T2.Crime_rate", "FROM", "city", "AS", "T1", "JOIN", "county_public_safety", "AS", "T2", "ON", "T1.County_ID", "=", "T2.County_ID", "WHERE", "T1.White", ">", "90"], "query_toks_no_value": ["select", "t2", ".", "crime_rate", "from", "city", "as", "t1", "join", "county_public_safety", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "county_id", "where", "t1", ".", "white", ">", "value"], "question": "¿Cuáles son las tasas de criminalidad de los condados que contienen ciudades que tienen porcentajes de blancos superiores al 90?\n", "question_toks": ["What", "are", "the", "crime", "rates", "of", "counties", "that", "contain", "cities", "that", "have", "white", "percentages", "of", "over", "90", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)", "query_toks": ["SELECT", "Name", "FROM", "county_public_safety", "WHERE", "County_ID", "NOT", "IN", "(", "SELECT", "County_ID", "FROM", "city", ")"], "query_toks_no_value": ["select", "name", "from", "county_public_safety", "where", "county_id", "not", "in", "(", "select", "county_id", "from", "city", ")"], "question": "Enumere los nombres de los condados que no tienen ciudades.\n", "question_toks": ["List", "the", "names", "of", "counties", "that", "do", "not", "have", "any", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)", "query_toks": ["SELECT", "Name", "FROM", "county_public_safety", "WHERE", "County_ID", "NOT", "IN", "(", "SELECT", "County_ID", "FROM", "city", ")"], "query_toks_no_value": ["select", "name", "from", "county_public_safety", "where", "county_id", "not", "in", "(", "select", "county_id", "from", "city", ")"], "question": "¿Cuáles son los nombres de los condados que no contienen ciudades?\n", "question_toks": ["What", "are", "the", "names", "of", "counties", "that", "do", "not", "contain", "any", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "county_id", "IN", "(", "SELECT", "county_id", "FROM", "county_public_safety", "WHERE", "Crime_rate", "<", "100", ")"], "query_toks_no_value": ["select", "name", "from", "city", "where", "county_id", "in", "(", "select", "county_id", "from", "county_public_safety", "where", "crime_rate", "<", "value", ")"], "question": "Muestre los nombres de las ciudades en los condados que tienen una tasa de criminalidad inferior a 100.\n", "question_toks": ["Show", "the", "names", "of", "cities", "in", "counties", "that", "have", "a", "crime", "rate", "less", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "county_public_safety", "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "query_toks": ["SELECT", "name", "FROM", "city", "WHERE", "county_id", "IN", "(", "SELECT", "county_id", "FROM", "county_public_safety", "WHERE", "Crime_rate", "<", "100", ")"], "query_toks_no_value": ["select", "name", "from", "city", "where", "county_id", "in", "(", "select", "county_id", "from", "county_public_safety", "where", "crime_rate", "<", "value", ")"], "question": "¿Cuáles son los nombres de las ciudades que se encuentran en condados que tienen una tasa de criminalidad inferior a 100?\n", "question_toks": ["What", "are", "the", "names", "of", "cities", "that", "are", "in", "counties", "that", "have", "a", "crime", "rate", "below", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "basePrice", "<", "160", "AND", "beds", "=", "2", "AND", "decor", "=", "'modern", "'", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", "<", "value", "and", "beds", "=", "value", "and", "decor", "=", "value"], "question": "Encuentre los nombres de todas las habitaciones modernas con un precio base inferior a $160 y dos camas.\n", "question_toks": ["Find", "the", "names", "of", "all", "modern", "rooms", "with", "a", "base", "price", "below", "$", "160", "and", "two", "beds", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 160.0, null], "and", [false, 2, [0, [0, 3, false], null], 2.0, null], "and", [false, 2, [0, [0, 7, false], null], "\"modern\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "basePrice", "<", "160", "AND", "beds", "=", "2", "AND", "decor", "=", "'modern", "'", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", "<", "value", "and", "beds", "=", "value", "and", "decor", "=", "value"], "question": "Como se llaman las habitaciones modernas que tienen un precio base inferior a $160 y dos camas.\n", "question_toks": ["What", "are", "the", "names", "of", "modern", "rooms", "that", "have", "a", "base", "price", "lower", "than", "$", "160", "and", "two", "beds", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 160.0, null], "and", [false, 2, [0, [0, 3, false], null], 2.0, null], "and", [false, 2, [0, [0, 7, false], null], "\"modern\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "query_toks": ["SELECT", "roomName", ",", "RoomId", "FROM", "Rooms", "WHERE", "basePrice", ">", "160", "AND", "maxOccupancy", ">", "2", ";"], "query_toks_no_value": ["select", "roomname", ",", "roomid", "from", "rooms", "where", "baseprice", ">", "value", "and", "maxoccupancy", ">", "value"], "question": "Encuentra todas las habitaciones que tienen un precio superior a 160 y tienen capacidad para más de 2 personas. Informe los nombres e identificaciones de las habitaciones.\n", "question_toks": ["Find", "all", "the", "rooms", "that", "have", "a", "price", "higher", "than", "160", "and", "can", "accommodate", "more", "than", "2", "people", ".", "Report", "room", "names", "and", "ids", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 160.0, null], "and", [false, 3, [0, [0, 5, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;", "query_toks": ["SELECT", "roomName", ",", "RoomId", "FROM", "Rooms", "WHERE", "basePrice", ">", "160", "AND", "maxOccupancy", ">", "2", ";"], "query_toks_no_value": ["select", "roomname", ",", "roomid", "from", "rooms", "where", "baseprice", ">", "value", "and", "maxoccupancy", ">", "value"], "question": "¿Cuáles son los nombres y los identificadores de todas las habitaciones que cuestan más de 160 y tienen capacidad para más de 2 personas?\n", "question_toks": ["What", "are", "the", "room", "names", "and", "ids", "of", "all", "the", "rooms", "that", "cost", "more", "than", "160", "and", "can", "accommodate", "more", "than", "two", "people", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 160.0, null], "and", [false, 3, [0, [0, 5, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "query_toks": ["SELECT", "kids", "FROM", "Reservations", "WHERE", "FirstName", "=", "``", "ROY", "''", "AND", "LastName", "=", "``", "SWEAZY", "''", ";"], "query_toks_no_value": ["select", "kids", "from", "reservations", "where", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "¿Cuántos niños se alojan en las habitaciones reservadas por ROY SWEAZY?\n", "question_toks": ["How", "many", "kids", "stay", "in", "the", "rooms", "reserved", "by", "ROY", "SWEAZY", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"ROY\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"SWEAZY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";", "query_toks": ["SELECT", "kids", "FROM", "Reservations", "WHERE", "FirstName", "=", "``", "ROY", "''", "AND", "LastName", "=", "``", "SWEAZY", "''", ";"], "query_toks_no_value": ["select", "kids", "from", "reservations", "where", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Encuentre la cantidad de niños que se hospedan en las habitaciones reservadas por una persona llamada ROY SWEAZ.\n", "question_toks": ["Find", "the", "number", "of", "kids", "staying", "in", "the", "rooms", "reserved", "by", "a", "person", "called", "ROY", "SWEAZ", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"ROY\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"SWEAZY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "query_toks": ["SELECT", "Adults", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-10-23", "''", "AND", "FirstName", "=", "``", "CONRAD", "''", "AND", "LastName", "=", "``", "SELBIG", "''", ";"], "query_toks_no_value": ["select", "adults", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "¿Cuántos adultos se alojan en la habitación en la que CONRAD SELBIG se registró el 23 de octubre de 2010?\n", "question_toks": ["How", "many", "adults", "stay", "in", "the", "room", "CONRAD", "SELBIG", "checked", "in", "on", "Oct", "23", ",", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"2010-10-23\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"CONRAD\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"SELBIG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";", "query_toks": ["SELECT", "Adults", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-10-23", "''", "AND", "FirstName", "=", "``", "CONRAD", "''", "AND", "LastName", "=", "``", "SELBIG", "''", ";"], "query_toks_no_value": ["select", "adults", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Encuentre el número de adultos para la habitación reservada y registrada por CONRAD SELBIG el 23 de octubre de 2010.\n", "question_toks": ["Find", "the", "number", "of", "adults", "for", "the", "room", "reserved", "and", "checked", "in", "by", "CONRAD", "SELBIG", "on", "Oct", "23", ",", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"2010-10-23\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"CONRAD\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"SELBIG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "query_toks": ["SELECT", "Kids", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-09-21", "''", "AND", "FirstName", "=", "``", "DAMIEN", "''", "AND", "LastName", "=", "``", "TRACHSEL", "''", ";"], "query_toks_no_value": ["select", "kids", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "¿Cuántos niños se alojan en la habitación en la que DAMIEN TRACHSEL se registró el 21 de septiembre de 2010?\n", "question_toks": ["How", "many", "kids", "stay", "in", "the", "room", "DAMIEN", "TRACHSEL", "checked", "in", "on", "Sep", "21", ",", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"2010-09-21\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"DAMIEN\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"TRACHSEL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";", "query_toks": ["SELECT", "Kids", "FROM", "Reservations", "WHERE", "CheckIn", "=", "``", "2010-09-21", "''", "AND", "FirstName", "=", "``", "DAMIEN", "''", "AND", "LastName", "=", "``", "TRACHSEL", "''", ";"], "query_toks_no_value": ["select", "kids", "from", "reservations", "where", "checkin", "=", "value", "and", "firstname", "=", "value", "and", "lastname", "=", "value"], "question": "Devuelva el número de niños para la habitación reservada y registrada por DAMIEN TRACHSEL el 21 de septiembre de 2010.\n", "question_toks": ["Return", "the", "number", "of", "kids", "for", "the", "room", "reserved", "and", "checked", "in", "by", "DAMIEN", "TRACHSEL", "on", "Sep", "21", ",", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"2010-09-21\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"DAMIEN\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"TRACHSEL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "query_toks": ["SELECT", "decor", "FROM", "Rooms", "WHERE", "roomName", "=", "``", "Recluse", "and", "defiance", "''", ";"], "query_toks_no_value": ["select", "decor", "from", "rooms", "where", "roomname", "=", "value"], "question": "¿Cuál es la decoración de la habitación Reclusa y desafiante?\n", "question_toks": ["What", "is", "the", "decor", "of", "room", "Recluse", "and", "defiance", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Recluse and defiance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";", "query_toks": ["SELECT", "decor", "FROM", "Rooms", "WHERE", "roomName", "=", "``", "Recluse", "and", "defiance", "''", ";"], "query_toks_no_value": ["select", "decor", "from", "rooms", "where", "roomname", "=", "value"], "question": "Devuelve la decoración de la habitación llamada \"Reclusa y desafío\".\n", "question_toks": ["Return", "the", "decor", "of", "the", "room", "named", "``", "Recluse", "and", "defiance", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Recluse and defiance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T1.Rate", "-", "T2.basePrice", ">", "0"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t1", ".", "rate", "-", "t2", ".", "baseprice", ">", "value"], "question": "Encuentre los nombres y apellidos de las personas que pagaron más que el precio base de las habitaciones.\n", "question_toks": ["Find", "the", "first", "and", "last", "names", "of", "people", "who", "payed", "more", "than", "the", "rooms", "'", "base", "prices", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 3, [1, [0, 12, false], [0, 6, false]], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "T1.Rate", "-", "T2.basePrice", ">", "0"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "t1", ".", "rate", "-", "t2", ".", "baseprice", ">", "value"], "question": "¿Cuáles son los nombres y apellidos de las personas que pagaron más que el precio base de las habitaciones?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "people", "who", "payed", "more", "than", "the", "rooms", "'", "base", "prices", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 3, [1, [0, 12, false], [0, 6, false]], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "query_toks": ["SELECT", "roomName", ",", "bedType", "FROM", "Rooms", "WHERE", "decor", "=", "``", "traditional", "''", ";"], "query_toks_no_value": ["select", "roomname", ",", "bedtype", "from", "rooms", "where", "decor", "=", "value"], "question": "Indique el tipo de cama y el nombre de todas las habitaciones tradicionales.\n", "question_toks": ["List", "the", "type", "of", "bed", "and", "name", "of", "all", "traditional", "rooms", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"traditional\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";", "query_toks": ["SELECT", "roomName", ",", "bedType", "FROM", "Rooms", "WHERE", "decor", "=", "``", "traditional", "''", ";"], "query_toks_no_value": ["select", "roomname", ",", "bedtype", "from", "rooms", "where", "decor", "=", "value"], "question": "¿Cuáles son el tipo de cama y el nombre de todas las habitaciones con decoración tradicional?\n", "question_toks": ["What", "are", "the", "bed", "type", "and", "name", "of", "all", "the", "rooms", "with", "traditional", "decor", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"traditional\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "OR", "bedType", "=", "``", "Queen", "''", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "bedtype", "=", "value", "or", "bedtype", "=", "value"], "question": "Indique el nombre de las habitaciones con cama king o queen.\n", "question_toks": ["List", "the", "name", "of", "rooms", "with", "king", "or", "queen", "bed", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Queen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "bedType", "=", "``", "King", "''", "OR", "bedType", "=", "``", "Queen", "''", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "bedtype", "=", "value", "or", "bedtype", "=", "value"], "question": "¿Cuáles son los nombres de las habitaciones que tienen cama extragrande o grande?\n", "question_toks": ["What", "are", "the", "names", "of", "rooms", "that", "have", "either", "king", "or", "queen", "bed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"King\"", null], "or", [false, 2, [0, [0, 4, false], null], "\"Queen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "basePrice", ">", "(", "SELECT", "avg", "(", "basePrice", ")", "FROM", "Rooms", ")", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", ">", "(", "select", "avg", "(", "baseprice", ")", "from", "rooms", ")"], "question": "Encuentra el nombre de las habitaciones cuyo precio es superior al precio medio.\n", "question_toks": ["Find", "the", "name", "of", "rooms", "whose", "price", "is", "higher", "than", "the", "average", "price", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );", "query_toks": ["SELECT", "roomName", "FROM", "Rooms", "WHERE", "basePrice", ">", "(", "SELECT", "avg", "(", "basePrice", ")", "FROM", "Rooms", ")", ";"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", ">", "(", "select", "avg", "(", "baseprice", ")", "from", "rooms", ")"], "question": "¿Cómo se llaman las habitaciones que cuestan más que la media?\n", "question_toks": ["What", "are", "the", "name", "of", "rooms", "that", "cost", "more", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "query_toks": ["SELECT", "roomname", "FROM", "rooms", "WHERE", "baseprice", "BETWEEN", "120", "AND", "150"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", "between", "value", "and", "value"], "question": "Encuentra el nombre de las habitaciones cuyo precio base está entre 120 y 150.\n", "question_toks": ["Find", "the", "name", "of", "rooms", "whose", "base", "price", "is", "between", "120", "and", "150", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 6, false], null], 120.0, 150.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150", "query_toks": ["SELECT", "roomname", "FROM", "rooms", "WHERE", "baseprice", "BETWEEN", "120", "AND", "150"], "query_toks_no_value": ["select", "roomname", "from", "rooms", "where", "baseprice", "between", "value", "and", "value"], "question": "¿Qué habitaciones cuestan entre 120 y 150? Dame los nombres de las habitaciones.\n", "question_toks": ["Which", "rooms", "cost", "between", "120", "and", "150", "?", "Give", "me", "the", "room", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 6, false], null], 120.0, 150.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "query_toks": ["SELECT", "T2.roomName", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "firstname", "LIKE", "'", "%", "ROY", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "roomname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "firstname", "like", "value"], "question": "Busque el nombre de las habitaciones reservadas por algunos clientes cuyo nombre contiene ROY.\n", "question_toks": ["Find", "the", "name", "of", "rooms", "booked", "by", "some", "customers", "whose", "first", "name", "contains", "ROY", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 14, false], null], "\"%ROY%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "inn_1", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'", "query_toks": ["SELECT", "T2.roomName", "FROM", "Reservations", "AS", "T1", "JOIN", "Rooms", "AS", "T2", "ON", "T1.Room", "=", "T2.RoomId", "WHERE", "firstname", "LIKE", "'", "%", "ROY", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "roomname", "from", "reservations", "as", "t1", "join", "rooms", "as", "t2", "on", "t1", ".", "room", "=", "t2", ".", "roomid", "where", "firstname", "like", "value"], "question": "¿Cómo se llaman las habitaciones reservadas por clientes cuyo nombre tiene en parte \"ROY\"?\n", "question_toks": ["What", "are", "the", "name", "of", "rooms", "booked", "by", "customers", "whose", "first", "name", "has", "``", "ROY", "''", "in", "part", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 14, false], null], "\"%ROY%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax'", "query_toks": ["SELECT", "T1.cmi_details", "FROM", "Customer_Master_Index", "AS", "T1", "JOIN", "CMI_Cross_References", "AS", "T2", "ON", "T1.master_customer_id", "=", "T2.master_customer_id", "WHERE", "T2.source_system_code", "=", "'Tax", "'"], "query_toks_no_value": ["select", "t1", ".", "cmi_details", "from", "customer_master_index", "as", "t1", "join", "cmi_cross_references", "as", "t2", "on", "t1", ".", "master_customer_id", "=", "t2", ".", "master_customer_id", "where", "t2", ".", "source_system_code", "=", "value"], "question": "¿Cuáles son los detalles de los cmi masters que tienen el código de referencia cruzada 'Impuestos'?\n", "question_toks": ["what", "are", "the", "details", "of", "the", "cmi", "masters", "that", "have", "the", "cross", "reference", "code", "'Tax", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Tax\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id", "query_toks": ["SELECT", "T1.source_system_code", ",", "T1.master_customer_id", ",", "T2.council_tax_id", "FROM", "CMI_Cross_References", "AS", "T1", "JOIN", "Parking_Fines", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id"], "query_toks_no_value": ["select", "t1", ".", "source_system_code", ",", "t1", ".", "master_customer_id", ",", "t2", ".", "council_tax_id", "from", "cmi_cross_references", "as", "t1", "join", "parking_fines", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id"], "question": "¿Cuál es el código del sistema de fuente de impuestos y la identificación maestra del cliente de los impuestos relacionados con cada identificación de multa de estacionamiento?\n", "question_toks": ["Wat", "is", "the", "tax", "source", "system", "code", "and", "master", "customer", "id", "of", "the", "taxes", "related", "to", "each", "parking", "fine", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'", "query_toks": ["SELECT", "T1.council_tax_id", "FROM", "Rent_Arrears", "AS", "T1", "JOIN", "CMI_Cross_References", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "JOIN", "Customer_Master_Index", "AS", "T3", "ON", "T3.master_customer_id", "=", "T2.master_customer_id", "WHERE", "T3.cmi_details", "!", "=", "'Schmidt", ",", "Kertzmann", "and", "Lubowitz", "'"], "query_toks_no_value": ["select", "t1", ".", "council_tax_id", "from", "rent_arrears", "as", "t1", "join", "cmi_cross_references", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "join", "customer_master_index", "as", "t3", "on", "t3", ".", "master_customer_id", "=", "t2", ".", "master_customer_id", "where", "t3", ".", "cmi_details", "!", "=", "value"], "question": "¿Cuáles son los identificadores fiscales de los atrasos en el alquiler relacionados con el índice maestro de clientes cuyo detalle no es 'Schmidt, Kertzmann y Lubowitz'?\n", "question_toks": ["What", "are", "the", "renting", "arrears", "tax", "ids", "related", "to", "the", "customer", "master", "index", "whose", "detail", "is", "not", "'Schmidt", ",", "Kertzmann", "and", "Lubowitz", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 7, [0, [0, 2, false], null], "\"Schmidt ,  Kertzmann and Lubowitz\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  'Electoral' OR T2.source_system_code  =  'Tax'", "query_toks": ["SELECT", "T1.electoral_register_id", "FROM", "Electoral_Register", "AS", "T1", "JOIN", "CMI_Cross_References", "AS", "T2", "ON", "T1.cmi_cross_ref_id", "=", "T2.cmi_cross_ref_id", "WHERE", "T2.source_system_code", "=", "'Electoral", "'", "OR", "T2.source_system_code", "=", "'Tax", "'"], "query_toks_no_value": ["select", "t1", ".", "electoral_register_id", "from", "electoral_register", "as", "t1", "join", "cmi_cross_references", "as", "t2", "on", "t1", ".", "cmi_cross_ref_id", "=", "t2", ".", "cmi_cross_ref_id", "where", "t2", ".", "source_system_code", "=", "value", "or", "t2", ".", "source_system_code", "=", "value"], "question": "¿Cuáles son los identificadores de registro de los registros electorales que tienen el código fuente del sistema de referencia cruzada 'Electoral' o 'Tax'?\n", "question_toks": ["What", "are", "the", "register", "ids", "of", "electoral", "registries", "that", "have", "the", "cross", "reference", "source", "system", "code", "'Electoral", "'", "or", "'Tax", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Electoral\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Tax\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines", "query_toks": ["SELECT", "council_tax_id", ",", "cmi_cross_ref_id", "FROM", "parking_fines"], "query_toks_no_value": ["select", "council_tax_id", ",", "cmi_cross_ref_id", "from", "parking_fines"], "question": "Enumere los números de identificación fiscal del consejo y sus referencias cruzadas cmi relacionadas de todas las multas de estacionamiento.\n", "question_toks": ["List", "the", "council", "tax", "ids", "and", "their", "related", "cmi", "cross", "references", "of", "all", "the", "parking", "fines", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'", "query_toks": ["SELECT", "DISTINCT", "T2.source_system_code", "FROM", "customer_master_index", "AS", "T1", "JOIN", "cmi_cross_references", "AS", "T2", "ON", "T1.master_customer_id", "=", "T2.master_customer_id", "WHERE", "T1.cmi_details", "=", "'Gottlieb", ",", "Becker", "and", "Wyman", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "source_system_code", "from", "customer_master_index", "as", "t1", "join", "cmi_cross_references", "as", "t2", "on", "t1", ".", "master_customer_id", "=", "t2", ".", "master_customer_id", "where", "t1", ".", "cmi_details", "=", "value"], "question": "¿Cuáles son los distintos códigos fuente del sistema de referencia cruzada que están relacionados con los datos maestros del cliente 'Gottlieb, Becker and Wyman'?\n", "question_toks": ["What", "are", "the", "distinct", "cross", "reference", "source", "system", "codes", "which", "are", "related", "to", "the", "master", "customer", "details", "'Gottlieb", ",", "Becker", "and", "Wyman", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Gottlieb ,  Becker and Wyman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_mdm", "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'", "query_toks": ["SELECT", "DISTINCT", "source_system_code", "FROM", "cmi_cross_references", "WHERE", "source_system_code", "LIKE", "'", "%", "en", "%", "'"], "query_toks_no_value": ["select", "distinct", "source_system_code", "from", "cmi_cross_references", "where", "source_system_code", "like", "value"], "question": "¿Qué código fuente distinto del sistema incluye la subcadena 'en'?\n", "question_toks": ["Which", "distinct", "source", "system", "code", "includes", "the", "substring", "'en", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%en%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT Party_Theme ,  LOCATION FROM party", "query_toks": ["SELECT", "Party_Theme", ",", "LOCATION", "FROM", "party"], "query_toks_no_value": ["select", "party_theme", ",", "location", "from", "party"], "question": "¿Cuáles son los temas y ubicaciones de las fiestas?\n", "question_toks": ["What", "are", "the", "themes", "and", "locations", "of", "parties", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT Party_Theme ,  LOCATION FROM party", "query_toks": ["SELECT", "Party_Theme", ",", "LOCATION", "FROM", "party"], "query_toks_no_value": ["select", "party_theme", ",", "location", "from", "party"], "question": "Dame la temática y ubicación de cada fiesta.\n", "question_toks": ["Give", "me", "the", "theme", "and", "location", "of", "each", "party", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "query_toks": ["SELECT", "First_year", ",", "Last_year", "FROM", "party", "WHERE", "Party_Theme", "=", "``", "Spring", "''", "OR", "Party_Theme", "=", "``", "Teqnology", "''"], "query_toks_no_value": ["select", "first_year", ",", "last_year", "from", "party", "where", "party_theme", "=", "value", "or", "party_theme", "=", "value"], "question": "Muestra el primer año y último año de fiestas con temática \"Primavera\" o \"Tecnología\".\n", "question_toks": ["Show", "the", "first", "year", "and", "last", "year", "of", "parties", "with", "theme", "``", "Spring", "''", "or", "``", "Teqnology", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Spring\"", null], "or", [false, 2, [0, [0, 2, false], null], "\"Teqnology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"", "query_toks": ["SELECT", "First_year", ",", "Last_year", "FROM", "party", "WHERE", "Party_Theme", "=", "``", "Spring", "''", "OR", "Party_Theme", "=", "``", "Teqnology", "''"], "query_toks_no_value": ["select", "first_year", ",", "last_year", "from", "party", "where", "party_theme", "=", "value", "or", "party_theme", "=", "value"], "question": "¿Cuáles son el primer año y el último año de las fiestas cuyo tema es \"Primavera\" o \"Tecnología\"?\n", "question_toks": ["What", "are", "the", "first", "year", "and", "last", "year", "of", "the", "parties", "whose", "theme", "is", "``", "Spring", "''", "or", "``", "Teqnology", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Spring\"", null], "or", [false, 2, [0, [0, 2, false], null], "\"Teqnology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID", "query_toks": ["SELECT", "T3.Party_Theme", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID"], "query_toks_no_value": ["select", "t3", ".", "party_theme", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id"], "question": "Muestre los temas de las fiestas y los nombres de los anfitriones de las fiestas.\n", "question_toks": ["Show", "the", "themes", "of", "parties", "and", "the", "names", "of", "the", "party", "hosts", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID", "query_toks": ["SELECT", "T3.Party_Theme", ",", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID"], "query_toks_no_value": ["select", "t3", ".", "party_theme", ",", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id"], "question": "Para cada fiesta, devuelva su tema y el nombre de su anfitrión.\n", "question_toks": ["For", "each", "party", ",", "return", "its", "theme", "and", "the", "name", "of", "its", "host", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50", "query_toks": ["SELECT", "T3.Location", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "WHERE", "T2.Age", ">", "50"], "query_toks_no_value": ["select", "t3", ".", "location", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "where", "t2", ".", "age", ">", "value"], "question": "Muestra las ubicaciones de fiestas con anfitriones mayores de 50 años.\n", "question_toks": ["Show", "the", "locations", "of", "parties", "with", "hosts", "older", "than", "50", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50", "query_toks": ["SELECT", "T3.Location", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "WHERE", "T2.Age", ">", "50"], "query_toks_no_value": ["select", "t3", ".", "location", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "where", "t2", ".", "age", ">", "value"], "question": "¿Qué fiestas tienen anfitriones mayores de 50 años? Dame los lugares de la fiesta.\n", "question_toks": ["Which", "parties", "have", "hosts", "of", "age", "above", "50", "?", "Give", "me", "the", "party", "locations", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20", "query_toks": ["SELECT", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "WHERE", "T3.Number_of_hosts", ">", "20"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "where", "t3", ".", "number_of_hosts", ">", "value"], "question": "Muestra los nombres de los anfitriones para grupos con un número de anfitriones superior a 20.\n", "question_toks": ["Show", "the", "host", "names", "for", "parties", "with", "number", "of", "hosts", "greater", "than", "20", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20", "query_toks": ["SELECT", "T2.Name", "FROM", "party_host", "AS", "T1", "JOIN", "HOST", "AS", "T2", "ON", "T1.Host_ID", "=", "T2.Host_ID", "JOIN", "party", "AS", "T3", "ON", "T1.Party_ID", "=", "T3.Party_ID", "WHERE", "T3.Number_of_hosts", ">", "20"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "party_host", "as", "t1", "join", "host", "as", "t2", "on", "t1", ".", "host_id", "=", "t2", ".", "host_id", "join", "party", "as", "t3", "on", "t1", ".", "party_id", "=", "t3", ".", "party_id", "where", "t3", ".", "number_of_hosts", ">", "value"], "question": "¿Qué partidos tienen más de 20 anfitriones? Dame los nombres de los anfitriones de estas fiestas.\n", "question_toks": ["Which", "parties", "have", "more", "than", "20", "hosts", "?", "Give", "me", "the", "host", "names", "for", "these", "parties", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)", "query_toks": ["SELECT", "Name", "FROM", "HOST", "WHERE", "Host_ID", "NOT", "IN", "(", "SELECT", "Host_ID", "FROM", "party_host", ")"], "query_toks_no_value": ["select", "name", "from", "host", "where", "host_id", "not", "in", "(", "select", "host_id", "from", "party_host", ")"], "question": "Enumere los nombres de los anfitriones que no sirvieron como anfitriones de ninguna parte en nuestro registro.\n", "question_toks": ["List", "the", "names", "of", "hosts", "who", "did", "not", "serve", "as", "a", "host", "of", "any", "party", "in", "our", "record", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "party_host", "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)", "query_toks": ["SELECT", "Name", "FROM", "HOST", "WHERE", "Host_ID", "NOT", "IN", "(", "SELECT", "Host_ID", "FROM", "party_host", ")"], "query_toks_no_value": ["select", "name", "from", "host", "where", "host_id", "not", "in", "(", "select", "host_id", "from", "party_host", ")"], "question": "¿Cuáles son los nombres de los anfitriones que no organizaron ninguna fiesta en nuestro registro?\n", "question_toks": ["What", "are", "the", "names", "of", "hosts", "who", "did", "not", "host", "any", "party", "in", "our", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'", "query_toks": ["SELECT", "region_name", "FROM", "region", "WHERE", "region_name", "!", "=", "'Denmark", "'"], "query_toks_no_value": ["select", "region_name", "from", "region", "where", "region_name", "!", "=", "value"], "question": "Mostrar nombres de todas las regiones excepto Dinamarca.\n", "question_toks": ["Show", "names", "for", "all", "regions", "except", "for", "Denmark", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"Denmark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'", "query_toks": ["SELECT", "region_name", "FROM", "region", "WHERE", "region_name", "!", "=", "'Denmark", "'"], "query_toks_no_value": ["select", "region_name", "from", "region", "where", "region_name", "!", "=", "value"], "question": "Devuelve los nombres de todas las regiones excepto Dinamarca.\n", "question_toks": ["Return", "the", "names", "of", "all", "regions", "other", "than", "Denmark", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"Denmark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "query_toks": ["SELECT", "name", ",", "dates_active", ",", "number_deaths", "FROM", "storm", "WHERE", "number_deaths", ">", "=", "1"], "query_toks_no_value": ["select", "name", ",", "dates_active", ",", "number_deaths", "from", "storm", "where", "number_deaths", ">", "=", "value"], "question": "Enumere el nombre, las fechas activas y el número de muertes de todas las tormentas con al menos 1 muerte.\n", "question_toks": ["List", "name", ",", "dates", "active", ",", "and", "number", "of", "deaths", "for", "all", "storms", "with", "at", "least", "1", "death", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 5, [0, [0, 6, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "query_toks": ["SELECT", "name", ",", "dates_active", ",", "number_deaths", "FROM", "storm", "WHERE", "number_deaths", ">", "=", "1"], "query_toks_no_value": ["select", "name", ",", "dates_active", ",", "number_deaths", "from", "storm", "where", "number_deaths", ">", "=", "value"], "question": "¿Cuáles son los nombres, fechas activas y número de muertes de las tormentas que tuvieron 1 o más muertes?\n", "question_toks": ["What", "are", "the", "names", ",", "dates", "active", ",", "and", "number", "of", "deaths", "for", "storms", "that", "had", "1", "or", "more", "death", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 5, [0, [0, 6, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)", "query_toks": ["SELECT", "region_name", "FROM", "region", "WHERE", "region_id", "NOT", "IN", "(", "SELECT", "region_id", "FROM", "affected_region", ")"], "query_toks_no_value": ["select", "region_name", "from", "region", "where", "region_id", "not", "in", "(", "select", "region_id", "from", "affected_region", ")"], "question": "Muestra el nombre de las regiones no afectadas.\n", "question_toks": ["Show", "the", "name", "for", "regions", "not", "affected", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)", "query_toks": ["SELECT", "region_name", "FROM", "region", "WHERE", "region_id", "NOT", "IN", "(", "SELECT", "region_id", "FROM", "affected_region", ")"], "query_toks_no_value": ["select", "region_name", "from", "region", "where", "region_id", "not", "in", "(", "select", "region_id", "from", "affected_region", ")"], "question": "¿Cuáles son los nombres de las regiones que no se vieron afectadas?\n", "question_toks": ["What", "are", "the", "names", "of", "regions", "that", "were", "not", "affected", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "query_toks": ["SELECT", "name", "FROM", "storm", "WHERE", "storm_id", "NOT", "IN", "(", "SELECT", "storm_id", "FROM", "affected_region", ")"], "query_toks_no_value": ["select", "name", "from", "storm", "where", "storm_id", "not", "in", "(", "select", "storm_id", "from", "affected_region", ")"], "question": "Muestra el nombre de las tormentas que no tienen registrada la región afectada.\n", "question_toks": ["Show", "the", "name", "of", "storms", "which", "do", "n't", "have", "affected", "region", "in", "record", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "query_toks": ["SELECT", "name", "FROM", "storm", "WHERE", "storm_id", "NOT", "IN", "(", "SELECT", "storm_id", "FROM", "affected_region", ")"], "query_toks_no_value": ["select", "name", "from", "storm", "where", "storm_id", "not", "in", "(", "select", "storm_id", "from", "affected_region", ")"], "question": "¿Cómo se llaman las tormentas que no afectaron a ninguna región?\n", "question_toks": ["What", "are", "the", "names", "of", "storms", "that", "did", "not", "affect", "any", "regions", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "query_toks": ["SELECT", "T2.region_name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T3.number_deaths", ">", "=", "10"], "query_toks_no_value": ["select", "t2", ".", "region_name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t3", ".", "number_deaths", ">", "=", "value"], "question": "¿Cómo se llaman las regiones afectadas por la tormenta con un número de muertes de al menos 10?\n", "question_toks": ["What", "are", "the", "region", "names", "affected", "by", "the", "storm", "with", "a", "number", "of", "deaths", "of", "least", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 5, [0, [0, 6, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "query_toks": ["SELECT", "T2.region_name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T3.number_deaths", ">", "=", "10"], "query_toks_no_value": ["select", "t2", ".", "region_name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t3", ".", "number_deaths", ">", "=", "value"], "question": "Devuelve los nombres de las regiones afectadas por tormentas que tuvieron un recuento de muertes de al menos 10.\n", "question_toks": ["Return", "the", "names", "of", "the", "regions", "affected", "by", "storms", "that", "had", "a", "death", "count", "of", "at", "least", "10", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 5, [0, [0, 6, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "query_toks": ["SELECT", "T3.name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T2.region_name", "=", "'Denmark", "'"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t2", ".", "region_name", "=", "value"], "question": "Mostrar todos los nombres de tormentas que afectan a la región \"Dinamarca\".\n", "question_toks": ["Show", "all", "storm", "names", "affecting", "region", "``", "Denmark", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Denmark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "storm_record", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "query_toks": ["SELECT", "T3.name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T2.region_name", "=", "'Denmark", "'"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t2", ".", "region_name", "=", "value"], "question": "¿Cómo se llaman las tormentas que afectaron a Dinamarca?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "storms", "that", "affected", "Denmark", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Denmark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT County_name ,  Population FROM county", "query_toks": ["SELECT", "County_name", ",", "Population", "FROM", "county"], "query_toks_no_value": ["select", "county_name", ",", "population", "from", "county"], "question": "Muestre el nombre del condado y la población de todos los condados.\n", "question_toks": ["Show", "the", "county", "name", "and", "population", "of", "all", "counties", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT County_name ,  Population FROM county", "query_toks": ["SELECT", "County_name", ",", "Population", "FROM", "county"], "query_toks_no_value": ["select", "county_name", ",", "population", "from", "county"], "question": "¿Cuáles son el nombre y la población de cada condado?\n", "question_toks": ["What", "are", "the", "name", "and", "population", "of", "each", "county", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT DISTINCT District FROM election", "query_toks": ["SELECT", "DISTINCT", "District", "FROM", "election"], "query_toks_no_value": ["select", "distinct", "district", "from", "election"], "question": "Mostrar todos los distintos distritos para las elecciones.\n", "question_toks": ["Show", "all", "the", "distinct", "districts", "for", "elections", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT DISTINCT District FROM election", "query_toks": ["SELECT", "DISTINCT", "District", "FROM", "election"], "query_toks_no_value": ["select", "distinct", "district", "from", "election"], "question": "¿Cuáles son los distintos distritos para las elecciones?\n", "question_toks": ["What", "are", "the", "distinct", "districts", "for", "elections", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"", "query_toks": ["SELECT", "Zip_code", "FROM", "county", "WHERE", "County_name", "=", "``", "Howard", "''"], "query_toks_no_value": ["select", "zip_code", "from", "county", "where", "county_name", "=", "value"], "question": "Muestra el código postal del condado con el nombre \"Howard\".\n", "question_toks": ["Show", "the", "zip", "code", "of", "the", "county", "with", "name", "``", "Howard", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Howard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"", "query_toks": ["SELECT", "Zip_code", "FROM", "county", "WHERE", "County_name", "=", "``", "Howard", "''"], "query_toks_no_value": ["select", "zip_code", "from", "county", "where", "county_name", "=", "value"], "question": "¿Cuál es el código postal en el que se encuentra el condado llamado \"Howard\"?\n", "question_toks": ["What", "is", "the", "zip", "code", "the", "county", "named", "``", "Howard", "''", "is", "located", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Howard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Delegate FROM election WHERE District  =  1", "query_toks": ["SELECT", "Delegate", "FROM", "election", "WHERE", "District", "=", "1"], "query_toks_no_value": ["select", "delegate", "from", "election", "where", "district", "=", "value"], "question": "Mostrar al delegado del distrito 1 en elección.\n", "question_toks": ["Show", "the", "delegate", "from", "district", "1", "in", "election", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Delegate FROM election WHERE District  =  1", "query_toks": ["SELECT", "Delegate", "FROM", "election", "WHERE", "District", "=", "1"], "query_toks_no_value": ["select", "delegate", "from", "election", "where", "district", "=", "value"], "question": "¿Quién es el delegado del distrito 1 en las elecciones?\n", "question_toks": ["Who", "is", "the", "delegate", "of", "district", "1", "in", "the", "elections", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Delegate ,  Committee FROM election", "query_toks": ["SELECT", "Delegate", ",", "Committee", "FROM", "election"], "query_toks_no_value": ["select", "delegate", ",", "committee", "from", "election"], "question": "Mostrar al delegado y comité información de las elecciones.\n", "question_toks": ["Show", "the", "delegate", "and", "committee", "information", "of", "elections", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Delegate ,  Committee FROM election", "query_toks": ["SELECT", "Delegate", ",", "Committee", "FROM", "election"], "query_toks_no_value": ["select", "delegate", ",", "committee", "from", "election"], "question": "¿Cuál es la información de delegados y comités para cada registro electoral?\n", "question_toks": ["What", "are", "the", "delegate", "and", "committee", "information", "for", "each", "election", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "query_toks": ["SELECT", "Lieutenant_Governor", ",", "Comptroller", "FROM", "party", "WHERE", "Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "lieutenant_governor", ",", "comptroller", "from", "party", "where", "party", "=", "value"], "question": "Muestre al vicegobernador y al contralor del partido demócrata.\n", "question_toks": ["Show", "the", "lieutenant", "governor", "and", "comptroller", "from", "the", "democratic", "party", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Democratic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"", "query_toks": ["SELECT", "Lieutenant_Governor", ",", "Comptroller", "FROM", "party", "WHERE", "Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "lieutenant_governor", ",", "comptroller", "from", "party", "where", "party", "=", "value"], "question": "¿Quiénes son el vicegobernador y el contralor del partido demócrata?\n", "question_toks": ["Who", "are", "the", "lieutenant", "governor", "and", "comptroller", "from", "the", "democratic", "party", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Democratic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\"", "query_toks": ["SELECT", "DISTINCT", "YEAR", "FROM", "party", "WHERE", "Governor", "=", "``", "Eliot", "Spitzer", "''"], "query_toks_no_value": ["select", "distinct", "year", "from", "party", "where", "governor", "=", "value"], "question": "¿En qué distintos años fue el gobernador \"Eliot Spitzer\"?\n", "question_toks": ["In", "which", "distinct", "years", "was", "the", "governor", "``", "Eliot", "Spitzer", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Eliot Spitzer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\"", "query_toks": ["SELECT", "DISTINCT", "YEAR", "FROM", "party", "WHERE", "Governor", "=", "``", "Eliot", "Spitzer", "''"], "query_toks_no_value": ["select", "distinct", "year", "from", "party", "where", "governor", "=", "value"], "question": "Encuentre los distintos años en que el gobernador fue nombrado \"Eliot Spitzer\".\n", "question_toks": ["Find", "the", "distinct", "years", "when", "the", "governor", "was", "named", "``", "Eliot", "Spitzer", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Eliot Spitzer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT * FROM election", "query_toks": ["SELECT", "*", "FROM", "election"], "query_toks_no_value": ["select", "*", "from", "election"], "question": "Mostrar toda la información sobre las elecciones.\n", "question_toks": ["Show", "all", "the", "information", "about", "election", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT * FROM election", "query_toks": ["SELECT", "*", "FROM", "election"], "query_toks_no_value": ["select", "*", "from", "election"], "question": "Devolver toda la información de cada acta electoral.\n", "question_toks": ["Return", "all", "the", "information", "for", "each", "election", "record", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "query_toks": ["SELECT", "T2.Delegate", ",", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District"], "query_toks_no_value": ["select", "t2", ".", "delegate", ",", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district"], "question": "Mostrar los delegados y los nombres del condado al que pertenecen.\n", "question_toks": ["Show", "the", "delegates", "and", "the", "names", "of", "county", "they", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District", "query_toks": ["SELECT", "T2.Delegate", ",", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District"], "query_toks_no_value": ["select", "t2", ".", "delegate", ",", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district"], "question": "¿Cuáles son el delegado y nombre del condado al que pertenecen, para cada condado?\n", "question_toks": ["What", "are", "the", "delegate", "and", "name", "of", "the", "county", "they", "belong", "to", ",", "for", "each", "county", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000", "query_toks": ["SELECT", "T2.Delegate", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T1.Population", "<", "100000"], "query_toks_no_value": ["select", "t2", ".", "delegate", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t1", ".", "population", "<", "value"], "question": "¿Qué delegados son de condados con una población inferior a 100.000 habitantes?\n", "question_toks": ["Which", "delegates", "are", "from", "counties", "with", "population", "smaller", "than", "100000", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000", "query_toks": ["SELECT", "T2.Delegate", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T1.Population", "<", "100000"], "query_toks_no_value": ["select", "t2", ".", "delegate", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t1", ".", "population", "<", "value"], "question": "Encuentre los delegados que provienen de condados con una población inferior a 100.000 habitantes.\n", "question_toks": ["Find", "the", "delegates", "who", "are", "from", "counties", "with", "population", "below", "100000", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "query_toks": ["SELECT", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T2.Committee", "=", "``", "Appropriations", "''"], "query_toks_no_value": ["select", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t2", ".", "committee", "=", "value"], "question": "¿Cuáles son los nombres del condado al que pertenecen los delegados del comité de \"Asignaciones\"?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "county", "that", "the", "delegates", "on", "``", "Appropriations", "''", "committee", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Appropriations\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"", "query_toks": ["SELECT", "T1.County_name", "FROM", "county", "AS", "T1", "JOIN", "election", "AS", "T2", "ON", "T1.County_id", "=", "T2.District", "WHERE", "T2.Committee", "=", "``", "Appropriations", "''"], "query_toks_no_value": ["select", "t1", ".", "county_name", "from", "county", "as", "t1", "join", "election", "as", "t2", "on", "t1", ".", "county_id", "=", "t2", ".", "district", "where", "t2", ".", "committee", "=", "value"], "question": "¿A qué condado pertenecen los delegados del comité de \"Asignaciones\"? Dame los nombres de los condados.\n", "question_toks": ["Which", "county", "do", "the", "delegates", "on", "``", "Appropriations", "''", "committee", "belong", "to", "?", "Give", "me", "the", "county", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Appropriations\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "query_toks": ["SELECT", "T1.Delegate", ",", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID"], "query_toks_no_value": ["select", "t1", ".", "delegate", ",", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id"], "question": "Mostrar los delegados y los nombres del partido al que pertenecen.\n", "question_toks": ["Show", "the", "delegates", "and", "the", "names", "of", "the", "party", "they", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID", "query_toks": ["SELECT", "T1.Delegate", ",", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID"], "query_toks_no_value": ["select", "t1", ".", "delegate", ",", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id"], "question": "Para cada delegado, busque los nombres del partido al que pertenece.\n", "question_toks": ["For", "each", "delegate", ",", "find", "the", "names", "of", "the", "party", "they", "are", "part", "of", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1", "query_toks": ["SELECT", "T2.Governor", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.District", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "governor", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "district", "=", "value"], "question": "¿Quiénes fueron los gobernadores de los partidos asociados a los delegados del distrito 1?\n", "question_toks": ["Who", "were", "the", "governors", "of", "the", "parties", "associated", "with", "delegates", "from", "district", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1", "query_toks": ["SELECT", "T2.Governor", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.District", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "governor", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "district", "=", "value"], "question": "Encuentre los partidos asociados con los delegados del distrito 1. ¿Quiénes sirvieron como gobernadores de los partidos?\n", "question_toks": ["Find", "the", "parties", "associated", "with", "the", "delegates", "from", "district", "1.", "Who", "served", "as", "governors", "of", "the", "parties", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "query_toks": ["SELECT", "T2.Comptroller", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.District", "=", "1", "OR", "T1.District", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "comptroller", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "district", "=", "value", "or", "t1", ".", "district", "=", "value"], "question": "¿Quiénes eran los contralores de los partidos asociados a los delegados del distrito 1 o del distrito 2?\n", "question_toks": ["Who", "were", "the", "comptrollers", "of", "the", "parties", "associated", "with", "the", "delegates", "from", "district", "1", "or", "district", "2", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1.0, null], "or", [false, 2, [0, [0, 15, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2", "query_toks": ["SELECT", "T2.Comptroller", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T1.District", "=", "1", "OR", "T1.District", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "comptroller", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t1", ".", "district", "=", "value", "or", "t1", ".", "district", "=", "value"], "question": "Encuentre los partidos asociados con los delegados del distrito 1 o 2. ¿Quiénes fungieron como contralores de los partidos?\n", "question_toks": ["Find", "the", "parties", "associated", "with", "the", "delegates", "from", "district", "1", "or", "2.", "Who", "served", "as", "comptrollers", "of", "the", "parties", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1.0, null], "or", [false, 2, [0, [0, 15, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"", "query_toks": ["SELECT", "T1.Committee", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T2.Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "t1", ".", "committee", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t2", ".", "party", "=", "value"], "question": "Devolver todos los comités que tengan delegados del partido demócrata.\n", "question_toks": ["Return", "all", "the", "committees", "that", "have", "delegates", "from", "Democratic", "party", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Democratic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"", "query_toks": ["SELECT", "T1.Committee", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "WHERE", "T2.Party", "=", "``", "Democratic", "''"], "query_toks_no_value": ["select", "t1", ".", "committee", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "where", "t2", ".", "party", "=", "value"], "question": "¿Qué comités tienen delegados del partido demócrata?\n", "question_toks": ["Which", "committees", "have", "delegates", "from", "the", "Democratic", "party", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Democratic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)", "query_toks": ["SELECT", "Party", "FROM", "party", "WHERE", "Party_ID", "NOT", "IN", "(", "SELECT", "Party", "FROM", "election", ")"], "query_toks_no_value": ["select", "party", "from", "party", "where", "party_id", "not", "in", "(", "select", "party", "from", "election", ")"], "question": "¿Cómo se llaman los partidos que no tienen delegados en las elecciones?\n", "question_toks": ["What", "are", "the", "names", "of", "parties", "that", "do", "not", "have", "delegates", "in", "election", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "election", "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)", "query_toks": ["SELECT", "Party", "FROM", "party", "WHERE", "Party_ID", "NOT", "IN", "(", "SELECT", "Party", "FROM", "election", ")"], "query_toks_no_value": ["select", "party", "from", "party", "where", "party_id", "not", "in", "(", "select", "party", "from", "election", ")"], "question": "¿Qué partidos no tuvieron delegados en las elecciones?\n", "question_toks": ["Which", "parties", "did", "not", "have", "any", "delegates", "in", "elections", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "news_report", "query": "SELECT Nationality ,  Age FROM journalist", "query_toks": ["SELECT", "Nationality", ",", "Age", "FROM", "journalist"], "query_toks_no_value": ["select", "nationality", ",", "age", "from", "journalist"], "question": "¿Cuáles son las nacionalidades y edades de los periodistas?\n", "question_toks": ["What", "are", "the", "nationalities", "and", "ages", "of", "journalists", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "news_report", "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"", "query_toks": ["SELECT", "Name", "FROM", "journalist", "WHERE", "Nationality", "=", "``", "England", "''", "OR", "Nationality", "=", "``", "Wales", "''"], "query_toks_no_value": ["select", "name", "from", "journalist", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "Muestra los nombres de periodistas de \"Inglaterra\" o \"Gales\".\n", "question_toks": ["Show", "the", "names", "of", "journalists", "from", "``", "England", "''", "or", "``", "Wales", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"England\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"Wales\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "news_report", "query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Date", "FROM", "news_report", "AS", "T1", "JOIN", "event", "AS", "T2", "ON", "T1.Event_ID", "=", "T2.Event_ID", "JOIN", "journalist", "AS", "T3", "ON", "T1.journalist_ID", "=", "T3.journalist_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "date", "from", "news_report", "as", "t1", "join", "event", "as", "t2", "on", "t1", ".", "event_id", "=", "t2", ".", "event_id", "join", "journalist", "as", "t3", "on", "t1", ".", "journalist_id", "=", "t3", ".", "journalist_id"], "question": "Muestra los nombres de los periodistas y las fechas de los hechos que informaron.\n", "question_toks": ["Show", "the", "names", "of", "journalists", "and", "the", "dates", "of", "the", "events", "they", "reported", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "news_report", "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)", "query_toks": ["SELECT", "Name", "FROM", "journalist", "WHERE", "journalist_ID", "NOT", "IN", "(", "SELECT", "journalist_ID", "FROM", "news_report", ")"], "query_toks_no_value": ["select", "name", "from", "journalist", "where", "journalist_id", "not", "in", "(", "select", "journalist_id", "from", "news_report", ")"], "question": "Enumere los nombres de los periodistas que no han informado de ningún hecho.\n", "question_toks": ["List", "the", "names", "of", "journalists", "who", "have", "not", "reported", "any", "event", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT ResName FROM Restaurant;", "query_toks": ["SELECT", "ResName", "FROM", "Restaurant", ";"], "query_toks_no_value": ["select", "resname", "from", "restaurant"], "question": "Muéstrame todos los restaurantes.\n", "question_toks": ["Show", "me", "all", "the", "restaurants", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";", "query_toks": ["SELECT", "Address", "FROM", "Restaurant", "WHERE", "ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "address", "from", "restaurant", "where", "resname", "=", "value"], "question": "¿Cuál es la dirección del restaurante Subway?\n", "question_toks": ["What", "is", "the", "address", "of", "the", "restaurant", "Subway", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Subway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";", "query_toks": ["SELECT", "Rating", "FROM", "Restaurant", "WHERE", "ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "rating", "from", "restaurant", "where", "resname", "=", "value"], "question": "¿Cuál es la calificación del restaurante Subway?\n", "question_toks": ["What", "is", "the", "rating", "of", "the", "restaurant", "Subway", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Subway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT ResTypeName FROM Restaurant_Type;", "query_toks": ["SELECT", "ResTypeName", "FROM", "Restaurant_Type", ";"], "query_toks_no_value": ["select", "restypename", "from", "restaurant_type"], "question": "Enumere todos los tipos de restaurantes.\n", "question_toks": ["List", "all", "restaurant", "types", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";", "query_toks": ["SELECT", "ResTypeDescription", "FROM", "Restaurant_Type", "WHERE", "ResTypeName", "=", "``", "Sandwich", "''", ";"], "query_toks_no_value": ["select", "restypedescription", "from", "restaurant_type", "where", "restypename", "=", "value"], "question": "¿Cuál es la descripción del restaurante tipo Sandwich?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "restaurant", "type", "Sandwich", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Sandwich\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "query_toks": ["SELECT", "Age", "FROM", "Student", "WHERE", "Fname", "=", "``", "Linda", "''", "AND", "Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "age", "from", "student", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "¿Cuál es la edad de la estudiante Linda Smith?\n", "question_toks": ["What", "is", "the", "age", "of", "student", "Linda", "Smith", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "query_toks": ["SELECT", "Sex", "FROM", "Student", "WHERE", "Fname", "=", "``", "Linda", "''", "AND", "Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "sex", "from", "student", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "¿Cuál es el género de la estudiante Linda Smith?\n", "question_toks": ["What", "is", "the", "gender", "of", "the", "student", "Linda", "Smith", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Major  =  600;", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Major", "=", "600", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "=", "value"], "question": "Enumere los nombres y apellidos de todos los estudiantes que se especializaron en 600.\n", "question_toks": ["List", "all", "students", "'", "first", "names", "and", "last", "names", "who", "majored", "in", "600", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";", "query_toks": ["SELECT", "city_code", "FROM", "Student", "WHERE", "Fname", "=", "``", "Linda", "''", "AND", "Lname", "=", "``", "Smith", "''", ";"], "query_toks_no_value": ["select", "city_code", "from", "student", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "¿En qué ciudad vive la estudiante Linda Smith?\n", "question_toks": ["Which", "city", "does", "student", "Linda", "Smith", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Age", ">", "18", "AND", "Major", "=", "600", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", ">", "value", "and", "major", "=", "value"], "question": "¿Qué estudiante tiene más de 18 años y se especializa en 600? Escriba el nombre y apellido de cada estudiante.\n", "question_toks": ["Which", "student", "'s", "age", "is", "older", "than", "18", "and", "is", "majoring", "in", "600", "?", "List", "each", "student", "'s", "first", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 18.0, null], "and", [false, 2, [0, [0, 6, false], null], 600.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "Student", "WHERE", "Age", ">", "18", "AND", "Major", "!", "=", "600", "AND", "Sex", "=", "'F", "'", ";"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", ">", "value", "and", "major", "!", "=", "value", "and", "sex", "=", "value"], "question": "Enumere todas las estudiantes mujeres mayores de 18 años que no se especialicen en 600. Enumere el nombre y apellido de los estudiantes.\n", "question_toks": ["List", "all", "female", "students", "age", "is", "older", "than", "18", "who", "is", "not", "majoring", "in", "600", ".", "List", "students", "'", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 18.0, null], "and", [false, 7, [0, [0, 6, false], null], 600.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "restaurant_1", "query": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";", "query_toks": ["SELECT", "TIME", "FROM", "Student", "JOIN", "Visits_Restaurant", "ON", "Student.StuID", "=", "Visits_Restaurant.StuID", "JOIN", "Restaurant", "ON", "Visits_Restaurant.ResID", "=", "Restaurant.ResID", "WHERE", "Student.Fname", "=", "``", "Linda", "''", "AND", "Student.Lname", "=", "``", "Smith", "''", "AND", "Restaurant.ResName", "=", "``", "Subway", "''", ";"], "query_toks_no_value": ["select", "time", "from", "student", "join", "visits_restaurant", "on", "student.stuid", "=", "visits_restaurant.stuid", "join", "restaurant", "on", "visits_restaurant.resid", "=", "restaurant.resid", "where", "student.fname", "=", "value", "and", "student.lname", "=", "value", "and", "restaurant.resname", "=", "value"], "question": "¿Cuándo visitó Linda Smith Subway?\n", "question_toks": ["When", "did", "Linda", "Smith", "visit", "Subway", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Smith\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Subway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_deliveries", "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'", "query_toks": ["SELECT", "actual_order_id", "FROM", "actual_orders", "WHERE", "order_status_code", "=", "'Success", "'"], "query_toks_no_value": ["select", "actual_order_id", "from", "actual_orders", "where", "order_status_code", "=", "value"], "question": "Encuentre los identificadores de los pedidos cuyo estado sea \"Éxito\".\n", "question_toks": ["Find", "the", "ids", "of", "orders", "whose", "status", "is", "'Success", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Success\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_deliveries", "query": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'", "query_toks": ["SELECT", "customer_email", ",", "customer_name", "FROM", "customers", "WHERE", "payment_method", "=", "'Visa", "'"], "query_toks_no_value": ["select", "customer_email", ",", "customer_name", "from", "customers", "where", "payment_method", "=", "value"], "question": "Enumere los nombres y correos electrónicos de los clientes que pagaron con tarjeta Visa.\n", "question_toks": ["List", "the", "names", "and", "emails", "of", "customers", "who", "payed", "by", "Visa", "card", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Visa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_deliveries", "query": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'", "query_toks": ["SELECT", "t1.customer_name", ",", "t1.customer_phone", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", "WHERE", "t3.state_province_county", "=", "'California", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "where", "t3", ".", "state_province_county", "=", "value"], "question": "Encuentre los nombres y números de teléfono de clientes que viven en el estado de California.\n", "question_toks": ["Find", "the", "names", "and", "phone", "numbers", "of", "customers", "living", "in", "California", "state", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 7], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"California\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_deliveries", "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)", "query_toks": ["SELECT", "state_province_county", "FROM", "addresses", "WHERE", "address_id", "NOT", "IN", "(", "SELECT", "employee_address_id", "FROM", "Employees", ")"], "query_toks_no_value": ["select", "state_province_county", "from", "addresses", "where", "address_id", "not", "in", "(", "select", "employee_address_id", "from", "employees", ")"], "question": "Encuentre los estados que no tienen ningún empleado en su registro.\n", "question_toks": ["Find", "the", "states", "which", "do", "not", "have", "any", "employee", "in", "their", "record", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Jeremy", "''", "AND", "t1.lname", "=", "``", "Gibbons", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Cuáles son los títulos de los artículos publicados por \"Jeremy Gibbons\"?\n", "question_toks": ["What", "are", "the", "titles", "of", "papers", "published", "by", "``", "Jeremy", "Gibbons", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Jeremy\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Gibbons\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Jeremy", "''", "AND", "t1.lname", "=", "``", "Gibbons", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Encuentre los títulos de todos los artículos escritos por \"Jeremy Gibbons\"\n", "question_toks": ["Find", "the", "titles", "of", "all", "the", "papers", "written", "by", "``", "Jeremy", "Gibbons", "''"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Jeremy\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Gibbons\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Aaron", "''", "AND", "t1.lname", "=", "``", "Turon", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Encuentre todos los artículos publicados por \"Aaron Turon\".\n", "question_toks": ["Find", "all", "the", "papers", "published", "by", "``", "Aaron", "Turon", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Aaron\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Turon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Aaron", "''", "AND", "t1.lname", "=", "``", "Turon", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Encuentre los títulos de todos los artículos escritos por \"Aaron Turon\".\n", "question_toks": ["Find", "the", "titles", "of", "all", "the", "papers", "written", "by", "``", "Aaron", "Turon", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Aaron\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Turon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Matthias", "''", "AND", "t1.lname", "=", "``", "Blume", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Cómo se llama la institución a la que pertenece \"Matthias Blume\"?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "institution", "that", "``", "Matthias", "Blume", "''", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Matthias\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Blume\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Matthias", "''", "AND", "t1.lname", "=", "``", "Blume", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿A qué institución pertenece el autor \"Matthias Blume\"? Dame el nombre de la institución.\n", "question_toks": ["Which", "institution", "is", "the", "author", "``", "Matthias", "Blume", "''", "belong", "to", "?", "Give", "me", "the", "name", "of", "the", "institution", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Matthias\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Blume\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Katsuhiro", "''", "AND", "t1.lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿A qué institución pertenece \"Katsuhiro Ueno\"?\n", "question_toks": ["Which", "institution", "does", "``", "Katsuhiro", "Ueno", "''", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Katsuhiro\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Katsuhiro", "''", "AND", "t1.lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Cómo se llama la institución a la que pertenece el autor \"Katsuhiro Ueno\"?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "institution", "the", "author", "``", "Katsuhiro", "Ueno", "''", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Katsuhiro\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "University", "of", "Oxford", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "¿Quiénes pertenecen a la institución \"Universidad de Oxford\"? Muestra los nombres y apellidos.\n", "question_toks": ["Who", "belong", "to", "the", "institution", "``", "University", "of", "Oxford", "''", "?", "Show", "the", "first", "names", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"University of Oxford\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "University", "of", "Oxford", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Encuentre los nombres y apellidos de los autores cuya institución afiliada es la \"Universidad de Oxford\".\n", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "the", "authors", "whose", "institution", "affiliation", "is", "``", "University", "of", "Oxford", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"University of Oxford\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "¿Qué autores pertenecen a la institución \"Google\"? Muestra los nombres y apellidos.\n", "question_toks": ["Which", "authors", "belong", "to", "the", "institution", "``", "Google", "''", "?", "Show", "the", "first", "names", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Encuentre los nombres y apellidos de los autores cuya institución afiliada es \"Google\".\n", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "the", "authors", "whose", "institution", "affiliation", "is", "``", "Google", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"", "query_toks": ["SELECT", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "=", "``", "Binders", "Unbound", "''"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "=", "value"], "question": "¿Cuáles son los apellidos del autor del artículo titulado \"Binders Unbound\"?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "the", "author", "of", "the", "paper", "titled", "``", "Binders", "Unbound", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Binders Unbound\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"", "query_toks": ["SELECT", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "=", "``", "Binders", "Unbound", "''"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "=", "value"], "question": "¿Quién es el autor del artículo titulado \"Binders Unbound\"? Dame el apellido.\n", "question_toks": ["Who", "is", "the", "author", "of", "the", "paper", "titled", "``", "Binders", "Unbound", "''", "?", "Give", "me", "the", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Binders Unbound\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"", "query_toks": ["SELECT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "=", "``", "Nameless", ",", "Painless", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "=", "value"], "question": "Encuentre el nombre y apellido del autor(es) que escribieron el artículo \"Sin nombre, sin dolor\".\n", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "the", "author", "(", "s", ")", "who", "wrote", "the", "paper", "``", "Nameless", ",", "Painless", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Nameless ,  Painless\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"", "query_toks": ["SELECT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "=", "``", "Nameless", ",", "Painless", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "=", "value"], "question": "¿Cuál es el nombre y apellido del autor que publicó el artículo titulado \"Sin nombre, sin dolor\"?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "the", "author", "who", "published", "the", "paper", "titled", "``", "Nameless", ",", "Painless", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Nameless ,  Painless\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"", "query_toks": ["SELECT", "DISTINCT", "t1.title", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Indiana", "University", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "¿Cuáles son los artículos publicados bajo la institución \"Universidad de Indiana\"?\n", "question_toks": ["What", "are", "the", "papers", "published", "under", "the", "institution", "``", "Indiana", "University", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Indiana University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"", "query_toks": ["SELECT", "DISTINCT", "t1.title", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Indiana", "University", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Enumere los títulos de los artículos cuyos autores sean de la institución \"Indiana University\".\n", "question_toks": ["List", "the", "titles", "of", "the", "papers", "whose", "authors", "are", "from", "the", "institution", "``", "Indiana", "University", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Indiana University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.title", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Encuentra todos los artículos publicados por la institución \"Google\".\n", "question_toks": ["Find", "all", "the", "papers", "published", "by", "the", "institution", "``", "Google", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.title", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "¿Qué artículos fueron escritos por autores de la institución \"Google\"?\n", "question_toks": ["Which", "papers", "were", "written", "by", "authors", "from", "the", "institution", "``", "Google", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Olin", "''", "AND", "t1.lname", "=", "``", "Shivers", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Encuentre los artículos que tienen a \"Olin Shivers\" como autor.\n", "question_toks": ["Find", "the", "papers", "which", "have", "``", "Olin", "Shivers", "''", "as", "an", "author", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Olin\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Shivers\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Olin", "''", "AND", "t1.lname", "=", "``", "Shivers", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Qué artículos escribió el autor \"Olin Shivers\"? Dame los títulos de los artículos.\n", "question_toks": ["Which", "papers", "did", "the", "author", "``", "Olin", "Shivers", "''", "write", "?", "Give", "me", "the", "paper", "titles", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Olin\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Shivers\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Stephanie", "''", "AND", "t1.lname", "=", "``", "Weirich", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Qué artículos tienen como autora a \"Stephanie Weirich\"?\n", "question_toks": ["Which", "papers", "have", "``", "Stephanie", "Weirich", "''", "as", "an", "author", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Stephanie\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Weirich\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Stephanie", "''", "AND", "t1.lname", "=", "``", "Weirich", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Encuentre los títulos de los artículos que escribió la autora \"Stephanie Weirich\".\n", "question_toks": ["Find", "the", "titles", "of", "the", "papers", "the", "author", "``", "Stephanie", "Weirich", "''", "wrote", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Stephanie\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Weirich\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "JOIN", "inst", "AS", "t4", "ON", "t2.instid", "=", "t4.instid", "WHERE", "t4.country", "=", "``", "USA", "''", "AND", "t2.authorder", "=", "2", "AND", "t1.lname", "=", "``", "Turon", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "join", "inst", "as", "t4", "on", "t2", ".", "instid", "=", "t4", ".", "instid", "where", "t4", ".", "country", "=", "value", "and", "t2", ".", "authorder", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Qué artículo se publica en una institución de \"EE. UU.\" y tiene a \"Turón\" como segundo autor?\n", "question_toks": ["Which", "paper", "is", "published", "in", "an", "institution", "in", "``", "USA", "''", "and", "have", "``", "Turon", "''", "as", "its", "second", "author", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"USA\"", null], "and", [false, 2, [0, [0, 12, false], null], 2.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"Turon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "JOIN", "inst", "AS", "t4", "ON", "t2.instid", "=", "t4.instid", "WHERE", "t4.country", "=", "``", "USA", "''", "AND", "t2.authorder", "=", "2", "AND", "t1.lname", "=", "``", "Turon", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "join", "inst", "as", "t4", "on", "t2", ".", "instid", "=", "t4", ".", "instid", "where", "t4", ".", "country", "=", "value", "and", "t2", ".", "authorder", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Buscar artículos cuyo segundo autor tenga apellido \"Turon\" y esté afiliado a una institución en el país \"USA\".\n", "question_toks": ["Find", "papers", "whose", "second", "author", "has", "last", "name", "``", "Turon", "''", "and", "is", "affiliated", "with", "an", "institution", "in", "the", "country", "``", "USA", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"USA\"", null], "and", [false, 2, [0, [0, 12, false], null], 2.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"Turon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "JOIN", "inst", "AS", "t4", "ON", "t2.instid", "=", "t4.instid", "WHERE", "t4.country", "=", "``", "Japan", "''", "AND", "t2.authorder", "=", "1", "AND", "t1.lname", "=", "``", "Ohori", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "join", "inst", "as", "t4", "on", "t2", ".", "instid", "=", "t4", ".", "instid", "where", "t4", ".", "country", "=", "value", "and", "t2", ".", "authorder", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Encontrar los títulos de artículos cuyo primer autor está afiliado a una institución en el país \"Japón\" y tiene el apellido \"Ohori\"?\n", "question_toks": ["Find", "the", "titles", "of", "papers", "whose", "first", "author", "is", "affiliated", "with", "an", "institution", "in", "the", "country", "``", "Japan", "''", "and", "has", "last", "name", "``", "Ohori", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Japan\"", null], "and", [false, 2, [0, [0, 12, false], null], 1.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"Ohori\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "JOIN", "inst", "AS", "t4", "ON", "t2.instid", "=", "t4.instid", "WHERE", "t4.country", "=", "``", "Japan", "''", "AND", "t2.authorder", "=", "1", "AND", "t1.lname", "=", "``", "Ohori", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "join", "inst", "as", "t4", "on", "t2", ".", "instid", "=", "t4", ".", "instid", "where", "t4", ".", "country", "=", "value", "and", "t2", ".", "authorder", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿El primer autor de qué artículo está afiliado a una institución en el país \"Japón\" y tiene el apellido \"Ohori\"? Dame los títulos de los artículos.\n", "question_toks": ["Which", "papers", "'", "first", "author", "is", "affiliated", "with", "an", "institution", "in", "the", "country", "``", "Japan", "''", "and", "has", "last", "name", "``", "Ohori", "''", "?", "Give", "me", "the", "titles", "of", "the", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Japan\"", null], "and", [false, 2, [0, [0, 12, false], null], 1.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"Ohori\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "query_toks": ["SELECT", "title", "FROM", "papers", "WHERE", "title", "LIKE", "``", "%", "ML", "%", "''"], "query_toks_no_value": ["select", "title", "from", "papers", "where", "title", "like", "value"], "question": "Busque los títulos de los artículos que contienen la palabra \"ML\".\n", "question_toks": ["Find", "the", "titles", "of", "the", "papers", "that", "contain", "the", "word", "``", "ML", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%ML%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "query_toks": ["SELECT", "title", "FROM", "papers", "WHERE", "title", "LIKE", "``", "%", "ML", "%", "''"], "query_toks_no_value": ["select", "title", "from", "papers", "where", "title", "like", "value"], "question": "¿Qué artículos tienen la subcadena \"ML\" en sus títulos? Devuelve los títulos de los artículos.\n", "question_toks": ["Which", "papers", "have", "the", "substring", "``", "ML", "''", "in", "their", "titles", "?", "Return", "the", "titles", "of", "the", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%ML%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "query_toks": ["SELECT", "title", "FROM", "papers", "WHERE", "title", "LIKE", "``", "%", "Database", "%", "''"], "query_toks_no_value": ["select", "title", "from", "papers", "where", "title", "like", "value"], "question": "¿El título de qué artículo contiene la palabra \"Base de datos\"?\n", "question_toks": ["Which", "paper", "'s", "title", "contains", "the", "word", "``", "Database", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Database%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "query_toks": ["SELECT", "title", "FROM", "papers", "WHERE", "title", "LIKE", "``", "%", "Database", "%", "''"], "query_toks_no_value": ["select", "title", "from", "papers", "where", "title", "like", "value"], "question": "¿Qué artículos tienen la subcadena \"Base de datos\" en sus títulos? Mostrar los títulos de los artículos.\n", "question_toks": ["Which", "papers", "have", "the", "substring", "``", "Database", "''", "in", "their", "titles", "?", "Show", "the", "titles", "of", "the", "papers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Database%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "query_toks": ["SELECT", "t1.fname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "LIKE", "``", "%", "Functional", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "like", "value"], "question": "Busque los nombres de todos los autores que han escrito un artículo cuyo título contenga la palabra \"Funcional\".\n", "question_toks": ["Find", "the", "first", "names", "of", "all", "the", "authors", "who", "have", "written", "a", "paper", "with", "title", "containing", "the", "word", "``", "Functional", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Functional%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "query_toks": ["SELECT", "t1.fname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "LIKE", "``", "%", "Functional", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "like", "value"], "question": "¿Quién ha escrito un artículo que tiene la palabra \"Funcional\" en su título? Devuelve los nombres de los autores.\n", "question_toks": ["Who", "has", "written", "a", "paper", "that", "has", "the", "word", "``", "Functional", "''", "in", "its", "title", "?", "Return", "the", "first", "names", "of", "the", "authors", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Functional%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\"", "query_toks": ["SELECT", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "LIKE", "``", "%", "Monadic", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "like", "value"], "question": "Encuentre los apellidos de todos los autores que han escrito un artículo cuyo título contenga la palabra \"Monadic\".\n", "question_toks": ["Find", "the", "last", "names", "of", "all", "the", "authors", "that", "have", "written", "a", "paper", "with", "title", "containing", "the", "word", "``", "Monadic", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Monadic%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\"", "query_toks": ["SELECT", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "LIKE", "``", "%", "Monadic", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "like", "value"], "question": "¿Qué autores han escrito un artículo cuyo título contiene la palabra \"monádico\"? Devuelve sus apellidos.\n", "question_toks": ["Which", "authors", "have", "written", "a", "paper", "with", "title", "containing", "the", "word", "``", "Monadic", "''", "?", "Return", "their", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Monadic%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)", "query_toks": ["SELECT", "t2.title", "FROM", "authorship", "AS", "t1", "JOIN", "papers", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "WHERE", "t1.authorder", "=", "(", "SELECT", "max", "(", "authorder", ")", "FROM", "authorship", ")"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "authorship", "as", "t1", "join", "papers", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "where", "t1", ".", "authorder", "=", "(", "select", "max", "(", "authorder", ")", "from", "authorship", ")"], "question": "Recupera el título del artículo que tiene el mayor número de autores.\n", "question_toks": ["Retrieve", "the", "title", "of", "the", "paper", "that", "has", "the", "largest", "number", "of", "authors", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)", "query_toks": ["SELECT", "t2.title", "FROM", "authorship", "AS", "t1", "JOIN", "papers", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "WHERE", "t1.authorder", "=", "(", "SELECT", "max", "(", "authorder", ")", "FROM", "authorship", ")"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "authorship", "as", "t1", "join", "papers", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "where", "t1", ".", "authorder", "=", "(", "select", "max", "(", "authorder", ")", "from", "authorship", ")"], "question": "¿Qué artículo tiene más autores? Dame el título del artículo.\n", "question_toks": ["Which", "paper", "has", "the", "most", "authors", "?", "Give", "me", "the", "paper", "title", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"", "query_toks": ["SELECT", "fname", "FROM", "authors", "WHERE", "lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "fname", "from", "authors", "where", "lname", "=", "value"], "question": "¿Cuál es el nombre del autor con apellido \"Ueno\"?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "author", "with", "last", "name", "``", "Ueno", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"", "query_toks": ["SELECT", "fname", "FROM", "authors", "WHERE", "lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "fname", "from", "authors", "where", "lname", "=", "value"], "question": "¿Qué autores tienen el apellido \"Ueno\"? Enumere sus nombres.\n", "question_toks": ["Which", "authors", "have", "last", "name", "``", "Ueno", "''", "?", "List", "their", "first", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"", "query_toks": ["SELECT", "lname", "FROM", "authors", "WHERE", "fname", "=", "``", "Amal", "''"], "query_toks_no_value": ["select", "lname", "from", "authors", "where", "fname", "=", "value"], "question": "Busque el apellido del autor con el nombre \"Amal\".\n", "question_toks": ["Find", "the", "last", "name", "of", "the", "author", "with", "first", "name", "``", "Amal", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Amal\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "icfp_1", "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"", "query_toks": ["SELECT", "lname", "FROM", "authors", "WHERE", "fname", "=", "``", "Amal", "''"], "query_toks_no_value": ["select", "lname", "from", "authors", "where", "fname", "=", "value"], "question": "¿Qué autores se llaman \"Amal\"? Enumere sus apellidos.\n", "question_toks": ["Which", "authors", "have", "first", "name", "``", "Amal", "''", "?", "List", "their", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Amal\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'", "query_toks": ["SELECT", "phone", ",", "postal_code", "FROM", "address", "WHERE", "address", "=", "'1031", "Daugavpils", "Parkway", "'"], "query_toks_no_value": ["select", "phone", ",", "postal_code", "from", "address", "where", "address", "=", "value"], "question": "¿Cuál es el número de teléfono y código postal de la dirección 1031 Daugavpils Parkway?\n", "question_toks": ["What", "is", "the", "phone", "number", "and", "postal", "code", "of", "the", "address", "1031", "Daugavpils", "Parkway", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"1031 Daugavpils Parkway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'", "query_toks": ["SELECT", "phone", ",", "postal_code", "FROM", "address", "WHERE", "address", "=", "'1031", "Daugavpils", "Parkway", "'"], "query_toks_no_value": ["select", "phone", ",", "postal_code", "from", "address", "where", "address", "=", "value"], "question": "Indique el teléfono y el código postal correspondientes a la dirección '1031 Daugavpils Parkway'.\n", "question_toks": ["Give", "the", "phone", "and", "postal", "code", "corresponding", "to", "the", "address", "'1031", "Daugavpils", "Parkway", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"1031 Daugavpils Parkway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'", "query_toks": ["SELECT", "T1.name", "FROM", "category", "AS", "T1", "JOIN", "film_category", "AS", "T2", "ON", "T1.category_id", "=", "T2.category_id", "JOIN", "film", "AS", "T3", "ON", "T2.film_id", "=", "T3.film_id", "WHERE", "T3.title", "=", "'HUNGER", "ROOF", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t1", "join", "film_category", "as", "t2", "on", "t1", ".", "category_id", "=", "t2", ".", "category_id", "join", "film", "as", "t3", "on", "t2", ".", "film_id", "=", "t3", ".", "film_id", "where", "t3", ".", "title", "=", "value"], "question": "¿Cuál es el nombre de género de la película HUNGER ROOF?\n", "question_toks": ["What", "is", "the", "genre", "name", "of", "the", "film", "HUNGER", "ROOF", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 49, false], null], "and", [false, 2, [0, [0, 48, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"HUNGER ROOF\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'", "query_toks": ["SELECT", "T1.name", "FROM", "category", "AS", "T1", "JOIN", "film_category", "AS", "T2", "ON", "T1.category_id", "=", "T2.category_id", "JOIN", "film", "AS", "T3", "ON", "T2.film_id", "=", "T3.film_id", "WHERE", "T3.title", "=", "'HUNGER", "ROOF", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "category", "as", "t1", "join", "film_category", "as", "t2", "on", "t1", ".", "category_id", "=", "t2", ".", "category_id", "join", "film", "as", "t3", "on", "t2", ".", "film_id", "=", "t3", ".", "film_id", "where", "t3", ".", "title", "=", "value"], "question": "Devuelve el nombre de la categoría a la que pertenece la película 'HUNGER ROOF'.\n", "question_toks": ["Return", "the", "name", "of", "the", "category", "to", "which", "the", "film", "'HUNGER", "ROOF", "'", "belongs", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 49, false], null], "and", [false, 2, [0, [0, 48, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"HUNGER ROOF\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT title FROM film WHERE rating  =  'R'", "query_toks": ["SELECT", "title", "FROM", "film", "WHERE", "rating", "=", "'R", "'"], "query_toks_no_value": ["select", "title", "from", "film", "where", "rating", "=", "value"], "question": "¿Cuáles son todas las películas clasificadas como R? Enumere los títulos.\n", "question_toks": ["What", "are", "all", "the", "movies", "rated", "as", "R", "?", "List", "the", "titles", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], "\"R\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT title FROM film WHERE rating  =  'R'", "query_toks": ["SELECT", "title", "FROM", "film", "WHERE", "rating", "=", "'R", "'"], "query_toks_no_value": ["select", "title", "from", "film", "where", "rating", "=", "value"], "question": "Devuelve los títulos de cualquier película con clasificación R.\n", "question_toks": ["Return", "the", "titles", "of", "any", "movies", "with", "an", "R", "rating", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], "\"R\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1", "query_toks": ["SELECT", "T2.address", "FROM", "store", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "store_id", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "address", "from", "store", "as", "t1", "join", "address", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "store_id", "=", "value"], "question": "¿Dónde está ubicada la tienda 1?\n", "question_toks": ["Where", "is", "store", "1", "located", "?"], "sql": {"from": {"table_units": [["table_unit", 15], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 88, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 86, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1", "query_toks": ["SELECT", "T2.address", "FROM", "store", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "store_id", "=", "1"], "query_toks_no_value": ["select", "t2", ".", "address", "from", "store", "as", "t1", "join", "address", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "store_id", "=", "value"], "question": "Devuelve la dirección de la tienda 1.\n", "question_toks": ["Return", "the", "address", "of", "store", "1", "."], "sql": {"from": {"table_units": [["table_unit", 15], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 88, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 86, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'", "query_toks": ["SELECT", "T2.name", "FROM", "film", "AS", "T1", "JOIN", "LANGUAGE", "AS", "T2", "ON", "T1.language_id", "=", "T2.language_id", "WHERE", "T1.title", "=", "'AIRPORT", "POLLOCK", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "film", "as", "t1", "join", "language", "as", "t2", "on", "t1", ".", "language_id", "=", "t2", ".", "language_id", "where", "t1", ".", "title", "=", "value"], "question": "¿Qué idioma utiliza la película AIRPORT POLLOCK? Enumere el nombre del idioma.\n", "question_toks": ["Which", "language", "does", "the", "film", "AIRPORT", "POLLOCK", "use", "?", "List", "the", "language", "name", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 58, false], null]]}, "select": [false, [[0, [0, [0, 59, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"AIRPORT POLLOCK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'", "query_toks": ["SELECT", "T2.name", "FROM", "film", "AS", "T1", "JOIN", "LANGUAGE", "AS", "T2", "ON", "T1.language_id", "=", "T2.language_id", "WHERE", "T1.title", "=", "'AIRPORT", "POLLOCK", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "film", "as", "t1", "join", "language", "as", "t2", "on", "t1", ".", "language_id", "=", "t2", ".", "language_id", "where", "t1", ".", "title", "=", "value"], "question": "¿Cómo se llama el idioma en el que está la película 'AIRPORT POLLOCK'?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "language", "that", "the", "film", "'AIRPORT", "POLLOCK", "'", "is", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 58, false], null]]}, "select": [false, [[0, [0, [0, 59, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"AIRPORT POLLOCK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'", "query_toks": ["SELECT", "title", "FROM", "film", "WHERE", "special_features", "LIKE", "'", "%", "Deleted", "Scenes", "%", "'"], "query_toks_no_value": ["select", "title", "from", "film", "where", "special_features", "like", "value"], "question": "¿Qué películas tienen 'Escenas eliminadas' como subcadena en la función especial?\n", "question_toks": ["Which", "movies", "have", "'Deleted", "Scenes", "'", "as", "a", "substring", "in", "the", "special", "feature", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 9, [0, [0, 43, false], null], "\"%Deleted Scenes%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'", "query_toks": ["SELECT", "title", "FROM", "film", "WHERE", "special_features", "LIKE", "'", "%", "Deleted", "Scenes", "%", "'"], "query_toks_no_value": ["select", "title", "from", "film", "where", "special_features", "like", "value"], "question": "Devuelve los títulos de las películas que incluyen 'Escenas eliminadas' en su sección de funciones especiales.\n", "question_toks": ["Return", "the", "titles", "of", "films", "that", "include", "'Deleted", "Scenes", "'", "in", "their", "special", "feature", "section", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 9, [0, [0, 43, false], null], "\"%Deleted Scenes%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "query_toks": ["SELECT", "T2.address", ",", "T1.email", "FROM", "customer", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T2.address_id", "=", "T1.address_id", "WHERE", "T1.first_name", "=", "'LINDA", "'"], "query_toks_no_value": ["select", "t2", ".", "address", ",", "t1", ".", "email", "from", "customer", "as", "t1", "join", "address", "as", "t2", "on", "t2", ".", "address_id", "=", "t1", ".", "address_id", "where", "t1", ".", "first_name", "=", "value"], "question": "¿Dónde vive el cliente con el nombre Linda? ¿Y cuál es su correo electrónico?\n", "question_toks": ["Where", "does", "the", "customer", "with", "the", "first", "name", "Linda", "live", "?", "And", "what", "is", "her", "email", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"LINDA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'", "query_toks": ["SELECT", "T2.address", ",", "T1.email", "FROM", "customer", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T2.address_id", "=", "T1.address_id", "WHERE", "T1.first_name", "=", "'LINDA", "'"], "query_toks_no_value": ["select", "t2", ".", "address", ",", "t1", ".", "email", "from", "customer", "as", "t1", "join", "address", "as", "t2", "on", "t2", ".", "address_id", "=", "t1", ".", "address_id", "where", "t1", ".", "first_name", "=", "value"], "question": "Devuelva la dirección y el correo electrónico del cliente con el nombre Linda.\n", "question_toks": ["Return", "the", "address", "and", "email", "of", "the", "customer", "with", "the", "first", "name", "Linda", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"LINDA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "staff", "AS", "T1", "JOIN", "rental", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "JOIN", "customer", "AS", "T3", "ON", "T2.customer_id", "=", "T3.customer_id", "WHERE", "T3.first_name", "=", "'APRIL", "'", "AND", "T3.last_name", "=", "'BURNS", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "staff", "as", "t1", "join", "rental", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "join", "customer", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t3", ".", "first_name", "=", "value", "and", "t3", ".", "last_name", "=", "value"], "question": "¿Cuál es el nombre completo del miembro del personal que alquiló una película a un cliente con el nombre April y el apellido Burns?\n", "question_toks": ["What", "is", "the", "full", "name", "of", "the", "staff", "member", "who", "has", "rented", "a", "film", "to", "a", "customer", "with", "the", "first", "name", "April", "and", "the", "last", "name", "Burns", "?"], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 13], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 75, false], null], [0, 73, false], null], "and", [false, 2, [0, [0, 71, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 76, false], null]], [0, [0, [0, 77, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"APRIL\"", null], "and", [false, 2, [0, [0, 26, false], null], "\"BURNS\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'", "query_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", "FROM", "staff", "AS", "T1", "JOIN", "rental", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "JOIN", "customer", "AS", "T3", "ON", "T2.customer_id", "=", "T3.customer_id", "WHERE", "T3.first_name", "=", "'APRIL", "'", "AND", "T3.last_name", "=", "'BURNS", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "staff", "as", "t1", "join", "rental", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "join", "customer", "as", "t3", "on", "t2", ".", "customer_id", "=", "t3", ".", "customer_id", "where", "t3", ".", "first_name", "=", "value", "and", "t3", ".", "last_name", "=", "value"], "question": "Devuelva el nombre completo del personal que le proporcionó un alquiler de película a un cliente con el nombre April y el apellido Burns.\n", "question_toks": ["Return", "the", "full", "name", "of", "the", "staff", "who", "provided", "a", "customer", "with", "the", "first", "name", "April", "and", "the", "last", "name", "Burns", "with", "a", "film", "rental", "."], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 13], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 75, false], null], [0, 73, false], null], "and", [false, 2, [0, [0, 71, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 76, false], null]], [0, [0, [0, 77, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"APRIL\"", null], "and", [false, 2, [0, [0, 26, false], null], "\"BURNS\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'", "query_toks": ["SELECT", "T2.address", "FROM", "staff", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T1.first_name", "=", "'Elsa", "'"], "query_toks_no_value": ["select", "t2", ".", "address", "from", "staff", "as", "t1", "join", "address", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "first_name", "=", "value"], "question": "¿Dónde vive el miembro del personal con el nombre de Elsa?\n", "question_toks": ["Where", "does", "the", "staff", "member", "with", "the", "first", "name", "Elsa", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 78, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 76, false], null], "\"Elsa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'", "query_toks": ["SELECT", "T2.address", "FROM", "staff", "AS", "T1", "JOIN", "address", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T1.first_name", "=", "'Elsa", "'"], "query_toks_no_value": ["select", "t2", ".", "address", "from", "staff", "as", "t1", "join", "address", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "first_name", "=", "value"], "question": "Indique la dirección del miembro del personal que se llama Elsa.\n", "question_toks": ["Give", "the", "address", "of", "the", "staff", "member", "who", "has", "the", "first", "name", "Elsa", "."], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 78, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 76, false], null], "\"Elsa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )", "query_toks": ["SELECT", "first_name", "FROM", "customer", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "rental", "WHERE", "rental_date", ">", "'2005-08-23", "02:06:01", "'", ")"], "query_toks_no_value": ["select", "first_name", "from", "customer", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "rental", "where", "rental_date", ">", "value", ")"], "question": "¿Cuáles son los nombres de los clientes que no han alquilado ninguna película después de '2005-08-23 02:06:01'?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "customers", "who", "have", "not", "rented", "any", "films", "after", "'2005-08-23", "02:06:01", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 71, false], null]]]], "where": [[false, 3, [0, [0, 69, false], null], "\"2005-08-23 02:06:01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sakila_1", "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )", "query_toks": ["SELECT", "first_name", "FROM", "customer", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "rental", "WHERE", "rental_date", ">", "'2005-08-23", "02:06:01", "'", ")"], "query_toks_no_value": ["select", "first_name", "from", "customer", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "rental", "where", "rental_date", ">", "value", ")"], "question": "Devuelva los nombres de los clientes que no alquilaron una película después de la fecha '2005-08-23 02:06:01'.\n", "question_toks": ["Return", "the", "first", "names", "of", "customers", "who", "did", "not", "rented", "a", "film", "after", "the", "date", "'2005-08-23", "02:06:01", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 71, false], null]]]], "where": [[false, 3, [0, [0, 69, false], null], "\"2005-08-23 02:06:01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'", "query_toks": ["SELECT", "city", ",", "state", "FROM", "bank", "WHERE", "bname", "=", "'morningside", "'"], "query_toks_no_value": ["select", "city", ",", "state", "from", "bank", "where", "bname", "=", "value"], "question": "Encuentre la ciudad y el estado de la sucursal bancaria llamada Morningside.\n", "question_toks": ["Find", "the", "city", "and", "state", "of", "the", "bank", "branch", "named", "morningside", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"morningside\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'", "query_toks": ["SELECT", "city", ",", "state", "FROM", "bank", "WHERE", "bname", "=", "'morningside", "'"], "query_toks_no_value": ["select", "city", ",", "state", "from", "bank", "where", "bname", "=", "value"], "question": "¿En qué ciudad y estado está el banco con el nombre de Morningside?\n", "question_toks": ["What", "city", "and", "state", "is", "the", "bank", "with", "the", "name", "morningside", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"morningside\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT bname FROM bank WHERE state  =  'New York'", "query_toks": ["SELECT", "bname", "FROM", "bank", "WHERE", "state", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "bname", "from", "bank", "where", "state", "=", "value"], "question": "Encuentre los nombres de las sucursales de los bancos en el estado de Nueva York.\n", "question_toks": ["Find", "the", "branch", "names", "of", "banks", "in", "the", "New", "York", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"New York\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT bname FROM bank WHERE state  =  'New York'", "query_toks": ["SELECT", "bname", "FROM", "bank", "WHERE", "state", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "bname", "from", "bank", "where", "state", "=", "value"], "question": "¿Cuáles son los nombres de los bancos en el estado de Nueva York?\n", "question_toks": ["What", "are", "the", "names", "of", "banks", "in", "the", "state", "of", "New", "York", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"New York\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "query_toks": ["SELECT", "state", ",", "acc_type", ",", "credit_score", "FROM", "customer", "WHERE", "no_of_loans", "=", "0"], "query_toks_no_value": ["select", "state", ",", "acc_type", ",", "credit_score", "from", "customer", "where", "no_of_loans", "=", "value"], "question": "Encuentre el estado, el tipo de cuenta y el puntaje crediticio del cliente cuyo número de préstamo es 0.\n", "question_toks": ["Find", "the", "state", ",", "account", "type", ",", "and", "credit", "score", "of", "the", "customer", "whose", "number", "of", "loan", "is", "0", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0", "query_toks": ["SELECT", "state", ",", "acc_type", ",", "credit_score", "FROM", "customer", "WHERE", "no_of_loans", "=", "0"], "query_toks_no_value": ["select", "state", ",", "acc_type", ",", "credit_score", "from", "customer", "where", "no_of_loans", "=", "value"], "question": "¿Cuáles son los estados, tipos de cuentas y puntajes crediticios para los clientes que no tienen préstamos?\n", "question_toks": ["What", "are", "the", "states", ",", "account", "types", ",", "and", "credit", "scores", "for", "customers", "who", "have", "0", "loans", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "query_toks": ["SELECT", "cust_name", ",", "acc_bal", "FROM", "customer", "WHERE", "cust_name", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "cust_name", ",", "acc_bal", "from", "customer", "where", "cust_name", "like", "value"], "question": "Encuentre el nombre y el saldo de la cuenta del cliente cuyo nombre incluye la letra 'a'.\n", "question_toks": ["Find", "the", "name", "and", "account", "balance", "of", "the", "customer", "whose", "name", "includes", "the", "letter", "‘a’", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 7, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'", "query_toks": ["SELECT", "cust_name", ",", "acc_bal", "FROM", "customer", "WHERE", "cust_name", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "cust_name", ",", "acc_bal", "from", "customer", "where", "cust_name", "like", "value"], "question": "¿Cuáles son los nombres y saldos de cuentas de los clientes con la letra a en sus nombres?\n", "question_toks": ["What", "are", "the", "names", "and", "account", "balances", "of", "customers", "with", "the", "letter", "a", "in", "their", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 7, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)", "query_toks": ["SELECT", "cust_name", "FROM", "customer", "WHERE", "credit_score", "<", "(", "SELECT", "avg", "(", "credit_score", ")", "FROM", "customer", ")"], "query_toks_no_value": ["select", "cust_name", "from", "customer", "where", "credit_score", "<", "(", "select", "avg", "(", "credit_score", ")", "from", "customer", ")"], "question": "Encuentre el nombre de los clientes cuyo puntaje crediticio está por debajo del puntaje crediticio promedio de todos los clientes.\n", "question_toks": ["Find", "the", "name", "of", "customers", "whose", "credit", "score", "is", "below", "the", "average", "credit", "scores", "of", "all", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)", "query_toks": ["SELECT", "cust_name", "FROM", "customer", "WHERE", "credit_score", "<", "(", "SELECT", "avg", "(", "credit_score", ")", "FROM", "customer", ")"], "query_toks_no_value": ["select", "cust_name", "from", "customer", "where", "credit_score", "<", "(", "select", "avg", "(", "credit_score", ")", "from", "customer", ")"], "question": "¿Cuáles son los nombres de los clientes con un puntaje crediticio menor que el puntaje crediticio promedio de todos los clientes?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "with", "credit", "score", "less", "than", "the", "average", "credit", "score", "across", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id", "query_toks": ["SELECT", "DISTINCT", "T1.bname", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "bname", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id"], "question": "Busque el nombre de las sucursales bancarias que otorgaron algunos préstamos.\n", "question_toks": ["Find", "the", "name", "of", "bank", "branches", "that", "provided", "some", "loans", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id", "query_toks": ["SELECT", "DISTINCT", "T1.bname", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "bname", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id"], "question": "¿Cuáles son los nombres de los diferentes bancos que han otorgado préstamos?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "different", "banks", "that", "have", "provided", "loans", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "query_toks": ["SELECT", "DISTINCT", "T1.cust_name", ",", "T1.credit_score", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "cust_name", ",", "t1", ".", "credit_score", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id"], "question": "Encuentre el nombre y el puntaje crediticio de los clientes que tienen algunos préstamos.\n", "question_toks": ["Find", "the", "name", "and", "credit", "score", "of", "the", "customers", "who", "have", "some", "loans", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id", "query_toks": ["SELECT", "DISTINCT", "T1.cust_name", ",", "T1.credit_score", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "cust_name", ",", "t1", ".", "credit_score", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id"], "question": "¿Cuáles son los diferentes nombres y puntajes crediticios de los clientes que han solicitado un préstamo?\n", "question_toks": ["What", "are", "the", "different", "names", "and", "credit", "scores", "of", "customers", "who", "have", "taken", "a", "loan", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000", "query_toks": ["SELECT", "T1.cust_name", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id", "WHERE", "amount", ">", "3000"], "query_toks_no_value": ["select", "t1", ".", "cust_name", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id", "where", "amount", ">", "value"], "question": "Encuentre el nombre de los clientes que tienen un préstamo con un monto superior a 3000.\n", "question_toks": ["Find", "the", "the", "name", "of", "the", "customers", "who", "have", "a", "loan", "with", "amount", "more", "than", "3000", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000", "query_toks": ["SELECT", "T1.cust_name", "FROM", "customer", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.cust_id", "=", "T2.cust_id", "WHERE", "amount", ">", "3000"], "query_toks_no_value": ["select", "t1", ".", "cust_name", "from", "customer", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "cust_id", "=", "t2", ".", "cust_id", "where", "amount", ">", "value"], "question": "¿Cuáles son los nombres de los clientes que tienen un préstamo de más de 3000?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "have", "a", "loan", "of", "more", "than", "3000", "in", "amount", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'", "query_toks": ["SELECT", "T1.bname", ",", "T1.city", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T2.loan_type", "=", "'Business", "'"], "query_toks_no_value": ["select", "t1", ".", "bname", ",", "t1", ".", "city", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t2", ".", "loan_type", "=", "value"], "question": "Encuentre la ciudad y el nombre de las sucursales bancarias que brindan préstamos comerciales.\n", "question_toks": ["Find", "the", "city", "and", "name", "of", "bank", "branches", "that", "provide", "business", "loans", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Business\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'", "query_toks": ["SELECT", "T1.bname", ",", "T1.city", "FROM", "bank", "AS", "T1", "JOIN", "loan", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "WHERE", "T2.loan_type", "=", "'Business", "'"], "query_toks_no_value": ["select", "t1", ".", "bname", ",", "t1", ".", "city", "from", "bank", "as", "t1", "join", "loan", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "where", "t2", ".", "loan_type", "=", "value"], "question": "¿Cuáles son los nombres y ciudades de las sucursales bancarias que ofrecen préstamos para empresas?\n", "question_toks": ["What", "are", "the", "names", "and", "cities", "of", "bank", "branches", "that", "offer", "loans", "for", "business", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Business\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100", "query_toks": ["SELECT", "T2.bname", "FROM", "loan", "AS", "T1", "JOIN", "bank", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "JOIN", "customer", "AS", "T3", "ON", "T1.cust_id", "=", "T3.cust_id", "WHERE", "T3.credit_score", "<", "100"], "query_toks_no_value": ["select", "t2", ".", "bname", "from", "loan", "as", "t1", "join", "bank", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "join", "customer", "as", "t3", "on", "t1", ".", "cust_id", "=", "t3", ".", "cust_id", "where", "t3", ".", "credit_score", "<", "value"], "question": "Encuentre los nombres de las sucursales bancarias que han otorgado un préstamo a cualquier cliente cuyo puntaje crediticio sea inferior a 100.\n", "question_toks": ["Find", "the", "names", "of", "bank", "branches", "that", "have", "provided", "a", "loan", "to", "any", "customer", "whose", "credit", "score", "is", "below", "100", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "loan_1", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100", "query_toks": ["SELECT", "T2.bname", "FROM", "loan", "AS", "T1", "JOIN", "bank", "AS", "T2", "ON", "T1.branch_id", "=", "T2.branch_id", "JOIN", "customer", "AS", "T3", "ON", "T1.cust_id", "=", "T3.cust_id", "WHERE", "T3.credit_score", "<", "100"], "query_toks_no_value": ["select", "t2", ".", "bname", "from", "loan", "as", "t1", "join", "bank", "as", "t2", "on", "t1", ".", "branch_id", "=", "t2", ".", "branch_id", "join", "customer", "as", "t3", "on", "t1", ".", "cust_id", "=", "t3", ".", "cust_id", "where", "t3", ".", "credit_score", "<", "value"], "question": "¿Cuáles son los nombres de los bancos que han prestado dinero a clientes con puntajes de crédito inferiores a 100?\n", "question_toks": ["What", "are", "the", "names", "of", "banks", "that", "have", "loaned", "money", "to", "customers", "with", "credit", "scores", "below", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT date_of_notes FROM Assessment_Notes", "query_toks": ["SELECT", "date_of_notes", "FROM", "Assessment_Notes"], "query_toks_no_value": ["select", "date_of_notes", "from", "assessment_notes"], "question": "¿Cuáles son las fechas de las notas de evaluación?\n", "question_toks": ["What", "are", "the", "dates", "of", "the", "assessment", "notes", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT DISTINCT detention_type_code FROM Detention", "query_toks": ["SELECT", "DISTINCT", "detention_type_code", "FROM", "Detention"], "query_toks_no_value": ["select", "distinct", "detention_type_code", "from", "detention"], "question": "Devuelve todos los códigos de tipo de detención distintos.\n", "question_toks": ["Return", "all", "distinct", "detention", "type", "codes", "."], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [true, [[0, [0, [0, 50, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\"", "query_toks": ["SELECT", "date_incident_start", ",", "date_incident_end", "FROM", "Behavior_Incident", "WHERE", "incident_type_code", "=", "``", "NOISE", "''"], "query_toks_no_value": ["select", "date_incident_start", ",", "date_incident_end", "from", "behavior_incident", "where", "incident_type_code", "=", "value"], "question": "¿Cuáles son las fechas de inicio y finalización de los incidentes con el código de tipo de incidente \"RUIDO\"?\n", "question_toks": ["What", "are", "the", "start", "and", "end", "dates", "for", "incidents", "with", "incident", "type", "code", "``", "NOISE", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], "\"NOISE\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT detention_summary FROM Detention", "query_toks": ["SELECT", "detention_summary", "FROM", "Detention"], "query_toks_no_value": ["select", "detention_summary", "from", "detention"], "question": "Devuelva todos los resúmenes de detención.\n", "question_toks": ["Return", "all", "detention", "summaries", "."], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT cell_mobile_number ,  email_address FROM STUDENTS", "query_toks": ["SELECT", "cell_mobile_number", ",", "email_address", "FROM", "STUDENTS"], "query_toks_no_value": ["select", "cell_mobile_number", ",", "email_address", "from", "students"], "question": "Devuelva el número de teléfono celular y la dirección de correo electrónico de todos los estudiantes.\n", "question_toks": ["Return", "the", "cell", "phone", "number", "and", "email", "address", "for", "all", "students", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\"", "query_toks": ["SELECT", "email_address", "FROM", "Students", "WHERE", "first_name", "=", "``", "Emma", "''", "AND", "last_name", "=", "``", "Rohan", "''"], "query_toks_no_value": ["select", "email_address", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el correo electrónico del estudiante con nombre \"Emma\" y apellido \"Rohan\"?\n", "question_toks": ["What", "is", "the", "email", "of", "the", "student", "with", "first", "name", "``", "Emma", "''", "and", "last", "name", "``", "Rohan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Emma\"", null], "and", [false, 2, [0, [0, 20, false], null], "\"Rohan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\"", "query_toks": ["SELECT", "gender", "FROM", "TEACHERS", "WHERE", "last_name", "=", "``", "Medhurst", "''"], "query_toks_no_value": ["select", "gender", "from", "teachers", "where", "last_name", "=", "value"], "question": "¿Cuál es el sexo del profesor de apellido \"Medhurst\"?\n", "question_toks": ["What", "is", "the", "gender", "of", "the", "teacher", "with", "last", "name", "``", "Medhurst", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 30, false], null], "\"Medhurst\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\"", "query_toks": ["SELECT", "incident_type_description", "FROM", "Ref_Incident_Type", "WHERE", "incident_type_code", "=", "``", "VIOLENCE", "''"], "query_toks_no_value": ["select", "incident_type_description", "from", "ref_incident_type", "where", "incident_type_code", "=", "value"], "question": "¿Cuál es la descripción del tipo de incidente para el tipo de incidente con el código \"VIOLENCIA\"?\n", "question_toks": ["What", "is", "the", "incident", "type", "description", "for", "the", "incident", "type", "with", "code", "``", "VIOLENCE", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"VIOLENCE\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'", "query_toks": ["SELECT", "first_name", "FROM", "Teachers", "WHERE", "email_address", "LIKE", "'", "%", "man", "%", "'"], "query_toks_no_value": ["select", "first_name", "from", "teachers", "where", "email_address", "like", "value"], "question": "Encuentre los nombres de los profesores cuya dirección de correo electrónico contiene la palabra \"hombre\".\n", "question_toks": ["Find", "the", "first", "names", "of", "teachers", "whose", "email", "address", "contains", "the", "word", "``", "man", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 9, [0, [0, 33, false], null], "\"%man%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"", "query_toks": ["SELECT", "T1.date_of_notes", "FROM", "Assessment_Notes", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.first_name", "=", "``", "Fanny", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_notes", "from", "assessment_notes", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "first_name", "=", "value"], "question": "Encuentre las fechas de las notas de evaluación para los estudiantes con el nombre \"Fanny\".\n", "question_toks": ["Find", "the", "dates", "of", "assessment", "notes", "for", "students", "with", "first", "name", "``", "Fanny", "''", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Fanny\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\"", "query_toks": ["SELECT", "T1.text_of_notes", "FROM", "Assessment_Notes", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.last_name", "=", "``", "Schuster", "''"], "query_toks_no_value": ["select", "t1", ".", "text_of_notes", "from", "assessment_notes", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "last_name", "=", "value"], "question": "Encuentra los textos de las notas de evaluación de los profesores con apellido \"Schuster\".\n", "question_toks": ["Find", "the", "texts", "of", "assessment", "notes", "for", "teachers", "with", "last", "name", "``", "Schuster", "''", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 39, false], null]]]], "where": [[false, 2, [0, [0, 30, false], null], "\"Schuster\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"", "query_toks": ["SELECT", "T1.date_incident_start", ",", "date_incident_end", "FROM", "Behavior_Incident", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.last_name", "=", "``", "Fahey", "''"], "query_toks_no_value": ["select", "t1", ".", "date_incident_start", ",", "date_incident_end", "from", "behavior_incident", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "last_name", "=", "value"], "question": "Encuentre las fechas de inicio y finalización de los incidentes de conducta de los estudiantes con el apellido \"Fahey\".\n", "question_toks": ["Find", "the", "start", "and", "end", "dates", "of", "behavior", "incidents", "of", "students", "with", "last", "name", "``", "Fahey", "''", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 43, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Fahey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\"", "query_toks": ["SELECT", "T1.datetime_detention_start", ",", "datetime_detention_end", "FROM", "Detention", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.teacher_id", "=", "T2.teacher_id", "WHERE", "T2.last_name", "=", "``", "Schultz", "''"], "query_toks_no_value": ["select", "t1", ".", "datetime_detention_start", ",", "datetime_detention_end", "from", "detention", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "teacher_id", "=", "t2", ".", "teacher_id", "where", "t2", ".", "last_name", "=", "value"], "question": "Encuentre las fechas de inicio y finalización de las detenciones de profesores con apellido \"Schultz\".\n", "question_toks": ["Find", "the", "start", "and", "end", "dates", "of", "detentions", "of", "teachers", "with", "last", "name", "``", "Schultz", "''", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 51, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 52, false], null]], [0, [0, [0, 53, false], null]]]], "where": [[false, 2, [0, [0, 30, false], null], "\"Schultz\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"", "query_toks": ["SELECT", "T2.monthly_rental", "FROM", "Addresses", "AS", "T1", "JOIN", "Student_Addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T1.state_province_county", "=", "``", "Texas", "''"], "query_toks_no_value": ["select", "t2", ".", "monthly_rental", "from", "addresses", "as", "t1", "join", "student_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "state_province_county", "=", "value"], "question": "¿Cuáles son los alquileres mensuales de direcciones de estudiantes en el estado de Texas?\n", "question_toks": ["What", "are", "the", "monthly", "rentals", "of", "student", "addresses", "in", "Texas", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 57, false], null]]}, "select": [false, [[0, [0, [0, 60, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\"", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Addresses", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T1.state_province_county", "=", "``", "Wisconsin", "''"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "state_province_county", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de los estudiantes con dirección en el estado de Wisconsin?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "students", "with", "address", "in", "Wisconsin", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Wisconsin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\"", "query_toks": ["SELECT", "T1.zip_postcode", "FROM", "Addresses", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T2.first_name", "=", "``", "Lyla", "''"], "query_toks_no_value": ["select", "t1", ".", "zip_postcode", "from", "addresses", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "first_name", "=", "value"], "question": "¿Cuál es el código postal de la dirección donde vive la maestra de nombre \"Lyla\"?\n", "question_toks": ["What", "is", "the", "zip", "code", "of", "the", "address", "where", "the", "teacher", "with", "first", "name", "``", "Lyla", "''", "lives", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], "\"Lyla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "behavior_monitoring", "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\"", "query_toks": ["SELECT", "T2.email_address", "FROM", "Addresses", "AS", "T1", "JOIN", "Teachers", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T1.zip_postcode", "=", "``", "918", "''"], "query_toks_no_value": ["select", "t2", ".", "email_address", "from", "addresses", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "zip_postcode", "=", "value"], "question": "¿Cuáles son las direcciones de correo electrónico de los maestros cuya dirección tiene el código postal \"918\"?\n", "question_toks": ["What", "are", "the", "email", "addresses", "of", "teachers", "whose", "address", "has", "zip", "code", "``", "918", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"918\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.other_details", ",", "T3.skill_description", "FROM", "Maintenance_Engineers", "AS", "T1", "JOIN", "Engineer_Skills", "AS", "T2", "ON", "T1.engineer_id", "=", "T2.engineer_id", "JOIN", "Skills", "AS", "T3", "ON", "T2.skill_id", "=", "T3.skill_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "other_details", ",", "t3", ".", "skill_description", "from", "maintenance_engineers", "as", "t1", "join", "engineer_skills", "as", "t2", "on", "t1", ".", "engineer_id", "=", "t2", ".", "engineer_id", "join", "skills", "as", "t3", "on", "t2", ".", "skill_id", "=", "t3", ".", "skill_id"], "question": "Enumere el nombre, el apellido, los detalles y la descripción de la habilidad correspondiente de cada ingeniero.\n", "question_toks": ["List", "all", "every", "engineer", "'s", "first", "name", ",", "last", "name", ",", "details", "and", "coresponding", "skill", "description", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 8], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 39, false], null], "and", [false, 2, [0, [0, 40, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id", "query_toks": ["SELECT", "T1.fault_short_name", ",", "T3.skill_description", "FROM", "Part_Faults", "AS", "T1", "JOIN", "Skills_Required_To_Fix", "AS", "T2", "ON", "T1.part_fault_id", "=", "T2.part_fault_id", "JOIN", "Skills", "AS", "T3", "ON", "T2.skill_id", "=", "T3.skill_id"], "query_toks_no_value": ["select", "t1", ".", "fault_short_name", ",", "t3", ".", "skill_description", "from", "part_faults", "as", "t1", "join", "skills_required_to_fix", "as", "t2", "on", "t1", ".", "part_fault_id", "=", "t2", ".", "part_fault_id", "join", "skills", "as", "t3", "on", "t2", ".", "skill_id", "=", "t3", ".", "skill_id"], "question": "Para todas las fallas de diferentes partes, ¿cuáles son todas las descripciones de las habilidades necesarias para solucionarlas? Enumere el nombre de las fallas y la descripción de la habilidad.\n", "question_toks": ["For", "all", "the", "faults", "of", "different", "parts", ",", "what", "are", "all", "the", "decriptions", "of", "the", "skills", "required", "to", "fix", "them", "?", "List", "the", "name", "of", "the", "faults", "and", "the", "skill", "description", "."], "sql": {"from": {"table_units": [["table_unit", 11], ["table_unit", 13], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 55, false], null], [0, 63, false], null], "and", [false, 2, [0, [0, 64, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 57, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id", "query_toks": ["SELECT", "T1.fault_description", ",", "T2.fault_status", "FROM", "Fault_Log", "AS", "T1", "JOIN", "Fault_Log_Parts", "AS", "T2", "ON", "T1.fault_log_entry_id", "=", "T2.fault_log_entry_id"], "query_toks_no_value": ["select", "t1", ".", "fault_description", ",", "t2", ".", "fault_status", "from", "fault_log", "as", "t1", "join", "fault_log_parts", "as", "t2", "on", "t1", ".", "fault_log_entry_id", "=", "t2", ".", "fault_log_entry_id"], "question": "¿Cuáles son todas las descripciones de fallas y el estado de todas las fallas registradas en los registros?\n", "question_toks": ["What", "are", "all", "the", "fault", "descriptions", "and", "the", "fault", "status", "of", "all", "the", "faults", "recoreded", "in", "the", "logs", "?"], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 41, false], null], [0, 60, false], null]]}, "select": [false, [[0, [0, [0, 45, false], null]], [0, [0, [0, 62, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT DISTINCT last_name FROM Maintenance_Engineers", "query_toks": ["SELECT", "DISTINCT", "last_name", "FROM", "Maintenance_Engineers"], "query_toks_no_value": ["select", "distinct", "last_name", "from", "maintenance_engineers"], "question": "¿Cuáles son los apellidos distintos de todos los ingenieros?\n", "question_toks": ["What", "are", "all", "the", "distinct", "last", "names", "of", "all", "the", "engineers", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT DISTINCT fault_status FROM Fault_Log_Parts", "query_toks": ["SELECT", "DISTINCT", "fault_status", "FROM", "Fault_Log_Parts"], "query_toks_no_value": ["select", "distinct", "fault_status", "from", "fault_log_parts"], "question": "¿Cuántos códigos de estado de falla se registran en la tabla de piezas del registro de fallas?\n", "question_toks": ["How", "many", "fault", "status", "codes", "are", "recorded", "in", "the", "fault", "log", "parts", "table", "?"], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [true, [[0, [0, [0, 62, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Maintenance_Engineers", "WHERE", "engineer_id", "NOT", "IN", "(", "SELECT", "engineer_id", "FROM", "Engineer_Visits", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "maintenance_engineers", "where", "engineer_id", "not", "in", "(", "select", "engineer_id", "from", "engineer_visits", ")"], "question": "¿Qué ingenieros nunca han visitado para mantener los activos? Indique el nombre y apellido del ingeniero.\n", "question_toks": ["Which", "engineers", "have", "never", "visited", "to", "maintain", "the", "assets", "?", "List", "the", "engineer", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[true, 8, [0, [0, 34, false], null], {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets", "query_toks": ["SELECT", "asset_id", ",", "asset_details", ",", "asset_make", ",", "asset_model", "FROM", "Assets"], "query_toks_no_value": ["select", "asset_id", ",", "asset_details", ",", "asset_make", ",", "asset_model", "from", "assets"], "question": "Enumere la identificación del activo, los detalles, la marca y el modelo de cada activo.\n", "question_toks": ["List", "the", "asset", "id", ",", "details", ",", "make", "and", "model", "for", "every", "asset", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id", "query_toks": ["SELECT", "T1.staff_name", ",", "T3.first_name", ",", "T3.last_name", "FROM", "Staff", "AS", "T1", "JOIN", "Engineer_Visits", "AS", "T2", "ON", "T1.staff_id", "=", "T2.contact_staff_id", "JOIN", "Maintenance_Engineers", "AS", "T3", "ON", "T2.engineer_id", "=", "T3.engineer_id"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t3", ".", "first_name", ",", "t3", ".", "last_name", "from", "staff", "as", "t1", "join", "engineer_visits", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "contact_staff_id", "join", "maintenance_engineers", "as", "t3", "on", "t2", ".", "engineer_id", "=", "t3", ".", "engineer_id"], "question": "¿Qué personal se ha puesto en contacto con qué ingenieros? Indique el nombre del personal y el nombre y apellido del ingeniero.\n", "question_toks": ["Which", "staff", "have", "contacted", "which", "engineers", "?", "List", "the", "staff", "name", "and", "the", "engineer", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 10], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 48, false], null], "and", [false, 2, [0, [0, 49, false], null], [0, 34, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT DISTINCT asset_model FROM Assets", "query_toks": ["SELECT", "DISTINCT", "asset_model", "FROM", "Assets"], "query_toks_no_value": ["select", "distinct", "asset_model", "from", "assets"], "question": "¿Cuáles son todos los distintos modelos de activos?\n", "question_toks": ["What", "are", "all", "the", "distinct", "asset", "models", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "assets_maintenance", "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)", "query_toks": ["SELECT", "asset_model", "FROM", "Assets", "WHERE", "asset_id", "NOT", "IN", "(", "SELECT", "asset_id", "FROM", "Fault_Log", ")"], "query_toks_no_value": ["select", "asset_model", "from", "assets", "where", "asset_id", "not", "in", "(", "select", "asset_id", "from", "fault_log", ")"], "question": "¿Qué activos no incurrieron en ningún registro de fallas? Enumere el modelo de activo.\n", "question_toks": ["Which", "assets", "did", "not", "incur", "any", "fault", "log", "?", "List", "the", "asset", "model", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[true, 8, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "station_weather", "query": "SELECT local_authority ,  services FROM station", "query_toks": ["SELECT", "local_authority", ",", "services", "FROM", "station"], "query_toks_no_value": ["select", "local_authority", ",", "services", "from", "station"], "question": "enumerar las autoridades locales y los servicios proporcionados por todas las estaciones.\n", "question_toks": ["list", "the", "local", "authorities", "and", "services", "provided", "by", "all", "stations", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "station_weather", "query": "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'", "query_toks": ["SELECT", "train_number", ",", "TIME", "FROM", "train", "WHERE", "origin", "=", "'Chennai", "'", "AND", "destination", "=", "'Guruvayur", "'"], "query_toks_no_value": ["select", "train_number", ",", "time", "from", "train", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "Encuentra el número y horario del tren que va de Chennai a Guruvayur.\n", "question_toks": ["Find", "the", "number", "and", "time", "of", "the", "train", "that", "goes", "from", "Chennai", "to", "Guruvayur", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Chennai\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Guruvayur\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "station_weather", "query": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"", "query_toks": ["SELECT", "t3.name", ",", "t3.time", "FROM", "station", "AS", "t1", "JOIN", "route", "AS", "t2", "ON", "t1.id", "=", "t2.station_id", "JOIN", "train", "AS", "t3", "ON", "t2.train_id", "=", "t3.id", "WHERE", "t1.local_authority", "=", "``", "Chiltern", "''"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t3", ".", "time", "from", "station", "as", "t1", "join", "route", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t2", ".", "train_id", "=", "t3", ".", "id", "where", "t1", ".", "local_authority", "=", "value"], "question": "Encuentre nombres y horarios de trenes que pasan por las estaciones de la autoridad local de Chiltern.\n", "question_toks": ["Find", "names", "and", "times", "of", "trains", "that", "run", "through", "stations", "for", "the", "local", "authority", "Chiltern", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Chiltern\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"", "query_toks": ["SELECT", "T3.EMP_FNAME", ",", "T3.EMP_LNAME", "FROM", "professor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "JOIN", "employee", "AS", "T3", "ON", "T1.EMP_NUM", "=", "T3.EMP_NUM", "WHERE", "DEPT_NAME", "=", "``", "Biology", "''"], "query_toks_no_value": ["select", "t3", ".", "emp_fname", ",", "t3", ".", "emp_lname", "from", "professor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "join", "employee", "as", "t3", "on", "t1", ".", "emp_num", "=", "t3", ".", "emp_num", "where", "dept_name", "=", "value"], "question": "¿Cuál es el nombre y apellido del profesor del departamento de biología?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "professor", "in", "biology", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"", "query_toks": ["SELECT", "T3.EMP_FNAME", ",", "T3.EMP_LNAME", "FROM", "professor", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "JOIN", "employee", "AS", "T3", "ON", "T1.EMP_NUM", "=", "T3.EMP_NUM", "WHERE", "DEPT_NAME", "=", "``", "Biology", "''"], "query_toks_no_value": ["select", "t3", ".", "emp_fname", ",", "t3", ".", "emp_lname", "from", "professor", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "join", "employee", "as", "t3", "on", "t1", ".", "emp_num", "=", "t3", ".", "emp_num", "where", "dept_name", "=", "value"], "question": "¿Cuáles son el nombre y apellido de todos los profesores de biología?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "all", "biology", "professors", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Biology\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"", "query_toks": ["SELECT", "DISTINCT", "T1.EMP_FNAME", ",", "T1.EMP_DOB", "FROM", "employee", "AS", "T1", "JOIN", "CLASS", "AS", "T2", "ON", "T1.EMP_NUM", "=", "T2.PROF_NUM", "WHERE", "CRS_CODE", "=", "``", "ACCT-211", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "emp_fname", ",", "t1", ".", "emp_dob", "from", "employee", "as", "t1", "join", "class", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "prof_num", "where", "crs_code", "=", "value"], "question": "¿Cuáles son los nombres y la fecha de nacimiento de los profesores que imparten el curso ACCT-211?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "date", "of", "birth", "of", "professors", "teaching", "course", "ACCT-211", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"", "query_toks": ["SELECT", "DISTINCT", "T1.EMP_FNAME", ",", "T1.EMP_DOB", "FROM", "employee", "AS", "T1", "JOIN", "CLASS", "AS", "T2", "ON", "T1.EMP_NUM", "=", "T2.PROF_NUM", "WHERE", "CRS_CODE", "=", "``", "ACCT-211", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "emp_fname", ",", "t1", ".", "emp_dob", "from", "employee", "as", "t1", "join", "class", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "prof_num", "where", "crs_code", "=", "value"], "question": "¿Cuáles son los nombres y fechas de nacimiento de los profesores a cargo de ACCT-211?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "birthdates", "of", "the", "professors", "in", "charge", "of", "ACCT-211", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"", "query_toks": ["SELECT", "school_code", "FROM", "department", "WHERE", "dept_name", "=", "``", "Accounting", "''"], "query_toks_no_value": ["select", "school_code", "from", "department", "where", "dept_name", "=", "value"], "question": "¿Cuál es el código de la escuela a la que pertenece el departamento de contabilidad?\n", "question_toks": ["What", "is", "the", "code", "of", "the", "school", "where", "the", "accounting", "department", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Accounting\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"", "query_toks": ["SELECT", "school_code", "FROM", "department", "WHERE", "dept_name", "=", "``", "Accounting", "''"], "query_toks_no_value": ["select", "school_code", "from", "department", "where", "dept_name", "=", "value"], "question": "¿Cuál es el código escolar del departamento de contabilidad?\n", "question_toks": ["What", "is", "the", "school", "code", "of", "the", "accounting", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Accounting\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'CIS-220", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "¿Cuántos créditos tiene el curso CIS-220 y cuál es su descripción?\n", "question_toks": ["How", "many", "credits", "does", "course", "CIS-220", "have", ",", "and", "what", "its", "description", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"CIS-220\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'CIS-220", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "¿Cuál es la descripción del CIS-220 y cuántos créditos tiene?\n", "question_toks": ["What", "is", "the", "description", "for", "the", "CIS-220", "and", "how", "many", "credits", "does", "it", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"CIS-220\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'", "query_toks": ["SELECT", "dept_address", "FROM", "department", "WHERE", "dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "dept_address", "from", "department", "where", "dept_name", "=", "value"], "question": "¿Cuál es la dirección del departamento de historia?\n", "question_toks": ["what", "is", "the", "address", "of", "history", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'", "query_toks": ["SELECT", "dept_address", "FROM", "department", "WHERE", "dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "dept_address", "from", "department", "where", "dept_name", "=", "value"], "question": "¿Dónde está el departamento de historia?\n", "question_toks": ["Where", "is", "the", "history", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'QM-261", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "¿Encontrar la descripción y crédito del curso QM-261?\n", "question_toks": ["Find", "the", "description", "and", "credit", "for", "the", "course", "QM-261", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"QM-261\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'", "query_toks": ["SELECT", "crs_credit", ",", "crs_description", "FROM", "course", "WHERE", "crs_code", "=", "'QM-261", "'"], "query_toks_no_value": ["select", "crs_credit", ",", "crs_description", "from", "course", "where", "crs_code", "=", "value"], "question": "¿Cuál es la descripción del curso y la cantidad de créditos para QM-261?\n", "question_toks": ["What", "is", "the", "course", "description", "and", "number", "of", "credits", "for", "QM-261", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"QM-261\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'", "query_toks": ["SELECT", "T3.stu_fname", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T2.stu_num", "=", "T3.stu_num", "WHERE", "T1.crs_code", "=", "'ACCT-211", "'"], "query_toks_no_value": ["select", "t3", ".", "stu_fname", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t2", ".", "stu_num", "=", "t3", ".", "stu_num", "where", "t1", ".", "crs_code", "=", "value"], "question": "¿Cuál es el nombre de cada estudiante matriculado en la clase ACCT-211?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "each", "student", "enrolled", "in", "class", "ACCT-211", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'", "query_toks": ["SELECT", "T3.stu_fname", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T2.stu_num", "=", "T3.stu_num", "WHERE", "T1.crs_code", "=", "'ACCT-211", "'"], "query_toks_no_value": ["select", "t3", ".", "stu_fname", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t2", ".", "stu_num", "=", "t3", ".", "stu_num", "where", "t1", ".", "crs_code", "=", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes del curso ACCT-211?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "in", "course", "ACCT-211", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'", "query_toks": ["SELECT", "T3.stu_fname", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T2.stu_num", "=", "T3.stu_num", "WHERE", "T1.crs_code", "=", "'ACCT-211", "'", "AND", "T2.enroll_grade", "=", "'C", "'"], "query_toks_no_value": ["select", "t3", ".", "stu_fname", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t2", ".", "stu_num", "=", "t3", ".", "stu_num", "where", "t1", ".", "crs_code", "=", "value", "and", "t2", ".", "enroll_grade", "=", "value"], "question": "¿Cuál es el nombre de los estudiantes matriculados en la clase ACCT-211 y obtuvieron la calificación C?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "students", "enrolled", "in", "class", "ACCT-211", "and", "got", "grade", "C", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null], "and", [false, 2, [0, [0, 26, false], null], "\"C\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'", "query_toks": ["SELECT", "T3.stu_fname", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T2.stu_num", "=", "T3.stu_num", "WHERE", "T1.crs_code", "=", "'ACCT-211", "'", "AND", "T2.enroll_grade", "=", "'C", "'"], "query_toks_no_value": ["select", "t3", ".", "stu_fname", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t2", ".", "stu_num", "=", "t3", ".", "stu_num", "where", "t1", ".", "crs_code", "=", "value", "and", "t2", ".", "enroll_grade", "=", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes que tomaron ACCT-211 y recibieron una C?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "who", "took", "ACCT-211", "and", "received", "a", "C", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null], "and", [false, 2, [0, [0, 26, false], null], "\"C\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'", "query_toks": ["SELECT", "class_code", "FROM", "CLASS", "WHERE", "class_room", "=", "'KLR209", "'"], "query_toks_no_value": ["select", "class_code", "from", "class", "where", "class_room", "=", "value"], "question": "Lista los códigos de todos los cursos que se realizan en la sala KLR209.\n", "question_toks": ["List", "the", "codes", "of", "all", "courses", "that", "take", "place", "in", "room", "KLR209", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"KLR209\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'", "query_toks": ["SELECT", "class_code", "FROM", "CLASS", "WHERE", "class_room", "=", "'KLR209", "'"], "query_toks_no_value": ["select", "class_code", "from", "class", "where", "class_room", "=", "value"], "question": "¿Cuáles son los códigos de todos los cursos que se encuentran en la sala KLR209?\n", "question_toks": ["What", "are", "the", "codes", "of", "all", "the", "courses", "that", "are", "located", "in", "room", "KLR209", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"KLR209\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'", "query_toks": ["SELECT", "DISTINCT", "stu_fname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "enroll_grade", "=", "'C", "'"], "query_toks_no_value": ["select", "distinct", "stu_fname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "enroll_grade", "=", "value"], "question": "¿Cuál es el nombre de los estudiantes que obtuvieron la calificación C en cualquier clase?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "students", "who", "got", "grade", "C", "in", "any", "class", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [true, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"C\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'", "query_toks": ["SELECT", "DISTINCT", "stu_fname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "enroll_grade", "=", "'C", "'"], "query_toks_no_value": ["select", "distinct", "stu_fname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "enroll_grade", "=", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes que obtuvieron una calificación C en una clase?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "who", "got", "a", "grade", "C", "in", "a", "class", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [true, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"C\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value"], "question": "¿Cuál es el apellido y cargo del profesor del departamento de historia?\n", "question_toks": ["What", "is", "the", "last", "name", "and", "office", "of", "the", "professor", "from", "the", "history", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value"], "question": "¿Cuáles son el apellido y el cargo de todos los profesores de historia?\n", "question_toks": ["What", "are", "the", "last", "name", "and", "office", "of", "all", "history", "professors", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'", "query_toks": ["SELECT", "T3.dept_name", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T1.emp_lname", "=", "'Heffington", "'"], "query_toks_no_value": ["select", "t3", ".", "dept_name", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t1", ".", "emp_lname", "=", "value"], "question": "¿Cuál es el nombre del departamento y la oficina del profesor cuyo apellido es Heffington?\n", "question_toks": ["What", "is", "department", "name", "and", "office", "for", "the", "professor", "whose", "last", "name", "is", "Heffington", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Heffington\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'", "query_toks": ["SELECT", "T3.dept_name", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T2.dept_code", "=", "T3.dept_code", "WHERE", "T1.emp_lname", "=", "'Heffington", "'"], "query_toks_no_value": ["select", "t3", ".", "dept_name", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t2", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t1", ".", "emp_lname", "=", "value"], "question": "¿Cuál es el nombre del departamento y la oficina del profesor con el apellido Heffington?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "department", "and", "office", "location", "for", "the", "professor", "with", "the", "last", "name", "of", "Heffington", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Heffington\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T1.emp_hiredate", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "WHERE", "T2.prof_office", "=", "'DRE", "102", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t1", ".", "emp_hiredate", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "where", "t2", ".", "prof_office", "=", "value"], "question": "Encuentre el apellido y fecha de contratación del profesor que se encuentra en el despacho DRE 102.\n", "question_toks": ["Find", "the", "last", "name", "and", "hire", "date", "of", "the", "professor", "who", "is", "in", "office", "DRE", "102", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"DRE 102\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'", "query_toks": ["SELECT", "T1.emp_lname", ",", "T1.emp_hiredate", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "WHERE", "T2.prof_office", "=", "'DRE", "102", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_lname", ",", "t1", ".", "emp_hiredate", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "where", "t2", ".", "prof_office", "=", "value"], "question": "¿Cuál es el apellido del profesor cuya oficina está ubicada en DRE 102 y cuándo fue contratado?\n", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "professor", "whose", "office", "is", "located", "in", "DRE", "102", ",", "and", "when", "were", "they", "hired", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"DRE 102\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'", "query_toks": ["SELECT", "T1.crs_code", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T3.stu_num", "=", "T2.stu_num", "WHERE", "T3.stu_lname", "=", "'Smithson", "'"], "query_toks_no_value": ["select", "t1", ".", "crs_code", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t3", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t3", ".", "stu_lname", "=", "value"], "question": "¿Cuál es el código del curso que tomó el estudiante de apellido Smithson?\n", "question_toks": ["What", "is", "the", "code", "of", "the", "course", "which", "the", "student", "whose", "last", "name", "is", "Smithson", "took", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"Smithson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'", "query_toks": ["SELECT", "T1.crs_code", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T3.stu_num", "=", "T2.stu_num", "WHERE", "T3.stu_lname", "=", "'Smithson", "'"], "query_toks_no_value": ["select", "t1", ".", "crs_code", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t3", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t3", ".", "stu_lname", "=", "value"], "question": "¿Cuáles son los códigos de curso para cada clase que tomó el estudiante de apellido Smithson?\n", "question_toks": ["What", "are", "the", "course", "codes", "for", "every", "class", "that", "the", "student", "with", "the", "last", "name", "Smithson", "took", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"Smithson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "query_toks": ["SELECT", "T4.crs_description", ",", "T4.crs_credit", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T3.stu_num", "=", "T2.stu_num", "JOIN", "course", "AS", "T4", "ON", "T4.crs_code", "=", "T1.crs_code", "WHERE", "T3.stu_lname", "=", "'Smithson", "'"], "query_toks_no_value": ["select", "t4", ".", "crs_description", ",", "t4", ".", "crs_credit", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t3", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "course", "as", "t4", "on", "t4", ".", "crs_code", "=", "t1", ".", "crs_code", "where", "t3", ".", "stu_lname", "=", "value"], "question": "¿Cuáles son la descripción y créditos del curso que tomó el estudiante cuyo apellido es Smithson?\n", "question_toks": ["What", "are", "the", "description", "and", "credit", "of", "the", "course", "which", "the", "student", "whose", "last", "name", "is", "Smithson", "took", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"Smithson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'", "query_toks": ["SELECT", "T4.crs_description", ",", "T4.crs_credit", "FROM", "CLASS", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.class_code", "=", "T2.class_code", "JOIN", "student", "AS", "T3", "ON", "T3.stu_num", "=", "T2.stu_num", "JOIN", "course", "AS", "T4", "ON", "T4.crs_code", "=", "T1.crs_code", "WHERE", "T3.stu_lname", "=", "'Smithson", "'"], "query_toks_no_value": ["select", "t4", ".", "crs_description", ",", "t4", ".", "crs_credit", "from", "class", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "class_code", "=", "t2", ".", "class_code", "join", "student", "as", "t3", "on", "t3", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "course", "as", "t4", "on", "t4", ".", "crs_code", "=", "t1", ".", "crs_code", "where", "t3", ".", "stu_lname", "=", "value"], "question": "¿Cuántos créditos tiene el curso que tomó el estudiante de apellido Smithson y cuál es su descripción?\n", "question_toks": ["How", "many", "credits", "is", "the", "course", "that", "the", "student", "with", "the", "last", "name", "Smithson", "took", ",", "and", "what", "is", "its", "description", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"Smithson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "query_toks": ["SELECT", "stu_fname", ",", "stu_gpa", "FROM", "student", "WHERE", "stu_gpa", "<", "(", "SELECT", "avg", "(", "stu_gpa", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "stu_fname", ",", "stu_gpa", "from", "student", "where", "stu_gpa", "<", "(", "select", "avg", "(", "stu_gpa", ")", "from", "student", ")"], "question": "Encuentre el nombre y el promedio de los estudiantes cuyo promedio es inferior al promedio de todos los estudiantes.\n", "question_toks": ["Find", "the", "first", "name", "and", "gpa", "of", "the", "students", "whose", "gpa", "is", "lower", "than", "the", "average", "gpa", "of", "all", "students", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 39, false], null]]]], "where": [[false, 4, [0, [0, 39, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[5, [0, [0, 39, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)", "query_toks": ["SELECT", "stu_fname", ",", "stu_gpa", "FROM", "student", "WHERE", "stu_gpa", "<", "(", "SELECT", "avg", "(", "stu_gpa", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "stu_fname", ",", "stu_gpa", "from", "student", "where", "stu_gpa", "<", "(", "select", "avg", "(", "stu_gpa", ")", "from", "student", ")"], "question": "¿Cuál es el nombre y el GPA de cada estudiante que tiene un GPA inferior al promedio?\n", "question_toks": ["What", "is", "the", "first", "name", "and", "GPA", "of", "every", "student", "that", "has", "a", "GPA", "lower", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 39, false], null]]]], "where": [[false, 4, [0, [0, 39, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[5, [0, [0, 39, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "query_toks": ["SELECT", "T1.emp_fname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T3.dept_code", "=", "T2.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T2.prof_high_degree", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_fname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t3", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t2", ".", "prof_high_degree", "=", "value"], "question": "Busque el nombre y la oficina del profesor que está en el departamento de historia y tiene un doctorado. grado.\n", "question_toks": ["Find", "the", "first", "name", "and", "office", "of", "the", "professor", "who", "is", "in", "the", "history", "department", "and", "has", "a", "Ph.D.", "degree", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'", "query_toks": ["SELECT", "T1.emp_fname", ",", "T2.prof_office", "FROM", "employee", "AS", "T1", "JOIN", "professor", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T3.dept_code", "=", "T2.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T2.prof_high_degree", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t1", ".", "emp_fname", ",", "t2", ".", "prof_office", "from", "employee", "as", "t1", "join", "professor", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t3", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t2", ".", "prof_high_degree", "=", "value"], "question": "¿Cuáles son los nombres y el cargo de los profesores que están en el departamento de historia y tienen un doctorado?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "office", "of", "the", "professors", "who", "are", "in", "the", "history", "department", "and", "have", "a", "Ph.D", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 2, [0, [0, 31, false], null], "\"Ph.D.\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.crs_code", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "crs_code", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num"], "question": "Encuentre los nombres de todos los instructores que han impartido algún curso y el código del curso.\n", "question_toks": ["Find", "the", "first", "names", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course", "code", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.crs_code", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "crs_code", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num"], "question": "¿Cuáles son los nombres de todos los profesores que han impartido un curso y los códigos de curso correspondientes?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "teachers", "who", "have", "taught", "a", "course", "and", "the", "corresponding", "course", "codes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code"], "question": "Encuentre los nombres de todos los instructores que han impartido algún curso y la descripción del curso.\n", "question_toks": ["Find", "the", "first", "names", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code"], "question": "¿Cuáles son los nombres de todos los profesores que han impartido un curso y las descripciones correspondientes?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "teachers", "who", "have", "taught", "a", "course", "and", "the", "corresponding", "descriptions", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num"], "question": "Encuentre los nombres y oficinas de todos los instructores que han impartido algún curso y también encuentre la descripción del curso.\n", "question_toks": ["Find", "the", "first", "names", "and", "offices", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "also", "find", "the", "course", "description", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num"], "question": "¿Cuáles son los nombres y la ubicación de las oficinas de todos los profesores que han impartido algún curso?\n", "question_toks": ["What", "are", "the", "first", "names", ",", "office", "locations", "of", "all", "lecturers", "who", "have", "taught", "some", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", ",", "T5.dept_name", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num", "JOIN", "department", "AS", "T5", "ON", "T4.dept_code", "=", "T5.dept_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", ",", "t5", ".", "dept_name", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num", "join", "department", "as", "t5", "on", "t4", ".", "dept_code", "=", "t5", ".", "dept_code"], "question": "Encuentre los nombres y oficinas de todos los instructores que han impartido algún curso y la descripción del curso y el nombre del departamento.\n", "question_toks": ["Find", "the", "first", "names", "and", "offices", "of", "all", "instructors", "who", "have", "taught", "some", "course", "and", "the", "course", "description", "and", "the", "department", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code", "query_toks": ["SELECT", "T2.emp_fname", ",", "T4.prof_office", ",", "T3.crs_description", ",", "T5.dept_name", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "course", "AS", "T3", "ON", "T1.crs_code", "=", "T3.crs_code", "JOIN", "professor", "AS", "T4", "ON", "T2.emp_num", "=", "T4.emp_num", "JOIN", "department", "AS", "T5", "ON", "T4.dept_code", "=", "T5.dept_code"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t4", ".", "prof_office", ",", "t3", ".", "crs_description", ",", "t5", ".", "dept_name", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "course", "as", "t3", "on", "t1", ".", "crs_code", "=", "t3", ".", "crs_code", "join", "professor", "as", "t4", "on", "t2", ".", "emp_num", "=", "t4", ".", "emp_num", "join", "department", "as", "t5", "on", "t4", ".", "dept_code", "=", "t5", ".", "dept_code"], "question": "¿Cuáles son los nombres, ubicaciones de las oficinas y departamentos de todos los instructores, y también cuáles son las descripciones de los cursos que imparten?\n", "question_toks": ["What", "are", "the", "first", "names", ",", "office", "locations", ",", "and", "departments", "of", "all", "instructors", ",", "and", "also", "what", "are", "the", "descriptions", "of", "the", "courses", "they", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]], [0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", ",", "T4.crs_description", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "JOIN", "course", "AS", "T4", "ON", "T3.crs_code", "=", "T4.crs_code"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", ",", "t4", ".", "crs_description", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "join", "course", "as", "t4", "on", "t3", ".", "crs_code", "=", "t4", ".", "crs_code"], "question": "Encuentre los nombres de todos los estudiantes que tomaron algún curso y la descripción del curso.\n", "question_toks": ["Find", "names", "of", "all", "students", "who", "took", "some", "course", "and", "the", "course", "description", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", ",", "T4.crs_description", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "JOIN", "course", "AS", "T4", "ON", "T3.crs_code", "=", "T4.crs_code"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", ",", "t4", ".", "crs_description", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "join", "course", "as", "t4", "on", "t3", ".", "crs_code", "=", "t4", ".", "crs_code"], "question": "¿Cuáles son los nombres de todos los estudiantes que tomaron una clase y las descripciones de los cursos correspondientes?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "students", "who", "took", "a", "class", "and", "the", "corresponding", "course", "descriptions", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "T2.enroll_grade", "=", "'C", "'", "OR", "T2.enroll_grade", "=", "'A", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t2", ".", "enroll_grade", "=", "value", "or", "t2", ".", "enroll_grade", "=", "value"], "question": "Encuentre los nombres de todos los estudiantes que tomaron algún curso y obtuvieron A o C.\n", "question_toks": ["Find", "names", "of", "all", "students", "who", "took", "some", "course", "and", "got", "A", "or", "C", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"C\"", null], "or", [false, 2, [0, [0, 26, false], null], "\"A\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'", "query_toks": ["SELECT", "T1.stu_fname", ",", "T1.stu_lname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "T2.enroll_grade", "=", "'C", "'", "OR", "T2.enroll_grade", "=", "'A", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", ",", "t1", ".", "stu_lname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t2", ".", "enroll_grade", "=", "value", "or", "t2", ".", "enroll_grade", "=", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes que tomaron un curso y recibieron una A o C?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "students", "taking", "a", "course", "who", "received", "an", "A", "or", "C", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"C\"", null], "or", [false, 2, [0, [0, 26, false], null], "\"A\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.class_room", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Accounting", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "class_room", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "Encuentre los nombres de todos los profesores del departamento de Contabilidad que imparten algún curso y el aula.\n", "question_toks": ["Find", "the", "first", "names", "of", "all", "professors", "in", "the", "Accounting", "department", "who", "is", "teaching", "some", "course", "and", "the", "class", "room", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Accounting\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.class_room", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Accounting", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "class_room", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "¿Cuáles son los nombres de todos los profesores de Contabilidad que imparten clases y cuáles son las aulas de los cursos que imparten?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "Accounting", "professors", "who", "teach", "and", "what", "are", "the", "classrooms", "of", "the", "courses", "they", "teach", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Accounting\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "query_toks": ["SELECT", "DISTINCT", "T2.emp_fname", ",", "T3.prof_high_degree", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Computer", "Info", ".", "Systems", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "emp_fname", ",", "t3", ".", "prof_high_degree", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "Encuentre los nombres y el título de todos los profesores que imparten alguna clase de Información informática. Departamento de sistemas.\n", "question_toks": ["Find", "the", "first", "names", "and", "degree", "of", "all", "professors", "who", "are", "teaching", "some", "class", "in", "Computer", "Info", ".", "Systems", "department", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 28, false], null]]}, "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Computer Info. Systems\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'", "query_toks": ["SELECT", "DISTINCT", "T2.emp_fname", ",", "T3.prof_high_degree", "FROM", "CLASS", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.prof_num", "=", "T2.emp_num", "JOIN", "professor", "AS", "T3", "ON", "T2.emp_num", "=", "T3.emp_num", "JOIN", "department", "AS", "T4", "ON", "T4.dept_code", "=", "T3.dept_code", "WHERE", "T4.dept_name", "=", "'Computer", "Info", ".", "Systems", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "emp_fname", ",", "t3", ".", "prof_high_degree", "from", "class", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "prof_num", "=", "t2", ".", "emp_num", "join", "professor", "as", "t3", "on", "t2", ".", "emp_num", "=", "t3", ".", "emp_num", "join", "department", "as", "t4", "on", "t4", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t4", ".", "dept_name", "=", "value"], "question": "¿Cuáles son los diferentes nombres y el título más alto obtenido por los profesores que enseñan en el departamento de Sistemas de Información Informática?\n", "question_toks": ["What", "are", "the", "different", "first", "names", "and", "highest", "degree", "attained", "for", "professors", "teaching", "in", "the", "Computer", "Information", "Systems", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 28, false], null]]}, "select": [true, [[0, [0, [0, 19, false], null]], [0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Computer Info. Systems\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018", "query_toks": ["SELECT", "T1.stu_lname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "T2.enroll_grade", "=", "'A", "'", "AND", "T2.class_code", "=", "10018"], "query_toks_no_value": ["select", "t1", ".", "stu_lname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t2", ".", "enroll_grade", "=", "value", "and", "t2", ".", "class_code", "=", "value"], "question": "¿Cuál es el apellido del estudiante que obtuvo una calificación A en la clase con el código 10018?\n", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "student", "who", "got", "a", "grade", "A", "in", "the", "class", "with", "code", "10018", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"A\"", null], "and", [false, 2, [0, [0, 24, false], null], 10018.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018", "query_toks": ["SELECT", "T1.stu_lname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "WHERE", "T2.enroll_grade", "=", "'A", "'", "AND", "T2.class_code", "=", "10018"], "query_toks_no_value": ["select", "t1", ".", "stu_lname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "where", "t2", ".", "enroll_grade", "=", "value", "and", "t2", ".", "class_code", "=", "value"], "question": "¿Cuál es el apellido del estudiante que recibió una A en la clase con el código 10018?\n", "question_toks": ["What", "is", "the", "last", "name", "of", "the", "student", "who", "received", "an", "A", "in", "the", "class", "with", "the", "code", "10018", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"A\"", null], "and", [false, 2, [0, [0, 24, false], null], 10018.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.prof_office", "FROM", "professor", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T1.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T1.prof_high_degree", "!", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "prof_office", "from", "professor", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t1", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t1", ".", "prof_high_degree", "!", "=", "value"], "question": "Encuentre el nombre y el cargo del profesor de historia que no obtuvo un doctorado. grado.\n", "question_toks": ["Find", "the", "first", "name", "and", "office", "of", "history", "professor", "who", "did", "not", "get", "a", "Ph.D.", "degree", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 7, [0, [0, 31, false], null], "\"Ph.D.\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'", "query_toks": ["SELECT", "T2.emp_fname", ",", "T1.prof_office", "FROM", "professor", "AS", "T1", "JOIN", "employee", "AS", "T2", "ON", "T1.emp_num", "=", "T2.emp_num", "JOIN", "department", "AS", "T3", "ON", "T1.dept_code", "=", "T3.dept_code", "WHERE", "T3.dept_name", "=", "'History", "'", "AND", "T1.prof_high_degree", "!", "=", "'Ph.D", ".", "'"], "query_toks_no_value": ["select", "t2", ".", "emp_fname", ",", "t1", ".", "prof_office", "from", "professor", "as", "t1", "join", "employee", "as", "t2", "on", "t1", ".", "emp_num", "=", "t2", ".", "emp_num", "join", "department", "as", "t3", "on", "t1", ".", "dept_code", "=", "t3", ".", "dept_code", "where", "t3", ".", "dept_name", "=", "value", "and", "t1", ".", "prof_high_degree", "!", "=", "value"], "question": "¿Cuáles son los nombres y cargos de los profesores de historia que no tienen doctorados?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "offices", "of", "history", "professors", "who", "do", "n't", "have", "Ph.D.s", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 28, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"History\"", null], "and", [false, 7, [0, [0, 31, false], null], "\"Ph.D.\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'", "query_toks": ["SELECT", "T2.dept_name", "FROM", "course", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "WHERE", "T1.crs_description", "LIKE", "'", "%", "Statistics", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "dept_name", "from", "course", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t1", ".", "crs_description", "like", "value"], "question": "Busque el nombre del departamento que ofrece la clase cuya descripción tiene la palabra \"Estadísticas\".\n", "question_toks": ["Find", "the", "name", "of", "department", "that", "offers", "the", "class", "whose", "description", "has", "the", "word", "``", "Statistics", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%Statistics%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'", "query_toks": ["SELECT", "T2.dept_name", "FROM", "course", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "WHERE", "T1.crs_description", "LIKE", "'", "%", "Statistics", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "dept_name", "from", "course", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "where", "t1", ".", "crs_description", "like", "value"], "question": "¿Cómo se llama el departamento que ofrece un curso que tiene una descripción que incluye la palabra \"Estadística\"?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "department", "that", "offers", "a", "course", "that", "has", "a", "description", "including", "the", "word", "``", "Statistics", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%Statistics%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'", "query_toks": ["SELECT", "T1.stu_fname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "WHERE", "T3.crs_code", "=", "'ACCT-211", "'", "AND", "T1.stu_lname", "LIKE", "'S", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "where", "t3", ".", "crs_code", "=", "value", "and", "t1", ".", "stu_lname", "like", "value"], "question": "¿Cuál es el nombre del estudiante cuyo apellido comienza con la letra S y está tomando la clase ACCT-211?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "last", "name", "starting", "with", "the", "letter", "S", "and", "is", "taking", "ACCT-211", "class", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null], "and", [false, 9, [0, [0, 33, false], null], "\"S%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_1", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'", "query_toks": ["SELECT", "T1.stu_fname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "WHERE", "T3.crs_code", "=", "'ACCT-211", "'", "AND", "T1.stu_lname", "LIKE", "'S", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "where", "t3", ".", "crs_code", "=", "value", "and", "t1", ".", "stu_lname", "like", "value"], "question": "¿Cuál es el nombre del estudiante cuyo apellido comienza con la letra S y está tomando ACCT-211?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "last", "name", "starts", "with", "the", "letter", "S", "and", "is", "taking", "ACCT-211", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null], "and", [false, 9, [0, [0, 33, false], null], "\"S%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT Competition_type ,  Country FROM competition", "query_toks": ["SELECT", "Competition_type", ",", "Country", "FROM", "competition"], "query_toks_no_value": ["select", "competition_type", ",", "country", "from", "competition"], "question": "¿Cuáles son los tipos y países de las competiciones?\n", "question_toks": ["What", "are", "the", "types", "and", "countries", "of", "competitions", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT Competition_type ,  Country FROM competition", "query_toks": ["SELECT", "Competition_type", ",", "Country", "FROM", "competition"], "query_toks_no_value": ["select", "competition_type", ",", "country", "from", "competition"], "question": "¿Cuáles son los tipos de cada competición y en qué países se encuentran?\n", "question_toks": ["What", "are", "the", "types", "of", "every", "competition", "and", "in", "which", "countries", "are", "they", "located", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"", "query_toks": ["SELECT", "DISTINCT", "YEAR", "FROM", "competition", "WHERE", "Competition_type", "!", "=", "``", "Tournament", "''"], "query_toks_no_value": ["select", "distinct", "year", "from", "competition", "where", "competition_type", "!", "=", "value"], "question": "¿Cuáles son los distintos años en los que el tipo de competición no es \"Torneo\"?\n", "question_toks": ["What", "are", "the", "distinct", "years", "in", "which", "the", "competitions", "type", "is", "not", "``", "Tournament", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 20, false], null]]]], "where": [[false, 7, [0, [0, 21, false], null], "\"Tournament\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"", "query_toks": ["SELECT", "DISTINCT", "YEAR", "FROM", "competition", "WHERE", "Competition_type", "!", "=", "``", "Tournament", "''"], "query_toks_no_value": ["select", "distinct", "year", "from", "competition", "where", "competition_type", "!", "=", "value"], "question": "¿Cuáles son los diferentes años para todas las competiciones que no son del mismo tipo que un torneo?\n", "question_toks": ["What", "are", "the", "different", "years", "for", "all", "competitions", "that", "are", "not", "of", "type", "equal", "to", "tournament", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 20, false], null]]]], "where": [[false, 7, [0, [0, 21, false], null], "\"Tournament\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T1.name", ",", "T2.Player_id", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "player_id", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "Por favor muestre los nombres y los jugadores de los clubes.\n", "question_toks": ["Please", "show", "the", "names", "and", "the", "players", "of", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID", "query_toks": ["SELECT", "T1.name", ",", "T2.Player_id", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "player_id", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id"], "question": "¿Cuáles son los nombres y jugadores de todos los clubes?\n", "question_toks": ["What", "are", "the", "names", "and", "players", "of", "all", "the", "clubs", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"", "query_toks": ["SELECT", "T1.name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T2.Position", "=", "``", "Right", "Wing", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t2", ".", "position", "=", "value"], "question": "Muestra los nombres de los clubes que tienen jugadores con la posición \"Derecha\".\n", "question_toks": ["Show", "the", "names", "of", "clubs", "that", "have", "players", "with", "position", "``", "Right", "Wing", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Right Wing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"", "query_toks": ["SELECT", "T1.name", "FROM", "club", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.Club_ID", "=", "T2.Club_ID", "WHERE", "T2.Position", "=", "``", "Right", "Wing", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "club", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "club_id", "=", "t2", ".", "club_id", "where", "t2", ".", "position", "=", "value"], "question": "¿Cómo se llaman los clubes que tienen jugadores en la posición de “Derecha”?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "clubs", "that", "have", "players", "in", "the", "position", "of", "``", "Right", "Wing", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Right Wing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "query_toks": ["SELECT", "name", "FROM", "CLub", "WHERE", "Club_ID", "NOT", "IN", "(", "SELECT", "Club_ID", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "club", "where", "club_id", "not", "in", "(", "select", "club_id", "from", "player", ")"], "question": "Enumere los nombres de los clubes que no tienen jugadores.\n", "question_toks": ["List", "the", "names", "of", "clubs", "that", "do", "not", "have", "any", "players", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)", "query_toks": ["SELECT", "name", "FROM", "CLub", "WHERE", "Club_ID", "NOT", "IN", "(", "SELECT", "Club_ID", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "club", "where", "club_id", "not", "in", "(", "select", "club_id", "from", "player", ")"], "question": "¿Cómo se llaman todos los clubes que no tienen jugadores?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "clubs", "that", "do", "not", "have", "any", "players", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)", "query_toks": ["SELECT", "name", "FROM", "player", "WHERE", "points", ">", "(", "SELECT", "avg", "(", "points", ")", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "player", "where", "points", ">", "(", "select", "avg", "(", "points", ")", "from", "player", ")"], "question": "¿Cómo se llaman los jugadores que obtienen más puntos que el promedio?\n", "question_toks": ["what", "are", "the", "name", "of", "players", "who", "get", "more", "than", "the", "average", "points", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "sports_competition", "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)", "query_toks": ["SELECT", "name", "FROM", "player", "WHERE", "points", ">", "(", "SELECT", "avg", "(", "points", ")", "FROM", "player", ")"], "query_toks_no_value": ["select", "name", "from", "player", "where", "points", ">", "(", "select", "avg", "(", "points", ")", "from", "player", ")"], "question": "¿Cuáles son los nombres de todos los jugadores que obtuvieron más puntos que el promedio?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "players", "that", "got", "more", "than", "the", "average", "number", "of", "points", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufacturer", "query": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10", "query_toks": ["SELECT", "Num_of_Component", ",", "name", "FROM", "furniture", "WHERE", "Num_of_Component", ">", "10"], "query_toks_no_value": ["select", "num_of_component", ",", "name", "from", "furniture", "where", "num_of_component", ">", "value"], "question": "Encuentre las cantidades de componentes y los nombres de todos los muebles que tienen más de 10 componentes.\n", "question_toks": ["Find", "the", "component", "amounts", "and", "names", "of", "all", "furnitures", "that", "have", "more", "than", "10", "components", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufacturer", "query": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)", "query_toks": ["SELECT", "t1.name", "FROM", "furniture", "AS", "t1", "JOIN", "furniture_manufacte", "AS", "t2", "ON", "t1.Furniture_ID", "=", "t2.Furniture_ID", "WHERE", "t2.Price_in_Dollar", "<", "(", "SELECT", "max", "(", "Price_in_Dollar", ")", "FROM", "furniture_manufacte", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "furniture", "as", "t1", "join", "furniture_manufacte", "as", "t2", "on", "t1", ".", "furniture_id", "=", "t2", ".", "furniture_id", "where", "t2", ".", "price_in_dollar", "<", "(", "select", "max", "(", "price_in_dollar", ")", "from", "furniture_manufacte", ")"], "question": "Encuentra los nombres de los muebles cuyos precios son inferiores al precio más alto.\n", "question_toks": ["Find", "the", "names", "of", "furnitures", "whose", "prices", "are", "lower", "than", "the", "highest", "price", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufacturer", "query": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10", "query_toks": ["SELECT", "name", ",", "open_year", "FROM", "manufacturer", "WHERE", "num_of_shops", ">", "10", "OR", "Num_of_Factories", "<", "10"], "query_toks_no_value": ["select", "name", ",", "open_year", "from", "manufacturer", "where", "num_of_shops", ">", "value", "or", "num_of_factories", "<", "value"], "question": "Dame el nombre y año de apertura de los fabricantes que tienen menos de 10 fábricas o más de 10 tiendas.\n", "question_toks": ["Give", "me", "the", "name", "and", "year", "of", "opening", "of", "the", "manufacturers", "that", "have", "either", "less", "than", "10", "factories", "or", "more", "than", "10", "shops", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 10.0, null], "or", [false, 4, [0, [0, 4, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufacturer", "query": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID", "query_toks": ["SELECT", "t1.name", ",", "t2.price_in_dollar", "FROM", "furniture", "AS", "t1", "JOIN", "furniture_manufacte", "AS", "t2", "ON", "t1.Furniture_ID", "=", "t2.Furniture_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "price_in_dollar", "from", "furniture", "as", "t1", "join", "furniture_manufacte", "as", "t2", "on", "t1", ".", "furniture_id", "=", "t2", ".", "furniture_id"], "question": "Dame los nombres y precios de los muebles que fabrican algunas empresas.\n", "question_toks": ["Give", "me", "the", "names", "and", "prices", "of", "furnitures", "which", "some", "companies", "are", "manufacturing", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufacturer", "query": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)", "query_toks": ["SELECT", "Market_Rate", ",", "name", "FROM", "furniture", "WHERE", "Furniture_ID", "NOT", "IN", "(", "SELECT", "Furniture_ID", "FROM", "furniture_manufacte", ")"], "query_toks_no_value": ["select", "market_rate", ",", "name", "from", "furniture", "where", "furniture_id", "not", "in", "(", "select", "furniture_id", "from", "furniture_manufacte", ")"], "question": "Encuentre las cuotas de mercado y los nombres de los muebles que ninguna empresa produce en nuestros registros.\n", "question_toks": ["Find", "the", "market", "shares", "and", "names", "of", "furnitures", "which", "no", "any", "company", "is", "producing", "in", "our", "records", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "Muestre el nombre y el nombre del departamento de cada empleado.\n", "question_toks": ["Display", "the", "first", "name", "and", "department", "name", "for", "each", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "¿Cuáles son el nombre y el nombre del departamento de todos los empleados?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "department", "name", "of", "all", "employees", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", "<", "6000"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", "<", "value"], "question": "Indique el nombre completo (nombre y apellido) y el salario de aquellos empleados que ganan menos de 6000.\n", "question_toks": ["List", "the", "full", "name", "(", "first", "and", "last", "name", ")", ",", "and", "salary", "for", "those", "employees", "who", "earn", "below", "6000", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 6000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", "<", "6000"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", "<", "value"], "question": "¿Cuáles son los nombres completos y los salarios de los empleados que ganan menos de 6000?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "salaries", "for", "any", "employees", "earning", "less", "than", "6000", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 6000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'", "query_toks": ["SELECT", "first_name", ",", "department_id", "FROM", "employees", "WHERE", "last_name", "=", "'McEwen", "'"], "query_toks_no_value": ["select", "first_name", ",", "department_id", "from", "employees", "where", "last_name", "=", "value"], "question": "Muestre el nombre y el número de departamento de todos los empleados cuyo apellido sea \"McEwen\".\n", "question_toks": ["Display", "the", "first", "name", ",", "and", "department", "number", "for", "all", "employees", "whose", "last", "name", "is", "``", "McEwen", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"McEwen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'", "query_toks": ["SELECT", "first_name", ",", "department_id", "FROM", "employees", "WHERE", "last_name", "=", "'McEwen", "'"], "query_toks_no_value": ["select", "first_name", ",", "department_id", "from", "employees", "where", "last_name", "=", "value"], "question": "¿Cuáles son los nombres y números de departamento de los empleados con apellido McEwen?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "department", "numbers", "for", "employees", "with", "last", "name", "McEwen", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"McEwen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE department_id  =  \"null\"", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "department_id", "=", "``", "null", "''"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "department_id", "=", "value"], "question": "Devuelve toda la información de todos los empleados sin ningún número de departamento.\n", "question_toks": ["Return", "all", "the", "information", "for", "all", "employees", "without", "any", "department", "number", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE department_id  =  \"null\"", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "department_id", "=", "``", "null", "''"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "department_id", "=", "value"], "question": "¿Cuáles son todos los empleados sin un número de departamento?\n", "question_toks": ["What", "are", "all", "the", "employees", "without", "a", "department", "number", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "query_toks": ["SELECT", "*", "FROM", "departments", "WHERE", "department_name", "=", "'Marketing", "'"], "query_toks_no_value": ["select", "*", "from", "departments", "where", "department_name", "=", "value"], "question": "Muestra toda la información sobre el departamento Marketing.\n", "question_toks": ["Display", "all", "the", "information", "about", "the", "department", "Marketing", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Marketing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "query_toks": ["SELECT", "*", "FROM", "departments", "WHERE", "department_name", "=", "'Marketing", "'"], "query_toks_no_value": ["select", "*", "from", "departments", "where", "department_name", "=", "value"], "question": "¿Cuál es toda la información sobre el departamento de Marketing?\n", "question_toks": ["What", "is", "all", "the", "information", "about", "the", "Marketing", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Marketing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'", "query_toks": ["SELECT", "hire_date", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'"], "query_toks_no_value": ["select", "hire_date", "from", "employees", "where", "first_name", "not", "like", "value"], "question": "¿Cuándo es la fecha de contratación para aquellos empleados cuyo nombre no contiene la letra M?\n", "question_toks": ["when", "is", "the", "hire", "date", "for", "those", "employees", "whose", "first", "name", "does", "not", "containing", "the", "letter", "M", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'", "query_toks": ["SELECT", "hire_date", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'"], "query_toks_no_value": ["select", "hire_date", "from", "employees", "where", "first_name", "not", "like", "value"], "question": "¿En qué fechas fueron contratados los empleados sin la letra M en su nombre?\n", "question_toks": ["On", "what", "dates", "were", "employees", "without", "the", "letter", "M", "in", "their", "first", "names", "hired", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "from", "employees", "where", "first_name", "not", "like", "value"], "question": "muestra el nombre completo (nombre y apellido), fecha de contratación, salario y número de departamento de aquellos empleados cuyo nombre no contiene la letra M.\n", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", ")", ",", "hire", "date", ",", "salary", ",", "and", "department", "number", "for", "those", "employees", "whose", "first", "name", "does", "not", "containing", "the", "letter", "M", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "FROM", "employees", "WHERE", "first_name", "NOT", "LIKE", "'", "%", "M", "%", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", ",", "salary", ",", "department_id", "from", "employees", "where", "first_name", "not", "like", "value"], "question": "¿Cuáles son el nombre completo, la fecha de contratación, el salario y la identificación del departamento de los empleados sin la letra M en su nombre?\n", "question_toks": ["What", "are", "the", "full", "name", ",", "hire", "date", ",", "salary", ",", "and", "department", "id", "for", "employees", "without", "the", "letter", "M", "in", "their", "first", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[true, 9, [0, [0, 15, false], null], "\"%M%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000", "query_toks": ["SELECT", "phone_number", "FROM", "employees", "WHERE", "salary", "BETWEEN", "8000", "AND", "12000"], "query_toks_no_value": ["select", "phone_number", "from", "employees", "where", "salary", "between", "value", "and", "value"], "question": "¿Cuál es el número de teléfono de los empleados cuyo salario está en el rango de 8000 y 12000?\n", "question_toks": ["what", "is", "the", "phone", "number", "of", "employees", "whose", "salary", "is", "in", "the", "range", "of", "8000", "and", "12000", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 8000.0, 12000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000", "query_toks": ["SELECT", "phone_number", "FROM", "employees", "WHERE", "salary", "BETWEEN", "8000", "AND", "12000"], "query_toks_no_value": ["select", "phone_number", "from", "employees", "where", "salary", "between", "value", "and", "value"], "question": "Devuelva los números de teléfono de los empleados con salarios entre 8000 y 12000.\n", "question_toks": ["Return", "the", "phone", "numbers", "of", "employees", "with", "salaries", "between", "8000", "and", "12000", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 8000.0, 12000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "salary", "BETWEEN", "8000", "AND", "12000", "AND", "commission_pct", "!", "=", "``", "null", "''", "OR", "department_id", "!", "=", "40"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "salary", "between", "value", "and", "value", "and", "commission_pct", "!", "=", "value", "or", "department_id", "!", "=", "value"], "question": "muestra toda la información de los empleados cuyo salario está en el rango de 8000 y 12000 y la comisión no es nula o el número de departamento no es igual a 40.\n", "question_toks": ["display", "all", "the", "information", "of", "employees", "whose", "salary", "is", "in", "the", "range", "of", "8000", "and", "12000", "and", "commission", "is", "not", "null", "or", "department", "number", "does", "not", "equal", "to", "40", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 8000.0, 12000.0], "and", [false, 7, [0, [0, 22, false], null], "\"null\"", null], "or", [false, 7, [0, [0, 24, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "salary", "BETWEEN", "8000", "AND", "12000", "AND", "commission_pct", "!", "=", "``", "null", "''", "OR", "department_id", "!", "=", "40"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "salary", "between", "value", "and", "value", "and", "commission_pct", "!", "=", "value", "or", "department_id", "!", "=", "value"], "question": "Devuelve toda la información sobre empleados con salarios entre 8000 y 12000 para los cuales la comisión no es nula o donde su identificación de departamento no es 40.\n", "question_toks": ["Return", "all", "information", "about", "employees", "with", "salaries", "between", "8000", "and", "12000", "for", "which", "commission", "is", "not", "null", "or", "where", "their", "department", "id", "is", "not", "40", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 8000.0, 12000.0], "and", [false, 7, [0, [0, 22, false], null], "\"null\"", null], "or", [false, 7, [0, [0, 24, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "commission_pct", "=", "``", "null", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "commission_pct", "=", "value"], "question": "¿Cuáles son el nombre completo (nombre y apellido) y salario de todos los empleados que no tienen ningún valor por comisión?\n", "question_toks": ["What", "are", "the", "full", "name", "(", "first", "and", "last", "name", ")", "and", "salary", "for", "all", "employees", "who", "does", "not", "have", "any", "value", "for", "commission", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "commission_pct", "=", "``", "null", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "commission_pct", "=", "value"], "question": "Devuelve los nombres completos y salarios de los empleados con comisiones nulas.\n", "question_toks": ["Return", "the", "full", "names", "and", "salaries", "of", "employees", "with", "null", "commissions", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "m", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "first_name", "like", "value"], "question": "Muestra el nombre, apellido y salario de aquellos empleados cuyo nombre termina en la letra m.\n", "question_toks": ["Display", "the", "first", "and", "last", "name", ",", "and", "salary", "for", "those", "employees", "whose", "first", "name", "is", "ending", "with", "the", "letter", "m", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%m\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "m", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "first_name", "like", "value"], "question": "Devuelva los nombres completos y salarios de los empleados con nombres que terminan con la letra m.\n", "question_toks": ["Return", "the", "full", "names", "and", "salaries", "for", "employees", "with", "first", "names", "that", "end", "with", "the", "letter", "m", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%m\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "query_toks": ["SELECT", "job_id", ",", "hire_date", "FROM", "employees", "WHERE", "hire_date", "BETWEEN", "'2007-11-05", "'", "AND", "'2009-07-05", "'"], "query_toks_no_value": ["select", "job_id", ",", "hire_date", "from", "employees", "where", "hire_date", "between", "value", "and", "value"], "question": "Encuentre la identificación del trabajo y la fecha de contratación de aquellos empleados que fueron contratados entre el 5 de noviembre de 2007 y el 5 de julio de 2009.\n", "question_toks": ["Find", "job", "id", "and", "date", "of", "hire", "for", "those", "employees", "who", "was", "hired", "between", "November", "5th", ",", "2007", "and", "July", "5th", ",", "2009", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 1, [0, [0, 19, false], null], "\"2007-11-05\"", "\"2009-07-05\""]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'", "query_toks": ["SELECT", "job_id", ",", "hire_date", "FROM", "employees", "WHERE", "hire_date", "BETWEEN", "'2007-11-05", "'", "AND", "'2009-07-05", "'"], "query_toks_no_value": ["select", "job_id", ",", "hire_date", "from", "employees", "where", "hire_date", "between", "value", "and", "value"], "question": "¿Cuáles son los identificadores de trabajo y las fechas de contratación de los empleados contratados después del 5 de noviembre de 2007 y antes del 5 de julio de 2009?\n", "question_toks": ["What", "are", "the", "job", "ids", "and", "dates", "of", "hire", "for", "employees", "hired", "after", "November", "5th", ",", "2007", "and", "before", "July", "5th", ",", "2009", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 1, [0, [0, 19, false], null], "\"2007-11-05\"", "\"2009-07-05\""]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "=", "70", "OR", "department_id", "=", "90"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "=", "value", "or", "department_id", "=", "value"], "question": "¿Cuáles son el nombre y apellido de los empleados que trabajan en el departamento 70 o 90?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "for", "those", "employees", "who", "works", "either", "in", "department", "70", "or", "90", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], 70.0, null], "or", [false, 2, [0, [0, 24, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "=", "70", "OR", "department_id", "=", "90"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "=", "value", "or", "department_id", "=", "value"], "question": "¿Cuáles son los nombres completos de los empleados que están en el departamento 70 o 90?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "employees", "who", "with", "in", "department", "70", "or", "90", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], 70.0, null], "or", [false, 2, [0, [0, 24, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "query_toks": ["SELECT", "salary", ",", "manager_id", "FROM", "employees", "WHERE", "manager_id", "!", "=", "``", "null", "''"], "query_toks_no_value": ["select", "salary", ",", "manager_id", "from", "employees", "where", "manager_id", "!", "=", "value"], "question": "Encuentre el salario y el número de gerente de aquellos empleados que trabajan bajo la dirección de un gerente.\n", "question_toks": ["Find", "the", "salary", "and", "manager", "number", "for", "those", "employees", "who", "is", "working", "under", "a", "manager", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 23, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"", "query_toks": ["SELECT", "salary", ",", "manager_id", "FROM", "employees", "WHERE", "manager_id", "!", "=", "``", "null", "''"], "query_toks_no_value": ["select", "salary", ",", "manager_id", "from", "employees", "where", "manager_id", "!", "=", "value"], "question": "¿Cuáles son los salarios y los identificadores de gerente para los empleados que tienen gerentes?\n", "question_toks": ["What", "are", "the", "salaries", "and", "manager", "ids", "for", "employees", "who", "have", "managers", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 23, false], null], "\"null\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "hire_date", "<", "'2002-06-21", "'"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "hire_date", "<", "value"], "question": "muestra todos los detalles de la tabla Empleados para aquellos empleados que fueron contratados antes del 21 de junio de 2002.\n", "question_toks": ["display", "all", "the", "details", "from", "Employees", "table", "for", "those", "employees", "who", "was", "hired", "before", "2002-06-21", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 19, false], null], "\"2002-06-21\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "hire_date", "<", "'2002-06-21", "'"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "hire_date", "<", "value"], "question": "¿Cuál es toda la información sobre los empleados contratados antes del 21 de junio de 2002?\n", "question_toks": ["What", "is", "all", "the", "information", "about", "employees", "hired", "before", "June", "21", ",", "2002", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 19, false], null], "\"2002-06-21\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "hire_date", ">", "'1987-09-07", "'"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "hire_date", ">", "value"], "question": "mostrar aquellos empleados que se incorporaron después del 7 de septiembre de 1987.\n", "question_toks": ["display", "those", "employees", "who", "joined", "after", "7th", "September", ",", "1987", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], "\"1987-09-07\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "hire_date", ">", "'1987-09-07", "'"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "hire_date", ">", "value"], "question": "¿Qué empleados fueron contratados después del 7 de septiembre de 1987?\n", "question_toks": ["Which", "employees", "were", "hired", "after", "September", "7th", ",", "1987", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], "\"1987-09-07\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000", "query_toks": ["SELECT", "job_title", "FROM", "jobs", "WHERE", "min_salary", ">", "9000"], "query_toks_no_value": ["select", "job_title", "from", "jobs", "where", "min_salary", ">", "value"], "question": "muestra el título del trabajo de los trabajos cuyo salario mínimo es superior a 9000.\n", "question_toks": ["display", "the", "job", "title", "of", "jobs", "which", "minimum", "salary", "is", "greater", "than", "9000", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 9000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000", "query_toks": ["SELECT", "job_title", "FROM", "jobs", "WHERE", "min_salary", ">", "9000"], "query_toks_no_value": ["select", "job_title", "from", "jobs", "where", "min_salary", ">", "value"], "question": "¿Qué títulos de trabajo corresponden a trabajos con salarios superiores a 9000?\n", "question_toks": ["Which", "job", "titles", "correspond", "to", "jobs", "with", "salaries", "over", "9000", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 9000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "query_toks": ["SELECT", "job_title", ",", "max_salary", "-", "min_salary", "FROM", "jobs", "WHERE", "max_salary", "BETWEEN", "12000", "AND", "18000"], "query_toks_no_value": ["select", "job_title", ",", "max_salary", "-", "min_salary", "from", "jobs", "where", "max_salary", "between", "value", "and", "value"], "question": "muestra el título del trabajo, la diferencia entre los salarios mínimo y máximo para aquellos trabajos cuyo salario máximo está dentro del rango de 12000 a 18000.\n", "question_toks": ["display", "job", "Title", ",", "the", "difference", "between", "minimum", "and", "maximum", "salaries", "for", "those", "jobs", "which", "max", "salary", "within", "the", "range", "12000", "to", "18000", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [1, [0, 13, false], [0, 12, false]]]]], "where": [[false, 1, [0, [0, 13, false], null], 12000.0, 18000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000", "query_toks": ["SELECT", "job_title", ",", "max_salary", "-", "min_salary", "FROM", "jobs", "WHERE", "max_salary", "BETWEEN", "12000", "AND", "18000"], "query_toks_no_value": ["select", "job_title", ",", "max_salary", "-", "min_salary", "from", "jobs", "where", "max_salary", "between", "value", "and", "value"], "question": "¿Cuáles son los títulos de los puestos y el rango de salarios para trabajos con un salario máximo entre 12000 y 18000?\n", "question_toks": ["What", "are", "the", "job", "titles", ",", "and", "range", "of", "salaries", "for", "jobs", "with", "maximum", "salary", "between", "12000", "and", "18000", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [1, [0, 13, false], [0, 12, false]]]]], "where": [[false, 1, [0, [0, 13, false], null], 12000.0, 18000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50", "query_toks": ["SELECT", "email", "FROM", "employees", "WHERE", "commission_pct", "=", "``", "null", "''", "AND", "salary", "BETWEEN", "7000", "AND", "12000", "AND", "department_id", "=", "50"], "query_toks_no_value": ["select", "email", "from", "employees", "where", "commission_pct", "=", "value", "and", "salary", "between", "value", "and", "value", "and", "department_id", "=", "value"], "question": "muestra los correos electrónicos de los empleados que no tienen porcentaje de comisión y salario dentro del rango de 7000 a 12000 y trabajan en ese departamento cuyo número es 50.\n", "question_toks": ["display", "the", "emails", "of", "the", "employees", "who", "have", "no", "commission", "percentage", "and", "salary", "within", "the", "range", "7000", "to", "12000", "and", "works", "in", "that", "department", "which", "number", "is", "50", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"null\"", null], "and", [false, 1, [0, [0, 21, false], null], 7000.0, 12000.0], "and", [false, 2, [0, [0, 24, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50", "query_toks": ["SELECT", "email", "FROM", "employees", "WHERE", "commission_pct", "=", "``", "null", "''", "AND", "salary", "BETWEEN", "7000", "AND", "12000", "AND", "department_id", "=", "50"], "query_toks_no_value": ["select", "email", "from", "employees", "where", "commission_pct", "=", "value", "and", "salary", "between", "value", "and", "value", "and", "department_id", "=", "value"], "question": "¿Cuáles son los correos electrónicos de los empleados con comisión nula, salario entre 7000 y 12000 y que trabajan en el departamento 50?\n", "question_toks": ["What", "are", "the", "emails", "of", "employees", "with", "null", "commission", ",", "salary", "between", "7000", "and", "12000", ",", "and", "who", "work", "in", "department", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"null\"", null], "and", [false, 1, [0, [0, 21, false], null], 7000.0, 12000.0], "and", [false, 2, [0, [0, 24, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "Encuentre el empleado con identificación y nombre del país donde trabaja actualmente.\n", "question_toks": ["Find", "employee", "with", "ID", "and", "name", "of", "the", "country", "presently", "where", "(", "s", ")", "he", "is", "working", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "¿Cuáles son todas las identificaciones de los empleados y los nombres de los países en los que trabajan?\n", "question_toks": ["What", "are", "all", "the", "employee", "ids", "and", "the", "names", "of", "the", "countries", "in", "which", "they", "work", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000", "query_toks": ["SELECT", "*", "FROM", "job_history", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.employee_id", "=", "T2.employee_id", "WHERE", "T2.salary", ">", "=", "12000"], "query_toks_no_value": ["select", "*", "from", "job_history", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "where", "t2", ".", "salary", ">", "=", "value"], "question": "¿Puede devolver toda la información detallada de los trabajos realizados por cualquiera de los empleados que actualmente ganan un salario igual o superior a 12000?\n", "question_toks": ["Can", "you", "return", "all", "detailed", "info", "of", "jobs", "which", "was", "done", "by", "any", "of", "the", "employees", "who", "is", "presently", "earning", "a", "salary", "on", "and", "above", "12000", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 5, [0, [0, 21, false], null], 12000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000", "query_toks": ["SELECT", "*", "FROM", "job_history", "AS", "T1", "JOIN", "employees", "AS", "T2", "ON", "T1.employee_id", "=", "T2.employee_id", "WHERE", "T2.salary", ">", "=", "12000"], "query_toks_no_value": ["select", "*", "from", "job_history", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "employee_id", "=", "t2", ".", "employee_id", "where", "t2", ".", "salary", ">", "=", "value"], "question": "¿Cuál es toda la información del historial laboral realizada por los empleados que ganan un salario mayor o igual a 12000?\n", "question_toks": ["What", "is", "all", "the", "job", "history", "info", "done", "by", "employees", "earning", "a", "salary", "greater", "than", "or", "equal", "to", "12000", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 5, [0, [0, 21, false], null], 12000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "salary", "FROM", "employees", "WHERE", "employee_id", "=", "163", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "salary", ">", "(", "select", "salary", "from", "employees", "where", "employee_id", "=", "value", ")"], "question": "¿Cuál es el nombre completo (nombre y apellido) de los empleados que reciben más salario que el empleado cuya identificación es 163?\n", "question_toks": ["What", "is", "the", "full", "name", "(", "first", "name", "and", "last", "name", ")", "for", "those", "employees", "who", "gets", "more", "salary", "than", "the", "employee", "whose", "id", "is", "163", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 163.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "salary", "FROM", "employees", "WHERE", "employee_id", "=", "163", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "employees", "where", "salary", ">", "(", "select", "salary", "from", "employees", "where", "employee_id", "=", "value", ")"], "question": "Proporcione los nombres completos de los empleados que ganan más que el empleado con identificación 163.\n", "question_toks": ["Provide", "the", "full", "names", "of", "employees", "earning", "more", "than", "the", "employee", "with", "id", "163", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 163.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "department_id", "FROM", "employees", "WHERE", "salary", "IN", "(", "SELECT", "MIN", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "department_id", "from", "employees", "where", "salary", "in", "(", "select", "min", "(", "salary", ")", "from", "employees", "group", "by", "department_id", ")"], "question": "Encuentre el nombre, apellido y la identificación del departamento de aquellos empleados que ganan dicha cantidad de salario, que es el salario más pequeño de cualquiera de los departamentos.\n", "question_toks": ["Find", "the", "first", "name", "and", "last", "name", "and", "department", "id", "for", "those", "employees", "who", "earn", "such", "amount", "of", "salary", "which", "is", "the", "smallest", "salary", "of", "any", "of", "the", "departments", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 8, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "department_id", "FROM", "employees", "WHERE", "salary", "IN", "(", "SELECT", "MIN", "(", "salary", ")", "FROM", "employees", "GROUP", "BY", "department_id", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "department_id", "from", "employees", "where", "salary", "in", "(", "select", "min", "(", "salary", ")", "from", "employees", "group", "by", "department_id", ")"], "question": "¿Cuáles son los nombres completos y los identificadores de departamento de los empleados peor pagados en todos los departamentos?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "department", "ids", "for", "the", "lowest", "paid", "employees", "across", "all", "departments", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 8, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)", "query_toks": ["SELECT", "employee_id", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "AVG", "(", "salary", ")", "FROM", "employees", ")"], "query_toks_no_value": ["select", "employee_id", "from", "employees", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employees", ")"], "question": "Encuentre la identificación de empleado de todos los empleados que ganan más que el salario promedio.\n", "question_toks": ["Find", "the", "employee", "id", "for", "all", "employees", "who", "earn", "more", "than", "the", "average", "salary", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)", "query_toks": ["SELECT", "employee_id", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "AVG", "(", "salary", ")", "FROM", "employees", ")"], "query_toks_no_value": ["select", "employee_id", "from", "employees", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employees", ")"], "question": "¿Cuáles son las identificaciones de los empleados que ganan más que el promedio?\n", "question_toks": ["What", "are", "the", "employee", "ids", "for", "employees", "who", "make", "more", "than", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "query_toks": ["SELECT", "employee_id", ",", "salary", "FROM", "employees", "WHERE", "manager_id", "=", "(", "SELECT", "employee_id", "FROM", "employees", "WHERE", "first_name", "=", "'Payam", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "salary", "from", "employees", "where", "manager_id", "=", "(", "select", "employee_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "muestra la identificación del empleado y el salario de todos los empleados que reportan a Payam (nombre).\n", "question_toks": ["display", "the", "employee", "id", "and", "salary", "of", "all", "employees", "who", "report", "to", "Payam", "(", "first", "name", ")", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Payam\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )", "query_toks": ["SELECT", "employee_id", ",", "salary", "FROM", "employees", "WHERE", "manager_id", "=", "(", "SELECT", "employee_id", "FROM", "employees", "WHERE", "first_name", "=", "'Payam", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "salary", "from", "employees", "where", "manager_id", "=", "(", "select", "employee_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "¿Cuáles son las identificaciones de los empleados que reportan a Payam y cuáles son sus salarios?\n", "question_toks": ["What", "are", "the", "employee", "ids", "of", "employees", "who", "report", "to", "Payam", ",", "and", "what", "are", "their", "salaries", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Payam\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "DISTINCT", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "distinct", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "busque el nombre de todos los departamentos que realmente tienen uno o más empleados asignados.\n", "question_toks": ["find", "the", "name", "of", "all", "departments", "that", "do", "actually", "have", "one", "or", "more", "employees", "assigned", "to", "them", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "DISTINCT", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "distinct", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "¿Cuáles son los nombres de los departamentos que tienen al menos un empleado?\n", "question_toks": ["What", "are", "the", "names", "of", "departments", "that", "have", "at", "least", "one", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id", "query_toks": ["SELECT", "DISTINCT", "*", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.employee_id", "=", "T2.manager_id"], "query_toks_no_value": ["select", "distinct", "*", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "employee_id", "=", "t2", ".", "manager_id"], "question": "Obtenga los detalles de los empleados que administran un departamento.\n", "question_toks": ["get", "the", "details", "of", "employees", "who", "manage", "a", "department", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id", "query_toks": ["SELECT", "DISTINCT", "*", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.employee_id", "=", "T2.manager_id"], "query_toks_no_value": ["select", "distinct", "*", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "employee_id", "=", "t2", ".", "manager_id"], "question": "¿Cuál es toda la información sobre los empleados que son gerentes?\n", "question_toks": ["What", "is", "all", "the", "information", "regarding", "employees", "who", "are", "managers", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "query_toks": ["SELECT", "*", "FROM", "departments", "WHERE", "department_name", "=", "'Marketing", "'"], "query_toks_no_value": ["select", "*", "from", "departments", "where", "department_name", "=", "value"], "question": "visualizar toda la información sobre el departamento de Marketing.\n", "question_toks": ["display", "all", "the", "information", "about", "the", "department", "Marketing", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Marketing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'", "query_toks": ["SELECT", "*", "FROM", "departments", "WHERE", "department_name", "=", "'Marketing", "'"], "query_toks_no_value": ["select", "*", "from", "departments", "where", "department_name", "=", "value"], "question": "¿Cuál es toda la información sobre el departamento de Marketing?\n", "question_toks": ["What", "is", "all", "the", "information", "about", "the", "Marketing", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Marketing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80", "query_toks": ["SELECT", "T1.employee_id", ",", "T2.job_title", "FROM", "employees", "AS", "T1", "JOIN", "jobs", "AS", "T2", "ON", "T1.job_id", "=", "T2.job_id", "WHERE", "T1.department_id", "=", "80"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t2", ".", "job_title", "from", "employees", "as", "t1", "join", "jobs", "as", "t2", "on", "t1", ".", "job_id", "=", "t2", ".", "job_id", "where", "t1", ".", "department_id", "=", "value"], "question": "muestra la identificación del empleado y el nombre del trabajo para todos esos trabajos en el departamento 80.\n", "question_toks": ["display", "the", "employee", "ID", "and", "job", "name", "for", "all", "those", "jobs", "in", "department", "80", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], 80.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80", "query_toks": ["SELECT", "T1.employee_id", ",", "T2.job_title", "FROM", "employees", "AS", "T1", "JOIN", "jobs", "AS", "T2", "ON", "T1.job_id", "=", "T2.job_id", "WHERE", "T1.department_id", "=", "80"], "query_toks_no_value": ["select", "t1", ".", "employee_id", ",", "t2", ".", "job_title", "from", "employees", "as", "t1", "join", "jobs", "as", "t2", "on", "t1", ".", "job_id", "=", "t2", ".", "job_id", "where", "t1", ".", "department_id", "=", "value"], "question": "¿Cuáles son las identificaciones de los empleados y los títulos de trabajo de los empleados del departamento 80?\n", "question_toks": ["what", "are", "the", "employee", "ids", "and", "job", "titles", "for", "employees", "in", "department", "80", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], 80.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.job_id", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T2.department_name", "=", "'Finance", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "job_id", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t2", ".", "department_name", "=", "value"], "question": "¿Cuál es el nombre y la identificación del trabajo de todos los empleados del departamento de Finanzas?\n", "question_toks": ["What", "is", "the", "first", "name", "and", "job", "id", "for", "all", "employees", "in", "the", "Finance", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Finance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.job_id", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T2.department_name", "=", "'Finance", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "job_id", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t2", ".", "department_name", "=", "value"], "question": "Proporcione el nombre y la identificación del trabajo de todos los empleados del departamento de Finanzas.\n", "question_toks": ["Give", "the", "first", "name", "and", "job", "id", "for", "all", "employees", "in", "the", "Finance", "department", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Finance\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "salary", "BETWEEN", "(", "SELECT", "MIN", "(", "salary", ")", "FROM", "employees", ")", "AND", "2500"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "salary", "between", "(", "select", "min", "(", "salary", ")", "from", "employees", ")", "and", "value"], "question": "muestra toda la información de los empleados cuyo salario está dentro del rango del salario más pequeño y 2500.\n", "question_toks": ["display", "all", "the", "information", "of", "the", "employees", "whose", "salary", "if", "within", "the", "range", "of", "smallest", "salary", "and", "2500", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, 2500.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "salary", "BETWEEN", "(", "SELECT", "MIN", "(", "salary", ")", "FROM", "employees", ")", "AND", "2500"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "salary", "between", "(", "select", "min", "(", "salary", ")", "from", "employees", ")", "and", "value"], "question": "¿Cuál es toda la información sobre empleados con salarios superiores al mínimo y inferiores a 2500?\n", "question_toks": ["What", "is", "all", "the", "information", "regarding", "employees", "with", "salaries", "above", "the", "minimum", "and", "under", "2500", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, 2500.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "department_id", "NOT", "IN", "(", "SELECT", "department_id", "FROM", "departments", "WHERE", "manager_id", "BETWEEN", "100", "AND", "200", ")"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "department_id", "not", "in", "(", "select", "department_id", "from", "departments", "where", "manager_id", "between", "value", "and", "value", ")"], "question": "Encuentre las identificaciones de los empleados que no trabajan en aquellos departamentos donde trabajan algunos empleados cuya identificación de gerente está dentro del rango 100 y 200.\n", "question_toks": ["Find", "the", "ids", "of", "the", "employees", "who", "does", "not", "work", "in", "those", "departments", "where", "some", "employees", "works", "whose", "manager", "id", "within", "the", "range", "100", "and", "200", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 1, [0, [0, 8, false], null], 100.0, 200.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "department_id", "NOT", "IN", "(", "SELECT", "department_id", "FROM", "departments", "WHERE", "manager_id", "BETWEEN", "100", "AND", "200", ")"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "department_id", "not", "in", "(", "select", "department_id", "from", "departments", "where", "manager_id", "between", "value", "and", "value", ")"], "question": "¿Cuáles son los identificadores de los empleados que no trabajan en departamentos con gerentes que tienen identificadores entre 100 y 200?\n", "question_toks": ["What", "are", "the", "ids", "for", "employees", "who", "do", "not", "work", "in", "departments", "with", "managers", "that", "have", "ids", "between", "100", "and", "200", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 1, [0, [0, 8, false], null], 100.0, 200.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "muestra el nombre del empleado (nombre y apellido) y la fecha de contratación de todos los empleados en el mismo departamento que Clara.\n", "question_toks": ["display", "the", "employee", "name", "(", "first", "name", "and", "last", "name", ")", "and", "hire", "date", "for", "all", "employees", "in", "the", "same", "department", "as", "Clara", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")"], "question": "¿Cuáles son los nombres completos y las fechas de contratación de los empleados en el mismo departamento que alguien con el nombre Clara?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "hire", "dates", "for", "employees", "in", "the", "same", "department", "as", "someone", "with", "the", "first", "name", "Clara", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")", "AND", "first_name", "!", "=", "``", "Clara", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")", "and", "first_name", "!", "=", "value"], "question": "muestra el nombre del empleado (nombre y apellido) y la fecha de contratación de todos los empleados en el mismo departamento que Clara, excluyendo a Clara.\n", "question_toks": ["display", "the", "employee", "name", "(", "first", "name", "and", "last", "name", ")", "and", "hire", "date", "for", "all", "employees", "in", "the", "same", "department", "as", "Clara", "excluding", "Clara", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 7, [0, [0, 15, false], null], "\"Clara\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\"", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "hire_date", "FROM", "employees", "WHERE", "department_id", "=", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "=", "``", "Clara", "''", ")", "AND", "first_name", "!", "=", "``", "Clara", "''"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "hire_date", "from", "employees", "where", "department_id", "=", "(", "select", "department_id", "from", "employees", "where", "first_name", "=", "value", ")", "and", "first_name", "!", "=", "value"], "question": "¿Cuáles son los nombres completos y las fechas de contratación de los empleados en el mismo departamento que alguien con el nombre Clara, sin incluir a Clara?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "hire", "dates", "for", "employees", "in", "the", "same", "department", "as", "someone", "with", "the", "first", "name", "Clara", ",", "not", "including", "Clara", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Clara\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 7, [0, [0, 15, false], null], "\"Clara\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "T", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "muestra el número y el nombre del empleado (nombre y apellido) de todos los empleados que trabajan en un departamento con cualquier empleado cuyo nombre contenga una 'T'.\n", "question_toks": ["display", "the", "employee", "number", "and", "name", "(", "first", "name", "and", "last", "name", ")", "for", "all", "employees", "who", "work", "in", "a", "department", "with", "any", "employee", "whose", "name", "contains", "a", "’T’", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 8, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%T%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", "FROM", "employees", "WHERE", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "T", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", "from", "employees", "where", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "¿Cuáles son los identificadores y nombres completos de los empleados que trabajan en un departamento que tiene alguien cuyo nombre contiene la letra T?\n", "question_toks": ["What", "are", "the", "ids", "and", "full", "names", "for", "employees", "who", "work", "in", "a", "department", "that", "has", "someone", "with", "a", "first", "name", "that", "contains", "the", "letter", "T", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 8, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%T%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "AVG", "(", "salary", ")", "FROM", "employees", ")", "AND", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "J", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employees", ")", "and", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "muestra el número de empleado, el nombre (nombre y apellido) y el salario de todos los empleados que ganan más que el salario promedio y que trabajan en un departamento con cualquier empleado con una 'J' en su nombre.\n", "question_toks": ["display", "the", "employee", "number", ",", "name", "(", "first", "name", "and", "last", "name", ")", ",", "and", "salary", "for", "all", "employees", "who", "earn", "more", "than", "the", "average", "salary", "and", "who", "work", "in", "a", "department", "with", "any", "employee", "with", "a", "'J", "'", "in", "their", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%J%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "AVG", "(", "salary", ")", "FROM", "employees", ")", "AND", "department_id", "IN", "(", "SELECT", "department_id", "FROM", "employees", "WHERE", "first_name", "LIKE", "'", "%", "J", "%", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "salary", "from", "employees", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employees", ")", "and", "department_id", "in", "(", "select", "department_id", "from", "employees", "where", "first_name", "like", "value", ")"], "question": "¿Cuáles son las identificaciones, nombres completos y salarios de los empleados que ganan más que el promedio y que trabajan en un departamento con empleados que tienen la letra J en su nombre?\n", "question_toks": ["What", "are", "the", "ids", ",", "full", "names", ",", "and", "salaries", "for", "employees", "making", "more", "than", "average", "and", "who", "work", "in", "a", "department", "with", "employees", "who", "have", "the", "letter", "J", "in", "their", "first", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%J%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "job_id", "FROM", "employees", "WHERE", "salary", "<", "(", "SELECT", "min", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'MK_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "job_id", "from", "employees", "where", "salary", "<", "(", "select", "min", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "muestra el número de empleado y la identificación del trabajo para todos los empleados cuyo salario es menor que cualquier salario de aquellos empleados cuyo puesto de trabajo es MK_MAN.\n", "question_toks": ["display", "the", "employee", "number", "and", "job", "id", "for", "all", "employees", "whose", "salary", "is", "smaller", "than", "any", "salary", "of", "those", "employees", "whose", "job", "title", "is", "MK_MAN", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"MK_MAN\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "job_id", "FROM", "employees", "WHERE", "salary", "<", "(", "SELECT", "min", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'MK_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "job_id", "from", "employees", "where", "salary", "<", "(", "select", "min", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "¿Cuáles son las identificaciones de empleado y de trabajo para los empleados que ganan menos que el empleado con ingresos más bajos con el título MK_MAN?\n", "question_toks": ["What", "are", "the", "employee", "ids", "and", "job", "ids", "for", "employees", "who", "make", "less", "than", "the", "lowest", "earning", "employee", "with", "title", "MK_MAN", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"MK_MAN\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "max", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'PU_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "from", "employees", "where", "salary", ">", "(", "select", "max", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "muestra el número de empleado, el nombre (nombre y apellido) y el puesto de trabajo de todos los empleados cuyo salario es mayor que cualquier salario de aquellos empleados cuyo puesto de trabajo es PU_MAN.\n", "question_toks": ["display", "the", "employee", "number", ",", "name", "(", "first", "name", "and", "last", "name", ")", "and", "job", "title", "for", "all", "employees", "whose", "salary", "is", "more", "than", "any", "salary", "of", "those", "employees", "whose", "job", "title", "is", "PU_MAN", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[1, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"PU_MAN\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )", "query_toks": ["SELECT", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "FROM", "employees", "WHERE", "salary", ">", "(", "SELECT", "max", "(", "salary", ")", "FROM", "employees", "WHERE", "job_id", "=", "'PU_MAN", "'", ")"], "query_toks_no_value": ["select", "employee_id", ",", "first_name", ",", "last_name", ",", "job_id", "from", "employees", "where", "salary", ">", "(", "select", "max", "(", "salary", ")", "from", "employees", "where", "job_id", "=", "value", ")"], "question": "¿Cuáles son los identificadores de empleado, los nombres completos y los identificadores de trabajo de los empleados que ganan más que el empleado con mayores ingresos con el título PU_MAN?\n", "question_toks": ["What", "are", "the", "employee", "ids", ",", "full", "names", ",", "and", "job", "ids", "for", "employees", "who", "make", "more", "than", "the", "highest", "earning", "employee", "with", "title", "PU_MAN", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[1, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"PU_MAN\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "employee_id", "NOT", "IN", "(", "SELECT", "employee_id", "FROM", "job_history", ")"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "job_history", ")"], "question": "visualizar toda la información de aquellos empleados que no tuvieron ningún trabajo en el pasado.\n", "question_toks": ["display", "all", "the", "information", "of", "those", "employees", "who", "did", "not", "have", "any", "job", "in", "the", "past", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)", "query_toks": ["SELECT", "*", "FROM", "employees", "WHERE", "employee_id", "NOT", "IN", "(", "SELECT", "employee_id", "FROM", "job_history", ")"], "query_toks_no_value": ["select", "*", "from", "employees", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "job_history", ")"], "question": "¿Cuál es toda la información sobre los empleados que nunca han tenido un trabajo en el pasado?\n", "question_toks": ["What", "is", "all", "the", "information", "about", "employees", "who", "have", "never", "had", "a", "job", "in", "the", "past", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.department_name", ",", "T3.city", ",", "T3.state_province", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "department_name", ",", "t3", ".", "city", ",", "t3", ".", "state_province", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id"], "question": "muestra el nombre y apellido, departamento, ciudad y provincia del estado de cada empleado.\n", "question_toks": ["display", "the", "first", "and", "last", "name", ",", "department", ",", "city", ",", "and", "state", "province", "for", "each", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T2.department_name", ",", "T3.city", ",", "T3.state_province", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t2", ".", "department_name", ",", "t3", ".", "city", ",", "t3", ".", "state_province", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id"], "question": "¿Cuáles son los nombres completos, departamentos, ciudades y provincias estatales de cada empleado?\n", "question_toks": ["What", "are", "the", "full", "names", ",", "departments", ",", "cities", ",", "and", "state", "provinces", "for", "each", "employee", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T3.city", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T1.first_name", "LIKE", "'", "%", "z", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t3", ".", "city", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t1", ".", "first_name", "like", "value"], "question": "muestra aquellos empleados que contienen una letra z en su nombre y también muestra su apellido y ciudad.\n", "question_toks": ["display", "those", "employees", "who", "contain", "a", "letter", "z", "to", "their", "first", "name", "and", "also", "display", "their", "last", "name", ",", "city", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 33, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%z%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T3.city", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T1.first_name", "LIKE", "'", "%", "z", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t3", ".", "city", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t1", ".", "first_name", "like", "value"], "question": "¿Cuáles son los nombres completos y las ciudades de los empleados que tienen la letra Z en su nombre?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "cities", "of", "employees", "who", "have", "the", "letter", "Z", "in", "their", "first", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 33, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%z%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "query_toks": ["SELECT", "T1.department_name", ",", "T2.city", ",", "T2.state_province", "FROM", "departments", "AS", "T1", "JOIN", "locations", "AS", "T2", "ON", "T2.location_id", "=", "T1.location_id"], "query_toks_no_value": ["select", "t1", ".", "department_name", ",", "t2", ".", "city", ",", "t2", ".", "state_province", "from", "departments", "as", "t1", "join", "locations", "as", "t2", "on", "t2", ".", "location_id", "=", "t1", ".", "location_id"], "question": "muestra el nombre del departamento, la ciudad y la provincia del estado para cada departamento.\n", "question_toks": ["display", "the", "department", "name", ",", "city", ",", "and", "state", "province", "for", "each", "department", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id", "query_toks": ["SELECT", "T1.department_name", ",", "T2.city", ",", "T2.state_province", "FROM", "departments", "AS", "T1", "JOIN", "locations", "AS", "T2", "ON", "T2.location_id", "=", "T1.location_id"], "query_toks_no_value": ["select", "t1", ".", "department_name", ",", "t2", ".", "city", ",", "t2", ".", "state_province", "from", "departments", "as", "t1", "join", "locations", "as", "t2", "on", "t2", ".", "location_id", "=", "t1", ".", "location_id"], "question": "¿Cuáles son los nombres de los departamentos, ciudades y provincias estatales de cada departamento?\n", "question_toks": ["What", "are", "the", "department", "names", ",", "cities", ",", "and", "state", "provinces", "for", "each", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "muestra el nombre completo (nombre y apellido) del empleado con identificación y nombre del país donde trabaja actualmente.\n", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", "name", ")", "of", "employee", "with", "ID", "and", "name", "of", "the", "country", "presently", "where", "(", "s", ")", "he", "is", "working", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "T1.employee_id", ",", "T4.country_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "JOIN", "countries", "AS", "T4", "ON", "T3.country_id", "=", "T4.country_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", ",", "t1", ".", "employee_id", ",", "t4", ".", "country_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "join", "countries", "as", "t4", "on", "t3", ".", "country_id", "=", "t4", ".", "country_id"], "question": "¿Cuáles son los nombres completos, identificaciones de cada empleado y el nombre del país en el que se encuentran?\n", "question_toks": ["What", "the", "full", "names", ",", "ids", "of", "each", "employee", "and", "the", "name", "of", "the", "country", "they", "are", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T3.city", "=", "'London", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t3", ".", "city", "=", "value"], "question": "muestra el nombre completo (nombre y apellido) y el salario de los empleados que trabajan en cualquier departamento ubicado en Londres.\n", "question_toks": ["display", "the", "full", "name", "(", "first", "and", "last", "name", ")", ",", "and", "salary", "of", "those", "employees", "who", "working", "in", "any", "department", "located", "in", "London", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"London\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hr_1", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'", "query_toks": ["SELECT", "first_name", ",", "last_name", ",", "salary", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "JOIN", "locations", "AS", "T3", "ON", "T2.location_id", "=", "T3.location_id", "WHERE", "T3.city", "=", "'London", "'"], "query_toks_no_value": ["select", "first_name", ",", "last_name", ",", "salary", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "join", "locations", "as", "t3", "on", "t2", ".", "location_id", "=", "t3", ".", "location_id", "where", "t3", ".", "city", "=", "value"], "question": "¿Cuáles son los nombres completos y los salarios de los empleados que trabajan en la ciudad de Londres?\n", "question_toks": ["What", "are", "full", "names", "and", "salaries", "of", "employees", "working", "in", "the", "city", "of", "London", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 33, false], null], "\"London\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE languages  =  \"english\"", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "languages", "=", "value"], "question": "Encuentra los nombres de todas las canciones en inglés.\n", "question_toks": ["Find", "the", "names", "of", "all", "English", "songs", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE languages  =  \"english\"", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "languages", "=", "value"], "question": "¿Cuáles son los nombres de todas las canciones en inglés?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "songs", "in", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"", "query_toks": ["SELECT", "f_id", "FROM", "files", "WHERE", "formats", "=", "``", "mp3", "''"], "query_toks_no_value": ["select", "f_id", "from", "files", "where", "formats", "=", "value"], "question": "¿Cuáles son los id de las canciones cuyo formato es mp3?\n", "question_toks": ["What", "are", "the", "id", "of", "songs", "whose", "format", "is", "mp3", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mp3\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"", "query_toks": ["SELECT", "f_id", "FROM", "files", "WHERE", "formats", "=", "``", "mp3", "''"], "query_toks_no_value": ["select", "f_id", "from", "files", "where", "formats", "=", "value"], "question": "¿Cuáles son los ID de todos los archivos en formato mp3?\n", "question_toks": ["What", "are", "the", "id", "of", "all", "the", "files", "in", "mp3", "format", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mp3\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9", "query_toks": ["SELECT", "DISTINCT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.rating", ">", "9"], "query_toks_no_value": ["select", "distinct", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "rating", ">", "value"], "question": "Indique el nombre y el país de origen de todos los cantantes que hayan producido canciones con una calificación superior a 9.\n", "question_toks": ["List", "the", "name", "and", "country", "of", "origin", "for", "all", "singers", "who", "have", "produced", "songs", "with", "rating", "above", "9", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 9.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9", "query_toks": ["SELECT", "DISTINCT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.rating", ">", "9"], "query_toks_no_value": ["select", "distinct", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "rating", ">", "value"], "question": "¿Cuáles son los diferentes nombres y países de origen de todos los artistas cuyas calificaciones de canciones son superiores a 9?\n", "question_toks": ["What", "are", "the", "different", "names", "and", "countries", "of", "origins", "for", "all", "artists", "whose", "song", "ratings", "are", "above", "9", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 9.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "query_toks": ["SELECT", "DISTINCT", "T1.file_size", ",", "T1.formats", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T2.resolution", "<", "800"], "query_toks_no_value": ["select", "distinct", "t1", ".", "file_size", ",", "t1", ".", "formats", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t2", ".", "resolution", "<", "value"], "question": "Enumere el tamaño y formato de archivo de todas las canciones que tengan una resolución inferior a 800.\n", "question_toks": ["List", "the", "file", "size", "and", "format", "for", "all", "songs", "that", "have", "resolution", "lower", "than", "800", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 800.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800", "query_toks": ["SELECT", "DISTINCT", "T1.file_size", ",", "T1.formats", "FROM", "files", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.f_id", "=", "T2.f_id", "WHERE", "T2.resolution", "<", "800"], "query_toks_no_value": ["select", "distinct", "t1", ".", "file_size", ",", "t1", ".", "formats", "from", "files", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "f_id", "=", "t2", ".", "f_id", "where", "t2", ".", "resolution", "<", "value"], "question": "¿Cuáles son los tamaños y formatos de archivo para todas las canciones con una resolución inferior a 800?\n", "question_toks": ["What", "are", "the", "file", "sizes", "and", "formats", "for", "all", "songs", "with", "a", "resolution", "lower", "than", "800", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 800.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"", "query_toks": ["SELECT", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T1.gender", "=", "``", "Female", "''", "AND", "T2.languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t1", ".", "gender", "=", "value", "and", "t2", ".", "languages", "=", "value"], "question": "¿Cuál es el país de origen de la artista que es mujer y produjo una canción en bengalí?\n", "question_toks": ["What", "is", "the", "country", "of", "origin", "of", "the", "artist", "who", "is", "female", "and", "produced", "a", "song", "in", "Bangla", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Female\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"bangla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"", "query_toks": ["SELECT", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T1.gender", "=", "``", "Female", "''", "AND", "T2.languages", "=", "``", "bangla", "''"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t1", ".", "gender", "=", "value", "and", "t2", ".", "languages", "=", "value"], "question": "¿De qué países son las artistas femeninas que cantaron en bengalí?\n", "question_toks": ["What", "countries", "are", "the", "female", "artists", "who", "sung", "in", "the", "language", "Bangla", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Female\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"bangla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")", "query_toks": ["SELECT", "DISTINCT", "song_name", "FROM", "song", "WHERE", "resolution", ">", "(", "SELECT", "min", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''", ")"], "query_toks_no_value": ["select", "distinct", "song_name", "from", "song", "where", "resolution", ">", "(", "select", "min", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value", ")"], "question": "Encuentra los nombres distintos de todas las canciones que tienen una resolución más alta que algunas canciones en inglés.\n", "question_toks": ["Find", "the", "distinct", "names", "of", "all", "songs", "that", "have", "a", "higher", "resolution", "than", "some", "songs", "in", "English", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")", "query_toks": ["SELECT", "DISTINCT", "song_name", "FROM", "song", "WHERE", "resolution", ">", "(", "SELECT", "min", "(", "resolution", ")", "FROM", "song", "WHERE", "languages", "=", "``", "english", "''", ")"], "query_toks_no_value": ["select", "distinct", "song_name", "from", "song", "where", "resolution", ">", "(", "select", "min", "(", "resolution", ")", "from", "song", "where", "languages", "=", "value", ")"], "question": "¿Cuáles son los diferentes nombres de todas las canciones que tienen una resolución más alta que las canciones en inglés?\n", "question_toks": ["What", "are", "the", "different", "names", "for", "all", "songs", "that", "have", "a", "higher", "resolution", "than", "English", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "rating", "<", "(", "SELECT", "max", "(", "rating", ")", "FROM", "song", "WHERE", "genre_is", "=", "``", "blues", "''", ")"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "rating", "<", "(", "select", "max", "(", "rating", ")", "from", "song", "where", "genre_is", "=", "value", ")"], "question": "¿Cuáles son los nombres de todas las canciones que tienen una calificación más baja que alguna canción del género blues?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "songs", "that", "have", "a", "lower", "rating", "than", "some", "song", "of", "blues", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"blues\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "rating", "<", "(", "SELECT", "max", "(", "rating", ")", "FROM", "song", "WHERE", "genre_is", "=", "``", "blues", "''", ")"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "rating", "<", "(", "select", "max", "(", "rating", ")", "from", "song", "where", "genre_is", "=", "value", ")"], "question": "¿Cuáles son los nombres de las canciones que tienen una calificación más baja que al menos una canción de blues?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "songs", "that", "have", "a", "lower", "rating", "than", "at", "least", "one", "blues", "song", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"blues\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.song_name", "LIKE", "``", "%", "love", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "song_name", "like", "value"], "question": "¿Cuál es el nombre y país de origen del artista que lanzó una canción que tiene \"amor\" en su título?\n", "question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "the", "artist", "who", "released", "a", "song", "that", "has", "``", "love", "''", "in", "its", "title", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 13, false], null], "\"%love%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.country", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.song_name", "LIKE", "``", "%", "love", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "country", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "song_name", "like", "value"], "question": "¿Cuáles son los nombres de los artistas que lanzaron una canción que tiene la palabra amor en su título y de dónde son los artistas?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "artists", "who", "released", "a", "song", "that", "has", "the", "word", "love", "in", "its", "title", ",", "and", "where", "are", "the", "artists", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 13, false], null], "\"%love%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.gender", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.releasedate", "LIKE", "``", "%", "Mar", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "gender", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "releasedate", "like", "value"], "question": "Indique el nombre y el género de todos los artistas que lanzaron canciones en marzo.\n", "question_toks": ["List", "the", "name", "and", "gender", "for", "all", "artists", "who", "released", "songs", "in", "March", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 20, false], null], "\"%Mar%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"", "query_toks": ["SELECT", "T1.artist_name", ",", "T1.gender", "FROM", "artist", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.artist_name", "=", "T2.artist_name", "WHERE", "T2.releasedate", "LIKE", "``", "%", "Mar", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "artist_name", ",", "t1", ".", "gender", "from", "artist", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "artist_name", "=", "t2", ".", "artist_name", "where", "t2", ".", "releasedate", "like", "value"], "question": "¿Cuáles son los nombres y géneros de todos los artistas que lanzaron canciones en el mes de marzo?\n", "question_toks": ["What", "are", "the", "names", "and", "genders", "of", "all", "artists", "who", "released", "songs", "in", "the", "month", "of", "March", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 20, false], null], "\"%Mar%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"", "query_toks": ["SELECT", "artist_name", "FROM", "artist", "WHERE", "country", "=", "``", "UK", "''", "AND", "gender", "=", "``", "Male", "''"], "query_toks_no_value": ["select", "artist_name", "from", "artist", "where", "country", "=", "value", "and", "gender", "=", "value"], "question": "¿Cuáles son los nombres de los artistas masculinos y del Reino Unido?\n", "question_toks": ["What", "are", "the", "names", "of", "artists", "who", "are", "Male", "and", "are", "from", "UK", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"UK\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"Male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"", "query_toks": ["SELECT", "artist_name", "FROM", "artist", "WHERE", "country", "=", "``", "UK", "''", "AND", "gender", "=", "``", "Male", "''"], "query_toks_no_value": ["select", "artist_name", "from", "artist", "where", "country", "=", "value", "and", "gender", "=", "value"], "question": "¿Cuáles son los nombres de todos los artistas británicos masculinos?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "male", "British", "artists", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"UK\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"Male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "genre_is", "=", "``", "modern", "''", "OR", "languages", "=", "``", "english", "''"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "genre_is", "=", "value", "or", "languages", "=", "value"], "question": "Encuentra los nombres de canciones cuyo género sea moderno o el idioma sea el inglés.\n", "question_toks": ["Find", "the", "names", "of", "songs", "whose", "genre", "is", "modern", "or", "language", "is", "English", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"modern\"", null], "or", [false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "genre_is", "=", "``", "modern", "''", "OR", "languages", "=", "``", "english", "''"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "genre_is", "=", "value", "or", "languages", "=", "value"], "question": "¿Cómo se llaman las canciones modernas o cantadas en inglés?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "songs", "that", "are", "modern", "or", "sung", "in", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"modern\"", null], "or", [false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "rating", "<", "(", "SELECT", "min", "(", "rating", ")", "FROM", "song", "WHERE", "languages", "=", "'english", "'", ")"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "rating", "<", "(", "select", "min", "(", "rating", ")", "from", "song", "where", "languages", "=", "value", ")"], "question": "¿Cuáles son los nombres de las canciones cuya calificación está por debajo de la calificación de todas las canciones en inglés?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "songs", "whose", "rating", "is", "below", "the", "rating", "of", "all", "songs", "in", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')", "query_toks": ["SELECT", "song_name", "FROM", "song", "WHERE", "rating", "<", "(", "SELECT", "min", "(", "rating", ")", "FROM", "song", "WHERE", "languages", "=", "'english", "'", ")"], "query_toks_no_value": ["select", "song_name", "from", "song", "where", "rating", "<", "(", "select", "min", "(", "rating", ")", "from", "song", "where", "languages", "=", "value", ")"], "question": "¿Cuáles son los nombres de las canciones cuya calificación es inferior a la calificación mínima para las canciones en inglés?\n", "question_toks": ["What", "are", "the", "song", "names", "for", "every", "song", "whose", "rating", "is", "less", "than", "the", "minimum", "rating", "for", "English", "songs", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"english\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)", "query_toks": ["SELECT", "f_id", "FROM", "song", "WHERE", "resolution", ">", "(", "SELECT", "max", "(", "resolution", ")", "FROM", "song", "WHERE", "rating", "<", "8", ")"], "query_toks_no_value": ["select", "f_id", "from", "song", "where", "resolution", ">", "(", "select", "max", "(", "resolution", ")", "from", "song", "where", "rating", "<", "value", ")"], "question": "¿Cuáles son los identificadores de las canciones cuya resolución es superior a la resolución de cualquier canción con una calificación inferior a 8?\n", "question_toks": ["What", "is", "ids", "of", "the", "songs", "whose", "resolution", "is", "higher", "than", "the", "resolution", "of", "any", "songs", "with", "rating", "lower", "than", "8", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], 8.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)", "query_toks": ["SELECT", "f_id", "FROM", "song", "WHERE", "resolution", ">", "(", "SELECT", "max", "(", "resolution", ")", "FROM", "song", "WHERE", "rating", "<", "8", ")"], "query_toks_no_value": ["select", "f_id", "from", "song", "where", "resolution", ">", "(", "select", "max", "(", "resolution", ")", "from", "song", "where", "rating", "<", "value", ")"], "question": "¿Cuál es el id de cada canción que tiene una resolución superior a la de una canción con una calificación inferior a 8?\n", "question_toks": ["What", "is", "the", "id", "of", "every", "song", "that", "has", "a", "resolution", "higher", "than", "that", "of", "a", "song", "with", "a", "rating", "below", "8", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 18, false], null], 8.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")", "query_toks": ["SELECT", "f_id", "FROM", "song", "WHERE", "resolution", ">", "(", "SELECT", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "genre_is", "=", "``", "modern", "''", ")"], "query_toks_no_value": ["select", "f_id", "from", "song", "where", "resolution", ">", "(", "select", "avg", "(", "resolution", ")", "from", "song", "where", "genre_is", "=", "value", ")"], "question": "¿Cuáles son los identificadores de las canciones cuya resolución es superior a la resolución promedio de las canciones del género moderno?\n", "question_toks": ["What", "is", "ids", "of", "the", "songs", "whose", "resolution", "is", "higher", "than", "the", "average", "resolution", "of", "songs", "in", "modern", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"modern\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_1", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")", "query_toks": ["SELECT", "f_id", "FROM", "song", "WHERE", "resolution", ">", "(", "SELECT", "avg", "(", "resolution", ")", "FROM", "song", "WHERE", "genre_is", "=", "``", "modern", "''", ")"], "query_toks_no_value": ["select", "f_id", "from", "song", "where", "resolution", ">", "(", "select", "avg", "(", "resolution", ")", "from", "song", "where", "genre_is", "=", "value", ")"], "question": "¿Cuáles son los identificadores de todas las canciones que tienen una resolución más alta que la resolución promedio en el género moderno?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "songs", "that", "have", "higher", "resolution", "of", "the", "average", "resolution", "in", "the", "modern", "genre", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"modern\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "AS", "T1", "JOIN", "all_star", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "WHERE", "YEAR", "=", "1998"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "as", "t1", "join", "all_star", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "where", "year", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de los jugadores que participaron en el All Star Game de 1998?\n", "question_toks": ["What", "are", "first", "and", "last", "names", "of", "players", "participating", "in", "all", "star", "game", "in", "1998", "?"], "sql": {"from": {"table_units": [["table_unit", 16], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 182, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], 1998.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "AS", "T1", "JOIN", "all_star", "AS", "T2", "ON", "T1.player_id", "=", "T2.player_id", "WHERE", "YEAR", "=", "1998"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "as", "t1", "join", "all_star", "as", "t2", "on", "t1", ".", "player_id", "=", "t2", ".", "player_id", "where", "year", "=", "value"], "question": "Indique el nombre y apellido de los jugadores que participaron en el All Star Game en 1998.\n", "question_toks": ["List", "the", "first", "and", "last", "name", "for", "players", "who", "participated", "in", "all", "star", "game", "in", "1998", "."], "sql": {"from": {"table_units": [["table_unit", 16], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 182, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], 1998.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "death_year", "=", "''", ";"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "death_year", "=", "value"], "question": "Encuentre el nombre y apellido de todos los jugadores que tienen un registro de defunción vacío.\n", "question_toks": ["Find", "all", "the", "players", "'", "first", "name", "and", "last", "name", "who", "have", "empty", "death", "record", "."], "sql": {"from": {"table_units": [["table_unit", 16]], "conds": []}, "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "where": [[false, 2, [0, [0, 189, false], null], "\"\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "death_year", "=", "''", ";"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "death_year", "=", "value"], "question": "¿Cuáles son el nombre y apellido de los jugadores cuyo registro de defunción está vacío?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "players", "whose", "death", "record", "is", "empty", "?"], "sql": {"from": {"table_units": [["table_unit", 16]], "conds": []}, "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "where": [[false, 2, [0, [0, 189, false], null], "\"\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "weight", ">", "220", "OR", "height", "<", "75"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "weight", ">", "value", "or", "height", "<", "value"], "question": "Enumere el nombre y apellido de los jugadores que tengan un peso superior a 220 o una altura inferior a 75.\n", "question_toks": ["List", "players", "'", "first", "name", "and", "last", "name", "who", "have", "weight", "greater", "than", "220", "or", "height", "shorter", "than", "75", "."], "sql": {"from": {"table_units": [["table_unit", 16]], "conds": []}, "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "where": [[false, 3, [0, [0, 198, false], null], 220.0, null], "or", [false, 4, [0, [0, 199, false], null], 75.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "baseball_1", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75", "query_toks": ["SELECT", "name_first", ",", "name_last", "FROM", "player", "WHERE", "weight", ">", "220", "OR", "height", "<", "75"], "query_toks_no_value": ["select", "name_first", ",", "name_last", "from", "player", "where", "weight", ">", "value", "or", "height", "<", "value"], "question": "¿Cuáles son el nombre y apellido de los jugadores que pesan más de 220 o miden menos de 75?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "players", "who", "have", "weight", "above", "220", "or", "height", "below", "75", "?"], "sql": {"from": {"table_units": [["table_unit", 16]], "conds": []}, "select": [false, [[0, [0, [0, 195, false], null]], [0, [0, [0, 196, false], null]]]], "where": [[false, 3, [0, [0, 198, false], null], 220.0, null], "or", [false, 4, [0, [0, 199, false], null], 75.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "mountain_photos", "query": "SELECT id ,  color ,  name FROM photos", "query_toks": ["SELECT", "id", ",", "color", ",", "name", "FROM", "photos"], "query_toks_no_value": ["select", "id", ",", "color", ",", "name", "from", "photos"], "question": "Enumere la identificación, la combinación de colores y el nombre de todas las fotos.\n", "question_toks": ["List", "the", "id", ",", "color", "scheme", ",", "and", "name", "for", "all", "the", "photos", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "mountain_photos", "query": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'", "query_toks": ["SELECT", "name", ",", "height", ",", "prominence", "FROM", "mountain", "WHERE", "range", "!", "=", "'Aberdare", "Range", "'"], "query_toks_no_value": ["select", "name", ",", "height", ",", "prominence", "from", "mountain", "where", "range", "!", "=", "value"], "question": "¿Cuáles son el nombre, la altura y la prominencia de las montañas que no pertenecen a la cordillera 'Aberdare Range'?\n", "question_toks": ["What", "are", "the", "name", ",", "height", "and", "prominence", "of", "mountains", "which", "do", "not", "belong", "to", "the", "range", "'Aberdare", "Range", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Aberdare Range\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "mountain_photos", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000", "query_toks": ["SELECT", "T1.id", ",", "T1.name", "FROM", "mountain", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.mountain_id", "WHERE", "T1.height", ">", "4000"], "query_toks_no_value": ["select", "t1", ".", "id", ",", "t1", ".", "name", "from", "mountain", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "mountain_id", "where", "t1", ".", "height", ">", "value"], "question": "¿Cuáles son el id y el nombre de las fotos de las montañas?\n", "question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "photos", "for", "mountains", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 4000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "mountain_photos", "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'", "query_toks": ["SELECT", "T1.name", "FROM", "camera_lens", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T2.camera_lens_id", "=", "T1.id", "WHERE", "T1.brand", "=", "'Sigma", "'", "OR", "T1.brand", "=", "'Olympus", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "camera_lens", "as", "t1", "join", "photos", "as", "t2", "on", "t2", ".", "camera_lens_id", "=", "t1", ".", "id", "where", "t1", ".", "brand", "=", "value", "or", "t1", ".", "brand", "=", "value"], "question": "¿Cómo se llaman las fotografías tomadas con la marca de lentes 'Sigma' u 'Olympus'?\n", "question_toks": ["What", "are", "the", "names", "of", "photos", "taken", "with", "the", "lens", "brand", "'Sigma", "'", "or", "'Olympus", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Sigma\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"Olympus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "mountain_photos", "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"", "query_toks": ["SELECT", "name", "FROM", "camera_lens", "WHERE", "name", "LIKE", "``", "%", "Digital", "%", "''"], "query_toks_no_value": ["select", "name", "from", "camera_lens", "where", "name", "like", "value"], "question": "Enumere los nombres de las lentes de la cámara que contienen la subcadena \"Digital\".\n", "question_toks": ["List", "the", "camera", "lens", "names", "containing", "substring", "``", "Digital", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%Digital%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'", "query_toks": ["SELECT", "name", "FROM", "channel", "WHERE", "OWNER", "!", "=", "'CCTV", "'"], "query_toks_no_value": ["select", "name", "from", "channel", "where", "owner", "!", "=", "value"], "question": "Encuentre los nombres de los canales que no son propiedad de CCTV.\n", "question_toks": ["Find", "the", "names", "of", "channels", "that", "are", "not", "owned", "by", "CCTV", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"CCTV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'", "query_toks": ["SELECT", "name", "FROM", "channel", "WHERE", "OWNER", "!", "=", "'CCTV", "'"], "query_toks_no_value": ["select", "name", "from", "channel", "where", "owner", "!", "=", "value"], "question": "¿Qué canales no son propiedad de CCTV? Dame los nombres de los canales.\n", "question_toks": ["Which", "channels", "are", "not", "owned", "by", "CCTV", "?", "Give", "me", "the", "channel", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"CCTV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name ,  origin ,  OWNER FROM program", "query_toks": ["SELECT", "name", ",", "origin", ",", "OWNER", "FROM", "program"], "query_toks_no_value": ["select", "name", ",", "origin", ",", "owner", "from", "program"], "question": "Indique el nombre, origen y propietario de cada programa.\n", "question_toks": ["List", "the", "name", ",", "origin", "and", "owner", "of", "each", "program", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name ,  origin ,  OWNER FROM program", "query_toks": ["SELECT", "name", ",", "origin", ",", "OWNER", "FROM", "program"], "query_toks_no_value": ["select", "name", ",", "origin", ",", "owner", "from", "program"], "question": "¿Cuáles son el nombre, origen y propietario de cada programa?\n", "question_toks": ["What", "are", "the", "name", ",", "origin", "and", "owner", "of", "each", "program", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'", "query_toks": ["SELECT", "t1.name", "FROM", "channel", "AS", "t1", "JOIN", "broadcast", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "WHERE", "t2.time_of_day", "=", "'Morning", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "channel", "as", "t1", "join", "broadcast", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "where", "t2", ".", "time_of_day", "=", "value"], "question": "Encuentra los nombres de los canales que se emiten por la mañana.\n", "question_toks": ["Find", "the", "names", "of", "the", "channels", "that", "are", "broadcast", "in", "the", "morning", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Morning\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'", "query_toks": ["SELECT", "t1.name", "FROM", "channel", "AS", "t1", "JOIN", "broadcast", "AS", "t2", "ON", "t1.channel_id", "=", "t2.channel_id", "WHERE", "t2.time_of_day", "=", "'Morning", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "channel", "as", "t1", "join", "broadcast", "as", "t2", "on", "t1", ".", "channel_id", "=", "t2", ".", "channel_id", "where", "t2", ".", "time_of_day", "=", "value"], "question": "¿Qué canales transmiten por la mañana? Dame los nombres de los canales.\n", "question_toks": ["Which", "channels", "are", "broadcast", "in", "the", "morning", "?", "Give", "me", "the", "channel", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Morning\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name FROM program WHERE origin != 'Beijing'", "query_toks": ["SELECT", "name", "FROM", "program", "WHERE", "origin", "!", "=", "'Beijing", "'"], "query_toks_no_value": ["select", "name", "from", "program", "where", "origin", "!", "=", "value"], "question": "Encuentre los nombres de programas cuyo origen no está en Beijing.\n", "question_toks": ["find", "the", "names", "of", "programs", "whose", "origin", "is", "not", "in", "Beijing", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"Beijing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name FROM program WHERE origin != 'Beijing'", "query_toks": ["SELECT", "name", "FROM", "program", "WHERE", "origin", "!", "=", "'Beijing", "'"], "query_toks_no_value": ["select", "name", "from", "program", "where", "origin", "!", "=", "value"], "question": "¿Qué orígenes de programas no son \"Beijing\"? Dame los nombres de los programas.\n", "question_toks": ["Which", "programs", "'", "origins", "are", "not", "``", "Beijing", "''", "?", "Give", "me", "the", "program", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"Beijing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'", "query_toks": ["SELECT", "name", "FROM", "channel", "WHERE", "OWNER", "=", "'CCTV", "'", "OR", "OWNER", "=", "'HBS", "'"], "query_toks_no_value": ["select", "name", "from", "channel", "where", "owner", "=", "value", "or", "owner", "=", "value"], "question": "¿Cuáles son los nombres de los canales propiedad de CCTV o HBS?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "channels", "owned", "by", "CCTV", "or", "HBS", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"CCTV\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"HBS\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "program_share", "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'", "query_toks": ["SELECT", "name", "FROM", "channel", "WHERE", "OWNER", "=", "'CCTV", "'", "OR", "OWNER", "=", "'HBS", "'"], "query_toks_no_value": ["select", "name", "from", "channel", "where", "owner", "=", "value", "or", "owner", "=", "value"], "question": "Enumere los nombres de todos los canales propiedad de CCTV o HBS.\n", "question_toks": ["List", "the", "names", "of", "all", "the", "channels", "owned", "by", "either", "CCTV", "or", "HBS"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"CCTV\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"HBS\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"", "query_toks": ["SELECT", "course_description", "FROM", "COURSES", "WHERE", "course_name", "=", "``", "database", "''"], "query_toks_no_value": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "question": "¿Cuáles son las descripciones de los cursos con nombre \"base de datos\"?\n", "question_toks": ["What", "are", "the", "descriptions", "of", "the", "courses", "with", "name", "``", "database", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"database\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"", "query_toks": ["SELECT", "course_description", "FROM", "COURSES", "WHERE", "course_name", "=", "``", "database", "''"], "query_toks_no_value": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "question": "Devuelve la descripción de los cursos denominados \"base de datos\".\n", "question_toks": ["Return", "the", "description", "for", "the", "courses", "named", "``", "database", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"database\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"", "query_toks": ["SELECT", "address_line_1", "FROM", "Course_Authors_and_Tutors", "WHERE", "personal_name", "=", "``", "Cathrine", "''"], "query_toks_no_value": ["select", "address_line_1", "from", "course_authors_and_tutors", "where", "personal_name", "=", "value"], "question": "¿Cuáles son las direcciones de los autores o tutores del curso con nombre personal \"Cathrine\"?\n", "question_toks": ["What", "are", "the", "addresses", "of", "the", "course", "authors", "or", "tutors", "with", "personal", "name", "``", "Cathrine", "''"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Cathrine\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"", "query_toks": ["SELECT", "address_line_1", "FROM", "Course_Authors_and_Tutors", "WHERE", "personal_name", "=", "``", "Cathrine", "''"], "query_toks_no_value": ["select", "address_line_1", "from", "course_authors_and_tutors", "where", "personal_name", "=", "value"], "question": "Devuelva las direcciones de los autores o tutores del curso cuyo nombre personal sea \"Cathrine\".\n", "question_toks": ["Return", "the", "addresses", "of", "the", "course", "authors", "or", "tutors", "whose", "personal", "name", "is", "``", "Cathrine", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Cathrine\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors", "query_toks": ["SELECT", "address_line_1", "FROM", "Course_Authors_and_Tutors"], "query_toks_no_value": ["select", "address_line_1", "from", "course_authors_and_tutors"], "question": "Enumere las direcciones de todos los autores o tutores del curso.\n", "question_toks": ["List", "the", "addresses", "of", "all", "the", "course", "authors", "or", "tutors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors", "query_toks": ["SELECT", "address_line_1", "FROM", "Course_Authors_and_Tutors"], "query_toks_no_value": ["select", "address_line_1", "from", "course_authors_and_tutors"], "question": "¿Cuál es la dirección de cada autor o tutor del curso?\n", "question_toks": ["What", "is", "the", "address", "of", "each", "course", "author", "or", "tutor", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "query_toks": ["SELECT", "login_name", ",", "family_name", "FROM", "Course_Authors_and_Tutors"], "query_toks_no_value": ["select", "login_name", ",", "family_name", "from", "course_authors_and_tutors"], "question": "Enumere todos los nombres de inicio de sesión y apellidos de los autores y tutores del curso.\n", "question_toks": ["List", "all", "the", "login", "names", "and", "family", "names", "of", "course", "author", "and", "tutors", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors", "query_toks": ["SELECT", "login_name", ",", "family_name", "FROM", "Course_Authors_and_Tutors"], "query_toks_no_value": ["select", "login_name", ",", "family_name", "from", "course_authors_and_tutors"], "question": "¿Cuáles son los nombres de usuario y apellidos de los autores y tutores del curso?\n", "question_toks": ["What", "are", "the", "login", "names", "and", "family", "names", "of", "course", "author", "and", "tutors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "query_toks": ["SELECT", "date_of_enrolment", ",", "date_of_completion", "FROM", "Student_Course_Enrolment"], "query_toks_no_value": ["select", "date_of_enrolment", ",", "date_of_completion", "from", "student_course_enrolment"], "question": "Enumere todas las fechas de matrícula y finalización de los estudiantes.\n", "question_toks": ["List", "all", "the", "dates", "of", "enrollment", "and", "completion", "of", "students", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment", "query_toks": ["SELECT", "date_of_enrolment", ",", "date_of_completion", "FROM", "Student_Course_Enrolment"], "query_toks_no_value": ["select", "date_of_enrolment", ",", "date_of_completion", "from", "student_course_enrolment"], "question": "¿Cuáles son todas las fechas de inscripción y finalización registradas?\n", "question_toks": ["What", "are", "all", "the", "dates", "of", "enrollment", "and", "completion", "in", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"", "query_toks": ["SELECT", "date_test_taken", "FROM", "Student_Tests_Taken", "WHERE", "test_result", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "date_test_taken", "from", "student_tests_taken", "where", "test_result", "=", "value"], "question": "Encuentre las fechas de las pruebas realizadas con resultado \"Aprobado\".\n", "question_toks": ["Find", "the", "dates", "of", "the", "tests", "taken", "with", "result", "``", "Pass", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"", "query_toks": ["SELECT", "date_test_taken", "FROM", "Student_Tests_Taken", "WHERE", "test_result", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "date_test_taken", "from", "student_tests_taken", "where", "test_result", "=", "value"], "question": "¿Qué pruebas tienen resultados \"Aprobados\"? Devuelva las fechas en que se realizaron las pruebas.\n", "question_toks": ["Which", "tests", "have", "``", "Pass", "''", "results", "?", "Return", "the", "dates", "when", "the", "tests", "were", "taken", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"", "query_toks": ["SELECT", "login_name", "FROM", "Students", "WHERE", "family_name", "=", "``", "Ward", "''"], "query_toks_no_value": ["select", "login_name", "from", "students", "where", "family_name", "=", "value"], "question": "¿Cuáles son los nombres de inicio de sesión de los estudiantes con apellido \"Ward\"?\n", "question_toks": ["What", "are", "the", "login", "names", "of", "the", "students", "with", "family", "name", "``", "Ward", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Ward\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"", "query_toks": ["SELECT", "login_name", "FROM", "Students", "WHERE", "family_name", "=", "``", "Ward", "''"], "query_toks_no_value": ["select", "login_name", "from", "students", "where", "family_name", "=", "value"], "question": "Devuelve los nombres de inicio de sesión de los estudiantes cuyo apellido es \"Ward\".\n", "question_toks": ["Return", "the", "login", "names", "of", "the", "students", "whose", "family", "name", "is", "``", "Ward", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Ward\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"", "query_toks": ["SELECT", "date_of_latest_logon", "FROM", "Students", "WHERE", "family_name", "=", "``", "Jaskolski", "''", "OR", "family_name", "=", "``", "Langosh", "''"], "query_toks_no_value": ["select", "date_of_latest_logon", "from", "students", "where", "family_name", "=", "value", "or", "family_name", "=", "value"], "question": "¿Cuáles son las fechas del último inicio de sesión de los estudiantes con apellido \"Jaskolski\" o \"Langosh\"?\n", "question_toks": ["What", "are", "the", "dates", "of", "the", "latest", "logon", "of", "the", "students", "with", "family", "name", "``", "Jaskolski", "''", "or", "``", "Langosh", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Jaskolski\"", null], "or", [false, 2, [0, [0, 17, false], null], "\"Langosh\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"", "query_toks": ["SELECT", "date_of_latest_logon", "FROM", "Students", "WHERE", "family_name", "=", "``", "Jaskolski", "''", "OR", "family_name", "=", "``", "Langosh", "''"], "query_toks_no_value": ["select", "date_of_latest_logon", "from", "students", "where", "family_name", "=", "value", "or", "family_name", "=", "value"], "question": "Encuentre la última fecha de inicio de sesión de los estudiantes cuyo apellido es \"Jaskolski\" o \"Langosh\".\n", "question_toks": ["Find", "the", "latest", "logon", "date", "of", "the", "students", "whose", "family", "name", "is", "``", "Jaskolski", "''", "or", "``", "Langosh", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Jaskolski\"", null], "or", [false, 2, [0, [0, 17, false], null], "\"Langosh\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "Students", "WHERE", "personal_name", "LIKE", "``", "%", "son", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "students", "where", "personal_name", "like", "value"], "question": "¿Cuántos estudiantes tienen nombres personales que contienen la palabra \"hijo\"?\n", "question_toks": ["How", "many", "students", "have", "personal", "names", "that", "contain", "the", "word", "``", "son", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%son%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "Students", "WHERE", "personal_name", "LIKE", "``", "%", "son", "%", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "students", "where", "personal_name", "like", "value"], "question": "Encuentre la cantidad de estudiantes que tienen la palabra \"hijo\" en sus nombres personales.\n", "question_toks": ["Find", "the", "number", "of", "students", "who", "have", "the", "word", "``", "son", "''", "in", "their", "personal", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%son%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT subject_name FROM SUBJECTS", "query_toks": ["SELECT", "subject_name", "FROM", "SUBJECTS"], "query_toks_no_value": ["select", "subject_name", "from", "subjects"], "question": "Enumere todos los nombres de los sujetos.\n", "question_toks": ["List", "all", "the", "subject", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT subject_name FROM SUBJECTS", "query_toks": ["SELECT", "subject_name", "FROM", "SUBJECTS"], "query_toks_no_value": ["select", "subject_name", "from", "subjects"], "question": "¿Cuáles son los nombres de todos los sujetos?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "subjects", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"", "query_toks": ["SELECT", "T1.login_name", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "WHERE", "T2.course_name", "=", "``", "advanced", "database", "''"], "query_toks_no_value": ["select", "t1", ".", "login_name", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "where", "t2", ".", "course_name", "=", "value"], "question": "Busque el nombre de inicio de sesión del autor del curso que imparte el curso con el nombre \"base de datos avanzada\".\n", "question_toks": ["Find", "the", "login", "name", "of", "the", "course", "author", "that", "teaches", "the", "course", "with", "name", "``", "advanced", "database", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"advanced database\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"", "query_toks": ["SELECT", "T1.login_name", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "WHERE", "T2.course_name", "=", "``", "advanced", "database", "''"], "query_toks_no_value": ["select", "t1", ".", "login_name", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "where", "t2", ".", "course_name", "=", "value"], "question": "¿Qué autor del curso imparte el curso \"base de datos avanzada\"? Dame su nombre de usuario.\n", "question_toks": ["Which", "course", "author", "teaches", "the", "``", "advanced", "database", "''", "course", "?", "Give", "me", "his", "or", "her", "login", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"advanced database\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"", "query_toks": ["SELECT", "T1.address_line_1", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "WHERE", "T2.course_name", "=", "``", "operating", "system", "''", "OR", "T2.course_name", "=", "``", "data", "structure", "''"], "query_toks_no_value": ["select", "t1", ".", "address_line_1", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "where", "t2", ".", "course_name", "=", "value", "or", "t2", ".", "course_name", "=", "value"], "question": "Encuentre las direcciones de los autores del curso que imparten el curso con el nombre \"sistema operativo\" o \"estructura de datos\".\n", "question_toks": ["Find", "the", "addresses", "of", "the", "course", "authors", "who", "teach", "the", "course", "with", "name", "``", "operating", "system", "''", "or", "``", "data", "structure", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"operating system\"", null], "or", [false, 2, [0, [0, 23, false], null], "\"data structure\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"", "query_toks": ["SELECT", "T1.address_line_1", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "WHERE", "T2.course_name", "=", "``", "operating", "system", "''", "OR", "T2.course_name", "=", "``", "data", "structure", "''"], "query_toks_no_value": ["select", "t1", ".", "address_line_1", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "where", "t2", ".", "course_name", "=", "value", "or", "t2", ".", "course_name", "=", "value"], "question": "¿Cuáles son las direcciones de los autores del curso que imparten el curso \"sistema operativo\" o \"estructura de datos\"?\n", "question_toks": ["What", "are", "the", "addresses", "of", "the", "course", "authors", "who", "teach", "either", "``", "operating", "system", "''", "or", "``", "data", "structure", "''", "course", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"operating system\"", null], "or", [false, 2, [0, [0, 23, false], null], "\"data structure\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"", "query_toks": ["SELECT", "T2.course_name", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "WHERE", "T1.personal_name", "=", "``", "Julio", "''"], "query_toks_no_value": ["select", "t2", ".", "course_name", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "where", "t1", ".", "personal_name", "=", "value"], "question": "Encuentra los nombres de los cursos impartidos por el tutor que tiene nombre personal \"Julio\".\n", "question_toks": ["Find", "the", "names", "of", "courses", "taught", "by", "the", "tutor", "who", "has", "personal", "name", "``", "Julio", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Julio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"", "query_toks": ["SELECT", "T2.course_name", "FROM", "Course_Authors_and_Tutors", "AS", "T1", "JOIN", "Courses", "AS", "T2", "ON", "T1.author_id", "=", "T2.author_id", "WHERE", "T1.personal_name", "=", "``", "Julio", "''"], "query_toks_no_value": ["select", "t2", ".", "course_name", "from", "course_authors_and_tutors", "as", "t1", "join", "courses", "as", "t2", "on", "t1", ".", "author_id", "=", "t2", ".", "author_id", "where", "t1", ".", "personal_name", "=", "value"], "question": "¿Cómo se llaman los cursos que imparte el tutor cuyo nombre personal es \"Julio\"?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "courses", "taught", "by", "the", "tutor", "whose", "personal", "name", "is", "``", "Julio", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Julio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_description", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "WHERE", "T2.subject_name", "=", "``", "Computer", "Science", "''"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_description", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "where", "t2", ".", "subject_name", "=", "value"], "question": "Busque los nombres y descripciones de los cursos que pertenecen a la materia denominada \"Ciencias de la Computación\".\n", "question_toks": ["Find", "the", "names", "and", "descriptions", "of", "courses", "that", "belong", "to", "the", "subject", "named", "``", "Computer", "Science", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Computer Science\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"", "query_toks": ["SELECT", "T1.course_name", ",", "T1.course_description", "FROM", "Courses", "AS", "T1", "JOIN", "Subjects", "AS", "T2", "ON", "T1.subject_id", "=", "T2.subject_id", "WHERE", "T2.subject_name", "=", "``", "Computer", "Science", "''"], "query_toks_no_value": ["select", "t1", ".", "course_name", ",", "t1", ".", "course_description", "from", "courses", "as", "t1", "join", "subjects", "as", "t2", "on", "t1", ".", "subject_id", "=", "t2", ".", "subject_id", "where", "t2", ".", "subject_name", "=", "value"], "question": "¿Cuáles son los nombres y descripciones de todos los cursos de la asignatura \"Ciencias de la Computación\"?\n", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "all", "courses", "under", "the", "``", "Computer", "Science", "''", "subject", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 22, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Computer Science\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"", "query_toks": ["SELECT", "T2.date_of_enrolment", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Course_Enrolment", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T1.course_name", "=", "``", "Spanish", "''"], "query_toks_no_value": ["select", "t2", ".", "date_of_enrolment", "from", "courses", "as", "t1", "join", "student_course_enrolment", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t1", ".", "course_name", "=", "value"], "question": "¿Cuál es la fecha de inscripción al curso denominado \"Español\"?\n", "question_toks": ["What", "is", "the", "date", "of", "enrollment", "of", "the", "course", "named", "``", "Spanish", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Spanish\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"", "query_toks": ["SELECT", "T2.date_of_enrolment", "FROM", "Courses", "AS", "T1", "JOIN", "Student_Course_Enrolment", "AS", "T2", "ON", "T1.course_id", "=", "T2.course_id", "WHERE", "T1.course_name", "=", "``", "Spanish", "''"], "query_toks_no_value": ["select", "t2", ".", "date_of_enrolment", "from", "courses", "as", "t1", "join", "student_course_enrolment", "as", "t2", "on", "t1", ".", "course_id", "=", "t2", ".", "course_id", "where", "t1", ".", "course_name", "=", "value"], "question": "Encuentra la fecha de inscripción al curso de \"español\".\n", "question_toks": ["Find", "the", "the", "date", "of", "enrollment", "of", "the", "``", "Spanish", "''", "course", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Spanish\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"", "query_toks": ["SELECT", "T1.date_of_enrolment", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Student_Tests_Taken", "AS", "T2", "ON", "T1.registration_id", "=", "T2.registration_id", "WHERE", "T2.test_result", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", "from", "student_course_enrolment", "as", "t1", "join", "student_tests_taken", "as", "t2", "on", "t1", ".", "registration_id", "=", "t2", ".", "registration_id", "where", "t2", ".", "test_result", "=", "value"], "question": "¿Cuáles son las fechas de inscripción de todas las pruebas que tienen resultado \"Aprobado\"?\n", "question_toks": ["What", "are", "the", "enrollment", "dates", "of", "all", "the", "tests", "that", "have", "result", "``", "Pass", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"", "query_toks": ["SELECT", "T1.date_of_enrolment", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Student_Tests_Taken", "AS", "T2", "ON", "T1.registration_id", "=", "T2.registration_id", "WHERE", "T2.test_result", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", "from", "student_course_enrolment", "as", "t1", "join", "student_tests_taken", "as", "t2", "on", "t1", ".", "registration_id", "=", "t2", ".", "registration_id", "where", "t2", ".", "test_result", "=", "value"], "question": "Encuentre la fecha de inscripción para todas las pruebas que tengan resultado \"Aprobado\".\n", "question_toks": ["Find", "the", "enrollment", "date", "for", "all", "the", "tests", "that", "have", "``", "Pass", "''", "result", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"", "query_toks": ["SELECT", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Student_Tests_Taken", "AS", "T2", "ON", "T1.registration_id", "=", "T2.registration_id", "WHERE", "T2.test_result", "=", "``", "Fail", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "student_tests_taken", "as", "t2", "on", "t1", ".", "registration_id", "=", "t2", ".", "registration_id", "where", "t2", ".", "test_result", "=", "value"], "question": "¿Cuáles son las fechas de finalización de todas las pruebas que tienen resultado \"Fallo\"?\n", "question_toks": ["What", "are", "the", "completion", "dates", "of", "all", "the", "tests", "that", "have", "result", "``", "Fail", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Fail\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"", "query_toks": ["SELECT", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Student_Tests_Taken", "AS", "T2", "ON", "T1.registration_id", "=", "T2.registration_id", "WHERE", "T2.test_result", "=", "``", "Fail", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "student_tests_taken", "as", "t2", "on", "t1", ".", "registration_id", "=", "t2", ".", "registration_id", "where", "t2", ".", "test_result", "=", "value"], "question": "Devuelve la fecha de finalización de todas las pruebas que tienen un resultado \"Fallo\".\n", "question_toks": ["Return", "the", "completion", "date", "for", "all", "the", "tests", "that", "have", "``", "Fail", "''", "result", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 25, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Fail\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.personal_name", "=", "``", "Karson", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "personal_name", "=", "value"], "question": "Indique las fechas de inscripción y finalización del estudiante con nombre personal \"Karson\".\n", "question_toks": ["List", "the", "dates", "of", "enrollment", "and", "completion", "of", "the", "student", "with", "personal", "name", "``", "Karson", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Karson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.personal_name", "=", "``", "Karson", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "personal_name", "=", "value"], "question": "¿En qué fechas se matriculó y completó los cursos el estudiante cuyo nombre personal es \"Karson\"?\n", "question_toks": ["On", "what", "dates", "did", "the", "student", "whose", "personal", "name", "is", "``", "Karson", "''", "enroll", "in", "and", "complete", "the", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Karson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.family_name", "=", "``", "Zieme", "''", "AND", "T2.personal_name", "=", "``", "Bernie", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "family_name", "=", "value", "and", "t2", ".", "personal_name", "=", "value"], "question": "Indique las fechas de inscripción y finalización del estudiante con el apellido \"Zieme\" y el nombre personal \"Bernie\".\n", "question_toks": ["List", "the", "dates", "of", "enrollment", "and", "completion", "of", "the", "student", "with", "family", "name", "``", "Zieme", "''", "and", "personal", "name", "``", "Bernie", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Zieme\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"Bernie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.family_name", "=", "``", "Zieme", "''", "AND", "T2.personal_name", "=", "``", "Bernie", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "family_name", "=", "value", "and", "t2", ".", "personal_name", "=", "value"], "question": "¿En qué fechas se matriculó y completó los cursos el estudiante de apellido \"Zieme\" y nombre personal \"Bernie\"?\n", "question_toks": ["On", "what", "dates", "did", "the", "student", "with", "family", "name", "``", "Zieme", "''", "and", "personal", "name", "``", "Bernie", "''", "enroll", "in", "and", "complete", "the", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Zieme\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"Bernie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Claims", "WHERE", "Amount_Claimed", ">", "(", "SELECT", "avg", "(", "Amount_Claimed", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "claims", "where", "amount_claimed", ">", "(", "select", "avg", "(", "amount_claimed", ")", "from", "claims", ")"], "question": "Entre todas las reclamaciones, ¿cuáles tienen un monto reclamado mayor que el promedio? Indique la fecha en que se realizó el reclamo y la fecha en que se resolvió.\n", "question_toks": ["Among", "all", "the", "claims", ",", "which", "claims", "have", "a", "claimed", "amount", "larger", "than", "the", "average", "?", "List", "the", "date", "the", "claim", "was", "made", "and", "the", "date", "it", "was", "settled", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Claims", "WHERE", "Amount_Claimed", ">", "(", "SELECT", "avg", "(", "Amount_Claimed", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "claims", "where", "amount_claimed", ">", "(", "select", "avg", "(", "amount_claimed", ")", "from", "claims", ")"], "question": "Dame la fecha de reclamación, la fecha de liquidación de todas las reclamaciones cuyo importe reclamado sea superior al promedio.\n", "question_toks": ["Give", "me", "the", "claim", "date", ",", "settlement", "date", "for", "all", "the", "claims", "whose", "claimed", "amount", "is", "larger", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )", "query_toks": ["SELECT", "Date_Claim_Made", "FROM", "Claims", "WHERE", "Amount_Settled", "<", "=", "(", "SELECT", "avg", "(", "Amount_Settled", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "date_claim_made", "from", "claims", "where", "amount_settled", "<", "=", "(", "select", "avg", "(", "amount_settled", ")", "from", "claims", ")"], "question": "Entre todas las reclamaciones, ¿qué acuerdos tienen un monto reclamado que no supera el promedio? Indique la fecha de inicio del reclamo.\n", "question_toks": ["Among", "all", "the", "claims", ",", "which", "settlements", "have", "a", "claimed", "amount", "that", "is", "no", "more", "than", "the", "average", "?", "List", "the", "claim", "start", "date", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 6, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )", "query_toks": ["SELECT", "Date_Claim_Made", "FROM", "Claims", "WHERE", "Amount_Settled", "<", "=", "(", "SELECT", "avg", "(", "Amount_Settled", ")", "FROM", "Claims", ")"], "query_toks_no_value": ["select", "date_claim_made", "from", "claims", "where", "amount_settled", "<", "=", "(", "select", "avg", "(", "amount_settled", ")", "from", "claims", ")"], "question": "Devolver la fecha de inicio de reclamo para los reclamos cuyo monto reclamado no sea mayor que el promedio\n", "question_toks": ["Return", "the", "claim", "start", "date", "for", "the", "claims", "whose", "claimed", "amount", "is", "no", "more", "than", "the", "average"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 6, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Settlements"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "settlements"], "question": "¿Cuáles son las fechas de reclamación y las fechas de liquidación de todos los acuerdos?\n", "question_toks": ["What", "are", "the", "claim", "dates", "and", "settlement", "dates", "of", "all", "the", "settlements", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements", "query_toks": ["SELECT", "Date_Claim_Made", ",", "Date_Claim_Settled", "FROM", "Settlements"], "query_toks_no_value": ["select", "date_claim_made", ",", "date_claim_settled", "from", "settlements"], "question": "Dígame la fecha de reclamo y la fecha de liquidación para cada caso de liquidación.\n", "question_toks": ["Tell", "me", "the", "the", "claim", "date", "and", "settlement", "date", "for", "each", "settlement", "case", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT DISTINCT customer_details FROM Customers", "query_toks": ["SELECT", "DISTINCT", "customer_details", "FROM", "Customers"], "query_toks_no_value": ["select", "distinct", "customer_details", "from", "customers"], "question": "¿Cuáles son todos los detalles distintivos de los clientes?\n", "question_toks": ["What", "are", "all", "the", "distinct", "details", "of", "the", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT DISTINCT customer_details FROM Customers", "query_toks": ["SELECT", "DISTINCT", "customer_details", "FROM", "Customers"], "query_toks_no_value": ["select", "distinct", "customer_details", "from", "customers"], "question": "Devuelve los distintos datos del cliente.\n", "question_toks": ["Return", "the", "distinct", "customer", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'", "query_toks": ["SELECT", "Payment_ID", ",", "Date_Payment_Made", ",", "Amount_Payment", "FROM", "Payments", "WHERE", "Payment_Method_Code", "=", "'Visa", "'"], "query_toks_no_value": ["select", "payment_id", ",", "date_payment_made", ",", "amount_payment", "from", "payments", "where", "payment_method_code", "=", "value"], "question": "¿Qué pagos se procesaron con Visa? Indique el ID de pago, la fecha y el monto.\n", "question_toks": ["Which", "Payments", "were", "processed", "with", "Visa", "?", "List", "the", "payment", "Id", ",", "the", "date", "and", "the", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Visa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "insurance_policies", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'", "query_toks": ["SELECT", "Payment_ID", ",", "Date_Payment_Made", ",", "Amount_Payment", "FROM", "Payments", "WHERE", "Payment_Method_Code", "=", "'Visa", "'"], "query_toks_no_value": ["select", "payment_id", ",", "date_payment_made", ",", "amount_payment", "from", "payments", "where", "payment_method_code", "=", "value"], "question": "Dame el ID de pago, la fecha y el monto de todos los pagos procesados con Visa.\n", "question_toks": ["Give", "me", "the", "payment", "Id", ",", "the", "date", "and", "the", "amount", "for", "all", "the", "payments", "processed", "with", "Visa", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Visa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn", "query_toks": ["SELECT", "name", "FROM", "appointment", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.patient", "=", "T2.ssn"], "query_toks_no_value": ["select", "name", "from", "appointment", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn"], "question": "¿Cuáles son los nombres de los pacientes que programaron una cita?\n", "question_toks": ["What", "are", "names", "of", "patients", "who", "made", "an", "appointment", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn", "query_toks": ["SELECT", "name", "FROM", "appointment", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.patient", "=", "T2.ssn"], "query_toks_no_value": ["select", "name", "from", "appointment", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn"], "question": "Enumere los nombres de los pacientes que han concertado citas.\n", "question_toks": ["List", "the", "names", "of", "patients", "who", "have", "made", "appointments", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "query_toks": ["SELECT", "T2.name", "FROM", "appointment", "AS", "T1", "JOIN", "physician", "AS", "T2", "ON", "T1.Physician", "=", "T2.EmployeeID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "appointment", "as", "t1", "join", "physician", "as", "t2", "on", "t1", ".", "physician", "=", "t2", ".", "employeeid"], "question": "Indique el nombre de los médicos que tomaron alguna cita.\n", "question_toks": ["List", "the", "name", "of", "physicians", "who", "took", "some", "appointment", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID", "query_toks": ["SELECT", "T2.name", "FROM", "appointment", "AS", "T1", "JOIN", "physician", "AS", "T2", "ON", "T1.Physician", "=", "T2.EmployeeID"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "appointment", "as", "t1", "join", "physician", "as", "t2", "on", "t1", ".", "physician", "=", "t2", ".", "employeeid"], "question": "¿Cuáles son los nombres de todos los médicos que tomaron citas?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "physicians", "who", "took", "appointments", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "query_toks": ["SELECT", "T1.name", ",", "T3.name", "FROM", "physician", "AS", "T1", "JOIN", "affiliated_with", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.physician", "JOIN", "department", "AS", "T3", "ON", "T2.department", "=", "T3.DepartmentID", "WHERE", "T2.PrimaryAffiliation", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "name", "from", "physician", "as", "t1", "join", "affiliated_with", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "department", "as", "t3", "on", "t2", ".", "department", "=", "t3", ".", "departmentid", "where", "t2", ".", "primaryaffiliation", "=", "value"], "question": "Encuentre los nombres de todos los médicos y los nombres de sus principales departamentos afiliados.\n", "question_toks": ["Find", "the", "names", "of", "all", "physicians", "and", "their", "primary", "affiliated", "departments", "'", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1", "query_toks": ["SELECT", "T1.name", ",", "T3.name", "FROM", "physician", "AS", "T1", "JOIN", "affiliated_with", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.physician", "JOIN", "department", "AS", "T3", "ON", "T2.department", "=", "T3.DepartmentID", "WHERE", "T2.PrimaryAffiliation", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "name", "from", "physician", "as", "t1", "join", "affiliated_with", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "department", "as", "t3", "on", "t2", ".", "department", "=", "t3", ".", "departmentid", "where", "t2", ".", "primaryaffiliation", "=", "value"], "question": "¿Cuáles son el nombre y el nombre del departamento principalmente afiliado de cada médico?\n", "question_toks": ["What", "are", "the", "name", "and", "primarily", "affiliated", "department", "name", "of", "each", "physician", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111", "query_toks": ["SELECT", "T4.name", "FROM", "stay", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.Patient", "=", "T2.SSN", "JOIN", "Prescribes", "AS", "T3", "ON", "T3.Patient", "=", "T2.SSN", "JOIN", "Medication", "AS", "T4", "ON", "T3.Medication", "=", "T4.Code", "WHERE", "room", "=", "111"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "stay", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn", "join", "prescribes", "as", "t3", "on", "t3", ".", "patient", "=", "t2", ".", "ssn", "join", "medication", "as", "t4", "on", "t3", ".", "medication", "=", "t4", ".", "code", "where", "room", "=", "value"], "question": "¿Encontrar el nombre del medicamento utilizado en el paciente que se queda en la habitación 111?\n", "question_toks": ["Find", "the", "name", "of", "medication", "used", "on", "the", "patient", "who", "stays", "in", "room", "111", "?"], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 5], ["table_unit", 9], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 59, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 41, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 42, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 60, false], null], 111.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111", "query_toks": ["SELECT", "T4.name", "FROM", "stay", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.Patient", "=", "T2.SSN", "JOIN", "Prescribes", "AS", "T3", "ON", "T3.Patient", "=", "T2.SSN", "JOIN", "Medication", "AS", "T4", "ON", "T3.Medication", "=", "T4.Code", "WHERE", "room", "=", "111"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "stay", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn", "join", "prescribes", "as", "t3", "on", "t3", ".", "patient", "=", "t2", ".", "ssn", "join", "medication", "as", "t4", "on", "t3", ".", "medication", "=", "t4", ".", "code", "where", "room", "=", "value"], "question": "¿Cómo se llama el medicamento que se le administró al paciente que se hospeda en la habitación 111?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "medication", "used", "for", "the", "patient", "staying", "in", "room", "111", "?"], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 5], ["table_unit", 9], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 59, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 41, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 42, false], null], [0, 36, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 60, false], null], 111.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0", "query_toks": ["SELECT", "DISTINCT", "blockcode", "FROM", "room", "WHERE", "unavailable", "=", "0"], "query_toks_no_value": ["select", "distinct", "blockcode", "from", "room", "where", "unavailable", "=", "value"], "question": "¿Cuáles son los códigos de bloqueo únicos que tienen las habitaciones disponibles?\n", "question_toks": ["What", "are", "the", "unique", "block", "codes", "that", "have", "available", "rooms", "?"], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [true, [[0, [0, [0, 51, false], null]]]], "where": [[false, 2, [0, [0, 52, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0", "query_toks": ["SELECT", "DISTINCT", "blockcode", "FROM", "room", "WHERE", "unavailable", "=", "0"], "query_toks_no_value": ["select", "distinct", "blockcode", "from", "room", "where", "unavailable", "=", "value"], "question": "Dime los distintos códigos de bloque donde están disponibles algunas habitaciones.\n", "question_toks": ["Tell", "me", "the", "distinct", "block", "codes", "where", "some", "rooms", "are", "available", "."], "sql": {"from": {"table_units": [["table_unit", 11]], "conds": []}, "select": [true, [[0, [0, [0, 51, false], null]]]], "where": [[false, 2, [0, [0, 52, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "medication", "AS", "T3", "ON", "T3.code", "=", "T2.medication", "WHERE", "T3.name", "=", "``", "Thesisin", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "physician", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "medication", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "medication", "where", "t3", ".", "name", "=", "value"], "question": "¿Cómo se llaman los médicos que prescriben el medicamento Thesisin?\n", "question_toks": ["What", "is", "the", "names", "of", "the", "physicians", "who", "prescribe", "medication", "Thesisin", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 9], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 36, false], null], [0, 42, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Thesisin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "medication", "AS", "T3", "ON", "T3.code", "=", "T2.medication", "WHERE", "T3.name", "=", "``", "Thesisin", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "physician", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "medication", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "medication", "where", "t3", ".", "name", "=", "value"], "question": "Enumere los nombres de todos los médicos que recetan Thesisin como medicamento.\n", "question_toks": ["List", "the", "names", "of", "all", "the", "physicians", "who", "prescribe", "Thesisin", "as", "medication", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 9], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 36, false], null], [0, 42, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Thesisin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.position", "FROM", "physician", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "medication", "AS", "T3", "ON", "T3.code", "=", "T2.medication", "WHERE", "T3.Brand", "=", "``", "X", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "position", "from", "physician", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "medication", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "medication", "where", "t3", ".", "brand", "=", "value"], "question": "Encuentre el nombre y cargo de los médicos que prescriben algún medicamento cuya marca es X?\n", "question_toks": ["Find", "the", "name", "and", "position", "of", "physicians", "who", "prescribe", "some", "medication", "whose", "brand", "is", "X", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 9], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 36, false], null], [0, 42, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"X\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.position", "FROM", "physician", "AS", "T1", "JOIN", "prescribes", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "medication", "AS", "T3", "ON", "T3.code", "=", "T2.medication", "WHERE", "T3.Brand", "=", "``", "X", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "position", "from", "physician", "as", "t1", "join", "prescribes", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "medication", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "medication", "where", "t3", ".", "brand", "=", "value"], "question": "¿Qué médicos prescriben un medicamento de marca X? Dígame el nombre y cargo de esos médicos.\n", "question_toks": ["Which", "physicians", "prescribe", "a", "medication", "of", "brand", "X", "?", "Tell", "me", "the", "name", "and", "position", "of", "those", "physicians", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 9], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 40, false], null], "and", [false, 2, [0, [0, 36, false], null], [0, 42, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"X\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'", "query_toks": ["SELECT", "name", "FROM", "physician", "WHERE", "POSITION", "LIKE", "'", "%", "senior", "%", "'"], "query_toks_no_value": ["select", "name", "from", "physician", "where", "position", "like", "value"], "question": "Busque el nombre de los médicos cuyo título de puesto contiene la palabra \"senior\".\n", "question_toks": ["Find", "the", "name", "of", "physicians", "whose", "position", "title", "contains", "the", "word", "'senior", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%senior%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'", "query_toks": ["SELECT", "name", "FROM", "physician", "WHERE", "POSITION", "LIKE", "'", "%", "senior", "%", "'"], "query_toks_no_value": ["select", "name", "from", "physician", "where", "position", "like", "value"], "question": "¿Cuáles son los nombres de los médicos que tienen \"senior\" en sus títulos?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "physicians", "who", "have", "'senior", "'", "in", "their", "titles", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%senior%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "undergoes", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.patient", "=", "T2.SSN", "JOIN", "stay", "AS", "T3", "ON", "T1.Stay", "=", "T3.StayID", "WHERE", "T3.room", "=", "111"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "undergoes", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn", "join", "stay", "as", "t3", "on", "t1", ".", "stay", "=", "t3", ".", "stayid", "where", "t3", ".", "room", "=", "value"], "question": "Encuentre los nombres de todos los pacientes que están en tratamiento y se alojan en la habitación 111.\n", "question_toks": ["Find", "the", "names", "of", "all", "patients", "who", "have", "an", "undergoing", "treatment", "and", "are", "staying", "in", "room", "111", "."], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 5], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 63, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 65, false], null], [0, 58, false], null]]}, "select": [true, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 60, false], null], 111.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "undergoes", "AS", "T1", "JOIN", "patient", "AS", "T2", "ON", "T1.patient", "=", "T2.SSN", "JOIN", "stay", "AS", "T3", "ON", "T1.Stay", "=", "T3.StayID", "WHERE", "T3.room", "=", "111"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "undergoes", "as", "t1", "join", "patient", "as", "t2", "on", "t1", ".", "patient", "=", "t2", ".", "ssn", "join", "stay", "as", "t3", "on", "t1", ".", "stay", "=", "t3", ".", "stayid", "where", "t3", ".", "room", "=", "value"], "question": "¿Cómo se llaman los pacientes que se alojan en la habitación 111 y están en tratamiento?\n", "question_toks": ["What", "are", "the", "names", "of", "patients", "who", "are", "staying", "in", "room", "111", "and", "have", "an", "undergoing", "treatment", "?"], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 5], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 63, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 65, false], null], [0, 58, false], null]]}, "select": [true, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 60, false], null], 111.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "undergoes", "AS", "T1", "JOIN", "nurse", "AS", "T2", "ON", "T1.AssistingNurse", "=", "T2.EmployeeID"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "undergoes", "as", "t1", "join", "nurse", "as", "t2", "on", "t1", ".", "assistingnurse", "=", "t2", ".", "employeeid"], "question": "Encuentre los nombres de las enfermeras que están atendiendo un tratamiento.\n", "question_toks": ["Find", "the", "names", "of", "nurses", "who", "are", "nursing", "an", "undergoing", "treatment", "."], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 68, false], null], [0, 24, false], null]]}, "select": [true, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "undergoes", "AS", "T1", "JOIN", "nurse", "AS", "T2", "ON", "T1.AssistingNurse", "=", "T2.EmployeeID"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "undergoes", "as", "t1", "join", "nurse", "as", "t2", "on", "t1", ".", "assistingnurse", "=", "t2", ".", "employeeid"], "question": "¿Qué enfermeras están a cargo de los pacientes en tratamiento?\n", "question_toks": ["Which", "nurses", "are", "in", "charge", "of", "patients", "undergoing", "treatments", "?"], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 68, false], null], [0, 24, false], null]]}, "select": [true, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1", "query_toks": ["SELECT", "physician", ",", "department", "FROM", "affiliated_with", "WHERE", "primaryaffiliation", "=", "1"], "query_toks_no_value": ["select", "physician", ",", "department", "from", "affiliated_with", "where", "primaryaffiliation", "=", "value"], "question": "Enumere las identificaciones de los empleados de los médicos junto con las identificaciones de sus departamentos de afiliación principal.\n", "question_toks": ["List", "the", "physicians", "'", "employee", "ids", "together", "with", "their", "primary", "affiliation", "departments", "'", "ids", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1", "query_toks": ["SELECT", "physician", ",", "department", "FROM", "affiliated_with", "WHERE", "primaryaffiliation", "=", "1"], "query_toks_no_value": ["select", "physician", ",", "department", "from", "affiliated_with", "where", "primaryaffiliation", "=", "value"], "question": "¿Cuáles son la identificación de empleado de cada médico y la identificación de departamento a la que está afiliado principalmente?\n", "question_toks": ["What", "are", "each", "physician", "'s", "employee", "id", "and", "department", "id", "primarily", "affiliated", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "affiliated_with", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.department", "=", "T2.departmentid", "WHERE", "PrimaryAffiliation", "=", "1"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "affiliated_with", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "department", "=", "t2", ".", "departmentid", "where", "primaryaffiliation", "=", "value"], "question": "Enumere los nombres de los departamentos a los que están afiliados principalmente algunos médicos.\n", "question_toks": ["List", "the", "names", "of", "departments", "where", "some", "physicians", "are", "primarily", "affiliated", "with", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "affiliated_with", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.department", "=", "T2.departmentid", "WHERE", "PrimaryAffiliation", "=", "1"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "affiliated_with", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "department", "=", "t2", ".", "departmentid", "where", "primaryaffiliation", "=", "value"], "question": "¿Cuáles son los nombres de los departamentos que tienen principalmente médicos afiliados?\n", "question_toks": ["What", "are", "the", "names", "of", "departments", "that", "have", "primarily", "affiliated", "physicians", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1", "query_toks": ["SELECT", "nurse", "FROM", "on_call", "WHERE", "blockfloor", "=", "1", "AND", "blockcode", "=", "1"], "query_toks_no_value": ["select", "nurse", "from", "on_call", "where", "blockfloor", "=", "value", "and", "blockcode", "=", "value"], "question": "¿Qué enfermeras están de guardia en el piso del bloque 1 y en el código de bloque 1? Dime sus nombres.\n", "question_toks": ["What", "nurses", "are", "on", "call", "with", "block", "floor", "1", "and", "block", "code", "1", "?", "Tell", "me", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [[false, 2, [0, [0, 54, false], null], 1.0, null], "and", [false, 2, [0, [0, 55, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1", "query_toks": ["SELECT", "nurse", "FROM", "on_call", "WHERE", "blockfloor", "=", "1", "AND", "blockcode", "=", "1"], "query_toks_no_value": ["select", "nurse", "from", "on_call", "where", "blockfloor", "=", "value", "and", "blockcode", "=", "value"], "question": "Encuentre las identificaciones de las enfermeras que están de guardia en el piso del bloque 1 y el código del bloque 1.\n", "question_toks": ["Find", "the", "ids", "of", "the", "nurses", "who", "are", "on", "call", "in", "block", "floor", "1", "and", "block", "code", "1", "."], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [[false, 2, [0, [0, 54, false], null], 1.0, null], "and", [false, 2, [0, [0, 55, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "query_toks": ["SELECT", "MAX", "(", "cost", ")", ",", "MIN", "(", "cost", ")", ",", "AVG", "(", "cost", ")", "FROM", "procedures"], "query_toks_no_value": ["select", "max", "(", "cost", ")", ",", "min", "(", "cost", ")", ",", "avg", "(", "cost", ")", "from", "procedures"], "question": "¿Cuáles son el costo más alto, el costo más bajo y el costo promedio de los procedimientos?\n", "question_toks": ["What", "are", "the", "highest", "cost", ",", "lowest", "cost", "and", "average", "cost", "of", "procedures", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures", "query_toks": ["SELECT", "MAX", "(", "cost", ")", ",", "MIN", "(", "cost", ")", ",", "AVG", "(", "cost", ")", "FROM", "procedures"], "query_toks_no_value": ["select", "max", "(", "cost", ")", ",", "min", "(", "cost", ")", ",", "avg", "(", "cost", ")", "from", "procedures"], "question": "Dígame el costo más alto, más bajo y promedio de los procedimientos.\n", "question_toks": ["Tell", "me", "the", "highest", ",", "lowest", ",", "and", "average", "cost", "of", "procedures", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "query_toks": ["SELECT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "trained_in", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "procedures", "AS", "T3", "ON", "T3.code", "=", "T2.treatment", "WHERE", "T3.cost", ">", "5000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "physician", "as", "t1", "join", "trained_in", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "procedures", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "treatment", "where", "t3", ".", "cost", ">", "value"], "question": "Encuentre médicos capacitados en un procedimiento que cuesta más de 5000.\n", "question_toks": ["Find", "the", "physicians", "who", "are", "trained", "in", "a", "procedure", "that", "costs", "more", "than", "5000", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "query_toks": ["SELECT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "trained_in", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "procedures", "AS", "T3", "ON", "T3.code", "=", "T2.treatment", "WHERE", "T3.cost", ">", "5000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "physician", "as", "t1", "join", "trained_in", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "procedures", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "treatment", "where", "t3", ".", "cost", ">", "value"], "question": "¿Qué médicos están capacitados en procedimientos que cuestan más de 5000?\n", "question_toks": ["Which", "physicians", "are", "trained", "in", "procedures", "that", "are", "more", "expensive", "than", "5000", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "query_toks": ["SELECT", "T3.name", "FROM", "physician", "AS", "T1", "JOIN", "trained_in", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "procedures", "AS", "T3", "ON", "T3.code", "=", "T2.treatment", "WHERE", "T1.name", "=", "``", "John", "Wen", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "physician", "as", "t1", "join", "trained_in", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "procedures", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "treatment", "where", "t1", ".", "name", "=", "value"], "question": "Encuentre los nombres de los procedimientos en los que se capacitó el médico John Wen.\n", "question_toks": ["Find", "the", "names", "of", "procedures", "which", "physician", "John", "Wen", "was", "trained", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"John Wen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"", "query_toks": ["SELECT", "T3.name", "FROM", "physician", "AS", "T1", "JOIN", "trained_in", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "procedures", "AS", "T3", "ON", "T3.code", "=", "T2.treatment", "WHERE", "T1.name", "=", "``", "John", "Wen", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "physician", "as", "t1", "join", "trained_in", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "procedures", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "treatment", "where", "t1", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres de los procedimientos en los que se formó el médico John Wen?\n", "question_toks": ["What", "are", "the", "names", "of", "procedures", "physician", "John", "Wen", "was", "trained", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"John Wen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'", "query_toks": ["SELECT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "affiliated_with", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.physician", "JOIN", "department", "AS", "T3", "ON", "T2.department", "=", "T3.DepartmentID", "WHERE", "T3.name", "=", "'Surgery", "'", "OR", "T3.name", "=", "'Psychiatry", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "physician", "as", "t1", "join", "affiliated_with", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "department", "as", "t3", "on", "t2", ".", "department", "=", "t3", ".", "departmentid", "where", "t3", ".", "name", "=", "value", "or", "t3", ".", "name", "=", "value"], "question": "Busque el nombre de los médicos afiliados al departamento de Cirugía o Psiquiatría.\n", "question_toks": ["Find", "the", "name", "of", "physicians", "who", "are", "affiliated", "with", "Surgery", "or", "Psychiatry", "department", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Surgery\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Psychiatry\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'", "query_toks": ["SELECT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "affiliated_with", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.physician", "JOIN", "department", "AS", "T3", "ON", "T2.department", "=", "T3.DepartmentID", "WHERE", "T3.name", "=", "'Surgery", "'", "OR", "T3.name", "=", "'Psychiatry", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "physician", "as", "t1", "join", "affiliated_with", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "department", "as", "t3", "on", "t2", ".", "department", "=", "t3", ".", "departmentid", "where", "t3", ".", "name", "=", "value", "or", "t3", ".", "name", "=", "value"], "question": "¿Qué médicos están afiliados al departamento de Cirugía o Psiquiatría? Dame sus nombres.\n", "question_toks": ["Which", "physicians", "are", "affiliated", "with", "either", "Surgery", "or", "Psychiatry", "department", "?", "Give", "me", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Surgery\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Psychiatry\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "nurse", "AS", "T1", "JOIN", "on_call", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.nurse"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "nurse", "as", "t1", "join", "on_call", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "nurse"], "question": "Encuentre los nombres de las enfermeras que están de guardia.\n", "question_toks": ["Find", "the", "names", "of", "nurses", "who", "are", "on", "call", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 53, false], null]]}, "select": [true, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "hospital_1", "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "nurse", "AS", "T1", "JOIN", "on_call", "AS", "T2", "ON", "T1.EmployeeID", "=", "T2.nurse"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "nurse", "as", "t1", "join", "on_call", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "nurse"], "question": "¿Cuáles son los nombres distintos de las enfermeras de guardia?\n", "question_toks": ["What", "are", "the", "distinct", "names", "of", "nurses", "on", "call", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 53, false], null]]}, "select": [true, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT TYPE ,  Nationality FROM ship", "query_toks": ["SELECT", "TYPE", ",", "Nationality", "FROM", "ship"], "query_toks_no_value": ["select", "type", ",", "nationality", "from", "ship"], "question": "¿Cuáles son el tipo y nacionalidad de los barcos?\n", "question_toks": ["What", "are", "the", "type", "and", "nationality", "of", "ships", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT TYPE ,  Nationality FROM ship", "query_toks": ["SELECT", "TYPE", ",", "Nationality", "FROM", "ship"], "query_toks_no_value": ["select", "type", ",", "nationality", "from", "ship"], "question": "¿Cuáles son los tipos y nacionalidades de cada barco?\n", "question_toks": ["What", "are", "the", "types", "and", "nationalities", "of", "every", "ship", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "!", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "!", "=", "value"], "question": "Indique el nombre de los barcos cuya nacionalidad no sea \"Estados Unidos\".\n", "question_toks": ["List", "the", "name", "of", "ships", "whose", "nationality", "is", "not", "``", "United", "States", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 11, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "!", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "!", "=", "value"], "question": "¿Cómo se llaman los barcos que no son de Estados Unidos?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "ships", "that", "are", "not", "from", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 11, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "=", "``", "United", "States", "''", "OR", "Nationality", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "Mostrar el nombre de los barcos cuya nacionalidad sea Estados Unidos o Reino Unido.\n", "question_toks": ["Show", "the", "name", "of", "ships", "whose", "nationality", "is", "either", "United", "States", "or", "United", "Kingdom", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"United States\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"United Kingdom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Nationality", "=", "``", "United", "States", "''", "OR", "Nationality", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "nationality", "=", "value", "or", "nationality", "=", "value"], "question": "¿Cuáles son los nombres de los barcos que son de EE. UU. o del Reino Unido?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "ships", "that", "are", "from", "either", "the", "US", "or", "the", "UK", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"United States\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"United Kingdom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "query_toks": ["SELECT", "T1.Code", ",", "T1.Fate", ",", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID"], "query_toks_no_value": ["select", "t1", ".", "code", ",", "t1", ".", "fate", ",", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id"], "question": "Muestra códigos y destinos de misiones y nombres de barcos involucrados.\n", "question_toks": ["Show", "codes", "and", "fates", "of", "missions", ",", "and", "names", "of", "ships", "involved", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID", "query_toks": ["SELECT", "T1.Code", ",", "T1.Fate", ",", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID"], "query_toks_no_value": ["select", "t1", ".", "code", ",", "t1", ".", "fate", ",", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id"], "question": "¿Cuáles son los códigos de misión, destinos y nombres de los barcos involucrados?\n", "question_toks": ["What", "are", "the", "mission", "codes", ",", "fates", ",", "and", "names", "of", "the", "ships", "involved", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "query_toks": ["SELECT", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T1.Launched_Year", ">", "1928"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t1", ".", "launched_year", ">", "value"], "question": "Muestra los nombres de los barcos involucrados en una misión lanzada después de 1928.\n", "question_toks": ["Show", "names", "of", "ships", "involved", "in", "a", "mission", "launched", "after", "1928", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 1928.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928", "query_toks": ["SELECT", "T2.Name", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T1.Launched_Year", ">", "1928"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t1", ".", "launched_year", ">", "value"], "question": "¿Cuáles son los nombres de los barcos que participaron en una misión lanzada después de 1928?\n", "question_toks": ["What", "are", "the", "names", "of", "ships", "that", "were", "involved", "in", "a", "mission", "launched", "after", "1928", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 1928.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fate", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T2.Nationality", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fate", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "nationality", "=", "value"], "question": "Mostrar el destino distinto de las misiones que involucran barcos con nacionalidad \"Estados Unidos\"\n", "question_toks": ["Show", "the", "distinct", "fate", "of", "missions", "that", "involve", "ships", "with", "nationality", "``", "United", "States", "''"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fate", "FROM", "mission", "AS", "T1", "JOIN", "ship", "AS", "T2", "ON", "T1.Ship_ID", "=", "T2.Ship_ID", "WHERE", "T2.Nationality", "=", "``", "United", "States", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fate", "from", "mission", "as", "t1", "join", "ship", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "where", "t2", ".", "nationality", "=", "value"], "question": "¿Cuáles son los diferentes destinos de la misión en la que participaron barcos de Estados Unidos?\n", "question_toks": ["What", "are", "the", "different", "fates", "of", "the", "mission", "that", "involved", "ships", "from", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Ship_ID", "NOT", "IN", "(", "SELECT", "Ship_ID", "FROM", "mission", ")"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "mission", ")"], "question": "Enumere el nombre de los barcos que no participan en ninguna misión.\n", "question_toks": ["List", "the", "name", "of", "ships", "that", "are", "not", "involved", "in", "any", "mission"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_mission", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)", "query_toks": ["SELECT", "Name", "FROM", "ship", "WHERE", "Ship_ID", "NOT", "IN", "(", "SELECT", "Ship_ID", "FROM", "mission", ")"], "query_toks_no_value": ["select", "name", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "mission", ")"], "question": "¿Cuáles son los nombres de los barcos que no participan en ninguna misión?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "ships", "that", "are", "not", "involved", "in", "any", "missions", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT lastname FROM list WHERE classroom  =  111", "query_toks": ["SELECT", "lastname", "FROM", "list", "WHERE", "classroom", "=", "111"], "query_toks_no_value": ["select", "lastname", "from", "list", "where", "classroom", "=", "value"], "question": "Encuentra los apellidos de los estudiantes que estudian en la habitación 111.\n", "question_toks": ["Find", "the", "last", "names", "of", "students", "studying", "in", "room", "111", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 111.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT lastname FROM list WHERE classroom  =  111", "query_toks": ["SELECT", "lastname", "FROM", "list", "WHERE", "classroom", "=", "111"], "query_toks_no_value": ["select", "lastname", "from", "list", "where", "classroom", "=", "value"], "question": "¿Cuáles son los apellidos de los estudiantes en la habitación 111?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "students", "in", "room", "111", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 111.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT firstname FROM list WHERE classroom  =  108", "query_toks": ["SELECT", "firstname", "FROM", "list", "WHERE", "classroom", "=", "108"], "query_toks_no_value": ["select", "firstname", "from", "list", "where", "classroom", "=", "value"], "question": "Encuentra los nombres de los estudiantes que estudian en la habitación 108.\n", "question_toks": ["Find", "the", "first", "names", "of", "students", "studying", "in", "room", "108", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 108.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT firstname FROM list WHERE classroom  =  108", "query_toks": ["SELECT", "firstname", "FROM", "list", "WHERE", "classroom", "=", "108"], "query_toks_no_value": ["select", "firstname", "from", "list", "where", "classroom", "=", "value"], "question": "¿Cuáles son los nombres de los estudiantes en la habitación 108?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "students", "in", "room", "108", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 108.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107", "query_toks": ["SELECT", "DISTINCT", "firstname", "FROM", "list", "WHERE", "classroom", "=", "107"], "query_toks_no_value": ["select", "distinct", "firstname", "from", "list", "where", "classroom", "=", "value"], "question": "¿Cuáles son los nombres de los estudiantes que estudian en la habitación 107?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "students", "studying", "in", "room", "107", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 107.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107", "query_toks": ["SELECT", "DISTINCT", "firstname", "FROM", "list", "WHERE", "classroom", "=", "107"], "query_toks_no_value": ["select", "distinct", "firstname", "from", "list", "where", "classroom", "=", "value"], "question": "Enumere los nombres de todos los estudiantes en la habitación 107.\n", "question_toks": ["List", "the", "first", "names", "of", "all", "the", "students", "in", "room", "107", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 107.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT classroom ,  grade FROM list", "query_toks": ["SELECT", "DISTINCT", "classroom", ",", "grade", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "classroom", ",", "grade", "from", "list"], "question": "Para cada aula reportar el grado que se imparte en ella. Informe solo el número de salón de clases y el número de grado.\n", "question_toks": ["For", "each", "classroom", "report", "the", "grade", "that", "is", "taught", "in", "it", ".", "Report", "just", "the", "classroom", "number", "and", "the", "grade", "number", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT classroom ,  grade FROM list", "query_toks": ["SELECT", "DISTINCT", "classroom", ",", "grade", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "classroom", ",", "grade", "from", "list"], "question": "¿Cuáles son el número de grado y el número de salón de clases de cada clase en la lista?\n", "question_toks": ["What", "are", "the", "grade", "number", "and", "classroom", "number", "of", "each", "class", "in", "the", "list", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103", "query_toks": ["SELECT", "DISTINCT", "grade", "FROM", "list", "WHERE", "classroom", "=", "103"], "query_toks_no_value": ["select", "distinct", "grade", "from", "list", "where", "classroom", "=", "value"], "question": "¿Qué grado estudia en el aula 103?\n", "question_toks": ["Which", "grade", "is", "studying", "in", "classroom", "103", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 103.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103", "query_toks": ["SELECT", "DISTINCT", "grade", "FROM", "list", "WHERE", "classroom", "=", "103"], "query_toks_no_value": ["select", "distinct", "grade", "from", "list", "where", "classroom", "=", "value"], "question": "Encuentre el grado impartido en el aula 103.\n", "question_toks": ["Find", "the", "grade", "taught", "in", "classroom", "103", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 103.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105", "query_toks": ["SELECT", "DISTINCT", "grade", "FROM", "list", "WHERE", "classroom", "=", "105"], "query_toks_no_value": ["select", "distinct", "grade", "from", "list", "where", "classroom", "=", "value"], "question": "Encuentra el grado que estudia en la habitación 105.\n", "question_toks": ["Find", "the", "grade", "studying", "in", "room", "105", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 105.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105", "query_toks": ["SELECT", "DISTINCT", "grade", "FROM", "list", "WHERE", "classroom", "=", "105"], "query_toks_no_value": ["select", "distinct", "grade", "from", "list", "where", "classroom", "=", "value"], "question": "¿Qué grado estudia en el salón 105?\n", "question_toks": ["Which", "grade", "is", "studying", "in", "room", "105", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 105.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4", "query_toks": ["SELECT", "DISTINCT", "classroom", "FROM", "list", "WHERE", "grade", "=", "4"], "query_toks_no_value": ["select", "distinct", "classroom", "from", "list", "where", "grade", "=", "value"], "question": "¿Qué aulas utiliza el cuarto grado?\n", "question_toks": ["Which", "classrooms", "are", "used", "by", "grade", "4", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4", "query_toks": ["SELECT", "DISTINCT", "classroom", "FROM", "list", "WHERE", "grade", "=", "4"], "query_toks_no_value": ["select", "distinct", "classroom", "from", "list", "where", "grade", "=", "value"], "question": "Encuentra las aulas en las que se estudia 4º grado.\n", "question_toks": ["Find", "the", "classrooms", "in", "which", "grade", "4", "is", "studying", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5", "query_toks": ["SELECT", "DISTINCT", "classroom", "FROM", "list", "WHERE", "grade", "=", "5"], "query_toks_no_value": ["select", "distinct", "classroom", "from", "list", "where", "grade", "=", "value"], "question": "¿Qué aulas utiliza el quinto grado?\n", "question_toks": ["Which", "classrooms", "are", "used", "by", "grade", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5", "query_toks": ["SELECT", "DISTINCT", "classroom", "FROM", "list", "WHERE", "grade", "=", "5"], "query_toks_no_value": ["select", "distinct", "classroom", "from", "list", "where", "grade", "=", "value"], "question": "Muéstrame las aulas que usa el grado 5.\n", "question_toks": ["Show", "me", "the", "classrooms", "grade", "5", "is", "using", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5", "query_toks": ["SELECT", "DISTINCT", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "grade", "=", "5"], "query_toks_no_value": ["select", "distinct", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "grade", "=", "value"], "question": "Encuentra los apellidos de los profesores que imparten clases de quinto grado.\n", "question_toks": ["Find", "the", "last", "names", "of", "the", "teachers", "that", "teach", "fifth", "grade", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5", "query_toks": ["SELECT", "DISTINCT", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "grade", "=", "5"], "query_toks_no_value": ["select", "distinct", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "grade", "=", "value"], "question": "¿Cuáles son los apellidos de los profesores que imparten el grado 5?\n", "question_toks": ["what", "are", "the", "last", "names", "of", "the", "teachers", "who", "teach", "grade", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1", "query_toks": ["SELECT", "DISTINCT", "T2.firstname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "grade", "=", "1"], "query_toks_no_value": ["select", "distinct", "t2", ".", "firstname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "grade", "=", "value"], "question": "Encuentre los nombres de los maestros que enseñan primer grado.\n", "question_toks": ["Find", "the", "first", "names", "of", "the", "teachers", "that", "teach", "first", "grade", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1", "query_toks": ["SELECT", "DISTINCT", "T2.firstname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "grade", "=", "1"], "query_toks_no_value": ["select", "distinct", "t2", ".", "firstname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "grade", "=", "value"], "question": "¿Cuáles son los nombres de los profesores que enseñan el primer grado?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "the", "teachers", "who", "teach", "grade", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT firstname FROM teachers WHERE classroom  =  110", "query_toks": ["SELECT", "firstname", "FROM", "teachers", "WHERE", "classroom", "=", "110"], "query_toks_no_value": ["select", "firstname", "from", "teachers", "where", "classroom", "=", "value"], "question": "Encuentra los nombres de todos los profesores que enseñan en el aula 110.\n", "question_toks": ["Find", "the", "first", "names", "of", "all", "the", "teachers", "that", "teach", "in", "classroom", "110", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 110.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT firstname FROM teachers WHERE classroom  =  110", "query_toks": ["SELECT", "firstname", "FROM", "teachers", "WHERE", "classroom", "=", "110"], "query_toks_no_value": ["select", "firstname", "from", "teachers", "where", "classroom", "=", "value"], "question": "¿Qué profesores enseñan en el aula 110? Dame sus nombres.\n", "question_toks": ["Which", "teachers", "teach", "in", "classroom", "110", "?", "Give", "me", "their", "first", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 110.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT lastname FROM teachers WHERE classroom  =  109", "query_toks": ["SELECT", "lastname", "FROM", "teachers", "WHERE", "classroom", "=", "109"], "query_toks_no_value": ["select", "lastname", "from", "teachers", "where", "classroom", "=", "value"], "question": "Encuentra los apellidos de los profesores que enseñan en el aula 109.\n", "question_toks": ["Find", "the", "last", "names", "of", "teachers", "teaching", "in", "classroom", "109", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 109.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT lastname FROM teachers WHERE classroom  =  109", "query_toks": ["SELECT", "lastname", "FROM", "teachers", "WHERE", "classroom", "=", "109"], "query_toks_no_value": ["select", "lastname", "from", "teachers", "where", "classroom", "=", "value"], "question": "¿Qué profesores enseñan en el aula 109? Dame sus apellidos.\n", "question_toks": ["Which", "teachers", "teach", "in", "classroom", "109", "?", "Give", "me", "their", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 109.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "teachers"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "teachers"], "question": "Informar el nombre y apellido de todos los docentes.\n", "question_toks": ["Report", "the", "first", "name", "and", "last", "name", "of", "all", "the", "teachers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "teachers"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "teachers"], "question": "¿Cuáles son el nombre y apellido de todos los profesores?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "all", "the", "teachers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "list"], "question": "Informar el nombre y apellido de todos los estudiantes.\n", "question_toks": ["Report", "the", "first", "name", "and", "last", "name", "of", "all", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "list"], "question": "Muestre el nombre y apellido de cada estudiante.\n", "question_toks": ["Show", "each", "student", "'s", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "OTHA", "''", "AND", "T2.lastname", "=", "``", "MOYER", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Encuentra todos los estudiantes impartidos por OTHA MOYER. Genere los nombres y apellidos de los estudiantes.\n", "question_toks": ["Find", "all", "students", "taught", "by", "OTHA", "MOYER", ".", "Output", "the", "first", "and", "last", "names", "of", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"OTHA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"MOYER\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "OTHA", "''", "AND", "T2.lastname", "=", "``", "MOYER", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "¿Qué estudiantes estudian con la maestra llamada OTHA MOYER? Dame el nombre y apellido de los estudiantes.\n", "question_toks": ["Which", "students", "study", "under", "the", "teacher", "named", "OTHA", "MOYER", "?", "Give", "me", "the", "first", "and", "last", "names", "of", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"OTHA\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"MOYER\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "MARROTTE", "''", "AND", "T2.lastname", "=", "``", "KIRK", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "Encuentra todos los estudiantes enseñados por MARROTTE KIRK. Generar nombres y apellidos de los estudiantes.\n", "question_toks": ["Find", "all", "students", "taught", "by", "MARROTTE", "KIRK", ".", "Output", "first", "and", "last", "names", "of", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"MARROTTE\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"KIRK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"", "query_toks": ["SELECT", "T1.firstname", ",", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T2.firstname", "=", "``", "MARROTTE", "''", "AND", "T2.lastname", "=", "``", "KIRK", "''"], "query_toks_no_value": ["select", "t1", ".", "firstname", ",", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t2", ".", "firstname", "=", "value", "and", "t2", ".", "lastname", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de los alumnos de MARROTTE KIRK?\n", "question_toks": ["Which", "are", "the", "first", "and", "last", "names", "of", "the", "students", "taught", "by", "MARROTTE", "KIRK", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"MARROTTE\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"KIRK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.firstname", "=", "``", "EVELINA", "''", "AND", "T1.lastname", "=", "``", "BROMLEY", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "firstname", "=", "value", "and", "t1", ".", "lastname", "=", "value"], "question": "Encuentra el nombre y apellido de todos los profesores que imparten clases a EVELINA BROMLEY.\n", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "all", "the", "teachers", "that", "teach", "EVELINA", "BROMLEY", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"EVELINA\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"BROMLEY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.firstname", "=", "``", "EVELINA", "''", "AND", "T1.lastname", "=", "``", "BROMLEY", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "firstname", "=", "value", "and", "t1", ".", "lastname", "=", "value"], "question": "¿Qué profesores enseñan a la estudiante llamada EVELINA BROMLEY? Dame el nombre y apellido de los profesores.\n", "question_toks": ["Which", "teachers", "teach", "the", "student", "named", "EVELINA", "BROMLEY", "?", "Give", "me", "the", "first", "and", "last", "name", "of", "the", "teachers", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"EVELINA\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"BROMLEY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"", "query_toks": ["SELECT", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.firstname", "=", "``", "GELL", "''", "AND", "T1.lastname", "=", "``", "TAMI", "''"], "query_toks_no_value": ["select", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "firstname", "=", "value", "and", "t1", ".", "lastname", "=", "value"], "question": "Encuentra los apellidos de todos los profesores que imparten GELL TAMI.\n", "question_toks": ["Find", "the", "last", "names", "of", "all", "the", "teachers", "that", "teach", "GELL", "TAMI", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"GELL\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"TAMI\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"", "query_toks": ["SELECT", "T2.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.firstname", "=", "``", "GELL", "''", "AND", "T1.lastname", "=", "``", "TAMI", "''"], "query_toks_no_value": ["select", "t2", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "firstname", "=", "value", "and", "t1", ".", "lastname", "=", "value"], "question": "¿Cuales son los apellidos de los profesores que dan clases a la alumna llamada GELL TAMI?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "the", "teachers", "who", "teach", "the", "student", "called", "GELL", "TAMI", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"GELL\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"TAMI\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"", "query_toks": ["SELECT", "DISTINCT", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.grade", "=", "3", "AND", "T2.firstname", "!", "=", "``", "COVIN", "''", "AND", "T2.lastname", "!", "=", "``", "JEROME", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "grade", "=", "value", "and", "t2", ".", "firstname", "!", "=", "value", "and", "t2", ".", "lastname", "!", "=", "value"], "question": "Encuentra los apellidos de los estudiantes de tercer grado que no son enseñados por COVIN JEROME.\n", "question_toks": ["Find", "the", "last", "names", "of", "the", "students", "in", "third", "grade", "that", "are", "not", "taught", "by", "COVIN", "JEROME", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 3.0, null], "and", [false, 7, [0, [0, 6, false], null], "\"COVIN\"", null], "and", [false, 7, [0, [0, 5, false], null], "\"JEROME\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "student_1", "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"", "query_toks": ["SELECT", "DISTINCT", "T1.lastname", "FROM", "list", "AS", "T1", "JOIN", "teachers", "AS", "T2", "ON", "T1.classroom", "=", "T2.classroom", "WHERE", "T1.grade", "=", "3", "AND", "T2.firstname", "!", "=", "``", "COVIN", "''", "AND", "T2.lastname", "!", "=", "``", "JEROME", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lastname", "from", "list", "as", "t1", "join", "teachers", "as", "t2", "on", "t1", ".", "classroom", "=", "t2", ".", "classroom", "where", "t1", ".", "grade", "=", "value", "and", "t2", ".", "firstname", "!", "=", "value", "and", "t2", ".", "lastname", "!", "=", "value"], "question": "¿A qué alumnos de tercer grado no les enseña el maestro COVIN JEROME? Dame los apellidos de los estudiantes.\n", "question_toks": ["Which", "students", "in", "third", "grade", "are", "not", "taught", "by", "teacher", "COVIN", "JEROME", "?", "Give", "me", "the", "last", "names", "of", "the", "students", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 3.0, null], "and", [false, 7, [0, [0, 6, false], null], "\"COVIN\"", null], "and", [false, 7, [0, [0, 5, false], null], "\"JEROME\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_employee", "query": "SELECT Headquarters ,  Industry FROM company", "query_toks": ["SELECT", "Headquarters", ",", "Industry", "FROM", "company"], "query_toks_no_value": ["select", "headquarters", ",", "industry", "from", "company"], "question": "¿Cuáles son las sedes e industrias de todas las empresas?\n", "question_toks": ["What", "are", "the", "headquarters", "and", "industries", "of", "all", "companies", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_employee", "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\"", "query_toks": ["SELECT", "Name", "FROM", "company", "WHERE", "Industry", "=", "``", "Banking", "''", "OR", "Industry", "=", "``", "Retailing", "''"], "query_toks_no_value": ["select", "name", "from", "company", "where", "industry", "=", "value", "or", "industry", "=", "value"], "question": "¿Mostrar los nombres de empresas del sector bancario o minorista?\n", "question_toks": ["Show", "the", "names", "of", "companies", "in", "the", "banking", "or", "retailing", "industry", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Banking\"", null], "or", [false, 2, [0, [0, 9, false], null], "\"Retailing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_employee", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Name", "FROM", "employment", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "JOIN", "company", "AS", "T3", "ON", "T1.Company_ID", "=", "T3.Company_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "employment", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "join", "company", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "company_id"], "question": "Mostrar los nombres de empresas y de empleados.\n", "question_toks": ["Show", "the", "names", "of", "companies", "and", "of", "employees", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_employee", "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200", "query_toks": ["SELECT", "T2.Name", "FROM", "employment", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "JOIN", "company", "AS", "T3", "ON", "T1.Company_ID", "=", "T3.Company_ID", "WHERE", "T3.Sales_in_Billion", ">", "200"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "employment", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "join", "company", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "company_id", "where", "t3", ".", "sales_in_billion", ">", "value"], "question": "Muestra los nombres de los empleados que trabajan para empresas con ventas superiores a 200.\n", "question_toks": ["Show", "the", "names", "of", "employees", "that", "work", "for", "companies", "with", "sales", "bigger", "than", "200", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_employee", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)", "query_toks": ["SELECT", "Name", "FROM", "people", "WHERE", "People_ID", "NOT", "IN", "(", "SELECT", "People_ID", "FROM", "employment", ")"], "query_toks_no_value": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "employment", ")"], "question": "Enumere los nombres de las personas que no son empleadas de ninguna empresa.\n", "question_toks": ["List", "the", "names", "of", "people", "that", "are", "not", "employed", "by", "any", "company"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT DISTINCT Director FROM film", "query_toks": ["SELECT", "DISTINCT", "Director", "FROM", "film"], "query_toks_no_value": ["select", "distinct", "director", "from", "film"], "question": "Enumere el director distintivo de todas las películas.\n", "question_toks": ["List", "the", "distinct", "director", "of", "all", "films", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT DISTINCT Director FROM film", "query_toks": ["SELECT", "DISTINCT", "Director", "FROM", "film"], "query_toks_no_value": ["select", "distinct", "director", "from", "film"], "question": "¿Cuáles son los diferentes directores de cine?\n", "question_toks": ["What", "are", "the", "different", "film", "Directors", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "query_toks": ["SELECT", "Low_Estimate", ",", "High_Estimate", "FROM", "film_market_estimation"], "query_toks_no_value": ["select", "low_estimate", ",", "high_estimate", "from", "film_market_estimation"], "question": "¿Cuáles son las estimaciones bajas y altas de los mercados cinematográficos?\n", "question_toks": ["What", "are", "the", "low", "and", "high", "estimates", "of", "film", "markets", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation", "query_toks": ["SELECT", "Low_Estimate", ",", "High_Estimate", "FROM", "film_market_estimation"], "query_toks_no_value": ["select", "low_estimate", ",", "high_estimate", "from", "film_market_estimation"], "question": "Devuelva las estimaciones mínimas y máximas de todos los mercados cinematográficos.\n", "question_toks": ["Return", "the", "low", "and", "high", "estimates", "for", "all", "film", "markets", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995", "query_toks": ["SELECT", "TYPE", "FROM", "film_market_estimation", "WHERE", "YEAR", "=", "1995"], "query_toks_no_value": ["select", "type", "from", "film_market_estimation", "where", "year", "=", "value"], "question": "¿Cuáles son los tipos de estimaciones del mercado cinematográfico en el año 1995?\n", "question_toks": ["What", "are", "the", "types", "of", "film", "market", "estimations", "in", "year", "1995", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1995.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995", "query_toks": ["SELECT", "TYPE", "FROM", "film_market_estimation", "WHERE", "YEAR", "=", "1995"], "query_toks_no_value": ["select", "type", "from", "film_market_estimation", "where", "year", "=", "value"], "question": "Devuelva los tipos de estimaciones del mercado cinematográfico en 1995.\n", "question_toks": ["Return", "the", "types", "of", "film", "market", "estimations", "in", "1995", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1995.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Type", "FROM", "film", "AS", "T1", "JOIN", "film_market_estimation", "AS", "T2", "ON", "T1.Film_ID", "=", "T2.Film_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "type", "from", "film", "as", "t1", "join", "film_market_estimation", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id"], "question": "Muestre los títulos de las películas y los tipos de estimaciones de mercado.\n", "question_toks": ["Please", "show", "the", "titles", "of", "films", "and", "the", "types", "of", "market", "estimations", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID", "query_toks": ["SELECT", "T1.Title", ",", "T2.Type", "FROM", "film", "AS", "T1", "JOIN", "film_market_estimation", "AS", "T2", "ON", "T1.Film_ID", "=", "T2.Film_ID"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t2", ".", "type", "from", "film", "as", "t1", "join", "film_market_estimation", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id"], "question": "¿Cuáles son los títulos de las películas y los tipos correspondientes de estimaciones de mercado?\n", "question_toks": ["What", "are", "the", "titles", "of", "films", "and", "corresponding", "types", "of", "market", "estimations", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995", "query_toks": ["SELECT", "DISTINCT", "T1.Director", "FROM", "film", "AS", "T1", "JOIN", "film_market_estimation", "AS", "T2", "ON", "T1.Film_ID", "=", "T2.Film_ID", "WHERE", "T2.Year", "=", "1995"], "query_toks_no_value": ["select", "distinct", "t1", ".", "director", "from", "film", "as", "t1", "join", "film_market_estimation", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "where", "t2", ".", "year", "=", "value"], "question": "Mostrar el director distintivo de películas con estimación de mercado en el año 1995.\n", "question_toks": ["Show", "the", "distinct", "director", "of", "films", "with", "market", "estimation", "in", "the", "year", "of", "1995", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1995.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995", "query_toks": ["SELECT", "DISTINCT", "T1.Director", "FROM", "film", "AS", "T1", "JOIN", "film_market_estimation", "AS", "T2", "ON", "T1.Film_ID", "=", "T2.Film_ID", "WHERE", "T2.Year", "=", "1995"], "query_toks_no_value": ["select", "distinct", "t1", ".", "director", "from", "film", "as", "t1", "join", "film_market_estimation", "as", "t2", "on", "t1", ".", "film_id", "=", "t2", ".", "film_id", "where", "t2", ".", "year", "=", "value"], "question": "¿Quiénes son los diferentes directores de películas que tuvieron estimación de mercado en 1995?\n", "question_toks": ["Who", "are", "the", "different", "directors", "of", "films", "which", "had", "market", "estimation", "in", "1995", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], 1995.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "query_toks": ["SELECT", "T2.Country", ",", "T1.Year", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID"], "query_toks_no_value": ["select", "t2", ".", "country", ",", "t1", ".", "year", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id"], "question": "Enumere los países y los años de estimaciones del mercado cinematográfico.\n", "question_toks": ["Please", "list", "the", "countries", "and", "years", "of", "film", "market", "estimations", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID", "query_toks": ["SELECT", "T2.Country", ",", "T1.Year", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Market_ID"], "query_toks_no_value": ["select", "t2", ".", "country", ",", "t1", ".", "year", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id"], "question": "¿Cuáles son los países de los mercados y sus correspondientes años de estimación del mercado?\n", "question_toks": ["What", "are", "the", "countries", "of", "markets", "and", "their", "corresponding", "years", "of", "market", "estimation", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)", "query_toks": ["SELECT", "Title", "FROM", "film", "WHERE", "Film_ID", "NOT", "IN", "(", "SELECT", "Film_ID", "FROM", "film_market_estimation", ")"], "query_toks_no_value": ["select", "title", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "film_market_estimation", ")"], "question": "Enumere el título de las películas que no tienen ninguna estimación de mercado.\n", "question_toks": ["List", "the", "title", "of", "films", "that", "do", "not", "have", "any", "market", "estimation", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)", "query_toks": ["SELECT", "Title", "FROM", "film", "WHERE", "Film_ID", "NOT", "IN", "(", "SELECT", "Film_ID", "FROM", "film_market_estimation", ")"], "query_toks_no_value": ["select", "title", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "film_market_estimation", ")"], "question": "¿Cuáles son los títulos de las películas que no tienen estimación del mercado cinematográfico?\n", "question_toks": ["What", "are", "the", "titles", "of", "films", "that", "do", "not", "have", "a", "film", "market", "estimation", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "query_toks": ["SELECT", "title", ",", "Studio", "FROM", "film", "WHERE", "Studio", "LIKE", "``", "%", "Universal", "%", "''"], "query_toks_no_value": ["select", "title", ",", "studio", "from", "film", "where", "studio", "like", "value"], "question": "Encuentre los títulos y estudios de las películas producidas por algunos estudios cinematográficos que contenían la palabra \"Universal\".\n", "question_toks": ["Find", "the", "titles", "and", "studios", "of", "the", "films", "that", "are", "produced", "by", "some", "film", "studios", "that", "contained", "the", "word", "``", "Universal", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Universal%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"", "query_toks": ["SELECT", "title", ",", "Studio", "FROM", "film", "WHERE", "Studio", "LIKE", "``", "%", "Universal", "%", "''"], "query_toks_no_value": ["select", "title", ",", "studio", "from", "film", "where", "studio", "like", "value"], "question": "¿Cuáles son los títulos y estudios de las películas que han sido producidas por un estudio cuyo nombre contiene \"Universal\"?\n", "question_toks": ["What", "are", "the", "titles", "and", "studios", "of", "films", "that", "have", "been", "produced", "by", "a", "studio", "whose", "name", "contains", "``", "Universal", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Universal%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "query_toks": ["SELECT", "title", ",", "director", "FROM", "film", "WHERE", "film_id", "NOT", "IN", "(", "SELECT", "film_id", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.market_id", "=", "T2.Market_ID", "WHERE", "country", "=", "'China", "'", ")"], "query_toks_no_value": ["select", "title", ",", "director", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "where", "country", "=", "value", ")"], "question": "¿Cuáles son los títulos y directores de las películas que nunca se presentaron en China?\n", "question_toks": ["What", "are", "the", "titles", "and", "directors", "of", "the", "films", "were", "never", "presented", "in", "China", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "film_rank", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')", "query_toks": ["SELECT", "title", ",", "director", "FROM", "film", "WHERE", "film_id", "NOT", "IN", "(", "SELECT", "film_id", "FROM", "film_market_estimation", "AS", "T1", "JOIN", "market", "AS", "T2", "ON", "T1.market_id", "=", "T2.Market_ID", "WHERE", "country", "=", "'China", "'", ")"], "query_toks_no_value": ["select", "title", ",", "director", "from", "film", "where", "film_id", "not", "in", "(", "select", "film_id", "from", "film_market_estimation", "as", "t1", "join", "market", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "market_id", "where", "country", "=", "value", ")"], "question": "Devolver los títulos y directores de películas que nunca estuvieron en el mercado de China.\n", "question_toks": ["Return", "the", "titles", "and", "directors", "of", "films", "that", "were", "never", "in", "the", "market", "of", "China", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "query_toks": ["SELECT", "calendar_date", ",", "day_Number", "FROM", "Ref_calendar"], "query_toks_no_value": ["select", "calendar_date", ",", "day_number", "from", "ref_calendar"], "question": "Mostrar todas las fechas del calendario y los números de días.\n", "question_toks": ["Show", "all", "calendar", "dates", "and", "day", "Numbers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar", "query_toks": ["SELECT", "calendar_date", ",", "day_Number", "FROM", "Ref_calendar"], "query_toks_no_value": ["select", "calendar_date", ",", "day_number", "from", "ref_calendar"], "question": "¿Cuáles son todas las fechas del calendario y los números de días?\n", "question_toks": ["What", "are", "all", "the", "calendar", "dates", "and", "day", "Numbers", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", "from", "ref_document_types"], "question": "Enumere todos los códigos de tipos de documentos y los nombres de tipos de documentos.\n", "question_toks": ["List", "all", "document", "type", "codes", "and", "document", "type", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", "from", "ref_document_types"], "question": "¿Cuáles son todos los códigos de tipos de documentos y nombres de tipos de documentos?\n", "question_toks": ["What", "are", "all", "the", "document", "type", "codes", "and", "document", "type", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"", "query_toks": ["SELECT", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types", "WHERE", "document_type_code", "=", "``", "RV", "''"], "query_toks_no_value": ["select", "document_type_name", ",", "document_type_description", "from", "ref_document_types", "where", "document_type_code", "=", "value"], "question": "¿Cuál es el nombre y la descripción del código de tipo de documento RV?\n", "question_toks": ["What", "is", "the", "name", "and", "description", "for", "document", "type", "code", "RV", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"RV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\"", "query_toks": ["SELECT", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types", "WHERE", "document_type_code", "=", "``", "RV", "''"], "query_toks_no_value": ["select", "document_type_name", ",", "document_type_description", "from", "ref_document_types", "where", "document_type_code", "=", "value"], "question": "Dame el nombre y descripción del código de tipo de documento RV.\n", "question_toks": ["Give", "me", "the", "name", "and", "description", "of", "the", "document", "type", "code", "RV", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"RV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"", "query_toks": ["SELECT", "document_type_code", "FROM", "Ref_document_types", "WHERE", "document_type_name", "=", "``", "Paper", "''"], "query_toks_no_value": ["select", "document_type_code", "from", "ref_document_types", "where", "document_type_name", "=", "value"], "question": "¿Cuál es el código de tipo de documento para el tipo de documento \"Papel\"?\n", "question_toks": ["What", "is", "the", "document", "type", "code", "for", "document", "type", "``", "Paper", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Paper\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"", "query_toks": ["SELECT", "document_type_code", "FROM", "Ref_document_types", "WHERE", "document_type_name", "=", "``", "Paper", "''"], "query_toks_no_value": ["select", "document_type_code", "from", "ref_document_types", "where", "document_type_name", "=", "value"], "question": "Busque el código del tipo de documento \"Papel\".\n", "question_toks": ["Find", "the", "code", "of", "the", "document", "type", "``", "Paper", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Paper\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"", "query_toks": ["SELECT", "date_stored", "FROM", "All_documents", "WHERE", "Document_name", "=", "``", "Marry", "CV", "''"], "query_toks_no_value": ["select", "date_stored", "from", "all_documents", "where", "document_name", "=", "value"], "question": "¿Cuál es la fecha en que se almacenó el documento \"Casarse CV\"?\n", "question_toks": ["What", "is", "the", "date", "when", "the", "document", "``", "Marry", "CV", "''", "was", "stored", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Marry CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"", "query_toks": ["SELECT", "date_stored", "FROM", "All_documents", "WHERE", "Document_name", "=", "``", "Marry", "CV", "''"], "query_toks_no_value": ["select", "date_stored", "from", "all_documents", "where", "document_name", "=", "value"], "question": "¿Cuándo se almacenó el documento denominado \"Marry CV\"? Dame la fecha.\n", "question_toks": ["When", "was", "the", "document", "named", "``", "Marry", "CV", "''", "stored", "?", "Give", "me", "the", "date", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Marry CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date", "query_toks": ["SELECT", "T2.day_Number", ",", "T1.Date_Stored", "FROM", "All_documents", "AS", "T1", "JOIN", "Ref_calendar", "AS", "T2", "ON", "T1.date_stored", "=", "T2.calendar_date"], "query_toks_no_value": ["select", "t2", ".", "day_number", ",", "t1", ".", "date_stored", "from", "all_documents", "as", "t1", "join", "ref_calendar", "as", "t2", "on", "t1", ".", "date_stored", "=", "t2", ".", "calendar_date"], "question": "¿Cuál es el día Número y fecha de todos los documentos?\n", "question_toks": ["What", "is", "the", "day", "Number", "and", "date", "of", "all", "the", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date", "query_toks": ["SELECT", "T2.day_Number", ",", "T1.Date_Stored", "FROM", "All_documents", "AS", "T1", "JOIN", "Ref_calendar", "AS", "T2", "ON", "T1.date_stored", "=", "T2.calendar_date"], "query_toks_no_value": ["select", "t2", ".", "day_number", ",", "t1", ".", "date_stored", "from", "all_documents", "as", "t1", "join", "ref_calendar", "as", "t2", "on", "t1", ".", "date_stored", "=", "t2", ".", "calendar_date"], "question": "Devuelve el número de día y la fecha almacenada de todos los documentos.\n", "question_toks": ["Return", "the", "day", "Number", "and", "stored", "date", "for", "all", "the", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"", "query_toks": ["SELECT", "T2.document_type_name", "FROM", "All_documents", "AS", "T1", "JOIN", "Ref_document_types", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code", "WHERE", "T1.document_name", "=", "``", "How", "to", "read", "a", "book", "''"], "query_toks_no_value": ["select", "t2", ".", "document_type_name", "from", "all_documents", "as", "t1", "join", "ref_document_types", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code", "where", "t1", ".", "document_name", "=", "value"], "question": "¿Cuál es el nombre del tipo de documento para el documento con el nombre \"Cómo leer un libro\"?\n", "question_toks": ["What", "is", "the", "document", "type", "name", "for", "the", "document", "with", "name", "``", "How", "to", "read", "a", "book", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"How to read a book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"", "query_toks": ["SELECT", "T2.document_type_name", "FROM", "All_documents", "AS", "T1", "JOIN", "Ref_document_types", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code", "WHERE", "T1.document_name", "=", "``", "How", "to", "read", "a", "book", "''"], "query_toks_no_value": ["select", "t2", ".", "document_type_name", "from", "all_documents", "as", "t1", "join", "ref_document_types", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code", "where", "t1", ".", "document_name", "=", "value"], "question": "Busque el nombre del tipo de documento del documento denominado \"Cómo leer un libro\".\n", "question_toks": ["Find", "the", "document", "type", "name", "of", "the", "document", "named", "``", "How", "to", "read", "a", "book", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"How to read a book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  location_name FROM Ref_locations", "query_toks": ["SELECT", "location_code", ",", "location_name", "FROM", "Ref_locations"], "query_toks_no_value": ["select", "location_code", ",", "location_name", "from", "ref_locations"], "question": "Enumere todos los códigos de ubicación y los nombres de ubicación.\n", "question_toks": ["List", "all", "location", "codes", "and", "location", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  location_name FROM Ref_locations", "query_toks": ["SELECT", "location_code", ",", "location_name", "FROM", "Ref_locations"], "query_toks_no_value": ["select", "location_code", ",", "location_name", "from", "ref_locations"], "question": "¿Cuáles son todos los códigos de ubicación y nombres de ubicación?\n", "question_toks": ["What", "are", "all", "the", "location", "codes", "and", "location", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "query_toks": ["SELECT", "location_name", ",", "location_description", "FROM", "Ref_locations", "WHERE", "location_code", "=", "``", "x", "''"], "query_toks_no_value": ["select", "location_name", ",", "location_description", "from", "ref_locations", "where", "location_code", "=", "value"], "question": "¿Cuáles son el nombre y la descripción del código de ubicación x?\n", "question_toks": ["What", "are", "the", "name", "and", "description", "for", "location", "code", "x", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"x\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"", "query_toks": ["SELECT", "location_name", ",", "location_description", "FROM", "Ref_locations", "WHERE", "location_code", "=", "``", "x", "''"], "query_toks_no_value": ["select", "location_name", ",", "location_description", "from", "ref_locations", "where", "location_code", "=", "value"], "question": "Dame el nombre y la descripción de la ubicación con el código x.\n", "question_toks": ["Give", "me", "the", "name", "and", "description", "of", "the", "location", "with", "code", "x", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"x\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"", "query_toks": ["SELECT", "location_code", "FROM", "Ref_locations", "WHERE", "location_name", "=", "``", "Canada", "''"], "query_toks_no_value": ["select", "location_code", "from", "ref_locations", "where", "location_name", "=", "value"], "question": "¿Cuál es el código de ubicación para el país \"Canadá\"?\n", "question_toks": ["What", "is", "the", "location", "code", "for", "the", "country", "``", "Canada", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"", "query_toks": ["SELECT", "location_code", "FROM", "Ref_locations", "WHERE", "location_name", "=", "``", "Canada", "''"], "query_toks_no_value": ["select", "location_code", "from", "ref_locations", "where", "location_name", "=", "value"], "question": "Muestra el código de ubicación del país \"Canadá\".\n", "question_toks": ["Show", "the", "location", "code", "of", "the", "country", "``", "Canada", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES", "query_toks": ["SELECT", "role_code", ",", "role_name", ",", "role_description", "FROM", "ROLES"], "query_toks_no_value": ["select", "role_code", ",", "role_name", ",", "role_description", "from", "roles"], "question": "Enumere todos los códigos de función, nombres de funciones y descripciones de funciones.\n", "question_toks": ["List", "all", "role", "codes", ",", "role", "names", ",", "and", "role", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES", "query_toks": ["SELECT", "role_code", ",", "role_name", ",", "role_description", "FROM", "ROLES"], "query_toks_no_value": ["select", "role_code", ",", "role_name", ",", "role_description", "from", "roles"], "question": "¿Cuáles son todos los códigos de función, nombres de funciones y descripciones de funciones?\n", "question_toks": ["What", "are", "all", "the", "role", "codes", ",", "role", "names", ",", "and", "role", "descriptions", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"", "query_toks": ["SELECT", "role_name", ",", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "``", "MG", "''"], "query_toks_no_value": ["select", "role_name", ",", "role_description", "from", "roles", "where", "role_code", "=", "value"], "question": "¿Cuáles son el nombre y la descripción del código de función \"MG\"?\n", "question_toks": ["What", "are", "the", "name", "and", "description", "for", "role", "code", "``", "MG", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"MG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"", "query_toks": ["SELECT", "role_name", ",", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "``", "MG", "''"], "query_toks_no_value": ["select", "role_name", ",", "role_description", "from", "roles", "where", "role_code", "=", "value"], "question": "Busque el nombre y la descripción del rol con el código \"MG\".\n", "question_toks": ["Find", "the", "name", "and", "description", "of", "the", "role", "with", "code", "``", "MG", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"MG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"", "query_toks": ["SELECT", "role_description", "FROM", "ROLES", "WHERE", "role_name", "=", "``", "Proof", "Reader", "''"], "query_toks_no_value": ["select", "role_description", "from", "roles", "where", "role_name", "=", "value"], "question": "Muestre la descripción del nombre de función \"Lector de pruebas\".\n", "question_toks": ["Show", "the", "description", "for", "role", "name", "``", "Proof", "Reader", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Proof Reader\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"", "query_toks": ["SELECT", "role_description", "FROM", "ROLES", "WHERE", "role_name", "=", "``", "Proof", "Reader", "''"], "query_toks_no_value": ["select", "role_description", "from", "roles", "where", "role_name", "=", "value"], "question": "¿Cuál es la descripción del rol denominado \"Revisor de pruebas\"?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "role", "named", "``", "Proof", "Reader", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Proof Reader\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "query_toks": ["SELECT", "employee_name", ",", "role_code", ",", "date_of_birth", "FROM", "Employees", "WHERE", "employee_Name", "=", "'Armani", "'"], "query_toks_no_value": ["select", "employee_name", ",", "role_code", ",", "date_of_birth", "from", "employees", "where", "employee_name", "=", "value"], "question": "Muestre el nombre, código de función y fecha de nacimiento del empleado con el nombre 'Armani'.\n", "question_toks": ["Show", "the", "name", ",", "role", "code", ",", "and", "date", "of", "birth", "for", "the", "employee", "with", "name", "'Armani", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Armani\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'", "query_toks": ["SELECT", "employee_name", ",", "role_code", ",", "date_of_birth", "FROM", "Employees", "WHERE", "employee_Name", "=", "'Armani", "'"], "query_toks_no_value": ["select", "employee_name", ",", "role_code", ",", "date_of_birth", "from", "employees", "where", "employee_name", "=", "value"], "question": "¿Cuáles son el nombre, código de función y fecha de nacimiento del empleado llamado 'Armani'?\n", "question_toks": ["What", "are", "the", "name", ",", "role", "code", ",", "and", "date", "of", "birth", "of", "the", "employee", "named", "'Armani", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 19, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Armani\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"", "query_toks": ["SELECT", "employee_ID", "FROM", "Employees", "WHERE", "employee_name", "=", "``", "Ebba", "''"], "query_toks_no_value": ["select", "employee_id", "from", "employees", "where", "employee_name", "=", "value"], "question": "¿Cuál es la identificación del empleado llamado Ebba?\n", "question_toks": ["What", "is", "the", "id", "for", "the", "employee", "called", "Ebba", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Ebba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"", "query_toks": ["SELECT", "employee_ID", "FROM", "Employees", "WHERE", "employee_name", "=", "``", "Ebba", "''"], "query_toks_no_value": ["select", "employee_id", "from", "employees", "where", "employee_name", "=", "value"], "question": "Muestra la identificación del empleado llamado Ebba.\n", "question_toks": ["Show", "the", "id", "of", "the", "employee", "named", "Ebba", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Ebba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"", "query_toks": ["SELECT", "employee_name", "FROM", "Employees", "WHERE", "role_code", "=", "``", "HR", "''"], "query_toks_no_value": ["select", "employee_name", "from", "employees", "where", "role_code", "=", "value"], "question": "Muestra los nombres de todos los empleados con rol \"RR.HH.\".\n", "question_toks": ["Show", "the", "names", "of", "all", "the", "employees", "with", "role", "``", "HR", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"HR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"", "query_toks": ["SELECT", "employee_name", "FROM", "Employees", "WHERE", "role_code", "=", "``", "HR", "''"], "query_toks_no_value": ["select", "employee_name", "from", "employees", "where", "role_code", "=", "value"], "question": "¿Qué empleados tienen el rol con el código \"HR\"? Encuentra sus nombres.\n", "question_toks": ["Which", "employees", "have", "the", "role", "with", "code", "``", "HR", "''", "?", "Find", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"HR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"", "query_toks": ["SELECT", "T2.role_name", ",", "T2.role_description", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T1.employee_name", "=", "``", "Ebba", "''"], "query_toks_no_value": ["select", "t2", ".", "role_name", ",", "t2", ".", "role_description", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t1", ".", "employee_name", "=", "value"], "question": "¿Cuál es el nombre y la descripción del puesto del empleado llamado Ebba?\n", "question_toks": ["What", "is", "the", "role", "name", "and", "role", "description", "for", "employee", "called", "Ebba", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Ebba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"", "query_toks": ["SELECT", "T2.role_name", ",", "T2.role_description", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T1.employee_name", "=", "``", "Ebba", "''"], "query_toks_no_value": ["select", "t2", ".", "role_name", ",", "t2", ".", "role_description", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t1", ".", "employee_name", "=", "value"], "question": "Muestra el nombre y descripción del rol desempeñado por el empleado llamado Ebba.\n", "question_toks": ["Show", "the", "name", "and", "description", "of", "the", "role", "played", "by", "the", "employee", "named", "Ebba", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Ebba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"", "query_toks": ["SELECT", "T1.employee_name", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T2.role_name", "=", "``", "Editor", "''"], "query_toks_no_value": ["select", "t1", ".", "employee_name", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t2", ".", "role_name", "=", "value"], "question": "Muestra los nombres de los empleados con el rol de Editor.\n", "question_toks": ["Show", "the", "names", "of", "employees", "with", "role", "name", "Editor", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Editor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"", "query_toks": ["SELECT", "T1.employee_name", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T2.role_name", "=", "``", "Editor", "''"], "query_toks_no_value": ["select", "t1", ".", "employee_name", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t2", ".", "role_name", "=", "value"], "question": "Busque los nombres de todos los empleados cuyo nombre de función es \"Editor\".\n", "question_toks": ["Find", "the", "names", "of", "all", "the", "employees", "whose", "the", "role", "name", "is", "``", "Editor", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Editor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"", "query_toks": ["SELECT", "T1.employee_id", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T2.role_name", "=", "``", "Human", "Resource", "''", "OR", "T2.role_name", "=", "``", "Manager", "''"], "query_toks_no_value": ["select", "t1", ".", "employee_id", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t2", ".", "role_name", "=", "value", "or", "t2", ".", "role_name", "=", "value"], "question": "Muestre las identificaciones de empleados de todos los empleados con el nombre de función \"Recursos humanos\" o \"Gerente\".\n", "question_toks": ["Show", "the", "employee", "ids", "for", "all", "employees", "with", "role", "name", "``", "Human", "Resource", "''", "or", "``", "Manager", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Human Resource\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Manager\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"", "query_toks": ["SELECT", "T1.employee_id", "FROM", "Employees", "AS", "T1", "JOIN", "ROLES", "AS", "T2", "ON", "T1.role_code", "=", "T2.role_code", "WHERE", "T2.role_name", "=", "``", "Human", "Resource", "''", "OR", "T2.role_name", "=", "``", "Manager", "''"], "query_toks_no_value": ["select", "t1", ".", "employee_id", "from", "employees", "as", "t1", "join", "roles", "as", "t2", "on", "t1", ".", "role_code", "=", "t2", ".", "role_code", "where", "t2", ".", "role_name", "=", "value", "or", "t2", ".", "role_name", "=", "value"], "question": "¿Cuáles son los ID de los empleados cuyo nombre de función es \"Recursos Humanos\" o \"Gerente\"?\n", "question_toks": ["What", "are", "the", "employee", "ids", "of", "the", "employees", "whose", "role", "name", "is", "``", "Human", "Resource", "''", "or", "``", "Manager", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Human Resource\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Manager\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT DISTINCT location_code FROM Document_locations", "query_toks": ["SELECT", "DISTINCT", "location_code", "FROM", "Document_locations"], "query_toks_no_value": ["select", "distinct", "location_code", "from", "document_locations"], "question": "¿Cuáles son los diferentes códigos de ubicación para documentos?\n", "question_toks": ["What", "are", "the", "different", "location", "codes", "for", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [true, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT DISTINCT location_code FROM Document_locations", "query_toks": ["SELECT", "DISTINCT", "location_code", "FROM", "Document_locations"], "query_toks_no_value": ["select", "distinct", "location_code", "from", "document_locations"], "question": "Dame todos los códigos de ubicación distintos de los documentos.\n", "question_toks": ["Give", "me", "all", "the", "distinct", "location", "codes", "for", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [true, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"", "query_toks": ["SELECT", "T3.location_name", "FROM", "All_documents", "AS", "T1", "JOIN", "Document_locations", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "JOIN", "Ref_locations", "AS", "T3", "ON", "T2.location_code", "=", "T3.location_code", "WHERE", "T1.document_name", "=", "``", "Robin", "CV", "''"], "query_toks_no_value": ["select", "t3", ".", "location_name", "from", "all_documents", "as", "t1", "join", "document_locations", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "join", "ref_locations", "as", "t3", "on", "t2", ".", "location_code", "=", "t3", ".", "location_code", "where", "t1", ".", "document_name", "=", "value"], "question": "Muestra el nombre de la ubicación del documento \"Robin CV\".\n", "question_toks": ["Show", "the", "location", "name", "for", "document", "``", "Robin", "CV", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 6], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Robin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"", "query_toks": ["SELECT", "T3.location_name", "FROM", "All_documents", "AS", "T1", "JOIN", "Document_locations", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "JOIN", "Ref_locations", "AS", "T3", "ON", "T2.location_code", "=", "T3.location_code", "WHERE", "T1.document_name", "=", "``", "Robin", "CV", "''"], "query_toks_no_value": ["select", "t3", ".", "location_name", "from", "all_documents", "as", "t1", "join", "document_locations", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "join", "ref_locations", "as", "t3", "on", "t2", ".", "location_code", "=", "t3", ".", "location_code", "where", "t1", ".", "document_name", "=", "value"], "question": "¿Cuál es el nombre de la ubicación del documento \"Robin CV\"?\n", "question_toks": ["What", "is", "the", "location", "name", "of", "the", "document", "``", "Robin", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 6], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Robin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "query_toks": ["SELECT", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "FROM", "Document_locations"], "query_toks_no_value": ["select", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "from", "document_locations"], "question": "Muestra el código de ubicación, la fecha de inicio y los datos de finalización en esa ubicación para todos los documentos.\n", "question_toks": ["Show", "the", "location", "code", ",", "the", "starting", "date", "and", "ending", "data", "in", "that", "location", "for", "all", "the", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "query_toks": ["SELECT", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "FROM", "Document_locations"], "query_toks_no_value": ["select", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "from", "document_locations"], "question": "¿Cuáles son el código de ubicación de cada documento y los datos de fecha de inicio y finalización en esa ubicación?\n", "question_toks": ["What", "are", "each", "document", "'s", "location", "code", ",", "and", "starting", "date", "and", "ending", "data", "in", "that", "location", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "query_toks": ["SELECT", "T1.date_in_location_from", ",", "T1.date_in_locaton_to", "FROM", "Document_locations", "AS", "T1", "JOIN", "All_documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Robin", "CV", "''"], "query_toks_no_value": ["select", "t1", ".", "date_in_location_from", ",", "t1", ".", "date_in_locaton_to", "from", "document_locations", "as", "t1", "join", "all_documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "¿Cuál es \"la fecha en la ubicación desde\" y \"la fecha en la ubicación hasta\" para el documento con el nombre \"Robin CV\"?\n", "question_toks": ["What", "is", "``", "the", "date", "in", "location", "from", "''", "and", "``", "the", "date", "in", "location", "to", "''", "for", "the", "document", "with", "name", "``", "Robin", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Robin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"", "query_toks": ["SELECT", "T1.date_in_location_from", ",", "T1.date_in_locaton_to", "FROM", "Document_locations", "AS", "T1", "JOIN", "All_documents", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T2.document_name", "=", "``", "Robin", "CV", "''"], "query_toks_no_value": ["select", "t1", ".", "date_in_location_from", ",", "t1", ".", "date_in_locaton_to", "from", "document_locations", "as", "t1", "join", "all_documents", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Busque la fecha de inicio y los datos de finalización en la ubicación del documento denominado \"Robin CV\".\n", "question_toks": ["Find", "the", "starting", "date", "and", "ending", "data", "in", "location", "for", "the", "document", "named", "``", "Robin", "CV", "''", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Robin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "query_toks": ["SELECT", "T2.employee_name", ",", "T3.employee_name", "FROM", "Documents_to_be_destroyed", "AS", "T1", "JOIN", "Employees", "AS", "T2", "ON", "T1.Destruction_Authorised_by_Employee_ID", "=", "T2.employee_id", "JOIN", "Employees", "AS", "T3", "ON", "T1.Destroyed_by_Employee_ID", "=", "T3.employee_id", ";"], "query_toks_no_value": ["select", "t2", ".", "employee_name", ",", "t3", ".", "employee_name", "from", "documents_to_be_destroyed", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "destruction_authorised_by_employee_id", "=", "t2", ".", "employee_id", "join", "employees", "as", "t3", "on", "t1", ".", "destroyed_by_employee_id", "=", "t3", ".", "employee_id"], "question": "¿Cómo se llaman los empleados que autorizaron la destrucción y los empleados que destruyeron los documentos correspondientes?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "employees", "who", "authorised", "the", "destruction", "and", "the", "employees", "who", "destroyed", "the", "corresponding", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 5], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;", "query_toks": ["SELECT", "T2.employee_name", ",", "T3.employee_name", "FROM", "Documents_to_be_destroyed", "AS", "T1", "JOIN", "Employees", "AS", "T2", "ON", "T1.Destruction_Authorised_by_Employee_ID", "=", "T2.employee_id", "JOIN", "Employees", "AS", "T3", "ON", "T1.Destroyed_by_Employee_ID", "=", "T3.employee_id", ";"], "query_toks_no_value": ["select", "t2", ".", "employee_name", ",", "t3", ".", "employee_name", "from", "documents_to_be_destroyed", "as", "t1", "join", "employees", "as", "t2", "on", "t1", ".", "destruction_authorised_by_employee_id", "=", "t2", ".", "employee_id", "join", "employees", "as", "t3", "on", "t1", ".", "destroyed_by_employee_id", "=", "t3", ".", "employee_id"], "question": "Enumere los nombres de los empleados que autorizaron la destrucción de documentos y de los empleados que destruyeron los documentos correspondientes.\n", "question_toks": ["List", "the", "names", "of", "the", "employees", "who", "authorized", "the", "destruction", "of", "documents", "and", "the", "employees", "who", "destroyed", "the", "corresponding", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 5], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "query_toks": ["SELECT", "DISTINCT", "Destruction_Authorised_by_Employee_ID", "FROM", "Documents_to_be_destroyed"], "query_toks_no_value": ["select", "distinct", "destruction_authorised_by_employee_id", "from", "documents_to_be_destroyed"], "question": "Muestra las identificaciones de todos los empleados que han autorizado la destrucción.\n", "question_toks": ["Show", "the", "ids", "of", "all", "employees", "who", "have", "authorized", "destruction", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed", "query_toks": ["SELECT", "DISTINCT", "Destruction_Authorised_by_Employee_ID", "FROM", "Documents_to_be_destroyed"], "query_toks_no_value": ["select", "distinct", "destruction_authorised_by_employee_id", "from", "documents_to_be_destroyed"], "question": "¿Cuáles son las identificaciones de todos los empleados que autorizan la destrucción de documentos?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "the", "employees", "who", "authorize", "document", "destruction", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed", "query_toks": ["SELECT", "DISTINCT", "Destroyed_by_Employee_ID", "FROM", "Documents_to_be_destroyed"], "query_toks_no_value": ["select", "distinct", "destroyed_by_employee_id", "from", "documents_to_be_destroyed"], "question": "Muestra los identificadores de todos los empleados que han destruido un documento.\n", "question_toks": ["Show", "the", "ids", "of", "all", "employees", "who", "have", "destroyed", "a", "document", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Doc_Tracking_DB", "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed", "query_toks": ["SELECT", "DISTINCT", "Destroyed_by_Employee_ID", "FROM", "Documents_to_be_destroyed"], "query_toks_no_value": ["select", "distinct", "destroyed_by_employee_id", "from", "documents_to_be_destroyed"], "question": "¿Cuáles son las identificaciones de todos los empleados que han destruido documentos?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "the", "employees", "who", "have", "destroyed", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubname FROM club", "query_toks": ["SELECT", "clubname", "FROM", "club"], "query_toks_no_value": ["select", "clubname", "from", "club"], "question": "¿Cuáles son los nombres de todos los clubes?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "clubs", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubname FROM club", "query_toks": ["SELECT", "clubname", "FROM", "club"], "query_toks_no_value": ["select", "clubname", "from", "club"], "question": "Dame el nombre de cada club.\n", "question_toks": ["Give", "me", "the", "name", "of", "each", "club", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT fname FROM student", "query_toks": ["SELECT", "DISTINCT", "fname", "FROM", "student"], "query_toks_no_value": ["select", "distinct", "fname", "from", "student"], "question": "¿Cuáles son los nombres de todos los estudiantes?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "the", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT fname FROM student", "query_toks": ["SELECT", "DISTINCT", "fname", "FROM", "student"], "query_toks_no_value": ["select", "distinct", "fname", "from", "student"], "question": "Encuentre el nombre de cada estudiante.\n", "question_toks": ["Find", "each", "student", "'s", "first", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "query_toks": ["SELECT", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''"], "query_toks_no_value": ["select", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value"], "question": "Encuentra los apellidos de los miembros del club \"Bootup Baltimore\".\n", "question_toks": ["Find", "the", "last", "names", "of", "the", "members", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"", "query_toks": ["SELECT", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''"], "query_toks_no_value": ["select", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value"], "question": "¿Quiénes son los miembros del club llamado \"Bootup Baltimore\"? Dame sus apellidos.\n", "question_toks": ["Who", "are", "the", "members", "of", "the", "club", "named", "``", "Bootup", "Baltimore", "''", "?", "Give", "me", "their", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "query_toks": ["SELECT", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''"], "query_toks_no_value": ["select", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value"], "question": "¿Quiénes son los miembros del club llamado \"Hopkins Student Enterprises\"? Mostrar el apellido.\n", "question_toks": ["Who", "are", "the", "members", "of", "the", "club", "named", "``", "Hopkins", "Student", "Enterprises", "''", "?", "Show", "the", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"", "query_toks": ["SELECT", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''"], "query_toks_no_value": ["select", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value"], "question": "Devuelve el apellido de los miembros del club llamado \"Hopkins Student Enterprises\".\n", "question_toks": ["Return", "the", "last", "name", "for", "the", "members", "of", "the", "club", "named", "``", "Hopkins", "Student", "Enterprises", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "Encuentra a todas las socias del club \"Bootup Baltimore\". Muestra el nombre y apellido.\n", "question_toks": ["Find", "all", "the", "female", "members", "of", "club", "``", "Bootup", "Baltimore", "''", ".", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "Dame el nombre y apellido de todas las socias del club \"Bootup Baltimore\".\n", "question_toks": ["Give", "me", "the", "first", "name", "and", "last", "name", "for", "all", "the", "female", "members", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t3.sex", "=", "``", "M", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "Encuentra todos los miembros masculinos del club \"Hopkins Student Enterprises\". Muestra el nombre y apellido.\n", "question_toks": ["Find", "all", "the", "male", "members", "of", "club", "``", "Hopkins", "Student", "Enterprises", "''", ".", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t3.sex", "=", "``", "M", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "sex", "=", "value"], "question": "¿Cuáles son el nombre y apellido de cada miembro masculino del club \"Hopkins Student Enterprises\"?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "each", "male", "member", "in", "club", "``", "Hopkins", "Student", "Enterprises", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.major", "=", "``", "600", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "major", "=", "value"], "question": "Encuentra a todos los miembros de \"Bootup Baltimore\" cuya especialidad es \"600\". Muestra el nombre y apellido.\n", "question_toks": ["Find", "all", "members", "of", "``", "Bootup", "Baltimore", "''", "whose", "major", "is", "``", "600", "''", ".", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"600\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t3.major", "=", "``", "600", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t3", ".", "major", "=", "value"], "question": "¿Qué miembros de \"Bootup Baltimore\" son los principales en \"600\"? Dame sus nombres y apellidos.\n", "question_toks": ["Which", "members", "of", "``", "Bootup", "Baltimore", "''", "major", "in", "``", "600", "''", "?", "Give", "me", "their", "first", "names", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"600\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"", "query_toks": ["SELECT", "clubdesc", "FROM", "club", "WHERE", "clubname", "=", "``", "Tennis", "Club", "''"], "query_toks_no_value": ["select", "clubdesc", "from", "club", "where", "clubname", "=", "value"], "question": "¿Cuál es la descripción del club llamado \"Club de Tenis\"?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "club", "named", "``", "Tennis", "Club", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Tennis Club\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"", "query_toks": ["SELECT", "clubdesc", "FROM", "club", "WHERE", "clubname", "=", "``", "Tennis", "Club", "''"], "query_toks_no_value": ["select", "clubdesc", "from", "club", "where", "clubname", "=", "value"], "question": "Encuentra la descripción del club llamado \"Club de Tenis\".\n", "question_toks": ["Find", "the", "description", "of", "the", "club", "called", "``", "Tennis", "Club", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Tennis Club\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "query_toks": ["SELECT", "clubdesc", "FROM", "club", "WHERE", "clubname", "=", "``", "Pen", "and", "Paper", "Gaming", "''"], "query_toks_no_value": ["select", "clubdesc", "from", "club", "where", "clubname", "=", "value"], "question": "Encuentra la descripción del club \"Pen and Paper Gaming\".\n", "question_toks": ["Find", "the", "description", "of", "the", "club", "``", "Pen", "and", "Paper", "Gaming", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Pen and Paper Gaming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "query_toks": ["SELECT", "clubdesc", "FROM", "club", "WHERE", "clubname", "=", "``", "Pen", "and", "Paper", "Gaming", "''"], "query_toks_no_value": ["select", "clubdesc", "from", "club", "where", "clubname", "=", "value"], "question": "¿Cuál es la descripción del club \"Pen and Paper Gaming\"?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "club", "``", "Pen", "and", "Paper", "Gaming", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Pen and Paper Gaming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Tennis", "Club", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "¿Cuál es la ubicación del club llamado \"Club de Tenis\"?\n", "question_toks": ["What", "is", "the", "location", "of", "the", "club", "named", "``", "Tennis", "Club", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Tennis Club\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Tennis", "Club", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "¿Dónde está ubicado el club llamado \"Club de Tenis\"?\n", "question_toks": ["Where", "us", "the", "club", "named", "``", "Tennis", "Club", "''", "located", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Tennis Club\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Pen", "and", "Paper", "Gaming", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "Encuentre la ubicación del club \"Pen and Paper Gaming\".\n", "question_toks": ["Find", "the", "location", "of", "the", "club", "``", "Pen", "and", "Paper", "Gaming", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Pen and Paper Gaming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Pen", "and", "Paper", "Gaming", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "¿Dónde está ubicado el club \"Pen and Paper Gaming\"?\n", "question_toks": ["Where", "is", "the", "club", "``", "Pen", "and", "Paper", "Gaming", "''", "located", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Pen and Paper Gaming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "¿Dónde está ubicado el club \"Hopkins Student Enterprises\"?\n", "question_toks": ["Where", "is", "the", "club", "``", "Hopkins", "Student", "Enterprises", "''", "located", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "Dime la ubicación del club \"Hopkins Student Enterprises\".\n", "question_toks": ["Tell", "me", "the", "location", "of", "the", "club", "``", "Hopkins", "Student", "Enterprises", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"", "query_toks": ["SELECT", "clubname", "FROM", "club", "WHERE", "clublocation", "=", "``", "AKW", "''"], "query_toks_no_value": ["select", "clubname", "from", "club", "where", "clublocation", "=", "value"], "question": "Encuentra el nombre de todos los clubes en \"AKW\".\n", "question_toks": ["Find", "the", "name", "of", "all", "the", "clubs", "at", "``", "AKW", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AKW\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"", "query_toks": ["SELECT", "clubname", "FROM", "club", "WHERE", "clublocation", "=", "``", "AKW", "''"], "query_toks_no_value": ["select", "clubname", "from", "club", "where", "clublocation", "=", "value"], "question": "¿Qué clubes se encuentran en \"AKW\"? Devuelve los nombres de los clubes.\n", "question_toks": ["Which", "clubs", "are", "located", "at", "``", "AKW", "''", "?", "Return", "the", "club", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AKW\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t2.position", "=", "``", "President", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "¿Cuáles son el nombre y apellido del presidente del club \"Bootup Baltimore\"?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "name", "of", "the", "president", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"President\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Bootup", "Baltimore", "''", "AND", "t2.position", "=", "``", "President", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "¿Quién es el presidente del club \"Bootup Baltimore\"? Dame el nombre y apellido.\n", "question_toks": ["Who", "is", "the", "president", "of", "the", "club", "``", "Bootup", "Baltimore", "''", "?", "Give", "me", "the", "first", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Bootup Baltimore\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"President\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t2.position", "=", "``", "CTO", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "¿Quién es el \"CTO\" del club \"Hopkins Student Enterprises\"? Muestra el nombre y apellido.\n", "question_toks": ["Who", "is", "the", "``", "CTO", "''", "of", "club", "``", "Hopkins", "Student", "Enterprises", "''", "?", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"CTO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"", "query_toks": ["SELECT", "t3.fname", ",", "t3.lname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t1.clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''", "AND", "t2.position", "=", "``", "CTO", "''"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t1", ".", "clubname", "=", "value", "and", "t2", ".", "position", "=", "value"], "question": "¿Encontrar el nombre y apellido del \"CTO\" del club \"Hopkins Student Enterprises\"?\n", "question_toks": ["Find", "the", "first", "name", "and", "last", "name", "for", "the", "``", "CTO", "''", "of", "the", "club", "``", "Hopkins", "Student", "Enterprises", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null], "and", [false, 2, [0, [0, 15, false], null], "\"CTO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.city_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "city_code", "=", "value"], "question": "Encuentre los nombres de todos los clubes que tienen al menos un miembro de la ciudad con el código de ciudad \"BAL\".\n", "question_toks": ["Find", "the", "names", "of", "all", "the", "clubs", "that", "have", "at", "least", "a", "member", "from", "the", "city", "with", "city", "code", "``", "BAL", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"BAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.city_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "city_code", "=", "value"], "question": "¿Qué clubes tienen uno o más socios de la ciudad con código \"BAL\"? Dame los nombres de los clubes.\n", "question_toks": ["Which", "clubs", "have", "one", "or", "more", "members", "from", "the", "city", "with", "code", "``", "BAL", "''", "?", "Give", "me", "the", "names", "of", "the", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"BAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\"", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.city_code", "=", "``", "HOU", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "city_code", "=", "value"], "question": "Encuentre los nombres de los clubes que tienen al menos un miembro de la ciudad con el código de ciudad \"HOU\".\n", "question_toks": ["Find", "the", "names", "of", "the", "clubs", "that", "have", "at", "least", "a", "member", "from", "the", "city", "with", "city", "code", "``", "HOU", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"HOU\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\"", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.city_code", "=", "``", "HOU", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "city_code", "=", "value"], "question": "¿Qué clubes tienen uno o más socios de la ciudad con código \"HOU\"? Dame los nombres de los clubes.\n", "question_toks": ["Which", "clubs", "have", "one", "or", "more", "members", "from", "the", "city", "with", "code", "``", "HOU", "''", "?", "Give", "me", "the", "names", "of", "the", "clubs", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"HOU\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.fname", "=", "``", "Davis", "''", "AND", "t3.lname", "=", "``", "Steven", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "fname", "=", "value", "and", "t3", ".", "lname", "=", "value"], "question": "Enumere los clubes que tienen a \"Davis Steven\" como miembro.\n", "question_toks": ["List", "the", "clubs", "having", "``", "Davis", "Steven", "''", "as", "a", "member", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Davis\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Steven\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.fname", "=", "``", "Davis", "''", "AND", "t3.lname", "=", "``", "Steven", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "fname", "=", "value", "and", "t3", ".", "lname", "=", "value"], "question": "¿Cuáles son los nombres de los clubes que tienen a \"Davis Steven\" como miembro?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "clubs", "that", "have", "``", "Davis", "Steven", "''", "as", "a", "member", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Davis\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Steven\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.advisor", "=", "1121"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "advisor", "=", "value"], "question": "Enumere los clubes que tienen al menos un socio con asesor \"1121\".\n", "question_toks": ["List", "the", "clubs", "that", "have", "at", "least", "a", "member", "with", "advisor", "``", "1121", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1121.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "club_1", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121", "query_toks": ["SELECT", "DISTINCT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.advisor", "=", "1121"], "query_toks_no_value": ["select", "distinct", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "advisor", "=", "value"], "question": "¿Qué clubes tienen uno o más socios cuyo asesor es \"1121\"?\n", "question_toks": ["Which", "clubs", "have", "one", "or", "more", "members", "whose", "advisor", "is", "``", "1121", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1121.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'", "query_toks": ["SELECT", "T1.sent_date", "FROM", "documents", "AS", "T1", "JOIN", "Grants", "AS", "T2", "ON", "T1.grant_id", "=", "T2.grant_id", "JOIN", "Organisations", "AS", "T3", "ON", "T2.organisation_id", "=", "T3.organisation_id", "JOIN", "organisation_Types", "AS", "T4", "ON", "T3.organisation_type", "=", "T4.organisation_type", "WHERE", "T2.grant_amount", ">", "5000", "AND", "T4.organisation_type_description", "=", "'Research", "'"], "query_toks_no_value": ["select", "t1", ".", "sent_date", "from", "documents", "as", "t1", "join", "grants", "as", "t2", "on", "t1", ".", "grant_id", "=", "t2", ".", "grant_id", "join", "organisations", "as", "t3", "on", "t2", ".", "organisation_id", "=", "t3", ".", "organisation_id", "join", "organisation_types", "as", "t4", "on", "t3", ".", "organisation_type", "=", "t4", ".", "organisation_type", "where", "t2", ".", "grant_amount", ">", "value", "and", "t4", ".", "organisation_type_description", "=", "value"], "question": "Conozca las fechas de envío de los documentos con un monto de subvención superior a 5000 otorgados por tipo de organización descrito\n", "question_toks": ["Find", "out", "the", "send", "dates", "of", "the", "documents", "with", "the", "grant", "amount", "of", "more", "than", "5000", "were", "granted", "by", "organisation", "type", "described"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 5000.0, null], "and", [false, 2, [0, [0, 16, false], null], "\"Research\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'", "query_toks": ["SELECT", "T1.sent_date", "FROM", "documents", "AS", "T1", "JOIN", "Grants", "AS", "T2", "ON", "T1.grant_id", "=", "T2.grant_id", "JOIN", "Organisations", "AS", "T3", "ON", "T2.organisation_id", "=", "T3.organisation_id", "JOIN", "organisation_Types", "AS", "T4", "ON", "T3.organisation_type", "=", "T4.organisation_type", "WHERE", "T2.grant_amount", ">", "5000", "AND", "T4.organisation_type_description", "=", "'Research", "'"], "query_toks_no_value": ["select", "t1", ".", "sent_date", "from", "documents", "as", "t1", "join", "grants", "as", "t2", "on", "t1", ".", "grant_id", "=", "t2", ".", "grant_id", "join", "organisations", "as", "t3", "on", "t2", ".", "organisation_id", "=", "t3", ".", "organisation_id", "join", "organisation_types", "as", "t4", "on", "t3", ".", "organisation_type", "=", "t4", ".", "organisation_type", "where", "t2", ".", "grant_amount", ">", "value", "and", "t4", ".", "organisation_type_description", "=", "value"], "question": "¿Cuáles son las fechas de envío de todos los documentos que tienen un monto de subvención superior a 5000 y están relacionados con la investigación?\n", "question_toks": ["What", "are", "the", "send", "dates", "for", "all", "documents", "that", "have", "a", "grant", "amount", "of", "more", "than", "5000", "and", "are", "involved", "in", "research", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 5000.0, null], "and", [false, 2, [0, [0, 16, false], null], "\"Research\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100", "query_toks": ["SELECT", "T1.response_received_date", "FROM", "Documents", "AS", "T1", "JOIN", "Document_Types", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code", "JOIN", "Grants", "AS", "T3", "ON", "T1.grant_id", "=", "T3.grant_id", "WHERE", "T2.document_description", "=", "'Regular", "'", "OR", "T3.grant_amount", ">", "100"], "query_toks_no_value": ["select", "t1", ".", "response_received_date", "from", "documents", "as", "t1", "join", "document_types", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code", "join", "grants", "as", "t3", "on", "t1", ".", "grant_id", "=", "t3", ".", "grant_id", "where", "t2", ".", "document_description", "=", "value", "or", "t3", ".", "grant_amount", ">", "value"], "question": "¿Cuáles son las fechas de respuesta recibida para los documentos calificados como 'Regulares' o otorgados con más de 100?\n", "question_toks": ["What", "are", "the", "response", "received", "dates", "for", "the", "documents", "described", "as", "'Regular", "'", "or", "granted", "with", "more", "than", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Regular\"", null], "or", [false, 3, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100", "query_toks": ["SELECT", "T1.response_received_date", "FROM", "Documents", "AS", "T1", "JOIN", "Document_Types", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code", "JOIN", "Grants", "AS", "T3", "ON", "T1.grant_id", "=", "T3.grant_id", "WHERE", "T2.document_description", "=", "'Regular", "'", "OR", "T3.grant_amount", ">", "100"], "query_toks_no_value": ["select", "t1", ".", "response_received_date", "from", "documents", "as", "t1", "join", "document_types", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code", "join", "grants", "as", "t3", "on", "t1", ".", "grant_id", "=", "t3", ".", "grant_id", "where", "t2", ".", "document_description", "=", "value", "or", "t3", ".", "grant_amount", ">", "value"], "question": "¿Cuál es la fecha de recepción de respuesta del documento calificado como Regular al que se le otorgaron más de 100 dólares?\n", "question_toks": ["What", "is", "the", "response", "received", "date", "for", "the", "document", "described", "as", "Regular", "that", "was", "granted", "more", "than", "100", "dollars", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Regular\"", null], "or", [false, 3, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )", "query_toks": ["SELECT", "project_details", "FROM", "Projects", "WHERE", "project_id", "NOT", "IN", "(", "SELECT", "project_id", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'researcher", "'", ")"], "query_toks_no_value": ["select", "project_details", "from", "projects", "where", "project_id", "not", "in", "(", "select", "project_id", "from", "project_staff", "where", "role_code", "=", "value", ")"], "question": "Enumere los detalles de los proyectos que no contrataron personal para el rol de investigador.\n", "question_toks": ["List", "the", "project", "details", "of", "the", "projects", "which", "did", "not", "hire", "any", "staff", "for", "a", "researcher", "role", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[true, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )", "query_toks": ["SELECT", "project_details", "FROM", "Projects", "WHERE", "project_id", "NOT", "IN", "(", "SELECT", "project_id", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'researcher", "'", ")"], "query_toks_no_value": ["select", "project_details", "from", "projects", "where", "project_id", "not", "in", "(", "select", "project_id", "from", "project_staff", "where", "role_code", "=", "value", ")"], "question": "¿Cuáles son los detalles de todos los proyectos que no contrataron personal para una función de investigación?\n", "question_toks": ["What", "are", "the", "details", "for", "all", "projects", "that", "did", "not", "hire", "any", "staff", "in", "a", "research", "role", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[true, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'researcher", "'"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "project_staff", "where", "role_code", "=", "value"], "question": "¿Cuándo comienza a trabajar todo el personal del rol de investigador y cuándo deja de trabajar?\n", "question_toks": ["When", "do", "all", "the", "researcher", "role", "staff", "start", "to", "work", ",", "and", "when", "do", "they", "stop", "working", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'", "query_toks": ["SELECT", "date_from", ",", "date_to", "FROM", "Project_Staff", "WHERE", "role_code", "=", "'researcher", "'"], "query_toks_no_value": ["select", "date_from", ",", "date_to", "from", "project_staff", "where", "role_code", "=", "value"], "question": "¿Cuándo empezaron y dejaron de trabajar los investigadores?\n", "question_toks": ["When", "did", "researchers", "start", "and", "stop", "working", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'", "query_toks": ["SELECT", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "JOIN", "Research_outcomes", "AS", "T3", "ON", "T2.outcome_code", "=", "T3.outcome_code", "WHERE", "T3.outcome_description", "LIKE", "'", "%", "Published", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "join", "research_outcomes", "as", "t3", "on", "t2", ".", "outcome_code", "=", "t3", ".", "outcome_code", "where", "t3", ".", "outcome_description", "like", "value"], "question": "Enumere los detalles de los proyectos con el resultado de la investigación descrito con la subcadena 'Publicado'.\n", "question_toks": ["List", "the", "project", "details", "of", "the", "projects", "with", "the", "research", "outcome", "described", "with", "the", "substring", "'Published", "'", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 9, [0, [0, 33, false], null], "\"%Published%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'", "query_toks": ["SELECT", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "JOIN", "Research_outcomes", "AS", "T3", "ON", "T2.outcome_code", "=", "T3.outcome_code", "WHERE", "T3.outcome_description", "LIKE", "'", "%", "Published", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "join", "research_outcomes", "as", "t3", "on", "t2", ".", "outcome_code", "=", "t3", ".", "outcome_code", "where", "t3", ".", "outcome_description", "like", "value"], "question": "¿Cuáles son los detalles del proyecto cuya investigación se ha publicado?\n", "question_toks": ["What", "are", "the", "details", "for", "the", "project", "whose", "research", "has", "been", "published", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 9, [0, [0, 33, false], null], "\"%Published%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'", "query_toks": ["SELECT", "role_description", "FROM", "Staff_Roles", "WHERE", "role_code", "=", "'researcher", "'"], "query_toks_no_value": ["select", "role_description", "from", "staff_roles", "where", "role_code", "=", "value"], "question": "Cuál es la descripción completa del rol del investigador.\n", "question_toks": ["What", "is", "the", "complete", "description", "of", "the", "researcher", "role", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'", "query_toks": ["SELECT", "role_description", "FROM", "Staff_Roles", "WHERE", "role_code", "=", "'researcher", "'"], "query_toks_no_value": ["select", "role_description", "from", "staff_roles", "where", "role_code", "=", "value"], "question": "¿Cuál es la descripción completa del trabajo de un investigador?\n", "question_toks": ["What", "is", "the", "complete", "description", "of", "the", "job", "of", "a", "researcher", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"researcher\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )", "query_toks": ["SELECT", "project_details", "FROM", "Projects", "WHERE", "project_id", "NOT", "IN", "(", "SELECT", "project_id", "FROM", "Project_outcomes", ")"], "query_toks_no_value": ["select", "project_details", "from", "projects", "where", "project_id", "not", "in", "(", "select", "project_id", "from", "project_outcomes", ")"], "question": "¿Qué proyectos no tienen resultados? Enumere los detalles del proyecto.\n", "question_toks": ["Which", "projects", "have", "no", "outcome", "?", "List", "the", "project", "details", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[true, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )", "query_toks": ["SELECT", "project_details", "FROM", "Projects", "WHERE", "project_id", "NOT", "IN", "(", "SELECT", "project_id", "FROM", "Project_outcomes", ")"], "query_toks_no_value": ["select", "project_details", "from", "projects", "where", "project_id", "not", "in", "(", "select", "project_id", "from", "project_outcomes", ")"], "question": "¿Cuáles son los detalles del proyecto sin resultados?\n", "question_toks": ["What", "are", "the", "details", "of", "the", "project", "with", "no", "outcomes", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[true, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'", "query_toks": ["SELECT", "document_type_code", "FROM", "Document_Types", "WHERE", "document_description", "LIKE", "'Initial", "%", "'"], "query_toks_no_value": ["select", "document_type_code", "from", "document_types", "where", "document_description", "like", "value"], "question": "¿Qué tipo de documento se describe con el prefijo 'Inicial'?\n", "question_toks": ["Which", "document", "type", "is", "described", "with", "the", "prefix", "'Initial", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Initial%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'", "query_toks": ["SELECT", "document_type_code", "FROM", "Document_Types", "WHERE", "document_description", "LIKE", "'Initial", "%", "'"], "query_toks_no_value": ["select", "document_type_code", "from", "document_types", "where", "document_description", "like", "value"], "question": "¿Cuál es el tipo de documento cuya descripción comienza con la palabra 'Inicial'?\n", "question_toks": ["What", "is", "the", "type", "of", "the", "document", "whose", "description", "starts", "with", "the", "word", "'Initial", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"Initial%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'", "query_toks": ["SELECT", "T1.organisation_type_description", "FROM", "organisation_Types", "AS", "T1", "JOIN", "Organisations", "AS", "T2", "ON", "T1.organisation_type", "=", "T2.organisation_type", "WHERE", "T2.organisation_details", "=", "'quo", "'"], "query_toks_no_value": ["select", "t1", ".", "organisation_type_description", "from", "organisation_types", "as", "t1", "join", "organisations", "as", "t2", "on", "t1", ".", "organisation_type", "=", "t2", ".", "organisation_type", "where", "t2", ".", "organisation_details", "=", "value"], "question": "Encuentre la descripción del tipo de organización de la organización detallada como 'quo'.\n", "question_toks": ["Find", "the", "organisation", "type", "description", "of", "the", "organisation", "detailed", "as", "'quo", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"quo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'", "query_toks": ["SELECT", "T1.organisation_type_description", "FROM", "organisation_Types", "AS", "T1", "JOIN", "Organisations", "AS", "T2", "ON", "T1.organisation_type", "=", "T2.organisation_type", "WHERE", "T2.organisation_details", "=", "'quo", "'"], "query_toks_no_value": ["select", "t1", ".", "organisation_type_description", "from", "organisation_types", "as", "t1", "join", "organisations", "as", "t2", "on", "t1", ".", "organisation_type", "=", "t2", ".", "organisation_type", "where", "t2", ".", "organisation_details", "=", "value"], "question": "¿Cuál es el tipo de descripción de la organización cuyo detalle figura como 'quo'?\n", "question_toks": ["What", "is", "the", "type", "description", "of", "the", "organization", "whose", "detail", "is", "listed", "as", "'quo", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"quo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'", "query_toks": ["SELECT", "T1.outcome_description", "FROM", "Research_outcomes", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.outcome_code", "=", "T2.outcome_code", "JOIN", "Projects", "AS", "T3", "ON", "T2.project_id", "=", "T3.project_id", "WHERE", "T3.project_details", "=", "'sint", "'"], "query_toks_no_value": ["select", "t1", ".", "outcome_description", "from", "research_outcomes", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "outcome_code", "=", "t2", ".", "outcome_code", "join", "projects", "as", "t3", "on", "t2", ".", "project_id", "=", "t3", ".", "project_id", "where", "t3", ".", "project_details", "=", "value"], "question": "¿Cuál es la descripción del resultado del proyecto cuyo detalle es 'sint'?\n", "question_toks": ["What", "are", "the", "result", "description", "of", "the", "project", "whose", "detail", "is", "'sint", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], "\"sint\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'", "query_toks": ["SELECT", "T1.outcome_description", "FROM", "Research_outcomes", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.outcome_code", "=", "T2.outcome_code", "JOIN", "Projects", "AS", "T3", "ON", "T2.project_id", "=", "T3.project_id", "WHERE", "T3.project_details", "=", "'sint", "'"], "query_toks_no_value": ["select", "t1", ".", "outcome_description", "from", "research_outcomes", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "outcome_code", "=", "t2", ".", "outcome_code", "join", "projects", "as", "t3", "on", "t2", ".", "project_id", "=", "t3", ".", "project_id", "where", "t3", ".", "project_details", "=", "value"], "question": "¿Cuál es la descripción de los resultados cuyo detalle del proyecto es 'sint'?\n", "question_toks": ["What", "is", "the", "description", "for", "the", "results", "whose", "project", "detail", "is", "'sint", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 29, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], "\"sint\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )", "query_toks": ["SELECT", "project_details", "FROM", "Projects", "WHERE", "organisation_id", "IN", "(", "SELECT", "organisation_id", "FROM", "Projects", "GROUP", "BY", "organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "project_details", "from", "projects", "where", "organisation_id", "in", "(", "select", "organisation_id", "from", "projects", "group", "by", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Enumere los detalles del proyecto de los proyectos lanzados por la organización.\n", "question_toks": ["List", "the", "project", "details", "of", "the", "projects", "launched", "by", "the", "organisation"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 8, [0, [0, 30, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [[0, 30, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )", "query_toks": ["SELECT", "project_details", "FROM", "Projects", "WHERE", "organisation_id", "IN", "(", "SELECT", "organisation_id", "FROM", "Projects", "GROUP", "BY", "organisation_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "project_details", "from", "projects", "where", "organisation_id", "in", "(", "select", "organisation_id", "from", "projects", "group", "by", "organisation_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son los detalles de los proyectos que lanzó la organización con más proyectos?\n", "question_toks": ["What", "are", "the", "details", "for", "the", "projects", "which", "were", "launched", "by", "the", "organization", "with", "the", "most", "projects", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 8, [0, [0, 30, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]]]], "where": [], "groupBy": [[0, 30, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'", "query_toks": ["SELECT", "role_code", "FROM", "Project_Staff", "WHERE", "date_from", ">", "'2003-04-19", "15:06:20", "'", "AND", "date_to", "<", "'2016-03-15", "00:33:18", "'"], "query_toks_no_value": ["select", "role_code", "from", "project_staff", "where", "date_from", ">", "value", "and", "date_to", "<", "value"], "question": "¿Cuáles son las funciones del personal que\n", "question_toks": ["What", "are", "the", "staff", "roles", "of", "the", "staff", "who"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 3, [0, [0, 26, false], null], "\"2003-04-19 15:06:20\"", null], "and", [false, 4, [0, [0, 27, false], null], "\"2016-03-15 00:33:18\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'", "query_toks": ["SELECT", "role_code", "FROM", "Project_Staff", "WHERE", "date_from", ">", "'2003-04-19", "15:06:20", "'", "AND", "date_to", "<", "'2016-03-15", "00:33:18", "'"], "query_toks_no_value": ["select", "role_code", "from", "project_staff", "where", "date_from", ">", "value", "and", "date_to", "<", "value"], "question": "¿Qué roles desempeñaron los miembros del personal entre '2003-04-19 15:06:20' y '2016-03-15 00:33:18'?\n", "question_toks": ["What", "roles", "did", "staff", "members", "play", "between", "'2003-04-19", "15:06:20", "'", "and", "'2016-03-15", "00:33:18", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 3, [0, [0, 26, false], null], "\"2003-04-19 15:06:20\"", null], "and", [false, 4, [0, [0, 27, false], null], "\"2016-03-15 00:33:18\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code", "query_toks": ["SELECT", "T1.outcome_description", "FROM", "Research_outcomes", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.outcome_code", "=", "T2.outcome_code"], "query_toks_no_value": ["select", "t1", ".", "outcome_description", "from", "research_outcomes", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "outcome_code", "=", "t2", ".", "outcome_code"], "question": "¿Cuáles son las descripciones de todos los resultados del proyecto?\n", "question_toks": ["What", "are", "the", "descriptions", "of", "all", "the", "project", "outcomes", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_grants_for_research", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code", "query_toks": ["SELECT", "T1.outcome_description", "FROM", "Research_outcomes", "AS", "T1", "JOIN", "Project_outcomes", "AS", "T2", "ON", "T1.outcome_code", "=", "T2.outcome_code"], "query_toks_no_value": ["select", "t1", ".", "outcome_description", "from", "research_outcomes", "as", "t1", "join", "project_outcomes", "as", "t2", "on", "t1", ".", "outcome_code", "=", "t2", ".", "outcome_code"], "question": "Enumere la descripción de los resultados de todos los proyectos.\n", "question_toks": ["List", "the", "description", "of", "the", "outcomes", "for", "all", "projects", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "person", ")"], "question": "¿Quién es la persona mayor?\n", "question_toks": ["Who", "is", "the", "oldest", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "person", ")"], "question": "¿Cómo se llama la persona que es mayor?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "person", "who", "is", "the", "oldest", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "job", "=", "'student", "'", "AND", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", "WHERE", "job", "=", "'student", "'", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "job", "=", "value", "and", "age", "=", "(", "select", "max", "(", "age", ")", "from", "person", "where", "job", "=", "value", ")"], "question": "¿Quién es la persona de mayor edad cuyo trabajo es estudiante?\n", "question_toks": ["Who", "is", "the", "oldest", "person", "whose", "job", "is", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null], "and", [false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "job", "=", "'student", "'", "AND", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", "WHERE", "job", "=", "'student", "'", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "job", "=", "value", "and", "age", "=", "(", "select", "max", "(", "age", ")", "from", "person", "where", "job", "=", "value", ")"], "question": "¿Cómo se llama el estudiante mayor?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "oldest", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null], "and", [false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "AND", "age", "=", "(", "SELECT", "min", "(", "age", ")", "FROM", "person", "WHERE", "gender", "=", "'male", "'", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "gender", "=", "value", "and", "age", "=", "(", "select", "min", "(", "age", ")", "from", "person", "where", "gender", "=", "value", ")"], "question": "¿Quién es el macho más joven?\n", "question_toks": ["Who", "is", "the", "youngest", "male", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null], "and", [false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "AND", "age", "=", "(", "SELECT", "min", "(", "age", ")", "FROM", "person", "WHERE", "gender", "=", "'male", "'", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "gender", "=", "value", "and", "age", "=", "(", "select", "min", "(", "age", ")", "from", "person", "where", "gender", "=", "value", ")"], "question": "¿Cómo se llama el macho más joven?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "youngest", "male", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null], "and", [false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'", "query_toks": ["SELECT", "age", "FROM", "Person", "WHERE", "job", "=", "'doctor", "'", "AND", "name", "=", "'Zach", "'"], "query_toks_no_value": ["select", "age", "from", "person", "where", "job", "=", "value", "and", "name", "=", "value"], "question": "¿Qué edad tiene el médico llamado Zach?\n", "question_toks": ["How", "old", "is", "the", "doctor", "named", "Zach", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"doctor\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'", "query_toks": ["SELECT", "age", "FROM", "Person", "WHERE", "job", "=", "'doctor", "'", "AND", "name", "=", "'Zach", "'"], "query_toks_no_value": ["select", "age", "from", "person", "where", "job", "=", "value", "and", "name", "=", "value"], "question": "¿Cuál es la edad del médico llamado Zach?\n", "question_toks": ["What", "is", "the", "age", "of", "the", "doctor", "named", "Zach", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"doctor\"", null], "and", [false, 2, [0, [0, 1, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE age  <  30", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "name", "from", "person", "where", "age", "<", "value"], "question": "¿Quién es la persona cuya edad es menor de 30 años?\n", "question_toks": ["Who", "is", "the", "person", "whose", "age", "is", "below", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 4, [0, [0, 2, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM Person WHERE age  <  30", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "age", "<", "30"], "query_toks_no_value": ["select", "name", "from", "person", "where", "age", "<", "value"], "question": "¿Cómo se llama la persona que tiene menos de 30 años?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "person", "whose", "age", "is", "below", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 4, [0, [0, 2, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "OR", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "or", "t2", ".", "friend", "=", "value"], "question": "Encuentra el nombre y la edad de la persona que es amiga de Dan o Alice.\n", "question_toks": ["Find", "the", "name", "and", "age", "of", "the", "person", "who", "is", "a", "friend", "of", "Dan", "or", "Alice", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "OR", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "or", "t2", ".", "friend", "=", "value"], "question": "¿Cuáles son los diferentes nombres y edades de cada amigo de Dan o Alice?\n", "question_toks": ["What", "are", "the", "different", "names", "and", "ages", "of", "every", "friend", "of", "either", "Dan", "or", "alice", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T1.name", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t1", ".", "name", "=", "value"], "question": "¿Quiénes son los amigos de Bob?\n", "question_toks": ["Who", "are", "the", "friends", "of", "Bob", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T1.name", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t1", ".", "name", "=", "value"], "question": "¿Quiénes son los amigos de Bob?\n", "question_toks": ["Who", "are", "Bob", "'s", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "query_toks": ["SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value"], "question": "Encuentra el nombre de las personas que son amigos de Bob.\n", "question_toks": ["Find", "the", "name", "of", "persons", "who", "are", "friends", "with", "Bob", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "query_toks": ["SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value"], "question": "¿Cuáles son los nombres de todos los amigos de Bob?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "of", "Bob", "'s", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'", "query_toks": ["SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Zach", "'", "AND", "T1.gender", "=", "'female", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t1", ".", "gender", "=", "value"], "question": "Encuentra los nombres de mujeres que son amigas de Zach.\n", "question_toks": ["Find", "the", "names", "of", "females", "who", "are", "friends", "with", "Zach"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'", "query_toks": ["SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Zach", "'", "AND", "T1.gender", "=", "'female", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t1", ".", "gender", "=", "value"], "question": "¿Cuáles son los nombres de todas las mujeres que son amigas de Zach?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "females", "who", "are", "friends", "with", "Zach", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'female", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value"], "question": "Encuentra a las amigas de Alice.\n", "question_toks": ["Find", "the", "female", "friends", "of", "Alice", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'female", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value"], "question": "¿Cuáles son todas las amigas de Alice que son mujeres?\n", "question_toks": ["What", "are", "all", "the", "friends", "of", "Alice", "who", "are", "female", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'male", "'", "AND", "T1.job", "=", "'doctor", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value", "and", "t1", ".", "job", "=", "value"], "question": "¿Encontrar al amigo de Alice cuyo trabajo es médico?\n", "question_toks": ["Find", "the", "male", "friend", "of", "Alice", "whose", "job", "is", "a", "doctor", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"male\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"doctor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'male", "'", "AND", "T1.job", "=", "'doctor", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value", "and", "t1", ".", "job", "=", "value"], "question": "¿Quiénes son los amigos de Alice que son médicos?\n", "question_toks": ["Who", "are", "the", "friends", "of", "Alice", "that", "are", "doctors", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"male\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"doctor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "query_toks": ["SELECT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.city", "=", "'new", "york", "city", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "city", "=", "value"], "question": "¿Quién tiene un amigo que sea de la ciudad de Nueva York?\n", "question_toks": ["Who", "has", "a", "friend", "that", "is", "from", "new", "york", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"new york city\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "query_toks": ["SELECT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.city", "=", "'new", "york", "city", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "city", "=", "value"], "question": "¿Cómo se llaman todos los amigos que son de Nueva York?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "friends", "who", "are", "from", "New", "York", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"new york city\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "¿Quién tiene amigos que son más jóvenes que la edad promedio?\n", "question_toks": ["Who", "has", "friends", "that", "are", "younger", "than", "the", "average", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "¿Cuáles son los diferentes nombres de amigos que son más jóvenes que la edad promedio de un amigo?\n", "question_toks": ["What", "are", "the", "different", "names", "of", "friends", "who", "are", "younger", "than", "the", "average", "age", "for", "a", "friend", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", ",", "T2.friend", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", ",", "t2", ".", "friend", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "¿Quién tiene amigos mayores que la edad promedio? Imprime sus amigos y sus edades también.\n", "question_toks": ["Who", "has", "friends", "that", "are", "older", "than", "the", "average", "age", "?", "Print", "their", "friends", "and", "their", "ages", "as", "well"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", ",", "T2.friend", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", ",", "t2", ".", "friend", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "¿Dónde están los nombres, amigos y edades de todas las personas que son mayores que la edad promedio de una persona?\n", "question_toks": ["Whare", "the", "names", ",", "friends", ",", "and", "ages", "of", "all", "people", "who", "are", "older", "than", "the", "average", "age", "of", "a", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "query_toks": ["SELECT", "friend", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", "AND", "YEAR", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", ")"], "query_toks_no_value": ["select", "friend", "from", "personfriend", "where", "name", "=", "value", "and", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "name", "=", "value", ")"], "question": "¿Quién es el amigo de Zach con la relación de más años?\n", "question_toks": ["Who", "is", "the", "friend", "of", "Zach", "with", "longest", "year", "relationship", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "query_toks": ["SELECT", "friend", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", "AND", "YEAR", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", ")"], "query_toks_no_value": ["select", "friend", "from", "personfriend", "where", "name", "=", "value", "and", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "name", "=", "value", ")"], "question": "¿Qué amigo de Zach tiene la amistad más duradera?\n", "question_toks": ["Which", "friend", "of", "Zach", "has", "the", "longest-lasting", "friendship", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "query_toks": ["SELECT", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Zach", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "name", "=", "value", ")"], "question": "¿Cuál es la edad del amigo de Zach con el año de relación más largo?\n", "question_toks": ["What", "is", "the", "age", "of", "the", "friend", "of", "Zach", "with", "longest", "year", "relationship", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "query_toks": ["SELECT", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Zach", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "name", "=", "value", ")"], "question": "¿Cuáles son las edades de todos los amigos de Zach que tienen la relación más larga?\n", "question_toks": ["What", "are", "the", "ages", "of", "all", "of", "Zach", "'s", "friends", "who", "are", "in", "the", "longest", "relationship", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "name", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", "AND", "YEAR", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "name", "from", "personfriend", "where", "friend", "=", "value", "and", "year", "=", "(", "select", "min", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "Encuentra el nombre de las personas que son amigas de Alice durante los años más cortos.\n", "question_toks": ["Find", "the", "name", "of", "persons", "who", "are", "friends", "with", "Alice", "for", "the", "shortest", "years", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "name", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", "AND", "YEAR", "=", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "name", "from", "personfriend", "where", "friend", "=", "value", "and", "year", "=", "(", "select", "min", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "¿Cuáles son los nombres de todas las personas que son amigas de Alice durante el menor tiempo posible?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "people", "who", "are", "friends", "with", "Alice", "for", "the", "shortest", "amount", "of", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "T1.name", ",", "T1.age", ",", "T1.job", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", ",", "t1", ".", "job", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "Encuentre el nombre, la edad y el puesto de trabajo de las personas que son amigas de Alice durante más años.\n", "question_toks": ["Find", "the", "name", ",", "age", ",", "and", "job", "title", "of", "persons", "who", "are", "friends", "with", "Alice", "for", "the", "longest", "years", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "T1.name", ",", "T1.age", ",", "T1.job", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", ",", "t1", ".", "job", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "¿Cuáles son los nombres, edades y trabajos de todas las personas que son amigas de Alice durante más tiempo?\n", "question_toks": ["What", "are", "the", "names", ",", "ages", ",", "and", "jobs", "of", "all", "people", "who", "are", "friends", "with", "Alice", "for", "the", "longest", "amount", "of", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'", "query_toks": ["SELECT", "DISTINCT", "T4.name", "FROM", "PersonFriend", "AS", "T1", "JOIN", "Person", "AS", "T2", "ON", "T1.name", "=", "T2.name", "JOIN", "PersonFriend", "AS", "T3", "ON", "T1.friend", "=", "T3.name", "JOIN", "PersonFriend", "AS", "T4", "ON", "T3.friend", "=", "T4.name", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T4.name", "!", "=", "'Alice", "'"], "query_toks_no_value": ["select", "distinct", "t4", ".", "name", "from", "personfriend", "as", "t1", "join", "person", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "join", "personfriend", "as", "t3", "on", "t1", ".", "friend", "=", "t3", ".", "name", "join", "personfriend", "as", "t4", "on", "t3", ".", "friend", "=", "t4", ".", "name", "where", "t2", ".", "name", "=", "value", "and", "t4", ".", "name", "!", "=", "value"], "question": "Encuentra los amigos de los amigos de Alice.\n", "question_toks": ["Find", "Alice", "'s", "friends", "of", "friends", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Alice\"", null], "and", [false, 7, [0, [0, 6, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "network_2", "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'", "query_toks": ["SELECT", "DISTINCT", "T4.name", "FROM", "PersonFriend", "AS", "T1", "JOIN", "Person", "AS", "T2", "ON", "T1.name", "=", "T2.name", "JOIN", "PersonFriend", "AS", "T3", "ON", "T1.friend", "=", "T3.name", "JOIN", "PersonFriend", "AS", "T4", "ON", "T3.friend", "=", "T4.name", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T4.name", "!", "=", "'Alice", "'"], "query_toks_no_value": ["select", "distinct", "t4", ".", "name", "from", "personfriend", "as", "t1", "join", "person", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "join", "personfriend", "as", "t3", "on", "t1", ".", "friend", "=", "t3", ".", "name", "join", "personfriend", "as", "t4", "on", "t3", ".", "friend", "=", "t4", ".", "name", "where", "t2", ".", "name", "=", "value", "and", "t4", ".", "name", "!", "=", "value"], "question": "¿Cuáles son los nombres de todos los amigos de los amigos de Alice?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "of", "Alice", "'s", "friends", "of", "friends", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Alice\"", null], "and", [false, 7, [0, [0, 6, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT Name ,  Country FROM member", "query_toks": ["SELECT", "Name", ",", "Country", "FROM", "member"], "query_toks_no_value": ["select", "name", ",", "country", "from", "member"], "question": "¿Cuáles son los nombres y países de los miembros?\n", "question_toks": ["What", "are", "the", "names", "and", "countries", "of", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"", "query_toks": ["SELECT", "Name", "FROM", "member", "WHERE", "Country", "=", "``", "United", "States", "''", "OR", "Country", "=", "``", "Canada", "''"], "query_toks_no_value": ["select", "name", "from", "member", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "Muestra los nombres de los miembros cuyo país es \"Estados Unidos\" o \"Canadá\".\n", "question_toks": ["Show", "the", "names", "of", "members", "whose", "country", "is", "``", "United", "States", "''", "or", "``", "Canada", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"United States\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT Leader_Name ,  College_Location FROM college", "query_toks": ["SELECT", "Leader_Name", ",", "College_Location", "FROM", "college"], "query_toks_no_value": ["select", "leader_name", ",", "college_location", "from", "college"], "question": "Muestre los nombres de los líderes y las ubicaciones de las universidades.\n", "question_toks": ["Show", "the", "leader", "names", "and", "locations", "of", "colleges", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "college", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.College_ID", "=", "T2.College_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "college", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "college_id", "=", "t2", ".", "college_id"], "question": "Muestre los nombres de los miembros y los nombres de las universidades a las que asisten.\n", "question_toks": ["Show", "the", "names", "of", "members", "and", "names", "of", "colleges", "they", "go", "to", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\"", "query_toks": ["SELECT", "DISTINCT", "T1.Leader_Name", "FROM", "college", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.College_ID", "=", "T2.College_ID", "WHERE", "T2.Country", "=", "``", "Canada", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "leader_name", "from", "college", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "college_id", "=", "t2", ".", "college_id", "where", "t2", ".", "country", "=", "value"], "question": "Muestre los distintos nombres de los líderes de las universidades asociadas con miembros del país \"Canadá\".\n", "question_toks": ["Show", "the", "distinct", "leader", "names", "of", "colleges", "associated", "with", "members", "from", "country", "``", "Canada", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Decoration_Theme", "FROM", "member", "AS", "T1", "JOIN", "round", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "decoration_theme", "from", "member", "as", "t1", "join", "round", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id"], "question": "Muestra los nombres de los integrantes y los temas de decoración que tienen.\n", "question_toks": ["Show", "the", "names", "of", "members", "and", "the", "decoration", "themes", "they", "have", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3", "query_toks": ["SELECT", "T1.Name", "FROM", "member", "AS", "T1", "JOIN", "round", "AS", "T2", "ON", "T1.Member_ID", "=", "T2.Member_ID", "WHERE", "T2.Rank_in_Round", ">", "3"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "member", "as", "t1", "join", "round", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "where", "t2", ".", "rank_in_round", ">", "value"], "question": "Muestra los nombres de los miembros que tienen un rango en la ronda superior a 3.\n", "question_toks": ["Show", "the", "names", "of", "members", "that", "have", "a", "rank", "in", "round", "higher", "than", "3", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "decoration_competition", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round)", "query_toks": ["SELECT", "Name", "FROM", "member", "WHERE", "Member_ID", "NOT", "IN", "(", "SELECT", "Member_ID", "FROM", "round", ")"], "query_toks_no_value": ["select", "name", "from", "member", "where", "member_id", "not", "in", "(", "select", "member_id", "from", "round", ")"], "question": "Enumere los nombres de los miembros que no participaron en ninguna ronda.\n", "question_toks": ["List", "the", "names", "of", "members", "who", "did", "not", "participate", "in", "any", "round", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"", "query_toks": ["SELECT", "document_type_code", "FROM", "documents", "WHERE", "document_name", "=", "``", "David", "CV", "''"], "query_toks_no_value": ["select", "document_type_code", "from", "documents", "where", "document_name", "=", "value"], "question": "¿Cuál es el tipo de documento denominado \"David CV\"?\n", "question_toks": ["What", "is", "the", "type", "of", "the", "document", "named", "``", "David", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"David CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"", "query_toks": ["SELECT", "document_type_code", "FROM", "documents", "WHERE", "document_name", "=", "``", "David", "CV", "''"], "query_toks_no_value": ["select", "document_type_code", "from", "documents", "where", "document_name", "=", "value"], "question": "Devuelve el código de tipo del documento denominado \"David CV\".\n", "question_toks": ["Return", "the", "type", "code", "of", "the", "document", "named", "``", "David", "CV", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"David CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"", "query_toks": ["SELECT", "t2.section_title", "FROM", "documents", "AS", "t1", "JOIN", "document_sections", "AS", "t2", "ON", "t1.document_code", "=", "t2.document_code", "WHERE", "t1.document_name", "=", "``", "David", "CV", "''"], "query_toks_no_value": ["select", "t2", ".", "section_title", "from", "documents", "as", "t1", "join", "document_sections", "as", "t2", "on", "t1", ".", "document_code", "=", "t2", ".", "document_code", "where", "t1", ".", "document_name", "=", "value"], "question": "¿Cuáles son todos los títulos de las secciones del documento denominado \"David CV\"?\n", "question_toks": ["What", "are", "all", "the", "section", "titles", "of", "the", "document", "named", "``", "David", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"David CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"", "query_toks": ["SELECT", "t2.section_title", "FROM", "documents", "AS", "t1", "JOIN", "document_sections", "AS", "t2", "ON", "t1.document_code", "=", "t2.document_code", "WHERE", "t1.document_name", "=", "``", "David", "CV", "''"], "query_toks_no_value": ["select", "t2", ".", "section_title", "from", "documents", "as", "t1", "join", "document_sections", "as", "t2", "on", "t1", ".", "document_code", "=", "t2", ".", "document_code", "where", "t1", ".", "document_name", "=", "value"], "question": "Indique los títulos de las secciones del documento con el nombre \"David CV\".\n", "question_toks": ["Give", "the", "section", "titles", "of", "the", "document", "with", "the", "name", "``", "David", "CV", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"David CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)", "query_toks": ["SELECT", "document_name", "FROM", "documents", "WHERE", "document_code", "NOT", "IN", "(", "SELECT", "document_code", "FROM", "document_sections", ")"], "query_toks_no_value": ["select", "document_name", "from", "documents", "where", "document_code", "not", "in", "(", "select", "document_code", "from", "document_sections", ")"], "question": "Encuentre todos los nombres de los documentos sin ninguna sección.\n", "question_toks": ["Find", "all", "the", "name", "of", "documents", "without", "any", "sections", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[true, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)", "query_toks": ["SELECT", "document_name", "FROM", "documents", "WHERE", "document_code", "NOT", "IN", "(", "SELECT", "document_code", "FROM", "document_sections", ")"], "query_toks_no_value": ["select", "document_name", "from", "documents", "where", "document_code", "not", "in", "(", "select", "document_code", "from", "document_sections", ")"], "question": "¿Cuáles son los nombres de los documentos que no tienen secciones?\n", "question_toks": ["What", "are", "the", "names", "of", "documents", "that", "do", "not", "have", "any", "sections", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[true, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"", "query_toks": ["SELECT", "document_name", "FROM", "documents", "WHERE", "document_name", "LIKE", "``", "%", "CV", "%", "''"], "query_toks_no_value": ["select", "document_name", "from", "documents", "where", "document_name", "like", "value"], "question": "Enumere todos los nombres de documentos que contengan \"CV\".\n", "question_toks": ["List", "all", "the", "document", "names", "which", "contains", "``", "CV", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 9, [0, [0, 22, false], null], "\"%CV%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"", "query_toks": ["SELECT", "document_name", "FROM", "documents", "WHERE", "document_name", "LIKE", "``", "%", "CV", "%", "''"], "query_toks_no_value": ["select", "document_name", "from", "documents", "where", "document_name", "like", "value"], "question": "¿Cuáles son los nombres de los documentos que contienen la subcadena \"CV\"?\n", "question_toks": ["What", "are", "the", "names", "of", "documents", "that", "contain", "the", "substring", "``", "CV", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 9, [0, [0, 22, false], null], "\"%CV%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "(", "SELECT", "role_code", "FROM", "users", "WHERE", "user_login", "=", "1", "GROUP", "BY", "role_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "role_description", "from", "roles", "where", "role_code", "=", "(", "select", "role_code", "from", "users", "where", "user_login", "=", "value", "group", "by", "role_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Encuentre la descripción del rol más popular entre los usuarios que han iniciado sesión.\n", "question_toks": ["Find", "the", "description", "of", "the", "most", "popular", "role", "among", "the", "users", "that", "have", "logged", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 1.0, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "document_management", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "role_description", "FROM", "ROLES", "WHERE", "role_code", "=", "(", "SELECT", "role_code", "FROM", "users", "WHERE", "user_login", "=", "1", "GROUP", "BY", "role_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "role_description", "from", "roles", "where", "role_code", "=", "(", "select", "role_code", "from", "users", "where", "user_login", "=", "value", "group", "by", "role_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuál es la descripción del rol más popular entre los usuarios que han iniciado sesión?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "most", "popular", "role", "among", "users", "that", "have", "logged", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 1.0, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_office", "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'", "query_toks": ["SELECT", "name", "FROM", "Companies", "WHERE", "Headquarters", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "name", "from", "companies", "where", "headquarters", "!", "=", "value"], "question": "¿Cuáles son los nombres de las empresas cuyas oficinas centrales no son \"EE. UU.\"?\n", "question_toks": ["What", "are", "the", "names", "of", "companies", "whose", "headquarters", "are", "not", "``", "USA", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_office", "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'", "query_toks": ["SELECT", "name", "FROM", "Companies", "WHERE", "Headquarters", "!", "=", "'USA", "'"], "query_toks_no_value": ["select", "name", "from", "companies", "where", "headquarters", "!", "=", "value"], "question": "Encuentre los nombres de las empresas cuyas oficinas centrales no se encuentran en \"EE. UU.\".\n", "question_toks": ["Find", "the", "names", "of", "the", "companies", "whose", "headquarters", "are", "not", "located", "in", "``", "USA", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 9, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_office", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "query_toks": ["SELECT", "T3.name", ",", "T2.name", "FROM", "Office_locations", "AS", "T1", "JOIN", "buildings", "AS", "T2", "ON", "T1.building_id", "=", "T2.id", "JOIN", "Companies", "AS", "T3", "ON", "T1.company_id", "=", "T3.id"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "office_locations", "as", "t1", "join", "buildings", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "id", "join", "companies", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "id"], "question": "Indique el nombre de un edificio junto con el nombre de una empresa cuya oficina esté en el edificio.\n", "question_toks": ["List", "the", "name", "of", "a", "building", "along", "with", "the", "name", "of", "a", "company", "whose", "office", "is", "in", "the", "building", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_office", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "query_toks": ["SELECT", "T3.name", ",", "T2.name", "FROM", "Office_locations", "AS", "T1", "JOIN", "buildings", "AS", "T2", "ON", "T1.building_id", "=", "T2.id", "JOIN", "Companies", "AS", "T3", "ON", "T1.company_id", "=", "T3.id"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "name", "from", "office_locations", "as", "t1", "join", "buildings", "as", "t2", "on", "t1", ".", "building_id", "=", "t2", ".", "id", "join", "companies", "as", "t3", "on", "t1", ".", "company_id", "=", "t3", ".", "id"], "question": "Para cada empresa, proporcione el nombre de la empresa y el nombre del edificio en el que se encuentra su oficina.\n", "question_toks": ["For", "each", "company", ",", "return", "the", "company", "name", "and", "the", "name", "of", "the", "building", "its", "office", "is", "located", "in", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_office", "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)", "query_toks": ["SELECT", "name", "FROM", "buildings", "WHERE", "id", "NOT", "IN", "(", "SELECT", "building_id", "FROM", "Office_locations", ")"], "query_toks_no_value": ["select", "name", "from", "buildings", "where", "id", "not", "in", "(", "select", "building_id", "from", "office_locations", ")"], "question": "Enumere los nombres de los edificios que no tienen oficinas de la empresa.\n", "question_toks": ["List", "the", "names", "of", "buildings", "that", "have", "no", "company", "office", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "company_office", "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)", "query_toks": ["SELECT", "name", "FROM", "buildings", "WHERE", "id", "NOT", "IN", "(", "SELECT", "building_id", "FROM", "Office_locations", ")"], "query_toks_no_value": ["select", "name", "from", "buildings", "where", "id", "not", "in", "(", "select", "building_id", "from", "office_locations", ")"], "question": "¿Qué edificios no tienen oficinas de empresa? Dame los nombres de los edificios.\n", "question_toks": ["Which", "buildings", "do", "not", "have", "any", "company", "office", "?", "Give", "me", "the", "building", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "solvency_ii", "query": "SELECT Product_Name ,  Product_Type_Code FROM Products", "query_toks": ["SELECT", "Product_Name", ",", "Product_Type_Code", "FROM", "Products"], "query_toks_no_value": ["select", "product_name", ",", "product_type_code", "from", "products"], "question": "¿Cuáles son los nombres y códigos de tipo de los productos?\n", "question_toks": ["What", "are", "the", "names", "and", "type", "codes", "of", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "solvency_ii", "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"", "query_toks": ["SELECT", "Product_Price", "FROM", "Products", "WHERE", "Product_Name", "=", "``", "Dining", "''", "OR", "Product_Name", "=", "``", "Trading", "Policy", "''"], "query_toks_no_value": ["select", "product_price", "from", "products", "where", "product_name", "=", "value", "or", "product_name", "=", "value"], "question": "Mostrar los precios de los productos denominados \"Comedor\" o \"Política Comercial\".\n", "question_toks": ["Show", "the", "prices", "of", "the", "products", "named", "``", "Dining", "''", "or", "``", "Trading", "Policy", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Dining\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Trading Policy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "solvency_ii", "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)", "query_toks": ["SELECT", "Product_Name", "FROM", "Products", "WHERE", "Product_ID", "NOT", "IN", "(", "SELECT", "Product_ID", "FROM", "Products_in_Events", ")"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "products_in_events", ")"], "question": "Enumere los nombres de los productos que no lo son en ningún caso.\n", "question_toks": ["List", "the", "names", "of", "products", "that", "are", "not", "in", "any", "event", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\"", "query_toks": ["SELECT", "Name", "FROM", "artwork", "WHERE", "TYPE", "!", "=", "``", "Program", "Talent", "Show", "''"], "query_toks_no_value": ["select", "name", "from", "artwork", "where", "type", "!", "=", "value"], "question": "Listar el nombre de las obras de arte cuyo tipo no sea \"Programa Talent Show\".\n", "question_toks": ["List", "the", "name", "of", "artworks", "whose", "type", "is", "not", "``", "Program", "Talent", "Show", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Program Talent Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail", "query_toks": ["SELECT", "Festival_Name", ",", "LOCATION", "FROM", "festival_detail"], "query_toks_no_value": ["select", "festival_name", ",", "location", "from", "festival_detail"], "question": "¿Cuáles son los nombres y lugares de los festivales?\n", "question_toks": ["What", "are", "the", "names", "and", "locations", "of", "festivals", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007", "query_toks": ["SELECT", "Festival_Name", "FROM", "festival_detail", "WHERE", "YEAR", "=", "2007"], "query_toks_no_value": ["select", "festival_name", "from", "festival_detail", "where", "year", "=", "value"], "question": "¿Cuáles son los nombres de los festivales celebrados en el año 2007?\n", "question_toks": ["What", "are", "the", "names", "of", "festivals", "held", "in", "year", "2007", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2007.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID", "query_toks": ["SELECT", "T2.Name", ",", "T3.Festival_Name", "FROM", "nomination", "AS", "T1", "JOIN", "artwork", "AS", "T2", "ON", "T1.Artwork_ID", "=", "T2.Artwork_ID", "JOIN", "festival_detail", "AS", "T3", "ON", "T1.Festival_ID", "=", "T3.Festival_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "festival_name", "from", "nomination", "as", "t1", "join", "artwork", "as", "t2", "on", "t1", ".", "artwork_id", "=", "t2", ".", "artwork_id", "join", "festival_detail", "as", "t3", "on", "t1", ".", "festival_id", "=", "t3", ".", "festival_id"], "question": "Para cada nominación, muestra el nombre de la obra de arte y el nombre del festival donde está nominada.\n", "question_toks": ["For", "each", "nomination", ",", "show", "the", "name", "of", "the", "artwork", "and", "name", "of", "the", "festival", "where", "it", "is", "nominated", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007", "query_toks": ["SELECT", "DISTINCT", "T2.Type", "FROM", "nomination", "AS", "T1", "JOIN", "artwork", "AS", "T2", "ON", "T1.Artwork_ID", "=", "T2.Artwork_ID", "JOIN", "festival_detail", "AS", "T3", "ON", "T1.Festival_ID", "=", "T3.Festival_ID", "WHERE", "T3.Year", "=", "2007"], "query_toks_no_value": ["select", "distinct", "t2", ".", "type", "from", "nomination", "as", "t1", "join", "artwork", "as", "t2", "on", "t1", ".", "artwork_id", "=", "t2", ".", "artwork_id", "join", "festival_detail", "as", "t3", "on", "t1", ".", "festival_id", "=", "t3", ".", "festival_id", "where", "t3", ".", "year", "=", "value"], "question": "Mostrar distintos tipos de obras de arte nominadas en festivales en 2007.\n", "question_toks": ["Show", "distinct", "types", "of", "artworks", "that", "are", "nominated", "in", "festivals", "in", "2007", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2007.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"Program Talent Show\"", "query_toks": ["SELECT", "T3.Festival_Name", "FROM", "nomination", "AS", "T1", "JOIN", "artwork", "AS", "T2", "ON", "T1.Artwork_ID", "=", "T2.Artwork_ID", "JOIN", "festival_detail", "AS", "T3", "ON", "T1.Festival_ID", "=", "T3.Festival_ID", "WHERE", "T2.Type", "=", "``", "Program", "Talent", "Show", "''"], "query_toks_no_value": ["select", "t3", ".", "festival_name", "from", "nomination", "as", "t1", "join", "artwork", "as", "t2", "on", "t1", ".", "artwork_id", "=", "t2", ".", "artwork_id", "join", "festival_detail", "as", "t3", "on", "t1", ".", "festival_id", "=", "t3", ".", "festival_id", "where", "t2", ".", "type", "=", "value"], "question": "Mostrar los nombres de los festivales que han nominado obras de arte del tipo \"Programa Talent Show\".\n", "question_toks": ["Show", "the", "names", "of", "festivals", "that", "have", "nominated", "artworks", "of", "type", "``", "Program", "Talent", "Show", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Program Talent Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)", "query_toks": ["SELECT", "Name", "FROM", "Artwork", "WHERE", "Artwork_ID", "NOT", "IN", "(", "SELECT", "Artwork_ID", "FROM", "nomination", ")"], "query_toks_no_value": ["select", "name", "from", "artwork", "where", "artwork_id", "not", "in", "(", "select", "artwork_id", "from", "nomination", ")"], "question": "Indique el nombre de las obras de arte que no están nominadas.\n", "question_toks": ["List", "the", "name", "of", "artworks", "that", "are", "not", "nominated", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "entertainment_awards", "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010", "query_toks": ["SELECT", "Num_of_Audience", "FROM", "festival_detail", "WHERE", "YEAR", "=", "2008", "OR", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "num_of_audience", "from", "festival_detail", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "Muestra el número de audiencia en el año 2008 o 2010.\n", "question_toks": ["Show", "the", "number", "of", "audience", "in", "year", "2008", "or", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2008.0, null], "or", [false, 2, [0, [0, 5, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT DISTINCT premises_type FROM premises", "query_toks": ["SELECT", "DISTINCT", "premises_type", "FROM", "premises"], "query_toks_no_value": ["select", "distinct", "premises_type", "from", "premises"], "question": "¿Cuáles son todos los distintos tipos de premisas?\n", "question_toks": ["What", "are", "all", "the", "distinct", "premise", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)", "query_toks": ["SELECT", "customer_name", ",", "customer_phone", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "mailshot_customers", ")"], "query_toks_no_value": ["select", "customer_name", ",", "customer_phone", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "mailshot_customers", ")"], "question": "Muestra el nombre y teléfono del cliente sin ningún mailing.\n", "question_toks": ["Show", "the", "name", "and", "phone", "of", "the", "customer", "without", "any", "mailshot", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'", "query_toks": ["SELECT", "T1.customer_name", ",", "T1.customer_phone", "FROM", "customers", "AS", "T1", "JOIN", "mailshot_customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.outcome_code", "=", "'No", "Response", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t1", ".", "customer_phone", "from", "customers", "as", "t1", "join", "mailshot_customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "outcome_code", "=", "value"], "question": "Muestre el nombre y el teléfono de los clientes con un correo electrónico con el código de resultado \"Sin respuesta\".\n", "question_toks": ["Show", "the", "name", "and", "phone", "for", "customers", "with", "a", "mailshot", "with", "outcome", "code", "'No", "Response", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"No Response\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id", "query_toks": ["SELECT", "T2.premises_type", ",", "T1.address_type_code", "FROM", "customer_addresses", "AS", "T1", "JOIN", "premises", "AS", "T2", "ON", "T1.premise_id", "=", "T2.premise_id"], "query_toks_no_value": ["select", "t2", ".", "premises_type", ",", "t1", ".", "address_type_code", "from", "customer_addresses", "as", "t1", "join", "premises", "as", "t2", "on", "t1", ".", "premise_id", "=", "t2", ".", "premise_id"], "question": "Muestre el tipo de local y el código de tipo de dirección para todas las direcciones de los clientes.\n", "question_toks": ["Show", "the", "premise", "type", "and", "address", "type", "code", "for", "all", "customer", "addresses", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT DISTINCT address_type_code FROM customer_addresses", "query_toks": ["SELECT", "DISTINCT", "address_type_code", "FROM", "customer_addresses"], "query_toks_no_value": ["select", "distinct", "address_type_code", "from", "customer_addresses"], "question": "¿Cuáles son los distintos códigos de tipo de dirección para todas las direcciones de clientes?\n", "question_toks": ["What", "are", "the", "distinct", "address", "type", "codes", "for", "all", "customer", "addresses", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'", "query_toks": ["SELECT", "order_shipping_charges", ",", "customer_id", "FROM", "customer_orders", "WHERE", "order_status_code", "=", "'Cancelled", "'", "OR", "order_status_code", "=", "'Paid", "'"], "query_toks_no_value": ["select", "order_shipping_charges", ",", "customer_id", "from", "customer_orders", "where", "order_status_code", "=", "value", "or", "order_status_code", "=", "value"], "question": "Muestre el cargo de envío y la identificación del cliente para los pedidos de clientes con estado de pedido Cancelado o Pagado.\n", "question_toks": ["Show", "the", "shipping", "charge", "and", "customer", "id", "for", "customer", "orders", "with", "order", "status", "Cancelled", "or", "Paid", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Cancelled\"", null], "or", [false, 2, [0, [0, 27, false], null], "\"Paid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_campaigns_ecommerce", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid'", "query_toks": ["SELECT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "shipping_method_code", "=", "'FedEx", "'", "AND", "order_status_code", "=", "'Paid", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "shipping_method_code", "=", "value", "and", "order_status_code", "=", "value"], "question": "Muestra los nombres de los clientes que tienen un pedido con el método de envío FedEx y el estado del pedido Pagado.\n", "question_toks": ["Show", "the", "names", "of", "customers", "having", "an", "order", "with", "shipping", "method", "FedEx", "and", "order", "status", "Paid", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], "\"FedEx\"", null], "and", [false, 2, [0, [0, 27, false], null], "\"Paid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT CName FROM COURSE WHERE Credits  =  1", "query_toks": ["SELECT", "CName", "FROM", "COURSE", "WHERE", "Credits", "=", "1"], "query_toks_no_value": ["select", "cname", "from", "course", "where", "credits", "=", "value"], "question": "¿Enumere todos los nombres de los cursos con 1 crédito?\n", "question_toks": ["List", "all", "names", "of", "courses", "with", "1", "credit", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT CName FROM COURSE WHERE Credits  =  1", "query_toks": ["SELECT", "CName", "FROM", "COURSE", "WHERE", "Credits", "=", "1"], "query_toks_no_value": ["select", "cname", "from", "course", "where", "credits", "=", "value"], "question": "¿Cómo se llaman los cursos con 1 crédito?\n", "question_toks": ["What", "are", "the", "names", "of", "courses", "with", "1", "credit", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"", "query_toks": ["SELECT", "CName", "FROM", "COURSE", "WHERE", "Days", "=", "``", "MTW", "''"], "query_toks_no_value": ["select", "cname", "from", "course", "where", "days", "=", "value"], "question": "¿Qué cursos se imparten los días MTW?\n", "question_toks": ["Which", "courses", "are", "taught", "on", "days", "MTW", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 30, false], null], "\"MTW\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"", "query_toks": ["SELECT", "CName", "FROM", "COURSE", "WHERE", "Days", "=", "``", "MTW", "''"], "query_toks_no_value": ["select", "cname", "from", "course", "where", "days", "=", "value"], "question": "¿Cuáles son los nombres de los cursos que se imparten en MTW?\n", "question_toks": ["What", "are", "the", "course", "names", "for", "courses", "taught", "on", "MTW", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 30, false], null], "\"MTW\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268", "query_toks": ["SELECT", "DPhone", "FROM", "DEPARTMENT", "WHERE", "Room", "=", "268"], "query_toks_no_value": ["select", "dphone", "from", "department", "where", "room", "=", "value"], "question": "¿Cuáles son los teléfonos de los departamentos de la Sala 268?\n", "question_toks": ["What", "are", "the", "phones", "of", "departments", "in", "Room", "268", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], 268.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268", "query_toks": ["SELECT", "DPhone", "FROM", "DEPARTMENT", "WHERE", "Room", "=", "268"], "query_toks_no_value": ["select", "dphone", "from", "department", "where", "room", "=", "value"], "question": "Entregue los teléfonos de los departamentos de la habitación 268.\n", "question_toks": ["Give", "the", "phones", "for", "departments", "in", "room", "268", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], 268.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "StuID", ")", "FROM", "ENROLLED_IN", "WHERE", "Grade", "=", "``", "B", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "stuid", ")", "from", "enrolled_in", "where", "grade", "=", "value"], "question": "Encuentre el número de estudiantes que tienen al menos una calificación \"B\".\n", "question_toks": ["Find", "the", "number", "of", "students", "that", "have", "at", "least", "one", "grade", "``", "B", "''", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 35, true], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"B\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "StuID", ")", "FROM", "ENROLLED_IN", "WHERE", "Grade", "=", "``", "B", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "stuid", ")", "from", "enrolled_in", "where", "grade", "=", "value"], "question": "¿Cuántos estudiantes han obtenido al menos una calificación \"B\"?\n", "question_toks": ["How", "many", "students", "have", "had", "at", "least", "one", "``", "B", "''", "grade", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 35, true], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"B\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'", "query_toks": ["SELECT", "DISTINCT", "Fname", "FROM", "STUDENT", "WHERE", "Fname", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "distinct", "fname", "from", "student", "where", "fname", "like", "value"], "question": "Encuentre los nombres de los estudiantes cuyos nombres contienen la letra \"a\".\n", "question_toks": ["Find", "the", "first", "names", "of", "students", "whose", "first", "names", "contain", "letter", "``", "a", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'", "query_toks": ["SELECT", "DISTINCT", "Fname", "FROM", "STUDENT", "WHERE", "Fname", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "distinct", "fname", "from", "student", "where", "fname", "like", "value"], "question": "¿Cuáles son los nombres de los estudiantes que tienen una \"a\" en su nombre?\n", "question_toks": ["What", "are", "the", "first", "names", "for", "students", "who", "have", "an", "``", "a", "''", "in", "their", "first", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "FACULTY", "WHERE", "sex", "=", "``", "M", "''", "AND", "Building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "sex", "=", "value", "and", "building", "=", "value"], "question": "Encuentre los nombres y apellidos de los profesores masculinos (el sexo es M) que viven en el edificio NEB.\n", "question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "male", "(", "sex", "is", "M", ")", "faculties", "who", "live", "in", "building", "NEB", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"M\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"NEB\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"", "query_toks": ["SELECT", "Fname", ",", "Lname", "FROM", "FACULTY", "WHERE", "sex", "=", "``", "M", "''", "AND", "Building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "sex", "=", "value", "and", "building", "=", "value"], "question": "¿Cuáles son los nombres completos de las facultades de sexo M que viven en el edificio NEB?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "faculties", "with", "sex", "M", "and", "who", "live", "in", "building", "NEB", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"M\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"NEB\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"", "query_toks": ["SELECT", "Room", "FROM", "FACULTY", "WHERE", "Rank", "=", "``", "Professor", "''", "AND", "Building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "room", "from", "faculty", "where", "rank", "=", "value", "and", "building", "=", "value"], "question": "Encuentra las habitaciones de las facultades con rango de profesor que viven en el edificio NEB.\n", "question_toks": ["Find", "the", "rooms", "of", "faculties", "with", "rank", "professor", "who", "live", "in", "building", "NEB", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Professor\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"NEB\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"", "query_toks": ["SELECT", "Room", "FROM", "FACULTY", "WHERE", "Rank", "=", "``", "Professor", "''", "AND", "Building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "room", "from", "faculty", "where", "rank", "=", "value", "and", "building", "=", "value"], "question": "¿Cuáles son las habitaciones para los miembros del cuerpo docente que son profesores y que viven en el edificio NEB?\n", "question_toks": ["What", "are", "the", "rooms", "for", "members", "of", "the", "faculty", "who", "are", "professors", "and", "who", "live", "in", "building", "NEB", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Professor\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"NEB\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"", "query_toks": ["SELECT", "DName", "FROM", "DEPARTMENT", "WHERE", "Building", "=", "``", "Mergenthaler", "''"], "query_toks_no_value": ["select", "dname", "from", "department", "where", "building", "=", "value"], "question": "Busque el nombre del departamento que se encuentra en el edificio \"Mergenthaler\".\n", "question_toks": ["Find", "the", "department", "name", "that", "is", "in", "Building", "``", "Mergenthaler", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Mergenthaler\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"", "query_toks": ["SELECT", "DName", "FROM", "DEPARTMENT", "WHERE", "Building", "=", "``", "Mergenthaler", "''"], "query_toks_no_value": ["select", "dname", "from", "department", "where", "building", "=", "value"], "question": "¿Cómo se llama el departamento del edificio Mergenthaler?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "department", "in", "the", "Building", "Mergenthaler", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Mergenthaler\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "COURSE", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.Instructor", "=", "T2.FacID", "WHERE", "T1.CName", "=", "``", "COMPUTER", "LITERACY", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "course", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "instructor", "=", "t2", ".", "facid", "where", "t1", ".", "cname", "=", "value"], "question": "Encuentre el nombre y apellido del instructor del curso que tiene el nombre del curso\n", "question_toks": ["Find", "the", "first", "name", "and", "last", "name", "of", "the", "instructor", "of", "course", "that", "has", "course", "name"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"COMPUTER LITERACY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "COURSE", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.Instructor", "=", "T2.FacID", "WHERE", "T1.CName", "=", "``", "COMPUTER", "LITERACY", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "course", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "instructor", "=", "t2", ".", "facid", "where", "t1", ".", "cname", "=", "value"], "question": "¿Cuál es el nombre completo del instructor que tiene un curso llamado ALFABETIZACIÓN INFORMÁTICA?\n", "question_toks": ["What", "is", "the", "full", "name", "of", "the", "instructor", "who", "has", "a", "course", "named", "COMPUTER", "LITERACY", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"COMPUTER LITERACY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "query_toks": ["SELECT", "T2.Dname", ",", "T2.Room", "FROM", "COURSE", "AS", "T1", "JOIN", "DEPARTMENT", "AS", "T2", "ON", "T1.DNO", "=", "T2.DNO", "WHERE", "T1.CName", "=", "``", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "''"], "query_toks_no_value": ["select", "t2", ".", "dname", ",", "t2", ".", "room", "from", "course", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dno", "=", "t2", ".", "dno", "where", "t1", ".", "cname", "=", "value"], "question": "Encuentra el nombre del departamento y sala del curso INTRODUCCIÓN A LA INFORMÁTICA.\n", "question_toks": ["Find", "the", "department", "name", "and", "room", "of", "the", "course", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"INTRODUCTION TO COMPUTER SCIENCE\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"", "query_toks": ["SELECT", "T2.Dname", ",", "T2.Room", "FROM", "COURSE", "AS", "T1", "JOIN", "DEPARTMENT", "AS", "T2", "ON", "T1.DNO", "=", "T2.DNO", "WHERE", "T1.CName", "=", "``", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "''"], "query_toks_no_value": ["select", "t2", ".", "dname", ",", "t2", ".", "room", "from", "course", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dno", "=", "t2", ".", "dno", "where", "t1", ".", "cname", "=", "value"], "question": "¿Cuál es el nombre del departamento y sala del curso INTRODUCCIÓN A LA INFORMÁTICA?\n", "question_toks": ["What", "are", "the", "department", "name", "and", "room", "for", "the", "course", "INTRODUCTION", "TO", "COMPUTER", "SCIENCE", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"INTRODUCTION TO COMPUTER SCIENCE\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID", "query_toks": ["SELECT", "T3.Fname", ",", "T3.LName", ",", "T2.gradepoint", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", ",", "t2", ".", "gradepoint", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid"], "question": "Encuentre el nombre y apellido del estudiante y las calificaciones de todas las inscripciones.\n", "question_toks": ["Find", "the", "student", "first", "and", "last", "names", "and", "grade", "points", "of", "all", "enrollments", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID", "query_toks": ["SELECT", "T3.Fname", ",", "T3.LName", ",", "T2.gradepoint", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID"], "query_toks_no_value": ["select", "t3", ".", "fname", ",", "t3", ".", "lname", ",", "t2", ".", "gradepoint", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid"], "question": "¿Cuáles son los nombres completos y las calificaciones de todas las inscripciones?\n", "question_toks": ["What", "are", "the", "full", "names", "and", "gradepoints", "for", "all", "enrollments", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8", "query_toks": ["SELECT", "DISTINCT", "T3.Fname", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID", "WHERE", "T2.gradepoint", ">", "=", "3.8"], "query_toks_no_value": ["select", "distinct", "t3", ".", "fname", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid", "where", "t2", ".", "gradepoint", ">", "=", "value"], "question": "Encuentre los nombres distintos de todos los estudiantes que tengan una calificación de al menos 3.8 en un curso.\n", "question_toks": ["Find", "the", "distinct", "student", "first", "names", "of", "all", "students", "that", "have", "grade", "point", "at", "least", "3.8", "in", "one", "course", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 5, [0, [0, 39, false], null], 3.8, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8", "query_toks": ["SELECT", "DISTINCT", "T3.Fname", "FROM", "ENROLLED_IN", "AS", "T1", "JOIN", "GRADECONVERSION", "AS", "T2", "JOIN", "STUDENT", "AS", "T3", "ON", "T1.Grade", "=", "T2.lettergrade", "AND", "T1.StuID", "=", "T3.StuID", "WHERE", "T2.gradepoint", ">", "=", "3.8"], "query_toks_no_value": ["select", "distinct", "t3", ".", "fname", "from", "enrolled_in", "as", "t1", "join", "gradeconversion", "as", "t2", "join", "student", "as", "t3", "on", "t1", ".", "grade", "=", "t2", ".", "lettergrade", "and", "t1", ".", "stuid", "=", "t3", ".", "stuid", "where", "t2", ".", "gradepoint", ">", "=", "value"], "question": "¿Cuáles son los nombres distintivos de los estudiantes con una calificación de 3.8 o superior en al menos un curso?\n", "question_toks": ["What", "are", "the", "distinct", "first", "names", "for", "students", "with", "a", "grade", "point", "of", "3.8", "or", "above", "in", "at", "least", "one", "course", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 37, false], null], [0, 38, false], null], "and", [false, 2, [0, [0, 35, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 5, [0, [0, 39, false], null], 3.8, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520", "query_toks": ["SELECT", "T1.Fname", ",", "T1.Lname", "FROM", "FACULTY", "AS", "T1", "JOIN", "MEMBER_OF", "AS", "T2", "ON", "T1.FacID", "=", "T2.FacID", "WHERE", "T2.DNO", "=", "520"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "member_of", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "where", "t2", ".", "dno", "=", "value"], "question": "Encuentre los nombres completos de las facultades que son miembros del departamento con el número de departamento 520.\n", "question_toks": ["Find", "the", "full", "names", "of", "faculties", "who", "are", "members", "of", "department", "with", "department", "number", "520", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], 520.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520", "query_toks": ["SELECT", "T1.Fname", ",", "T1.Lname", "FROM", "FACULTY", "AS", "T1", "JOIN", "MEMBER_OF", "AS", "T2", "ON", "T1.FacID", "=", "T2.FacID", "WHERE", "T2.DNO", "=", "520"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "member_of", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "where", "t2", ".", "dno", "=", "value"], "question": "¿Cuáles son los nombres completos de los profesores que forman parte del departamento 520?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "faculty", "members", "who", "are", "a", "part", "of", "department", "520", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], 520.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "MINOR_IN", "AS", "T1", "JOIN", "STUDENT", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.DNO", "=", "140"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "minor_in", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "dno", "=", "value"], "question": "Cuáles son los nombres y apellidos de los estudiantes menores del departamento con DNO 140.\n", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "students", "that", "minor", "in", "the", "department", "with", "DNO", "140", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], 140.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140", "query_toks": ["SELECT", "T2.Fname", ",", "T2.Lname", "FROM", "MINOR_IN", "AS", "T1", "JOIN", "STUDENT", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.DNO", "=", "140"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "minor_in", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "dno", "=", "value"], "question": "¿Cuáles son los nombres completos de los estudiantes que se especializan en el departamento 140?\n", "question_toks": ["What", "are", "the", "full", "names", "of", "students", "minoring", "in", "department", "140", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], 140.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"", "query_toks": ["SELECT", "T2.Lname", "FROM", "DEPARTMENT", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.DNO", "=", "T3.DNO", "JOIN", "MEMBER_OF", "AS", "T3", "ON", "T2.FacID", "=", "T3.FacID", "WHERE", "T1.DName", "=", "``", "Computer", "Science", "''"], "query_toks_no_value": ["select", "t2", ".", "lname", "from", "department", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "dno", "=", "t3", ".", "dno", "join", "member_of", "as", "t3", "on", "t2", ".", "facid", "=", "t3", ".", "facid", "where", "t1", ".", "dname", "=", "value"], "question": "Encuentre los apellidos de las facultades que son miembros del departamento de informática.\n", "question_toks": ["Find", "the", "last", "names", "of", "faculties", "who", "are", "members", "of", "computer", "science", "department", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Computer Science\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"", "query_toks": ["SELECT", "T2.Lname", "FROM", "DEPARTMENT", "AS", "T1", "JOIN", "FACULTY", "AS", "T2", "ON", "T1.DNO", "=", "T3.DNO", "JOIN", "MEMBER_OF", "AS", "T3", "ON", "T2.FacID", "=", "T3.FacID", "WHERE", "T1.DName", "=", "``", "Computer", "Science", "''"], "query_toks_no_value": ["select", "t2", ".", "lname", "from", "department", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "dno", "=", "t3", ".", "dno", "join", "member_of", "as", "t3", "on", "t2", ".", "facid", "=", "t3", ".", "facid", "where", "t1", ".", "dname", "=", "value"], "question": "¿Cuáles son los apellidos de los profesores que forman parte del departamento de informática?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "faculty", "who", "are", "part", "of", "the", "computer", "science", "department", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Computer Science\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)", "query_toks": ["SELECT", "Fname", "FROM", "STUDENT", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "StuID", "FROM", "ENROLLED_IN", ")"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "enrolled_in", ")"], "question": "Encuentre el nombre de los estudiantes que no están matriculados en ningún curso.\n", "question_toks": ["Find", "the", "first", "name", "of", "students", "not", "enrolled", "in", "any", "course", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "college_3", "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)", "query_toks": ["SELECT", "Fname", "FROM", "STUDENT", "WHERE", "StuID", "NOT", "IN", "(", "SELECT", "StuID", "FROM", "ENROLLED_IN", ")"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "enrolled_in", ")"], "question": "¿Cuáles son los nombres de todos los estudiantes que no están matriculados en cursos?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "that", "are", "not", "enrolled", "in", "courses", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10", "query_toks": ["SELECT", "T1.address_details", "FROM", "addresses", "AS", "T1", "JOIN", "customer_addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T2.customer_id", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "address_details", "from", "addresses", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "customer_id", "=", "value"], "question": "Devuelve la dirección del cliente 10.\n", "question_toks": ["Return", "the", "address", "of", "customer", "10", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10", "query_toks": ["SELECT", "T1.address_details", "FROM", "addresses", "AS", "T1", "JOIN", "customer_addresses", "AS", "T2", "ON", "T1.address_id", "=", "T2.address_id", "WHERE", "T2.customer_id", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "address_details", "from", "addresses", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "customer_id", "=", "value"], "question": "¿Cuál es la dirección del cliente con id 10?\n", "question_toks": ["What", "is", "the", "address", "for", "the", "customer", "with", "id", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"", "query_toks": ["SELECT", "T1.staff_id", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Department", "Manager", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_id", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value"], "question": "¿Cuáles son los identificadores y géneros del personal de todo el personal cuyo puesto es Gerente de Departamento?\n", "question_toks": ["What", "are", "the", "staff", "ids", "and", "genders", "of", "all", "staffs", "whose", "job", "title", "is", "Department", "Manager", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 55, false], null], "\"Department Manager\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"", "query_toks": ["SELECT", "T1.staff_id", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.job_title_code", "=", "``", "Department", "Manager", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_id", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "job_title_code", "=", "value"], "question": "Devuelva los ID y géneros del personal de cualquier miembro del personal con el título de Gerente de departamento.\n", "question_toks": ["Return", "the", "staff", "ids", "and", "genders", "for", "any", "staff", "with", "the", "title", "Department", "Manager", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 55, false], null], "\"Department Manager\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3", "query_toks": ["SELECT", "T2.product_type_code", ",", "T2.product_name", ",", "T2.product_price", "FROM", "product_suppliers", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.supplier_id", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "product_type_code", ",", "t2", ".", "product_name", ",", "t2", ".", "product_price", "from", "product_suppliers", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "supplier_id", "=", "value"], "question": "Dame el tipo de producto, el nombre y el precio de todos los productos suministrados por el proveedor 3.\n", "question_toks": ["Give", "me", "the", "product", "type", ",", "name", "and", "price", "for", "all", "the", "products", "supplied", "by", "supplier", "id", "3", "."], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 47, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3", "query_toks": ["SELECT", "T2.product_type_code", ",", "T2.product_name", ",", "T2.product_price", "FROM", "product_suppliers", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.supplier_id", "=", "3"], "query_toks_no_value": ["select", "t2", ".", "product_type_code", ",", "t2", ".", "product_name", ",", "t2", ".", "product_price", "from", "product_suppliers", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "supplier_id", "=", "value"], "question": "Devolver el tipo de producto, nombre y precio de los productos suministrados por el proveedor 3.\n", "question_toks": ["Return", "the", "product", "type", ",", "name", ",", "and", "price", "for", "products", "supplied", "by", "supplier", "3", "."], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 47, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)", "query_toks": ["SELECT", "T1.product_id", "FROM", "product_suppliers", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.supplier_id", "=", "2", "AND", "T2.product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "products", ")"], "query_toks_no_value": ["select", "t1", ".", "product_id", "from", "product_suppliers", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "supplier_id", "=", "value", "and", "t2", ".", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "Identificadores de devolución de todos los productos suministrados por el identificador de proveedor 2 y que son más caros que el precio promedio de todos los productos.\n", "question_toks": ["Return", "ids", "of", "all", "the", "products", "that", "are", "supplied", "by", "supplier", "id", "2", "and", "are", "more", "expensive", "than", "the", "average", "price", "of", "all", "products", "."], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 47, false], null], 2.0, null], "and", [false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)", "query_toks": ["SELECT", "T1.product_id", "FROM", "product_suppliers", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T1.supplier_id", "=", "2", "AND", "T2.product_price", ">", "(", "SELECT", "avg", "(", "product_price", ")", "FROM", "products", ")"], "query_toks_no_value": ["select", "t1", ".", "product_id", "from", "product_suppliers", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t1", ".", "supplier_id", "=", "value", "and", "t2", ".", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "¿Cuáles son los identificadores de los productos del proveedor con identificador 2, que son más caros que el precio promedio de todos los productos?\n", "question_toks": ["What", "are", "the", "ids", "of", "products", "from", "the", "supplier", "with", "id", "2", ",", "which", "are", "more", "expensive", "than", "the", "average", "price", "across", "all", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 47, false], null], 2.0, null], "and", [false, 3, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "query_toks": ["SELECT", "product_name", ",", "product_id", "FROM", "products", "WHERE", "product_price", "BETWEEN", "600", "AND", "700"], "query_toks_no_value": ["select", "product_name", ",", "product_id", "from", "products", "where", "product_price", "between", "value", "and", "value"], "question": "Devuelve los nombres y los identificadores de todos los productos cuyo precio esté entre 600 y 700.\n", "question_toks": ["Return", "the", "names", "and", "ids", "of", "all", "products", "whose", "price", "is", "between", "600", "and", "700", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 600.0, 700.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700", "query_toks": ["SELECT", "product_name", ",", "product_id", "FROM", "products", "WHERE", "product_price", "BETWEEN", "600", "AND", "700"], "query_toks_no_value": ["select", "product_name", ",", "product_id", "from", "products", "where", "product_price", "between", "value", "and", "value"], "question": "¿Cuáles son los nombres y los identificadores de los productos que cuestan entre 600 y 700?\n", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "products", "costing", "between", "600", "and", "700", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 600.0, 700.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")", "query_toks": ["SELECT", "DISTINCT", "customer_id", "FROM", "Customer_Orders", "WHERE", "order_date", ">", "(", "SELECT", "min", "(", "order_date", ")", "FROM", "Customer_Orders", "WHERE", "order_status_code", "=", "``", "Cancelled", "''", ")"], "query_toks_no_value": ["select", "distinct", "customer_id", "from", "customer_orders", "where", "order_date", ">", "(", "select", "min", "(", "order_date", ")", "from", "customer_orders", "where", "order_status_code", "=", "value", ")"], "question": "Encuentre las identificaciones de todos los clientes distintos que realizaron pedidos después de que algunos pedidos fueron cancelados.\n", "question_toks": ["Find", "the", "ids", "of", "all", "distinct", "customers", "who", "made", "order", "after", "some", "orders", "that", "were", "Cancelled", "."], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [true, [[0, [0, [0, 31, false], null]]]], "where": [[false, 3, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[2, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Cancelled\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")", "query_toks": ["SELECT", "DISTINCT", "customer_id", "FROM", "Customer_Orders", "WHERE", "order_date", ">", "(", "SELECT", "min", "(", "order_date", ")", "FROM", "Customer_Orders", "WHERE", "order_status_code", "=", "``", "Cancelled", "''", ")"], "query_toks_no_value": ["select", "distinct", "customer_id", "from", "customer_orders", "where", "order_date", ">", "(", "select", "min", "(", "order_date", ")", "from", "customer_orders", "where", "order_status_code", "=", "value", ")"], "question": "¿Cuáles son las identificaciones distintas de los clientes que realizaron un pedido después de cualquier pedido cancelado?\n", "question_toks": ["What", "are", "the", "distinct", "ids", "of", "customers", "who", "made", "an", "order", "after", "any", "order", "that", "was", "Cancelled", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [true, [[0, [0, [0, 31, false], null]]]], "where": [[false, 3, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[2, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Cancelled\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')", "query_toks": ["SELECT", "staff_id", "FROM", "Staff_Department_Assignments", "WHERE", "date_assigned_to", "<", "(", "SELECT", "max", "(", "date_assigned_to", ")", "FROM", "Staff_Department_Assignments", "WHERE", "job_title_code", "=", "'Clerical", "Staff", "'", ")"], "query_toks_no_value": ["select", "staff_id", "from", "staff_department_assignments", "where", "date_assigned_to", "<", "(", "select", "max", "(", "date_assigned_to", ")", "from", "staff_department_assignments", "where", "job_title_code", "=", "value", ")"], "question": "¿Cuál es la identificación del personal que tuvo una asignación de departamento de personal antes que cualquier personal administrativo?\n", "question_toks": ["What", "is", "id", "of", "the", "staff", "who", "had", "a", "Staff", "Department", "Assignment", "earlier", "than", "any", "Clerical", "Staff", "?"], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 52, false], null]]]], "where": [[false, 4, [0, [0, 56, false], null], {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[1, [0, [0, 56, false], null]]]], "where": [[false, 2, [0, [0, 55, false], null], "\"Clerical Staff\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')", "query_toks": ["SELECT", "staff_id", "FROM", "Staff_Department_Assignments", "WHERE", "date_assigned_to", "<", "(", "SELECT", "max", "(", "date_assigned_to", ")", "FROM", "Staff_Department_Assignments", "WHERE", "job_title_code", "=", "'Clerical", "Staff", "'", ")"], "query_toks_no_value": ["select", "staff_id", "from", "staff_department_assignments", "where", "date_assigned_to", "<", "(", "select", "max", "(", "date_assigned_to", ")", "from", "staff_department_assignments", "where", "job_title_code", "=", "value", ")"], "question": "Devuelve la identificación del personal cuya Asignación de Departamento de Personal fue anterior a la de cualquier Personal Administrativo.\n", "question_toks": ["Return", "the", "id", "of", "the", "staff", "whose", "Staff", "Department", "Assignment", "was", "earlier", "than", "that", "of", "any", "Clerical", "Staff", "."], "sql": {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[0, [0, [0, 52, false], null]]]], "where": [[false, 4, [0, [0, 56, false], null], {"from": {"table_units": [["table_unit", 13]], "conds": []}, "select": [false, [[1, [0, [0, 56, false], null]]]], "where": [[false, 2, [0, [0, 55, false], null], "\"Clerical Staff\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "query_toks": ["SELECT", "customer_name", ",", "customer_id", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "TN", "%", "''"], "query_toks_no_value": ["select", "customer_name", ",", "customer_id", "from", "customers", "where", "customer_address", "like", "value"], "question": "¿Cuáles son los nombres y los identificadores de los clientes cuya dirección contiene TN?\n", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "customers", "whose", "address", "contains", "TN", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%TN%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"", "query_toks": ["SELECT", "customer_name", ",", "customer_id", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "TN", "%", "''"], "query_toks_no_value": ["select", "customer_name", ",", "customer_id", "from", "customers", "where", "customer_address", "like", "value"], "question": "Devuelve los nombres e identificaciones de los clientes que tienen TN en su dirección.\n", "question_toks": ["Return", "the", "names", "and", "ids", "of", "customers", "who", "have", "TN", "in", "their", "address", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%TN%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.date_assigned_from", "LIKE", "``", "2016", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "date_assigned_from", "like", "value"], "question": "Devuelva el nombre y sexo del personal asignado en 2016.\n", "question_toks": ["Return", "the", "name", "and", "gender", "of", "the", "staff", "who", "was", "assigned", "in", "2016", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 54, false], null], "\"2016%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"", "query_toks": ["SELECT", "T1.staff_name", ",", "T1.staff_gender", "FROM", "staff", "AS", "T1", "JOIN", "staff_department_assignments", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.date_assigned_from", "LIKE", "``", "2016", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "staff_name", ",", "t1", ".", "staff_gender", "from", "staff", "as", "t1", "join", "staff_department_assignments", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "date_assigned_from", "like", "value"], "question": "¿Cuáles son los nombres y géneros del personal asignado en 2016?\n", "question_toks": ["What", "are", "the", "names", "and", "genders", "of", "staff", "who", "were", "assigned", "in", "2016", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 54, false], null], "\"2016%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "query_toks": ["SELECT", "product_id", ",", "product_name", "FROM", "products", "WHERE", "product_price", "<", "600", "OR", "product_price", ">", "900"], "query_toks_no_value": ["select", "product_id", ",", "product_name", "from", "products", "where", "product_price", "<", "value", "or", "product_price", ">", "value"], "question": "¿Cuáles son el id y el nombre de los productos cuyo precio es inferior a 600 o superior a 900?\n", "question_toks": ["What", "are", "id", "and", "name", "of", "the", "products", "whose", "price", "is", "lower", "than", "600", "or", "higher", "than", "900", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 600.0, null], "or", [false, 3, [0, [0, 21, false], null], 900.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900", "query_toks": ["SELECT", "product_id", ",", "product_name", "FROM", "products", "WHERE", "product_price", "<", "600", "OR", "product_price", ">", "900"], "query_toks_no_value": ["select", "product_id", ",", "product_name", "from", "products", "where", "product_price", "<", "value", "or", "product_price", ">", "value"], "question": "Proporcione los identificadores y nombres de los productos con precio inferior a 600 o superior a 900.\n", "question_toks": ["Give", "the", "ids", "and", "names", "of", "products", "with", "price", "lower", "than", "600", "or", "higher", "than", "900", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 600.0, null], "or", [false, 3, [0, [0, 21, false], null], 900.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"", "query_toks": ["SELECT", "DISTINCT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "products", "AS", "T4", "ON", "T3.product_id", "=", "T4.product_id", "WHERE", "T4.product_name", "=", "``", "keyboard", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id", "where", "t4", ".", "product_name", "=", "value"], "question": "Enumere los nombres de todos los distintos clientes que compraron un teclado.\n", "question_toks": ["List", "the", "names", "of", "all", "the", "distinct", "customers", "who", "bought", "a", "keyboard", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 8], ["table_unit", 11], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 44, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"keyboard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"", "query_toks": ["SELECT", "DISTINCT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "JOIN", "products", "AS", "T4", "ON", "T3.product_id", "=", "T4.product_id", "WHERE", "T4.product_name", "=", "``", "keyboard", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id", "where", "t4", ".", "product_name", "=", "value"], "question": "¿Cuáles son los nombres distintos de los clientes que han comprado un teclado?\n", "question_toks": ["What", "are", "the", "distinct", "names", "of", "customers", "who", "have", "purchased", "a", "keyboard", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 8], ["table_unit", 11], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 44, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"keyboard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "query_toks": ["SELECT", "DISTINCT", "T1.supplier_name", ",", "T1.supplier_phone", "FROM", "suppliers", "AS", "T1", "JOIN", "product_suppliers", "AS", "T2", "ON", "T1.supplier_id", "=", "T2.supplier_id", "JOIN", "products", "AS", "T3", "ON", "T2.product_id", "=", "T3.product_id", "WHERE", "T3.product_name", "=", "``", "red", "jeans", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "supplier_name", ",", "t1", ".", "supplier_phone", "from", "suppliers", "as", "t1", "join", "product_suppliers", "as", "t2", "on", "t1", ".", "supplier_id", "=", "t2", ".", "supplier_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "where", "t3", ".", "product_name", "=", "value"], "question": "Enumere los nombres y números de teléfono de todos los distintos proveedores que suministran jeans rojos.\n", "question_toks": ["List", "the", "names", "and", "phone", "numbers", "of", "all", "the", "distinct", "suppliers", "who", "supply", "red", "jeans", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 12], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 46, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"red jeans\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"", "query_toks": ["SELECT", "DISTINCT", "T1.supplier_name", ",", "T1.supplier_phone", "FROM", "suppliers", "AS", "T1", "JOIN", "product_suppliers", "AS", "T2", "ON", "T1.supplier_id", "=", "T2.supplier_id", "JOIN", "products", "AS", "T3", "ON", "T2.product_id", "=", "T3.product_id", "WHERE", "T3.product_name", "=", "``", "red", "jeans", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "supplier_name", ",", "t1", ".", "supplier_phone", "from", "suppliers", "as", "t1", "join", "product_suppliers", "as", "t2", "on", "t1", ".", "supplier_id", "=", "t2", ".", "supplier_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "where", "t3", ".", "product_name", "=", "value"], "question": "¿Cuáles son los nombres y números de teléfono distintos de los proveedores que tienen jeans rojos?\n", "question_toks": ["What", "are", "the", "distinct", "names", "and", "phone", "numbers", "for", "suppliers", "who", "have", "red", "jeans", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 12], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 46, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"red jeans\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "WY", "%", "''", "AND", "payment_method_code", "!", "=", "``", "Credit", "Card", "''"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers", "where", "customer_address", "like", "value", "and", "payment_method_code", "!", "=", "value"], "question": "Encuentre la identificación y el nombre de los clientes cuya dirección contenga el estado de WY y no utilice tarjeta de crédito para realizar el pago.\n", "question_toks": ["Find", "the", "id", "and", "name", "of", "customers", "whose", "address", "contains", "WY", "state", "and", "do", "not", "use", "credit", "card", "for", "payment", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%WY%\"", null], "and", [false, 7, [0, [0, 12, false], null], "\"Credit Card\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "department_store", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"", "query_toks": ["SELECT", "customer_id", ",", "customer_name", "FROM", "customers", "WHERE", "customer_address", "LIKE", "``", "%", "WY", "%", "''", "AND", "payment_method_code", "!", "=", "``", "Credit", "Card", "''"], "query_toks_no_value": ["select", "customer_id", ",", "customer_name", "from", "customers", "where", "customer_address", "like", "value", "and", "payment_method_code", "!", "=", "value"], "question": "¿Cuáles son los identificadores y nombres de los clientes con direcciones que contienen WY y que no utilizan tarjeta de crédito para realizar pagos?\n", "question_toks": ["What", "are", "the", "ids", "and", "names", "of", "customers", "with", "addressed", "that", "contain", "WY", "and", "who", "do", "not", "use", "a", "credit", "card", "for", "payment", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%WY%\"", null], "and", [false, 7, [0, [0, 12, false], null], "\"Credit Card\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT Description FROM aircraft", "query_toks": ["SELECT", "Description", "FROM", "aircraft"], "query_toks_no_value": ["select", "description", "from", "aircraft"], "question": "Enumere la descripción de todas las aeronaves.\n", "question_toks": ["List", "the", "description", "of", "all", "aircrafts", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT Description FROM aircraft", "query_toks": ["SELECT", "Description", "FROM", "aircraft"], "query_toks_no_value": ["select", "description", "from", "aircraft"], "question": "¿Cuáles son las descripciones de los aviones?\n", "question_toks": ["What", "are", "the", "descriptions", "for", "the", "aircrafts", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "query_toks": ["SELECT", "International_Passengers", ",", "Domestic_Passengers", "FROM", "airport", "WHERE", "Airport_Name", "=", "``", "London", "Heathrow", "''"], "query_toks_no_value": ["select", "international_passengers", ",", "domestic_passengers", "from", "airport", "where", "airport_name", "=", "value"], "question": "¿Cuál es el número de pasajeros nacionales e internacionales del aeropuerto llamado Londres \"Heathrow\"?\n", "question_toks": ["What", "are", "the", "number", "of", "international", "and", "domestic", "passengers", "of", "the", "airport", "named", "London", "``", "Heathrow", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"London Heathrow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"", "query_toks": ["SELECT", "International_Passengers", ",", "Domestic_Passengers", "FROM", "airport", "WHERE", "Airport_Name", "=", "``", "London", "Heathrow", "''"], "query_toks_no_value": ["select", "international_passengers", ",", "domestic_passengers", "from", "airport", "where", "airport_name", "=", "value"], "question": "¿Cuántos pasajeros nacionales e internacionales hay en el aeropuerto de Londres Heathrow?\n", "question_toks": ["How", "many", "international", "and", "domestic", "passengers", "are", "there", "in", "the", "airport", "London", "Heathrow", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"London Heathrow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT Name FROM pilot WHERE Age  >=  25", "query_toks": ["SELECT", "Name", "FROM", "pilot", "WHERE", "Age", ">", "=", "25"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "age", ">", "=", "value"], "question": "¿Cómo se llaman los pilotos de 25 años o más?\n", "question_toks": ["What", "are", "the", "name", "of", "pilots", "aged", "25", "or", "older", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 3, false], null], 25.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT Name FROM pilot WHERE Age  >=  25", "query_toks": ["SELECT", "Name", "FROM", "pilot", "WHERE", "Age", ">", "=", "25"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "age", ">", "=", "value"], "question": "¿Cómo se llama todo piloto que tenga al menos 25 años?\n", "question_toks": ["what", "is", "the", "name", "of", "every", "pilot", "who", "is", "at", "least", "25", "years", "old", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 3, false], null], 25.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Gatwick", "''"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value"], "question": "Muestre los nombres de las aeronaves asociadas con el aeropuerto con el nombre \"Londres Gatwick\".\n", "question_toks": ["Please", "show", "the", "names", "of", "aircrafts", "associated", "with", "airport", "with", "name", "``", "London", "Gatwick", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 28, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"London Gatwick\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"", "query_toks": ["SELECT", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Airport_Name", "=", "``", "London", "Gatwick", "''"], "query_toks_no_value": ["select", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "airport_name", "=", "value"], "question": "¿Cuáles son los nombres de todos los aviones asociados con el aeropuerto de Londres Gatwick?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "aircrafts", "associated", "with", "London", "Gatwick", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 28, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"London Gatwick\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "query_toks": ["SELECT", "T1.Aircraft", ",", "T1.Description", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Total_Passengers", ">", "10000000"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "t1", ".", "description", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "total_passengers", ">", "value"], "question": "Favor mostrar los nombres y descripciones de las aeronaves asociadas a aeropuertos que tengan un número total de pasajeros mayor a 10000000.\n", "question_toks": ["Please", "show", "the", "names", "and", "descriptions", "of", "aircrafts", "associated", "with", "airports", "that", "have", "a", "total", "number", "of", "passengers", "bigger", "than", "10000000", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 28, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 10000000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000", "query_toks": ["SELECT", "T1.Aircraft", ",", "T1.Description", "FROM", "aircraft", "AS", "T1", "JOIN", "airport_aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "airport", "AS", "T3", "ON", "T2.Airport_ID", "=", "T3.Airport_ID", "WHERE", "T3.Total_Passengers", ">", "10000000"], "query_toks_no_value": ["select", "t1", ".", "aircraft", ",", "t1", ".", "description", "from", "aircraft", "as", "t1", "join", "airport_aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "airport", "as", "t3", "on", "t2", ".", "airport_id", "=", "t3", ".", "airport_id", "where", "t3", ".", "total_passengers", ">", "value"], "question": "¿Cuáles son los nombres y descripciones de las aeronaves asociadas con un aeropuerto que tiene más pasajeros en total que 10000000?\n", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "aircrafts", "associated", "with", "an", "airport", "that", "has", "more", "total", "passengers", "than", "10000000", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 28, false], null], "and", [false, 2, [0, [0, 27, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 10000000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "query_toks": ["SELECT", "T2.Location", ",", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t2", ".", "location", ",", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft"], "question": "Indique la ubicación y el nombre del avión ganador.\n", "question_toks": ["Please", "list", "the", "location", "and", "the", "winning", "aircraft", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft", "query_toks": ["SELECT", "T2.Location", ",", "T1.Aircraft", "FROM", "aircraft", "AS", "T1", "JOIN", "MATCH", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Winning_Aircraft"], "query_toks_no_value": ["select", "t2", ".", "location", ",", "t1", ".", "aircraft", "from", "aircraft", "as", "t1", "join", "match", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "winning_aircraft"], "question": "¿Cuál es la ubicación y el nombre del avión ganador?\n", "question_toks": ["What", "is", "the", "location", "and", "name", "of", "the", "winning", "aircraft", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "query_toks": ["SELECT", "Aircraft", "FROM", "aircraft", "WHERE", "Aircraft_ID", "NOT", "IN", "(", "SELECT", "Winning_Aircraft", "FROM", "MATCH", ")"], "query_toks_no_value": ["select", "aircraft", "from", "aircraft", "where", "aircraft_id", "not", "in", "(", "select", "winning_aircraft", "from", "match", ")"], "question": "Enumere los nombres de los aviones que no ganaron ningún partido.\n", "question_toks": ["List", "the", "names", "of", "aircrafts", "and", "that", "did", "not", "win", "any", "match", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)", "query_toks": ["SELECT", "Aircraft", "FROM", "aircraft", "WHERE", "Aircraft_ID", "NOT", "IN", "(", "SELECT", "Winning_Aircraft", "FROM", "MATCH", ")"], "query_toks_no_value": ["select", "aircraft", "from", "aircraft", "where", "aircraft_id", "not", "in", "(", "select", "winning_aircraft", "from", "match", ")"], "question": "¿Cómo se llaman todos los aviones que nunca han ganado ningún partido?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "aicrafts", "that", "have", "never", "won", "any", "match", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "query_toks": ["SELECT", "name", "FROM", "pilot", "WHERE", "pilot_id", "NOT", "IN", "(", "SELECT", "Winning_Pilot", "FROM", "MATCH", "WHERE", "country", "=", "'Australia", "'", ")"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "winning_pilot", "from", "match", "where", "country", "=", "value", ")"], "question": "encuentra el nombre de los pilotos que no ganaron los partidos celebrados en el país de Australia.\n", "question_toks": ["find", "the", "name", "of", "pilots", "who", "did", "not", "win", "the", "matches", "held", "in", "the", "country", "of", "Australia", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Australia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "aircraft", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')", "query_toks": ["SELECT", "name", "FROM", "pilot", "WHERE", "pilot_id", "NOT", "IN", "(", "SELECT", "Winning_Pilot", "FROM", "MATCH", "WHERE", "country", "=", "'Australia", "'", ")"], "query_toks_no_value": ["select", "name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "winning_pilot", "from", "match", "where", "country", "=", "value", ")"], "question": "¿Cómo se llaman los pilotos que no han ganado ningún partido en Australia?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "pilots", "that", "have", "not", "won", "any", "matches", "in", "Australia", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Australia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'", "query_toks": ["SELECT", "DISTINCT", "T1.service_type_code", "FROM", "services", "AS", "T1", "JOIN", "organizations", "AS", "T2", "ON", "T1.organization_id", "=", "T2.organization_id", "WHERE", "T2.organization_details", "=", "'Denesik", "and", "Sons", "Party", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "service_type_code", "from", "services", "as", "t1", "join", "organizations", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id", "where", "t2", ".", "organization_details", "=", "value"], "question": "¿Cuáles son los distintos tipos de servicios que proporciona la organización que detalla 'Denesik and Sons Party'?\n", "question_toks": ["What", "is", "the", "distinct", "service", "types", "that", "are", "provided", "by", "the", "organization", "which", "has", "detail", "'Denesik", "and", "Sons", "Party", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Denesik and Sons Party\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id", "query_toks": ["SELECT", "T1.thing_id", ",", "T1.type_of_Thing_Code", ",", "T2.organization_details", "FROM", "Things", "AS", "T1", "JOIN", "Organizations", "AS", "T2", "ON", "T1.organization_id", "=", "T2.organization_id"], "query_toks_no_value": ["select", "t1", ".", "thing_id", ",", "t1", ".", "type_of_thing_code", ",", "t2", ".", "organization_details", "from", "things", "as", "t1", "join", "organizations", "as", "t2", "on", "t1", ".", "organization_id", "=", "t2", ".", "organization_id"], "question": "Enumere la identificación y el tipo de cada cosa, y los detalles de la organización propietaria.\n", "question_toks": ["List", "the", "id", "and", "type", "of", "each", "thing", ",", "and", "the", "details", "of", "the", "organization", "that", "owns", "it", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id", "query_toks": ["SELECT", "T2.date_moved_in", ",", "T1.customer_id", ",", "T1.customer_details", "FROM", "Customers", "AS", "T1", "JOIN", "Customer_Events", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id"], "query_toks_no_value": ["select", "t2", ".", "date_moved_in", ",", "t1", ".", "customer_id", ",", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "customer_events", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id"], "question": "¿Cuál es la fecha de entrada de cada cliente y la identificación y los detalles del cliente correspondientes?\n", "question_toks": ["What", "is", "each", "customer", "'s", "move", "in", "date", ",", "and", "the", "corresponding", "customer", "id", "and", "details", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'", "query_toks": ["SELECT", "DISTINCT", "T2.thing_id", ",", "T2.Type_of_Thing_Code", "FROM", "Timed_Status_of_Things", "AS", "T1", "JOIN", "Things", "AS", "T2", "ON", "T1.thing_id", "=", "T2.thing_id", "WHERE", "T1.Status_of_Thing_Code", "=", "'Close", "'", "OR", "T1.Date_and_Date", "<", "'2017-06-19", "02:59:21", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "thing_id", ",", "t2", ".", "type_of_thing_code", "from", "timed_status_of_things", "as", "t1", "join", "things", "as", "t2", "on", "t1", ".", "thing_id", "=", "t2", ".", "thing_id", "where", "t1", ".", "status_of_thing_code", "=", "value", "or", "t1", ".", "date_and_date", "<", "value"], "question": "¿Cuáles son la identificación distintiva y el tipo de cosa que tiene el estado \"Cerrar\" o tiene un registro de estado antes de la fecha \"2017-06-19 02:59:21\"?\n", "question_toks": ["What", "are", "the", "distinct", "id", "and", "type", "of", "the", "thing", "that", "has", "the", "status", "'Close", "'", "or", "has", "a", "status", "record", "before", "the", "date", "'2017-06-19", "02:59:21", "'"], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 43, false], null], [0, 26, false], null]]}, "select": [true, [[0, [0, [0, 26, false], null]], [0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 45, false], null], "\"Close\"", null], "or", [false, 4, [0, [0, 44, false], null], "\"2017-06-19 02:59:21\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'", "query_toks": ["SELECT", "other_details", "FROM", "Residents", "WHERE", "other_details", "LIKE", "'", "%", "Miss", "%", "'"], "query_toks_no_value": ["select", "other_details", "from", "residents", "where", "other_details", "like", "value"], "question": "¿Cuáles son los detalles del residente que contienen la subcadena 'Señorita'?\n", "question_toks": ["What", "are", "the", "resident", "details", "containing", "the", "substring", "'Miss", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Miss%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events", "query_toks": ["SELECT", "customer_event_id", ",", "date_moved_in", ",", "property_id", "FROM", "customer_events"], "query_toks_no_value": ["select", "customer_event_id", ",", "date_moved_in", ",", "property_id", "from", "customer_events"], "question": "Indique la identificación del evento del cliente y la fecha de mudanza correspondiente y la identificación de la propiedad.\n", "question_toks": ["List", "the", "customer", "event", "id", "and", "the", "corresponding", "move", "in", "date", "and", "property", "id", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "local_govt_and_lot", "query": "SELECT DISTINCT date_moved_in FROM residents", "query_toks": ["SELECT", "DISTINCT", "date_moved_in", "FROM", "residents"], "query_toks_no_value": ["select", "distinct", "date_moved_in", "from", "residents"], "question": "¿Cuáles son las distintas fechas de mudanza de los residentes?\n", "question_toks": ["What", "are", "the", "distinct", "move", "in", "dates", "of", "the", "residents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"", "query_toks": ["SELECT", "Enrollment", "FROM", "school", "WHERE", "Denomination", "!", "=", "``", "Catholic", "''"], "query_toks_no_value": ["select", "enrollment", "from", "school", "where", "denomination", "!", "=", "value"], "question": "¿Cuáles son las matrículas de escuelas cuya denominación no es \"católica\"?\n", "question_toks": ["What", "are", "the", "enrollments", "of", "schools", "whose", "denomination", "is", "not", "``", "Catholic", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"Catholic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"", "query_toks": ["SELECT", "Enrollment", "FROM", "school", "WHERE", "Denomination", "!", "=", "``", "Catholic", "''"], "query_toks_no_value": ["select", "enrollment", "from", "school", "where", "denomination", "!", "=", "value"], "question": "Enumere la matrícula de cada escuela que no tenga la denominación \"Católica\".\n", "question_toks": ["List", "the", "enrollment", "for", "each", "school", "that", "does", "not", "have", "``", "Catholic", "''", "as", "denomination", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"Catholic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Team", ",", "T2.Location", "FROM", "player", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "team", ",", "t2", ".", "location", "from", "player", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "Para cada jugador, muestra el equipo y la ubicación de la escuela a la que pertenece.\n", "question_toks": ["For", "each", "player", ",", "show", "the", "team", "and", "the", "location", "of", "school", "they", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Team", ",", "T2.Location", "FROM", "player", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "team", ",", "t2", ".", "location", "from", "player", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "¿Cuál es el equipo y la ubicación de la escuela a la que pertenece cada jugador?\n", "question_toks": ["What", "are", "the", "team", "and", "the", "location", "of", "school", "each", "player", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Location", ",", "T2.Nickname", "FROM", "school", "AS", "T1", "JOIN", "school_details", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "location", ",", "t2", ".", "nickname", "from", "school", "as", "t1", "join", "school_details", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "Mostrar ubicaciones y apodos de escuelas.\n", "question_toks": ["Show", "locations", "and", "nicknames", "of", "schools", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID", "query_toks": ["SELECT", "T1.Location", ",", "T2.Nickname", "FROM", "school", "AS", "T1", "JOIN", "school_details", "AS", "T2", "ON", "T1.School_ID", "=", "T2.School_ID"], "query_toks_no_value": ["select", "t1", ".", "location", ",", "t2", ".", "nickname", "from", "school", "as", "t1", "join", "school_details", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id"], "question": "¿Cuáles son la ubicación y el apodo de cada escuela?\n", "question_toks": ["What", "are", "the", "location", "and", "nickname", "of", "each", "school", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)", "query_toks": ["SELECT", "LOCATION", "FROM", "school", "WHERE", "School_ID", "NOT", "IN", "(", "SELECT", "School_ID", "FROM", "Player", ")"], "query_toks_no_value": ["select", "location", "from", "school", "where", "school_id", "not", "in", "(", "select", "school_id", "from", "player", ")"], "question": "Enumera las ubicaciones de las escuelas que no tienen ningún jugador.\n", "question_toks": ["List", "the", "locations", "of", "schools", "that", "do", "not", "have", "any", "player", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)", "query_toks": ["SELECT", "LOCATION", "FROM", "school", "WHERE", "School_ID", "NOT", "IN", "(", "SELECT", "School_ID", "FROM", "Player", ")"], "query_toks_no_value": ["select", "location", "from", "school", "where", "school_id", "not", "in", "(", "select", "school_id", "from", "player", ")"], "question": "¿Qué colegios no tienen ningún jugador? Dame la ubicación de la escuela.\n", "question_toks": ["Which", "schools", "do", "not", "have", "any", "player", "?", "Give", "me", "the", "school", "locations", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"", "query_toks": ["SELECT", "Nickname", "FROM", "school_details", "WHERE", "Division", "!", "=", "``", "Division", "1", "''"], "query_toks_no_value": ["select", "nickname", "from", "school_details", "where", "division", "!", "=", "value"], "question": "Muestra los apodos de las escuelas que no están en la división 1.\n", "question_toks": ["Show", "the", "nicknames", "of", "schools", "that", "are", "not", "in", "division", "1", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 7, [0, [0, 16, false], null], "\"Division 1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_player", "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"", "query_toks": ["SELECT", "Nickname", "FROM", "school_details", "WHERE", "Division", "!", "=", "``", "Division", "1", "''"], "query_toks_no_value": ["select", "nickname", "from", "school_details", "where", "division", "!", "=", "value"], "question": "¿Cuáles son los apodos de las escuelas cuya división no es 1?\n", "question_toks": ["What", "are", "the", "nicknames", "of", "schools", "whose", "division", "is", "not", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 7, [0, [0, 16, false], null], "\"Division 1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "query_toks": ["SELECT", "District_name", ",", "City_Population", "FROM", "district", "WHERE", "City_Population", "BETWEEN", "200000", "AND", "2000000"], "query_toks_no_value": ["select", "district_name", ",", "city_population", "from", "district", "where", "city_population", "between", "value", "and", "value"], "question": "Encuentre el nombre y la población del distrito con una población entre 200000 y 2000000\n", "question_toks": ["Find", "the", "name", "and", "population", "of", "district", "with", "population", "between", "200000", "and", "2000000"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 1, [0, [0, 17, false], null], 200000.0, 2000000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000", "query_toks": ["SELECT", "District_name", ",", "City_Population", "FROM", "district", "WHERE", "City_Population", "BETWEEN", "200000", "AND", "2000000"], "query_toks_no_value": ["select", "district_name", ",", "city_population", "from", "district", "where", "city_population", "between", "value", "and", "value"], "question": "¿Cuáles son los nombres de los distritos y las poblaciones de las ciudades de todos los distritos que tienen entre 200.000 y 2.000.000 de residentes?\n", "question_toks": ["What", "are", "the", "district", "names", "and", "city", "populations", "for", "all", "districts", "that", "between", "200,000", "and", "2,000,000", "residents", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 1, [0, [0, 17, false], null], 200000.0, 2000000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000", "query_toks": ["SELECT", "district_name", "FROM", "district", "WHERE", "city_area", ">", "10", "OR", "City_Population", ">", "100000"], "query_toks_no_value": ["select", "district_name", "from", "district", "where", "city_area", ">", "value", "or", "city_population", ">", "value"], "question": "Encuentre el nombre de todos los distritos con un área de ciudad mayor que 10 o una población mayor que 100000\n", "question_toks": ["Find", "the", "name", "all", "districts", "with", "city", "area", "greater", "than", "10", "or", "population", "larger", "than", "100000"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 10.0, null], "or", [false, 3, [0, [0, 17, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000", "query_toks": ["SELECT", "district_name", "FROM", "district", "WHERE", "city_area", ">", "10", "OR", "City_Population", ">", "100000"], "query_toks_no_value": ["select", "district_name", "from", "district", "where", "city_area", ">", "value", "or", "city_population", ">", "value"], "question": "¿Cuáles son los nombres de todos los distritos con un área de ciudad mayor a 10 o donde viven más de 100000 personas?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "districts", "with", "a", "city", "area", "greater", "than", "10", "or", "have", "more", "than", "100000", "people", "living", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 10.0, null], "or", [false, 3, [0, [0, 17, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"", "query_toks": ["SELECT", "t1.store_name", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "JOIN", "district", "AS", "t3", "ON", "t2.district_id", "=", "t3.district_id", "WHERE", "t3.district_name", "=", "``", "Khanewal", "District", "''"], "query_toks_no_value": ["select", "t1", ".", "store_name", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "join", "district", "as", "t3", "on", "t2", ".", "district_id", "=", "t3", ".", "district_id", "where", "t3", ".", "district_name", "=", "value"], "question": "Encuentre los nombres de todas las tiendas en el distrito de Khanewal.\n", "question_toks": ["Find", "the", "names", "of", "all", "stores", "in", "Khanewal", "District", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Khanewal District\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"", "query_toks": ["SELECT", "t1.store_name", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "JOIN", "district", "AS", "t3", "ON", "t2.district_id", "=", "t3.district_id", "WHERE", "t3.district_name", "=", "``", "Khanewal", "District", "''"], "query_toks_no_value": ["select", "t1", ".", "store_name", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "join", "district", "as", "t3", "on", "t2", ".", "district_id", "=", "t3", ".", "district_id", "where", "t3", ".", "district_name", "=", "value"], "question": "¿Cuáles son los nombres de todas las tiendas ubicadas en el distrito de Khanewal?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "stores", "located", "in", "Khanewal", "District", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Khanewal District\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)", "query_toks": ["SELECT", "t1.store_name", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "WHERE", "district_id", "=", "(", "SELECT", "district_id", "FROM", "district", "ORDER", "BY", "city_population", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "store_name", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "where", "district_id", "=", "(", "select", "district_id", "from", "district", "order", "by", "city_population", "desc", "limit", "value", ")"], "question": "Encuentra todas las tiendas del distrito con más población.\n", "question_toks": ["Find", "all", "the", "stores", "in", "the", "district", "with", "the", "most", "population", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)", "query_toks": ["SELECT", "t1.store_name", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "WHERE", "district_id", "=", "(", "SELECT", "district_id", "FROM", "district", "ORDER", "BY", "city_population", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "store_name", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "where", "district_id", "=", "(", "select", "district_id", "from", "district", "order", "by", "city_population", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de todas las tiendas del distrito más grande por población?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "stores", "in", "the", "largest", "district", "by", "population", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"", "query_toks": ["SELECT", "t3.headquartered_city", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "JOIN", "district", "AS", "t3", "ON", "t2.district_id", "=", "t3.district_id", "WHERE", "t1.store_name", "=", "``", "Blackville", "''"], "query_toks_no_value": ["select", "t3", ".", "headquartered_city", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "join", "district", "as", "t3", "on", "t2", ".", "district_id", "=", "t3", ".", "district_id", "where", "t1", ".", "store_name", "=", "value"], "question": "¿En qué ciudad está la sede de la tienda llamada \"Blackville\"?\n", "question_toks": ["Which", "city", "is", "the", "headquarter", "of", "the", "store", "named", "``", "Blackville", "''", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Blackville\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"", "query_toks": ["SELECT", "t3.headquartered_city", "FROM", "store", "AS", "t1", "JOIN", "store_district", "AS", "t2", "ON", "t1.store_id", "=", "t2.store_id", "JOIN", "district", "AS", "t3", "ON", "t2.district_id", "=", "t3.district_id", "WHERE", "t1.store_name", "=", "``", "Blackville", "''"], "query_toks_no_value": ["select", "t3", ".", "headquartered_city", "from", "store", "as", "t1", "join", "store_district", "as", "t2", "on", "t1", ".", "store_id", "=", "t2", ".", "store_id", "join", "district", "as", "t3", "on", "t2", ".", "district_id", "=", "t3", ".", "district_id", "where", "t1", ".", "store_name", "=", "value"], "question": "¿Qué ciudad es la sede de la tienda Blackville?\n", "question_toks": ["What", "city", "is", "the", "headquarter", "of", "the", "store", "Blackville", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Blackville\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"", "query_toks": ["SELECT", "t1.product", "FROM", "product", "AS", "t1", "JOIN", "store_product", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "store", "AS", "t3", "ON", "t2.store_id", "=", "t3.store_id", "WHERE", "t3.store_name", "=", "``", "Miramichi", "''"], "query_toks_no_value": ["select", "t1", ".", "product", "from", "product", "as", "t1", "join", "store_product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "store", "as", "t3", "on", "t2", ".", "store_id", "=", "t3", ".", "store_id", "where", "t3", ".", "store_name", "=", "value"], "question": "¿Qué productos están disponibles en la tienda llamada \"Miramichi\"?\n", "question_toks": ["What", "products", "are", "available", "at", "store", "named", "``", "Miramichi", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Miramichi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"", "query_toks": ["SELECT", "t1.product", "FROM", "product", "AS", "t1", "JOIN", "store_product", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "store", "AS", "t3", "ON", "t2.store_id", "=", "t3.store_id", "WHERE", "t3.store_name", "=", "``", "Miramichi", "''"], "query_toks_no_value": ["select", "t1", ".", "product", "from", "product", "as", "t1", "join", "store_product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "store", "as", "t3", "on", "t2", ".", "store_id", "=", "t3", ".", "store_id", "where", "t3", ".", "store_name", "=", "value"], "question": "¿Qué productos se venden en la tienda llamada Miramichi?\n", "question_toks": ["What", "products", "are", "sold", "at", "the", "store", "named", "Miramichi", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 20, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Miramichi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "max_page_size", "=", "``", "A4", "''", "AND", "pages_per_minute_color", "<", "5"], "query_toks_no_value": ["select", "product", "from", "product", "where", "max_page_size", "=", "value", "and", "pages_per_minute_color", "<", "value"], "question": "Encuentre productos con un tamaño de página máximo como \"A4\" y páginas por minuto en color inferiores a 5.\n", "question_toks": ["Find", "products", "with", "max", "page", "size", "as", "``", "A4", "''", "and", "pages", "per", "minute", "color", "smaller", "than", "5", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"A4\"", null], "and", [false, 4, [0, [0, 5, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "max_page_size", "=", "``", "A4", "''", "AND", "pages_per_minute_color", "<", "5"], "query_toks_no_value": ["select", "product", "from", "product", "where", "max_page_size", "=", "value", "and", "pages_per_minute_color", "<", "value"], "question": "¿Cuáles son los productos con un tamaño de página máximo A4 que también tienen un color de páginas por minuto inferior a 5?\n", "question_toks": ["What", "are", "the", "products", "with", "the", "maximum", "page", "size", "A4", "that", "also", "have", "a", "pages", "per", "minute", "color", "smaller", "than", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"A4\"", null], "and", [false, 4, [0, [0, 5, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "max_page_size", "=", "``", "A4", "''", "OR", "pages_per_minute_color", "<", "5"], "query_toks_no_value": ["select", "product", "from", "product", "where", "max_page_size", "=", "value", "or", "pages_per_minute_color", "<", "value"], "question": "Encuentre productos con un tamaño de página máximo como \"A4\" o páginas por minuto en color inferiores a 5.\n", "question_toks": ["Find", "products", "with", "max", "page", "size", "as", "``", "A4", "''", "or", "pages", "per", "minute", "color", "smaller", "than", "5", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"A4\"", null], "or", [false, 4, [0, [0, 5, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "max_page_size", "=", "``", "A4", "''", "OR", "pages_per_minute_color", "<", "5"], "query_toks_no_value": ["select", "product", "from", "product", "where", "max_page_size", "=", "value", "or", "pages_per_minute_color", "<", "value"], "question": "¿Cuáles son los productos con un tamaño de página máximo igual a A4 o un color de páginas por minuto inferior a 5?\n", "question_toks": ["What", "are", "the", "products", "with", "the", "maximum", "page", "size", "eqal", "to", "A4", "or", "a", "pages", "per", "minute", "color", "less", "than", "5", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"A4\"", null], "or", [false, 4, [0, [0, 5, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "product", "LIKE", "``", "%", "Scanner", "%", "''"], "query_toks_no_value": ["select", "product", "from", "product", "where", "product", "like", "value"], "question": "Encuentre todos los productos cuyo nombre contenga la palabra \"Escáner\".\n", "question_toks": ["Find", "all", "the", "product", "whose", "name", "contains", "the", "word", "``", "Scanner", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Scanner%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "product", "LIKE", "``", "%", "Scanner", "%", "''"], "query_toks_no_value": ["select", "product", "from", "product", "where", "product", "like", "value"], "question": "¿Cuáles son todos los productos cuyo nombre incluye la subcadena \"Escáner\"?\n", "question_toks": ["What", "are", "all", "of", "the", "products", "whose", "name", "includes", "the", "substring", "``", "Scanner", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Scanner%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "product", "!", "=", "(", "SELECT", "max_page_size", "FROM", "product", "GROUP", "BY", "max_page_size", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "product", "from", "product", "where", "product", "!", "=", "(", "select", "max_page_size", "from", "product", "group", "by", "max_page_size", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Busque el nombre de los productos que no utilizan el tamaño máximo de página utilizado con más frecuencia.\n", "question_toks": ["Find", "the", "name", "of", "the", "products", "that", "are", "not", "using", "the", "most", "frequently-used", "max", "page", "size", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "store_product", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "product", "FROM", "product", "WHERE", "product", "!", "=", "(", "SELECT", "max_page_size", "FROM", "product", "GROUP", "BY", "max_page_size", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "product", "from", "product", "where", "product", "!", "=", "(", "select", "max_page_size", "from", "product", "group", "by", "max_page_size", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de todos los productos que no tienen el tamaño de página máximo utilizado con más frecuencia?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "products", "that", "are", "not", "the", "most", "frequently-used", "maximum", "page", "size", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "query_toks": ["SELECT", "pName", ",", "HS", "FROM", "Player", "WHERE", "HS", "<", "1500"], "query_toks_no_value": ["select", "pname", ",", "hs", "from", "player", "where", "hs", "<", "value"], "question": "Encuentre el nombre y las horas de entrenamiento de los jugadores cuyas horas estén por debajo de 1500.\n", "question_toks": ["Find", "the", "name", "and", "training", "hours", "of", "players", "whose", "hours", "are", "below", "1500", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], 1500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "query_toks": ["SELECT", "pName", ",", "HS", "FROM", "Player", "WHERE", "HS", "<", "1500"], "query_toks_no_value": ["select", "pname", ",", "hs", "from", "player", "where", "hs", "<", "value"], "question": "¿Cuáles son los nombres y el número de horas de entrenamiento de cada jugador que entrena menos de 1500 horas?\n", "question_toks": ["What", "are", "the", "names", "and", "number", "of", "hours", "spent", "training", "for", "each", "player", "who", "trains", "for", "less", "than", "1500", "hours", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], 1500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "query_toks": ["SELECT", "pName", "FROM", "Player", "WHERE", "HS", "BETWEEN", "500", "AND", "1500"], "query_toks_no_value": ["select", "pname", "from", "player", "where", "hs", "between", "value", "and", "value"], "question": "¿Cómo se llaman los jugadores cuyas horas de entrenamiento están entre 500 y 1500?\n", "question_toks": ["What", "are", "the", "names", "of", "players", "whose", "training", "hours", "is", "between", "500", "and", "1500", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 1, [0, [0, 7, false], null], 500.0, 1500.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "query_toks": ["SELECT", "pName", "FROM", "Player", "WHERE", "HS", "BETWEEN", "500", "AND", "1500"], "query_toks_no_value": ["select", "pname", "from", "player", "where", "hs", "between", "value", "and", "value"], "question": "¿Cómo se llaman los jugadores que entrenan entre 500 y 1500 horas?\n", "question_toks": ["What", "are", "the", "names", "of", "players", "who", "train", "between", "500", "and", "1500", "hours", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 1, [0, [0, 7, false], null], 500.0, 1500.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "query_toks": ["SELECT", "DISTINCT", "pName", "FROM", "Player", "WHERE", "pName", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "distinct", "pname", "from", "player", "where", "pname", "like", "value"], "question": "Encuentra los jugadores cuyos nombres contienen la letra 'a'.\n", "question_toks": ["Find", "the", "players", "whose", "names", "contain", "letter", "'a", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "query_toks": ["SELECT", "DISTINCT", "pName", "FROM", "Player", "WHERE", "pName", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "distinct", "pname", "from", "player", "where", "pname", "like", "value"], "question": "¿Quiénes son los jugadores que tienen nombres que contienen la letra a?\n", "question_toks": ["Who", "are", "the", "players", "that", "have", "names", "containing", "the", "letter", "a", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "query_toks": ["SELECT", "cName", ",", "enr", "FROM", "College", "WHERE", "enr", ">", "10000", "AND", "state", "=", "``", "LA", "''"], "query_toks_no_value": ["select", "cname", ",", "enr", "from", "college", "where", "enr", ">", "value", "and", "state", "=", "value"], "question": "Encuentre el nombre, la inscripción de las universidades cuyo tamaño sea mayor a 10000 y la ubicación esté en el estado de Los Ángeles.\n", "question_toks": ["Find", "the", "name", ",", "enrollment", "of", "the", "colleges", "whose", "size", "is", "bigger", "than", "10000", "and", "location", "is", "in", "state", "LA", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 10000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"LA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "query_toks": ["SELECT", "cName", ",", "enr", "FROM", "College", "WHERE", "enr", ">", "10000", "AND", "state", "=", "``", "LA", "''"], "query_toks_no_value": ["select", "cname", ",", "enr", "from", "college", "where", "enr", ">", "value", "and", "state", "=", "value"], "question": "¿Cuáles son los nombres y números de inscripción de las universidades que tienen más de 10000 inscritos y están ubicadas en Luisiana?\n", "question_toks": ["What", "are", "the", "names", "and", "enrollment", "numbers", "for", "colleges", "that", "have", "more", "than", "10000", "enrolled", "and", "are", "located", "in", "Louisiana", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 10000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"LA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName", "query_toks": ["SELECT", "DISTINCT", "state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName"], "query_toks_no_value": ["select", "distinct", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname"], "question": "Encuentre los estados donde hay algunos estudiantes universitarios en prueba.\n", "question_toks": ["Find", "the", "states", "where", "have", "some", "college", "students", "in", "tryout", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName", "query_toks": ["SELECT", "DISTINCT", "state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName"], "query_toks_no_value": ["select", "distinct", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname"], "question": "¿Cuáles son los diferentes estados que tienen estudiantes haciendo pruebas?\n", "question_toks": ["What", "are", "the", "different", "states", "that", "have", "students", "trying", "out", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "Encuentre los estados donde hay algunos estudiantes universitarios en prueba y sus decisiones son afirmativas.\n", "question_toks": ["Find", "the", "states", "where", "have", "some", "college", "students", "in", "tryout", "and", "their", "decisions", "are", "yes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "¿Cuáles son los diferentes estados en los que los estudiantes probaron con éxito?\n", "question_toks": ["What", "are", "the", "different", "states", "that", "had", "students", "successfully", "try", "out", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T2.cName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t2", ".", "cname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Encuentre el nombre y la universidad de los estudiantes cuyas decisiones fueron afirmativas en la prueba.\n", "question_toks": ["Find", "the", "name", "and", "college", "of", "students", "whose", "decisions", "are", "yes", "in", "the", "tryout", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T2.cName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t2", ".", "cname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "¿Cuáles son los nombres de todos los jugadores que recibieron un sí durante las pruebas y también cuáles son los nombres de sus universidades?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "players", "who", "received", "a", "yes", "during", "tryouts", ",", "and", "also", "what", "are", "the", "names", "of", "their", "colleges", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T1.HS", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t1", ".", "hs", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Encuentre el nombre y el horario de los estudiantes cuya decisión de prueba fue sí.\n", "question_toks": ["Find", "the", "name", "and", "hours", "of", "the", "students", "whose", "tryout", "decision", "is", "yes", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T1.HS", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t1", ".", "hs", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "¿Cuáles son los nombres y las horas de práctica de cada estudiante que recibió un sí en las pruebas?\n", "question_toks": ["What", "are", "the", "names", "and", "hours", "spent", "practicing", "of", "every", "student", "who", "received", "a", "yes", "at", "tryouts", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'striker", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "Encuentre los estados de las universidades que tienen estudiantes en la prueba que jugaron en posición de delantero.\n", "question_toks": ["Find", "the", "states", "of", "the", "colleges", "that", "have", "students", "in", "the", "tryout", "who", "played", "in", "striker", "position", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"striker\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'striker", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "¿Cuáles son los estados de las universidades a las que asisten los estudiantes que se postularon para el puesto de delantero?\n", "question_toks": ["What", "are", "the", "states", "of", "the", "colleges", "where", "students", "who", "tried", "out", "for", "the", "striker", "position", "attend", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"striker\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'", "query_toks": ["SELECT", "T1.pName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'", "AND", "T2.pPos", "=", "'striker", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value", "and", "t2", ".", "ppos", "=", "value"], "question": "Encuentre los nombres de los estudiantes que están en la posición de delantero y obtuvieron una decisión afirmativa en la prueba.\n", "question_toks": ["Find", "the", "names", "of", "the", "students", "who", "are", "in", "the", "position", "of", "striker", "and", "got", "a", "yes", "tryout", "decision", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"striker\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'", "query_toks": ["SELECT", "T1.pName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'", "AND", "T2.pPos", "=", "'striker", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value", "and", "t2", ".", "ppos", "=", "value"], "question": "¿Cómo se llaman todos los estudiantes que se presentaron con éxito al puesto de delantero?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "students", "who", "successfully", "tried", "out", "for", "the", "position", "of", "striker", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"striker\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "JOIN", "player", "AS", "T3", "ON", "T2.pID", "=", "T3.pID", "WHERE", "T3.pName", "=", "'Charles", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "join", "player", "as", "t3", "on", "t2", ".", "pid", "=", "t3", ".", "pid", "where", "t3", ".", "pname", "=", "value"], "question": "Encuentra el estado de la universidad a la que asiste el jugador Charles.\n", "question_toks": ["Find", "the", "state", "of", "the", "college", "which", "player", "Charles", "is", "attending", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Charles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "JOIN", "player", "AS", "T3", "ON", "T2.pID", "=", "T3.pID", "WHERE", "T3.pName", "=", "'Charles", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "join", "player", "as", "t3", "on", "t2", ".", "pid", "=", "t3", ".", "pid", "where", "t3", ".", "pname", "=", "value"], "question": "¿En qué estado está la universidad a la que asiste Charles?\n", "question_toks": ["In", "which", "state", "is", "the", "college", "that", "Charles", "attends", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Charles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'", "query_toks": ["SELECT", "T1.cName", "FROM", "tryout", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.pName", "LIKE", "'D", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "cname", "from", "tryout", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "pname", "like", "value"], "question": "¿A qué universidades van los jugadores de prueba cuyo nombre comienza con la letra D?\n", "question_toks": ["Which", "colleges", "do", "the", "tryout", "players", "whose", "name", "starts", "with", "letter", "D", "go", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"D%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'", "query_toks": ["SELECT", "T1.cName", "FROM", "tryout", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.pName", "LIKE", "'D", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "cname", "from", "tryout", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "pname", "like", "value"], "question": "¿A qué universidades va cada jugador con un nombre que comienza con la letra D que intentó ir?\n", "question_toks": ["Which", "colleges", "does", "each", "player", "with", "a", "name", "that", "starts", "with", "the", "letter", "D", "who", "tried", "out", "go", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"D%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "query_toks": ["SELECT", "cName", "FROM", "tryout", "WHERE", "decision", "=", "'yes", "'", "AND", "pPos", "=", "'goalie", "'"], "query_toks_no_value": ["select", "cname", "from", "tryout", "where", "decision", "=", "value", "and", "ppos", "=", "value"], "question": "¿Qué universidad tiene algún estudiante que sea portero y haya tenido éxito en la prueba?\n", "question_toks": ["Which", "college", "has", "any", "student", "who", "is", "a", "goalie", "and", "succeeded", "in", "the", "tryout", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "query_toks": ["SELECT", "cName", "FROM", "tryout", "WHERE", "decision", "=", "'yes", "'", "AND", "pPos", "=", "'goalie", "'"], "query_toks_no_value": ["select", "cname", "from", "tryout", "where", "decision", "=", "value", "and", "ppos", "=", "value"], "question": "¿En qué universidad tiene un estudiante que logró formar parte del equipo en el papel de portero?\n", "question_toks": ["What", "college", "has", "a", "student", "who", "successfully", "made", "the", "team", "in", "the", "role", "of", "a", "goalie", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)", "query_toks": ["SELECT", "T2.pName", "FROM", "tryout", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T1.cName", "=", "(", "SELECT", "cName", "FROM", "college", "ORDER", "BY", "enr", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t2", ".", "pname", "from", "tryout", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t1", ".", "cname", "=", "(", "select", "cname", "from", "college", "order", "by", "enr", "desc", "limit", "value", ")"], "question": "Encuentra el nombre de los jugadores de prueba que son de la universidad de mayor tamaño.\n", "question_toks": ["Find", "the", "name", "of", "the", "tryout", "players", "who", "are", "from", "the", "college", "with", "largest", "size", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)", "query_toks": ["SELECT", "T2.pName", "FROM", "tryout", "AS", "T1", "JOIN", "player", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T1.cName", "=", "(", "SELECT", "cName", "FROM", "college", "ORDER", "BY", "enr", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t2", ".", "pname", "from", "tryout", "as", "t1", "join", "player", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t1", ".", "cname", "=", "(", "select", "cname", "from", "college", "order", "by", "enr", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de todos los participantes de la prueba que son de la universidad más grande?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "tryout", "participants", "who", "are", "from", "the", "largest", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", ",", "T1.enr", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", ",", "t1", ".", "enr", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "¿Cuál es el estado y la inscripción de las universidades donde tienen estudiantes que fueron aceptados en la decisión de prueba?\n", "question_toks": ["What", "is", "the", "state", "and", "enrollment", "of", "the", "colleges", "where", "have", "any", "students", "who", "got", "accepted", "in", "the", "tryout", "decision", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", ",", "T1.enr", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", ",", "t1", ".", "enr", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "¿Cuántos estudiantes están matriculados en universidades que aceptan estudiantes durante las pruebas y en qué estados se encuentran esas universidades?\n", "question_toks": ["How", "many", "students", "are", "enrolled", "in", "colleges", "that", "have", "student", "accepted", "during", "tryouts", ",", "and", "in", "which", "states", "are", "those", "colleges", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'mid", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", "intersect", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", ")"], "question": "¿Cuántas escuelas tienen algunos estudiantes jugando en posiciones de portero y medio?\n", "question_toks": ["How", "many", "schools", "have", "some", "students", "playing", "in", "goalie", "and", "mid", "positions", "."], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'mid", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", "intersect", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", ")"], "question": "¿Cuántas escuelas tienen estudiantes jugando en posiciones de portero y mediocampo?\n", "question_toks": ["How", "many", "schools", "have", "students", "playing", "in", "goalie", "and", "mid-field", "positions", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'", "EXCEPT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "except", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", ")"], "question": "¿Cuántos estados tienen algunos estudiantes universitarios jugando en la posición media pero no en la posición de portero?\n", "question_toks": ["How", "many", "states", "that", "have", "some", "college", "students", "playing", "in", "the", "mid", "position", "but", "not", "in", "the", "goalie", "position", "."], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'", "EXCEPT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "except", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", ")"], "question": "¿Cuál es el recuento de estados con estudiantes universitarios que juegan en la posición media pero no como porteros?\n", "question_toks": ["What", "is", "the", "count", "of", "states", "with", "college", "students", "playing", "in", "the", "mid", "position", "but", "not", "as", "goalies", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)", "query_toks": ["SELECT", "DISTINCT", "state", "FROM", "college", "WHERE", "enr", "<", "(", "SELECT", "max", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "distinct", "state", "from", "college", "where", "enr", "<", "(", "select", "max", "(", "enr", ")", "from", "college", ")"], "question": "Encuentre los estados donde tienen universidades cuyas inscripciones son menores que las de mayor tamaño.\n", "question_toks": ["Find", "the", "states", "where", "have", "the", "colleges", "whose", "enrollments", "are", "less", "than", "the", "largest", "size", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)", "query_toks": ["SELECT", "DISTINCT", "state", "FROM", "college", "WHERE", "enr", "<", "(", "SELECT", "max", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "distinct", "state", "from", "college", "where", "enr", "<", "(", "select", "max", "(", "enr", ")", "from", "college", ")"], "question": "¿Cuáles son los estados con universidades que tienen menos matrículas que otras universidades?\n", "question_toks": ["What", "are", "the", "states", "with", "colleges", "that", "have", "enrollments", "less", "than", "the", "some", "other", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')", "query_toks": ["SELECT", "DISTINCT", "cName", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "min", "(", "enr", ")", "FROM", "college", "WHERE", "state", "=", "'FL", "'", ")"], "query_toks_no_value": ["select", "distinct", "cname", "from", "college", "where", "enr", ">", "(", "select", "min", "(", "enr", ")", "from", "college", "where", "state", "=", "value", ")"], "question": "Encuentre nombres de universidades con una matrícula mayor que la de alguna (al menos una) universidad en el estado de Florida.\n", "question_toks": ["Find", "names", "of", "colleges", "with", "enrollment", "greater", "than", "that", "of", "some", "(", "at", "least", "one", ")", "college", "in", "the", "FL", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')", "query_toks": ["SELECT", "DISTINCT", "cName", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "min", "(", "enr", ")", "FROM", "college", "WHERE", "state", "=", "'FL", "'", ")"], "query_toks_no_value": ["select", "distinct", "cname", "from", "college", "where", "enr", ">", "(", "select", "min", "(", "enr", ")", "from", "college", "where", "state", "=", "value", ")"], "question": "¿Cuáles son los nombres de las universidades que son más grandes que al menos una universidad en Florida?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "colleges", "that", "are", "larger", "than", "at", "least", "one", "college", "in", "Florida", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')", "query_toks": ["SELECT", "cName", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "max", "(", "enr", ")", "FROM", "college", "WHERE", "state", "=", "'FL", "'", ")"], "query_toks_no_value": ["select", "cname", "from", "college", "where", "enr", ">", "(", "select", "max", "(", "enr", ")", "from", "college", "where", "state", "=", "value", ")"], "question": "Encuentre nombres de todas las universidades cuya inscripción sea mayor que la de todas las universidades del estado de Florida.\n", "question_toks": ["Find", "names", "of", "all", "colleges", "whose", "enrollment", "is", "greater", "than", "that", "of", "all", "colleges", "in", "the", "FL", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "soccer_2", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')", "query_toks": ["SELECT", "cName", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "max", "(", "enr", ")", "FROM", "college", "WHERE", "state", "=", "'FL", "'", ")"], "query_toks_no_value": ["select", "cname", "from", "college", "where", "enr", ">", "(", "select", "max", "(", "enr", ")", "from", "college", "where", "state", "=", "value", ")"], "question": "¿Cuáles son los nombres de todas las universidades con una matrícula mayor que la universidad más grande de Florida?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "colleges", "with", "a", "larger", "enrollment", "than", "the", "largest", "college", "in", "Florida", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'", "query_toks": ["SELECT", "Carrier", "FROM", "device", "WHERE", "Software_Platform", "!", "=", "'Android", "'"], "query_toks_no_value": ["select", "carrier", "from", "device", "where", "software_platform", "!", "=", "value"], "question": "¿Cuáles son los operadores de dispositivos cuyas plataformas de software no son \"Android\"?\n", "question_toks": ["What", "are", "the", "carriers", "of", "devices", "whose", "software", "platforms", "are", "not", "``", "Android", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"Android\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'", "query_toks": ["SELECT", "Carrier", "FROM", "device", "WHERE", "Software_Platform", "!", "=", "'Android", "'"], "query_toks_no_value": ["select", "carrier", "from", "device", "where", "software_platform", "!", "=", "value"], "question": "Devuelva los proveedores de dispositivos que no tengan Android como plataforma de software.\n", "question_toks": ["Return", "the", "device", "carriers", "that", "do", "not", "have", "Android", "as", "their", "software", "platform", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"Android\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"", "query_toks": ["SELECT", "Open_Date", ",", "Open_Year", "FROM", "shop", "WHERE", "Shop_Name", "=", "``", "Apple", "''"], "query_toks_no_value": ["select", "open_date", ",", "open_year", "from", "shop", "where", "shop_name", "=", "value"], "question": "Indique la fecha de apertura del año de apertura de la tienda denominada \"Apple\".\n", "question_toks": ["List", "the", "open", "date", "of", "open", "year", "of", "the", "shop", "named", "``", "Apple", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Apple\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"", "query_toks": ["SELECT", "Open_Date", ",", "Open_Year", "FROM", "shop", "WHERE", "Shop_Name", "=", "``", "Apple", "''"], "query_toks_no_value": ["select", "open_date", ",", "open_year", "from", "shop", "where", "shop_name", "=", "value"], "question": "¿Cuáles son las fechas y años de apertura de la tienda llamada Apple?\n", "question_toks": ["What", "are", "the", "open", "dates", "and", "years", "for", "the", "shop", "named", "Apple", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Apple\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "query_toks": ["SELECT", "T3.Shop_Name", ",", "T2.Carrier", "FROM", "stock", "AS", "T1", "JOIN", "device", "AS", "T2", "ON", "T1.Device_ID", "=", "T2.Device_ID", "JOIN", "shop", "AS", "T3", "ON", "T1.Shop_ID", "=", "T3.Shop_ID"], "query_toks_no_value": ["select", "t3", ".", "shop_name", ",", "t2", ".", "carrier", "from", "stock", "as", "t1", "join", "device", "as", "t2", "on", "t1", ".", "device_id", "=", "t2", ".", "device_id", "join", "shop", "as", "t3", "on", "t1", ".", "shop_id", "=", "t3", ".", "shop_id"], "question": "Muestra los nombres de las tiendas y los operadores de dispositivos que tienen en stock.\n", "question_toks": ["Show", "names", "of", "shops", "and", "the", "carriers", "of", "devices", "they", "have", "in", "stock", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID", "query_toks": ["SELECT", "T3.Shop_Name", ",", "T2.Carrier", "FROM", "stock", "AS", "T1", "JOIN", "device", "AS", "T2", "ON", "T1.Device_ID", "=", "T2.Device_ID", "JOIN", "shop", "AS", "T3", "ON", "T1.Shop_ID", "=", "T3.Shop_ID"], "query_toks_no_value": ["select", "t3", ".", "shop_name", ",", "t2", ".", "carrier", "from", "stock", "as", "t1", "join", "device", "as", "t2", "on", "t1", ".", "device_id", "=", "t2", ".", "device_id", "join", "shop", "as", "t3", "on", "t1", ".", "shop_id", "=", "t3", ".", "shop_id"], "question": "¿Cuáles son los nombres de las tiendas de dispositivos y para qué operadores tienen dispositivos en existencia?\n", "question_toks": ["What", "are", "the", "names", "of", "device", "shops", ",", "and", "what", "are", "the", "carriers", "that", "they", "carry", "devices", "in", "stock", "for", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)", "query_toks": ["SELECT", "Shop_Name", "FROM", "shop", "WHERE", "Shop_ID", "NOT", "IN", "(", "SELECT", "Shop_ID", "FROM", "stock", ")"], "query_toks_no_value": ["select", "shop_name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "stock", ")"], "question": "Enumere los nombres de las tiendas que no tienen dispositivos en stock.\n", "question_toks": ["List", "the", "names", "of", "shops", "that", "have", "no", "devices", "in", "stock", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)", "query_toks": ["SELECT", "Shop_Name", "FROM", "shop", "WHERE", "Shop_ID", "NOT", "IN", "(", "SELECT", "Shop_ID", "FROM", "stock", ")"], "query_toks_no_value": ["select", "shop_name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "stock", ")"], "question": "¿Cómo se llaman las tiendas que no tienen ningún dispositivo en stock?\n", "question_toks": ["What", "are", "the", "names", "of", "shops", "that", "do", "not", "have", "any", "devices", "in", "stock", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)", "query_toks": ["SELECT", "Carrier", "FROM", "device", "WHERE", "Device_ID", "NOT", "IN", "(", "SELECT", "Device_ID", "FROM", "stock", ")"], "query_toks_no_value": ["select", "carrier", "from", "device", "where", "device_id", "not", "in", "(", "select", "device_id", "from", "stock", ")"], "question": "Enumere los operadores de dispositivos que no tienen dispositivos en stock.\n", "question_toks": ["List", "the", "carriers", "of", "devices", "that", "have", "no", "devices", "in", "stock", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "device", "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)", "query_toks": ["SELECT", "Carrier", "FROM", "device", "WHERE", "Device_ID", "NOT", "IN", "(", "SELECT", "Device_ID", "FROM", "stock", ")"], "query_toks_no_value": ["select", "carrier", "from", "device", "where", "device_id", "not", "in", "(", "select", "device_id", "from", "stock", ")"], "question": "¿Cuáles son los transportistas de dispositivos que no están en stock en ninguna parte?\n", "question_toks": ["What", "are", "the", "carriers", "of", "devices", "that", "are", "not", "in", "stock", "anywhere", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Order_Date FROM BOOKINGS", "query_toks": ["SELECT", "Order_Date", "FROM", "BOOKINGS"], "query_toks_no_value": ["select", "order_date", "from", "bookings"], "question": "Indique las fechas de pedido de todas las reservas.\n", "question_toks": ["List", "the", "order", "dates", "of", "all", "the", "bookings", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 59, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Order_Date FROM BOOKINGS", "query_toks": ["SELECT", "Order_Date", "FROM", "BOOKINGS"], "query_toks_no_value": ["select", "order_date", "from", "bookings"], "question": "¿Cuál es la fecha de pedido de cada reserva?\n", "question_toks": ["What", "is", "the", "order", "date", "of", "each", "booking", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 59, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS", "query_toks": ["SELECT", "Planned_Delivery_Date", ",", "Actual_Delivery_Date", "FROM", "BOOKINGS"], "query_toks_no_value": ["select", "planned_delivery_date", ",", "actual_delivery_date", "from", "bookings"], "question": "Muestra todas las fechas de entrega previstas y las fechas de entrega reales de las reservas.\n", "question_toks": ["Show", "all", "the", "planned", "delivery", "dates", "and", "actual", "delivery", "dates", "of", "bookings", "."], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 60, false], null]], [0, [0, [0, 61, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS", "query_toks": ["SELECT", "Planned_Delivery_Date", ",", "Actual_Delivery_Date", "FROM", "BOOKINGS"], "query_toks_no_value": ["select", "planned_delivery_date", ",", "actual_delivery_date", "from", "bookings"], "question": "¿Cuáles son la fecha de entrega prevista y la fecha de entrega real para cada reserva?\n", "question_toks": ["What", "are", "the", "planned", "delivery", "date", "and", "actual", "delivery", "date", "for", "each", "booking", "?"], "sql": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[0, [0, [0, 60, false], null]], [0, [0, [0, 61, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "query_toks": ["SELECT", "Customer_Phone", ",", "Customer_Email_Address", "FROM", "CUSTOMERS", "WHERE", "Customer_Name", "=", "``", "Harold", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email_address", "from", "customers", "where", "customer_name", "=", "value"], "question": "¿Cuáles son el teléfono y el correo electrónico del cliente Harold?\n", "question_toks": ["What", "are", "the", "phone", "and", "email", "for", "customer", "Harold", "?"], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 43, false], null], "\"Harold\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\"", "query_toks": ["SELECT", "Customer_Phone", ",", "Customer_Email_Address", "FROM", "CUSTOMERS", "WHERE", "Customer_Name", "=", "``", "Harold", "''"], "query_toks_no_value": ["select", "customer_phone", ",", "customer_email_address", "from", "customers", "where", "customer_name", "=", "value"], "question": "Encuentre el número de teléfono y la dirección de correo electrónico del cliente \"Harold\".\n", "question_toks": ["Find", "the", "phone", "number", "and", "email", "address", "of", "customer", "``", "Harold", "''", "."], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 43, false], null], "\"Harold\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Store_Name FROM Drama_Workshop_Groups", "query_toks": ["SELECT", "Store_Name", "FROM", "Drama_Workshop_Groups"], "query_toks_no_value": ["select", "store_name", "from", "drama_workshop_groups"], "question": "Mostrar todos los Store_Name de los grupos de talleres de teatro.\n", "question_toks": ["Show", "all", "the", "Store_Name", "of", "drama", "workshop", "groups", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Store_Name FROM Drama_Workshop_Groups", "query_toks": ["SELECT", "Store_Name", "FROM", "Drama_Workshop_Groups"], "query_toks_no_value": ["select", "store_name", "from", "drama_workshop_groups"], "question": "¿Cuáles son los nombres de las tiendas de los grupos de talleres de teatro?\n", "question_toks": ["What", "are", "the", "store", "names", "of", "drama", "workshop", "groups", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT DISTINCT payment_method_code FROM INVOICES", "query_toks": ["SELECT", "DISTINCT", "payment_method_code", "FROM", "INVOICES"], "query_toks_no_value": ["select", "distinct", "payment_method_code", "from", "invoices"], "question": "¿Cuáles son los distintos códigos de método de pago en todas las facturas?\n", "question_toks": ["What", "are", "the", "distinct", "payment", "method", "codes", "in", "all", "the", "invoices", "?"], "sql": {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [true, [[0, [0, [0, 79, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT DISTINCT payment_method_code FROM INVOICES", "query_toks": ["SELECT", "DISTINCT", "payment_method_code", "FROM", "INVOICES"], "query_toks_no_value": ["select", "distinct", "payment_method_code", "from", "invoices"], "question": "Muéstrame los distintos códigos de método de pago del registro de factura.\n", "question_toks": ["Show", "me", "the", "distinct", "payment", "method", "codes", "from", "the", "invoice", "record", "."], "sql": {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [true, [[0, [0, [0, 79, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"", "query_toks": ["SELECT", "Marketing_Region_Descriptrion", "FROM", "Marketing_Regions", "WHERE", "Marketing_Region_Name", "=", "``", "China", "''"], "query_toks_no_value": ["select", "marketing_region_descriptrion", "from", "marketing_regions", "where", "marketing_region_name", "=", "value"], "question": "¿Cuál es la descripción de la región de comercialización de China?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "marketing", "region", "China", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"", "query_toks": ["SELECT", "Marketing_Region_Descriptrion", "FROM", "Marketing_Regions", "WHERE", "Marketing_Region_Name", "=", "``", "China", "''"], "query_toks_no_value": ["select", "marketing_region_descriptrion", "from", "marketing_regions", "where", "marketing_region_name", "=", "value"], "question": "¿Encontrar la descripción de la región de marketing de China?\n", "question_toks": ["Find", "the", "marketing", "region", "description", "of", "China", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "query_toks": ["SELECT", "DISTINCT", "Product_Name", "FROM", "PRODUCTS", "WHERE", "Product_Price", ">", "(", "SELECT", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", ")"], "query_toks_no_value": ["select", "distinct", "product_name", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "Muestre todos los distintos nombres de productos con precios superiores al promedio.\n", "question_toks": ["Show", "all", "the", "distinct", "product", "names", "with", "price", "higher", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "query_toks": ["SELECT", "DISTINCT", "Product_Name", "FROM", "PRODUCTS", "WHERE", "Product_Price", ">", "(", "SELECT", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", ")"], "query_toks_no_value": ["select", "distinct", "product_name", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "¿Cuáles son los nombres distintos de los productos que cuestan más que el promedio?\n", "question_toks": ["What", "are", "the", "distinct", "names", "of", "the", "products", "that", "cost", "more", "than", "the", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"", "query_toks": ["SELECT", "Customer_Phone", "FROM", "PERFORMERS", "WHERE", "Customer_Name", "=", "``", "Ashley", "''"], "query_toks_no_value": ["select", "customer_phone", "from", "performers", "where", "customer_name", "=", "value"], "question": "¿Cuál es el número de teléfono de la intérprete Ashley?\n", "question_toks": ["What", "is", "the", "phone", "number", "of", "the", "performer", "Ashley", "?"], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Ashley\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"", "query_toks": ["SELECT", "Customer_Phone", "FROM", "PERFORMERS", "WHERE", "Customer_Name", "=", "``", "Ashley", "''"], "query_toks_no_value": ["select", "customer_phone", "from", "performers", "where", "customer_name", "=", "value"], "question": "Encuentra el número de teléfono de la artista \"Ashley\".\n", "question_toks": ["Find", "the", "phone", "number", "of", "performer", "``", "Ashley", "''", "."], "sql": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 37, false], null], "\"Ashley\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"", "query_toks": ["SELECT", "T1.City_Town", "FROM", "Addresses", "AS", "T1", "JOIN", "Stores", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T2.Store_Name", "=", "``", "FJA", "Filming", "''"], "query_toks_no_value": ["select", "t1", ".", "city_town", "from", "addresses", "as", "t1", "join", "stores", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "store_name", "=", "value"], "question": "¿En qué ciudad está ubicada la dirección de la tienda llamada \"FJA Filming\"?\n", "question_toks": ["Which", "city", "is", "the", "address", "of", "the", "store", "named", "``", "FJA", "Filming", "''", "located", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 48, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"FJA Filming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"", "query_toks": ["SELECT", "T1.City_Town", "FROM", "Addresses", "AS", "T1", "JOIN", "Stores", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T2.Store_Name", "=", "``", "FJA", "Filming", "''"], "query_toks_no_value": ["select", "t1", ".", "city_town", "from", "addresses", "as", "t1", "join", "stores", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "store_name", "=", "value"], "question": "Encuentra la ciudad en la que se encuentra la tienda llamada \"FJA Filming\".\n", "question_toks": ["Find", "the", "city", "the", "store", "named", "``", "FJA", "Filming", "''", "is", "in", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 48, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"FJA Filming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"", "query_toks": ["SELECT", "T1.State_County", "FROM", "Addresses", "AS", "T1", "JOIN", "Stores", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T2.Marketing_Region_Code", "=", "``", "CA", "''"], "query_toks_no_value": ["select", "t1", ".", "state_county", "from", "addresses", "as", "t1", "join", "stores", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "marketing_region_code", "=", "value"], "question": "¿Cuáles son los estados o condados de las direcciones de las tiendas con el código de región de marketing \"CA\"?\n", "question_toks": ["What", "are", "the", "states", "or", "counties", "of", "the", "address", "of", "the", "stores", "with", "marketing", "region", "code", "``", "CA", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 48, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 49, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"", "query_toks": ["SELECT", "T1.State_County", "FROM", "Addresses", "AS", "T1", "JOIN", "Stores", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T2.Marketing_Region_Code", "=", "``", "CA", "''"], "query_toks_no_value": ["select", "t1", ".", "state_county", "from", "addresses", "as", "t1", "join", "stores", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "marketing_region_code", "=", "value"], "question": "Busque los estados o condados donde se encuentran las tiendas con el código de región de marketing \"CA\".\n", "question_toks": ["Find", "the", "states", "or", "counties", "where", "the", "stores", "with", "marketing", "region", "code", "``", "CA", "''", "are", "located", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 48, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 49, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"", "query_toks": ["SELECT", "T1.Marketing_Region_Name", "FROM", "Marketing_Regions", "AS", "T1", "JOIN", "Stores", "AS", "T2", "ON", "T1.Marketing_Region_Code", "=", "T2.Marketing_Region_Code", "WHERE", "T2.Store_Name", "=", "``", "Rob", "Dinning", "''"], "query_toks_no_value": ["select", "t1", ".", "marketing_region_name", "from", "marketing_regions", "as", "t1", "join", "stores", "as", "t2", "on", "t1", ".", "marketing_region_code", "=", "t2", ".", "marketing_region_code", "where", "t2", ".", "store_name", "=", "value"], "question": "¿Cuál es el nombre de la región de marketing a la que pertenece la tienda Rob Dinning?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "marketing", "region", "that", "the", "store", "Rob", "Dinning", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 49, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Rob Dinning\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"", "query_toks": ["SELECT", "T1.Marketing_Region_Name", "FROM", "Marketing_Regions", "AS", "T1", "JOIN", "Stores", "AS", "T2", "ON", "T1.Marketing_Region_Code", "=", "T2.Marketing_Region_Code", "WHERE", "T2.Store_Name", "=", "``", "Rob", "Dinning", "''"], "query_toks_no_value": ["select", "t1", ".", "marketing_region_name", "from", "marketing_regions", "as", "t1", "join", "stores", "as", "t2", "on", "t1", ".", "marketing_region_code", "=", "t2", ".", "marketing_region_code", "where", "t2", ".", "store_name", "=", "value"], "question": "Devuelve el nombre de la región de marketing en la que se encuentra la tienda Rob Dinning.\n", "question_toks": ["Return", "the", "name", "of", "the", "marketing", "region", "the", "store", "Rob", "Dinning", "is", "located", "in", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 49, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 50, false], null], "\"Rob Dinning\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100", "query_toks": ["SELECT", "T1.Service_Type_Description", "FROM", "Ref_Service_Types", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_Type_Code", "=", "T2.Service_Type_Code", "WHERE", "T2.Product_Price", ">", "100"], "query_toks_no_value": ["select", "t1", ".", "service_type_description", "from", "ref_service_types", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_type_code", "=", "t2", ".", "service_type_code", "where", "t2", ".", "product_price", ">", "value"], "question": "¿Cuáles son las descripciones de los tipos de servicios con precios de producto superiores a 100?\n", "question_toks": ["What", "are", "the", "descriptions", "of", "the", "service", "types", "with", "product", "price", "above", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 15]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 85, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 89, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100", "query_toks": ["SELECT", "T1.Service_Type_Description", "FROM", "Ref_Service_Types", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Service_Type_Code", "=", "T2.Service_Type_Code", "WHERE", "T2.Product_Price", ">", "100"], "query_toks_no_value": ["select", "t1", ".", "service_type_description", "from", "ref_service_types", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "service_type_code", "=", "t2", ".", "service_type_code", "where", "t2", ".", "product_price", ">", "value"], "question": "Dame las descripciones de los tipos de servicios que cuestan más de 100.\n", "question_toks": ["Give", "me", "the", "descriptions", "of", "the", "service", "types", "that", "cost", "more", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 15]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 85, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 89, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id"], "question": "¿Cuáles son los teléfonos y correos electrónicos de los grupos de talleres en los que se realizan servicios?\n", "question_toks": ["What", "are", "the", "phones", "and", "emails", "of", "workshop", "groups", "in", "which", "services", "are", "performed", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 15]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id"], "question": "Dame todos los números de teléfono y direcciones de correo electrónico de los grupos de taller donde se realizan los servicios.\n", "question_toks": ["Give", "me", "all", "the", "phone", "numbers", "and", "email", "addresses", "of", "the", "workshop", "groups", "where", "services", "are", "performed", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 15]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID", "WHERE", "T2.Product_Name", "=", "``", "film", "''"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id", "where", "t2", ".", "product_name", "=", "value"], "question": "¿Cómo se llaman los grupos de talleres en los que se realizan servicios con el nombre de producto \"película\"?\n", "question_toks": ["What", "are", "the", "names", "of", "workshop", "groups", "in", "which", "services", "with", "product", "name", "``", "film", "''", "are", "performed", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 15]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 88, false], null], "\"film\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"", "query_toks": ["SELECT", "T1.Store_Phone", ",", "T1.Store_Email_Address", "FROM", "Drama_Workshop_Groups", "AS", "T1", "JOIN", "Services", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID", "WHERE", "T2.Product_Name", "=", "``", "film", "''"], "query_toks_no_value": ["select", "t1", ".", "store_phone", ",", "t1", ".", "store_email_address", "from", "drama_workshop_groups", "as", "t1", "join", "services", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id", "where", "t2", ".", "product_name", "=", "value"], "question": "Encuentre los nombres de los grupos de talleres donde se realizan servicios con el nombre de producto \"película\".\n", "question_toks": ["Find", "the", "names", "of", "the", "workshop", "groups", "where", "services", "with", "product", "name", "``", "film", "''", "are", "performed", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 15]], "conds": [[false, 2, [0, [0, 27, false], null], [0, 86, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 88, false], null], "\"film\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000", "query_toks": ["SELECT", "T1.Other_Item_Details", "FROM", "ORDER_ITEMS", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.Product_ID", "=", "T2.Product_ID", "WHERE", "T2.Product_price", ">", "2000"], "query_toks_no_value": ["select", "t1", ".", "other_item_details", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t2", ".", "product_price", ">", "value"], "question": "¿Cuáles son los detalles del pedido de los productos con precio superior a 2000?\n", "question_toks": ["What", "are", "the", "order", "details", "of", "the", "products", "with", "price", "higher", "than", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 74, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 76, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000", "query_toks": ["SELECT", "T1.Other_Item_Details", "FROM", "ORDER_ITEMS", "AS", "T1", "JOIN", "Products", "AS", "T2", "ON", "T1.Product_ID", "=", "T2.Product_ID", "WHERE", "T2.Product_price", ">", "2000"], "query_toks_no_value": ["select", "t1", ".", "other_item_details", "from", "order_items", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t2", ".", "product_price", ">", "value"], "question": "Encuentre el detalle del pedido de los productos con precio superior a 2000.\n", "question_toks": ["Find", "the", "order", "detail", "for", "the", "products", "with", "price", "above", "2000", "."], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 74, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 76, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1", "query_toks": ["SELECT", "T1.Actual_Delivery_Date", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "ORDER_ITEMS", "AS", "T2", "ON", "T1.Order_ID", "=", "T2.Order_ID", "WHERE", "T2.Order_Quantity", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "actual_delivery_date", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "order_quantity", "=", "value"], "question": "¿Cuáles son las fechas de entrega reales de los pedidos con cantidad 1?\n", "question_toks": ["What", "are", "the", "actual", "delivery", "dates", "of", "orders", "with", "quantity", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 65, false], null], [0, 73, false], null]]}, "select": [false, [[0, [0, [0, 70, false], null]]]], "where": [[false, 2, [0, [0, 75, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1", "query_toks": ["SELECT", "T1.Actual_Delivery_Date", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "ORDER_ITEMS", "AS", "T2", "ON", "T1.Order_ID", "=", "T2.Order_ID", "WHERE", "T2.Order_Quantity", "=", "1"], "query_toks_no_value": ["select", "t1", ".", "actual_delivery_date", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "order_quantity", "=", "value"], "question": "Indique la fecha de entrega real para todos los pedidos con cantidad 1\n", "question_toks": ["List", "the", "actual", "delivery", "date", "for", "all", "the", "orders", "with", "quantity", "1"], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 13]], "conds": [[false, 2, [0, [0, 65, false], null], [0, 73, false], null]]}, "select": [false, [[0, [0, [0, 70, false], null]]]], "where": [[false, 2, [0, [0, 75, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000", "query_toks": ["SELECT", "T1.Order_Date", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "ORDER_ITEMS", "AS", "T2", "ON", "T1.Order_ID", "=", "T2.Order_ID", "JOIN", "Products", "AS", "T3", "ON", "T2.Product_ID", "=", "T3.Product_ID", "WHERE", "T3.Product_price", ">", "1000"], "query_toks_no_value": ["select", "t1", ".", "order_date", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "where", "t3", ".", "product_price", ">", "value"], "question": "¿Cuáles son las fechas de pedido de los pedidos con precio superior a 1000?\n", "question_toks": ["What", "are", "the", "order", "dates", "of", "orders", "with", "price", "higher", "than", "1000", "?"], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 13], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 65, false], null], [0, 73, false], null], "and", [false, 2, [0, [0, 74, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 68, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000", "query_toks": ["SELECT", "T1.Order_Date", "FROM", "Customer_Orders", "AS", "T1", "JOIN", "ORDER_ITEMS", "AS", "T2", "ON", "T1.Order_ID", "=", "T2.Order_ID", "JOIN", "Products", "AS", "T3", "ON", "T2.Product_ID", "=", "T3.Product_ID", "WHERE", "T3.Product_price", ">", "1000"], "query_toks_no_value": ["select", "t1", ".", "order_date", "from", "customer_orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "join", "products", "as", "t3", "on", "t2", ".", "product_id", "=", "t3", ".", "product_id", "where", "t3", ".", "product_price", ">", "value"], "question": "Encuentre las fechas de los pedidos con precio superior a 1000.\n", "question_toks": ["Find", "the", "order", "dates", "of", "the", "orders", "with", "price", "above", "1000", "."], "sql": {"from": {"table_units": [["table_unit", 12], ["table_unit", 13], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 65, false], null], [0, 73, false], null], "and", [false, 2, [0, [0, 74, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 68, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"", "query_toks": ["SELECT", "T2.Store_Name", "FROM", "Addresses", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T1.City_Town", "=", "``", "Feliciaberg", "''"], "query_toks_no_value": ["select", "t2", ".", "store_name", "from", "addresses", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "city_town", "=", "value"], "question": "¿Cómo se llaman los grupos del taller de teatro con dirección en la ciudad de Feliciaberg?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "drama", "workshop", "groups", "with", "address", "in", "Feliciaberg", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Feliciaberg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"", "query_toks": ["SELECT", "T2.Store_Name", "FROM", "Addresses", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T1.City_Town", "=", "``", "Feliciaberg", "''"], "query_toks_no_value": ["select", "t2", ".", "store_name", "from", "addresses", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "city_town", "=", "value"], "question": "Devuelve los nombres de los grupos del taller de teatro que se encuentran en la ciudad de Feliciaberg.\n", "question_toks": ["Return", "the", "the", "names", "of", "the", "drama", "workshop", "groups", "that", "are", "located", "in", "Feliciaberg", "city", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Feliciaberg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"", "query_toks": ["SELECT", "T2.Store_Email_Address", "FROM", "Addresses", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T1.State_County", "=", "``", "Alaska", "''"], "query_toks_no_value": ["select", "t2", ".", "store_email_address", "from", "addresses", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "state_county", "=", "value"], "question": "¿Cuáles son las direcciones de correo electrónico de los grupos del taller de teatro con dirección en el estado de Alaska?\n", "question_toks": ["What", "are", "the", "email", "addresses", "of", "the", "drama", "workshop", "groups", "with", "address", "in", "Alaska", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Alaska\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"", "query_toks": ["SELECT", "T2.Store_Email_Address", "FROM", "Addresses", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Address_ID", "=", "T2.Address_ID", "WHERE", "T1.State_County", "=", "``", "Alaska", "''"], "query_toks_no_value": ["select", "t2", ".", "store_email_address", "from", "addresses", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "state_county", "=", "value"], "question": "Enumere las direcciones de correo electrónico de los grupos del taller de teatro ubicados en el estado de Alaska.\n", "question_toks": ["List", "the", "email", "addresses", "of", "the", "drama", "workshop", "groups", "located", "in", "Alaska", "state", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 28, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Alaska\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"", "query_toks": ["SELECT", "T2.Store_Name", "FROM", "Bookings", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID", "WHERE", "T1.Status_Code", "=", "``", "stop", "''"], "query_toks_no_value": ["select", "t2", ".", "store_name", "from", "bookings", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id", "where", "t1", ".", "status_code", "=", "value"], "question": "¿Cuáles son los nombres de los grupos de talleres que tienen reservas con el código de estado \"parada\"?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "workshop", "groups", "that", "have", "bookings", "with", "status", "code", "``", "stop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 57, false], null], "\"stop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"", "query_toks": ["SELECT", "T2.Store_Name", "FROM", "Bookings", "AS", "T1", "JOIN", "Drama_Workshop_Groups", "AS", "T2", "ON", "T1.Workshop_Group_ID", "=", "T2.Workshop_Group_ID", "WHERE", "T1.Status_Code", "=", "``", "stop", "''"], "query_toks_no_value": ["select", "t2", ".", "store_name", "from", "bookings", "as", "t1", "join", "drama_workshop_groups", "as", "t2", "on", "t1", ".", "workshop_group_id", "=", "t2", ".", "workshop_group_id", "where", "t1", ".", "status_code", "=", "value"], "question": "¿Qué grupos de talleres tienen reservas con el código de estado \"detener\"? Dame los nombres.\n", "question_toks": ["Which", "workshop", "groups", "have", "bookings", "with", "status", "code", "``", "stop", "''", "?", "Give", "me", "the", "names", "."], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 57, false], null], "\"stop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT label FROM Albums", "query_toks": ["SELECT", "DISTINCT", "label", "FROM", "Albums"], "query_toks_no_value": ["select", "distinct", "label", "from", "albums"], "question": "¿Cuáles son todas las etiquetas?\n", "question_toks": ["What", "are", "all", "the", "labels", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT label FROM Albums", "query_toks": ["SELECT", "DISTINCT", "label", "FROM", "Albums"], "query_toks_no_value": ["select", "distinct", "label", "from", "albums"], "question": "¿Cuáles son las diferentes etiquetas de álbumes enumeradas?\n", "question_toks": ["What", "are", "the", "different", "album", "labels", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT * FROM Albums WHERE YEAR  =  2012", "query_toks": ["SELECT", "*", "FROM", "Albums", "WHERE", "YEAR", "=", "2012"], "query_toks_no_value": ["select", "*", "from", "albums", "where", "year", "=", "value"], "question": "Encuentra todos los álbumes de 2012.\n", "question_toks": ["Find", "all", "the", "albums", "in", "2012", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2012.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT * FROM Albums WHERE YEAR  =  2012", "query_toks": ["SELECT", "*", "FROM", "Albums", "WHERE", "YEAR", "=", "2012"], "query_toks_no_value": ["select", "*", "from", "albums", "where", "year", "=", "value"], "question": "devolver todas las columnas de los álbumes creados en el año 2012.\n", "question_toks": ["return", "all", "columns", "of", "the", "albums", "created", "in", "the", "year", "of", "2012", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2012.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"", "query_toks": ["SELECT", "DISTINCT", "T1.stageposition", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "WHERE", "Firstname", "=", "``", "Solveig", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "stageposition", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "where", "firstname", "=", "value"], "question": "Encuentra todas las posiciones escénicas de los músicos con el nombre \"Solveig\"\n", "question_toks": ["Find", "all", "the", "stage", "positions", "of", "the", "musicians", "with", "first", "name", "``", "Solveig", "''"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Solveig\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"", "query_toks": ["SELECT", "DISTINCT", "T1.stageposition", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "WHERE", "Firstname", "=", "``", "Solveig", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "stageposition", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "where", "firstname", "=", "value"], "question": "¿Cuáles son las diferentes posiciones escénicas para todos los músicos cuyo nombre de pila es \"Solveig\"?\n", "question_toks": ["What", "are", "the", "different", "stage", "positions", "for", "all", "musicians", "whose", "first", "name", "is", "``", "Solveig", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Solveig\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\"", "query_toks": ["SELECT", "T3.Title", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T2.Lastname", "=", "``", "Heilo", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t2", ".", "lastname", "=", "value"], "question": "Encuentra todas las canciones interpretadas por el artista con apellido \"Heilo\"\n", "question_toks": ["Find", "all", "the", "songs", "performed", "by", "artist", "with", "last", "name", "``", "Heilo", "''"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\"", "query_toks": ["SELECT", "T3.Title", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T2.Lastname", "=", "``", "Heilo", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t2", ".", "lastname", "=", "value"], "question": "¿Cómo se llaman las canciones del artista cuyo apellido es \"Heilo\"?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "songs", "by", "the", "artist", "whose", "last", "name", "is", "``", "Heilo", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"", "query_toks": ["SELECT", "T3.Title", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T2.firstname", "=", "``", "Marianne", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t2", ".", "firstname", "=", "value"], "question": "Encuentra todas las canciones producidas por artistas con el nombre \"Marianne\".\n", "question_toks": ["Find", "all", "the", "songs", "produced", "by", "artists", "with", "first", "name", "``", "Marianne", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marianne\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"", "query_toks": ["SELECT", "T3.Title", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T2.firstname", "=", "``", "Marianne", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t2", ".", "firstname", "=", "value"], "question": "¿Cuáles son los nombres de todas las canciones producidas por el artista con el nombre \"Marianne\"?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "songs", "produced", "by", "the", "artist", "with", "the", "first", "name", "``", "Marianne", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Marianne\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "¿Quién interpretó la canción llamada \"Badlands\"? Muestra el nombre y el apellido.\n", "question_toks": ["Who", "performed", "the", "song", "named", "``", "Badlands", "''", "?", "Show", "the", "first", "name", "and", "the", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "¿Cuáles son el nombre y apellido del artista que interpretó la canción \"Badlands\"?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "artist", "who", "perfomed", "the", "song", "``", "Badlands", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "¿Quién actúa en la posición detrás del escenario de la canción \"Badlands\"? Muestra el nombre y el apellido.\n", "question_toks": ["Who", "is", "performing", "in", "the", "back", "stage", "position", "for", "the", "song", "``", "Badlands", "''", "?", "Show", "the", "first", "name", "and", "the", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Badlands", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "¿Cuáles son el nombre y apellido del intérprete que estuvo detrás del escenario de la canción \"Badlands\"?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "the", "performer", "who", "was", "in", "the", "back", "stage", "position", "for", "the", "song", "``", "Badlands", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT title FROM songs WHERE title LIKE '% the %'", "query_toks": ["SELECT", "title", "FROM", "songs", "WHERE", "title", "LIKE", "'", "%", "the", "%", "'"], "query_toks_no_value": ["select", "title", "from", "songs", "where", "title", "like", "value"], "question": "Encuentra todas las canciones cuyo nombre contiene la palabra \"el\".\n", "question_toks": ["Find", "all", "the", "songs", "whose", "name", "contains", "the", "word", "``", "the", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"% the %\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT title FROM songs WHERE title LIKE '% the %'", "query_toks": ["SELECT", "title", "FROM", "songs", "WHERE", "title", "LIKE", "'", "%", "the", "%", "'"], "query_toks_no_value": ["select", "title", "from", "songs", "where", "title", "like", "value"], "question": "¿Cómo se llaman las canciones cuyo título tiene la palabra \"the\"?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "songs", "whose", "title", "has", "the", "word", "``", "the", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"% the %\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT instrument FROM Instruments", "query_toks": ["SELECT", "DISTINCT", "instrument", "FROM", "Instruments"], "query_toks_no_value": ["select", "distinct", "instrument", "from", "instruments"], "question": "¿Cuáles son todos los instrumentos utilizados?\n", "question_toks": ["What", "are", "all", "the", "instruments", "used", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT instrument FROM Instruments", "query_toks": ["SELECT", "DISTINCT", "instrument", "FROM", "Instruments"], "query_toks_no_value": ["select", "distinct", "instrument", "from", "instruments"], "question": "¿Cuáles son los diferentes instrumentos que figuran en la base de datos?\n", "question_toks": ["What", "are", "the", "different", "instruments", "listed", "in", "the", "database", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\"", "query_toks": ["SELECT", "T4.instrument", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "JOIN", "Instruments", "AS", "T4", "ON", "T4.songid", "=", "T3.songid", "AND", "T4.bandmateid", "=", "T2.id", "WHERE", "T2.lastname", "=", "``", "Heilo", "''", "AND", "T3.title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "t4", ".", "instrument", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "join", "instruments", "as", "t4", "on", "t4", ".", "songid", "=", "t3", ".", "songid", "and", "t4", ".", "bandmateid", "=", "t2", ".", "id", "where", "t2", ".", "lastname", "=", "value", "and", "t3", ".", "title", "=", "value"], "question": "¿Qué instrumento utilizó el músico de apellido \"Heilo\" en la canción \"Le Pop\"?\n", "question_toks": ["What", "instrument", "did", "the", "musician", "with", "last", "name", "``", "Heilo", "''", "use", "in", "the", "song", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\"", "query_toks": ["SELECT", "T4.instrument", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "JOIN", "Instruments", "AS", "T4", "ON", "T4.songid", "=", "T3.songid", "AND", "T4.bandmateid", "=", "T2.id", "WHERE", "T2.lastname", "=", "``", "Heilo", "''", "AND", "T3.title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "t4", ".", "instrument", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "join", "instruments", "as", "t4", "on", "t4", ".", "songid", "=", "t3", ".", "songid", "and", "t4", ".", "bandmateid", "=", "t2", ".", "id", "where", "t2", ".", "lastname", "=", "value", "and", "t3", ".", "title", "=", "value"], "question": "¿Qué instrumentos tocó el músico de apellido \"Heilo\" en la canción \"Le Pop\"?\n", "question_toks": ["What", "instruments", "did", "the", "musician", "with", "the", "last", "name", "``", "Heilo", "''", "play", "in", "the", "song", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "query_toks": ["SELECT", "instrument", "FROM", "instruments", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "WHERE", "title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "instrument", "from", "instruments", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "where", "title", "=", "value"], "question": "¿Qué instrumentos utiliza la canción \"Le Pop\"?\n", "question_toks": ["What", "instruments", "does", "the", "the", "song", "``", "Le", "Pop", "''", "use", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "query_toks": ["SELECT", "instrument", "FROM", "instruments", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "WHERE", "title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "instrument", "from", "instruments", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "where", "title", "=", "value"], "question": "¿Cuáles son los instrumentos que se utilizan en la canción \"Le Pop\"?\n", "question_toks": ["What", "are", "the", "instruments", "are", "used", "in", "the", "song", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "query_toks": ["SELECT", "instrument", "FROM", "instruments", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmateid", "=", "T2.id", "WHERE", "T2.lastname", "=", "``", "Heilo", "''"], "query_toks_no_value": ["select", "instrument", "from", "instruments", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmateid", "=", "t2", ".", "id", "where", "t2", ".", "lastname", "=", "value"], "question": "¿Encontrar todos los instrumentos utilizados por el músico de apellido \"Heilo\"?\n", "question_toks": ["Find", "all", "the", "instruments", "ever", "used", "by", "the", "musician", "with", "last", "name", "``", "Heilo", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"", "query_toks": ["SELECT", "instrument", "FROM", "instruments", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmateid", "=", "T2.id", "WHERE", "T2.lastname", "=", "``", "Heilo", "''"], "query_toks_no_value": ["select", "instrument", "from", "instruments", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmateid", "=", "t2", ".", "id", "where", "t2", ".", "lastname", "=", "value"], "question": "¿Cuáles son todos los instrumentos que utiliza el músico de apellido \"Heilo\"?\n", "question_toks": ["What", "are", "all", "the", "instruments", "used", "by", "the", "musician", "with", "the", "last", "name", "``", "Heilo", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "WHERE", "title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "where", "title", "=", "value"], "question": "¿Cuáles son los tipos de voces utilizados en la canción \"Le Pop\"?\n", "question_toks": ["What", "are", "the", "vocal", "types", "used", "in", "song", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "WHERE", "title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "where", "title", "=", "value"], "question": "¿Cuáles son los tipos de voces utilizadas en la canción \"Le Pop\"?\n", "question_toks": ["What", "are", "the", "types", "of", "vocals", "used", "in", "the", "song", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "JOIN", "band", "AS", "T3", "ON", "T1.bandmate", "=", "T3.id", "WHERE", "T3.firstname", "=", "``", "Solveig", "''", "AND", "T2.title", "=", "``", "A", "Bar", "In", "Amsterdam", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "join", "band", "as", "t3", "on", "t1", ".", "bandmate", "=", "t3", ".", "id", "where", "t3", ".", "firstname", "=", "value", "and", "t2", ".", "title", "=", "value"], "question": "¿Qué tipo de voz tocó el músico de nombre \"Solveig\" en la canción titulada \"A Bar in Amsterdam\"?\n", "question_toks": ["Which", "vocal", "type", "did", "the", "musician", "with", "first", "name", "``", "Solveig", "''", "played", "in", "the", "song", "with", "title", "``", "A", "Bar", "in", "Amsterdam", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Solveig\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"A Bar In Amsterdam\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "JOIN", "band", "AS", "T3", "ON", "T1.bandmate", "=", "T3.id", "WHERE", "T3.firstname", "=", "``", "Solveig", "''", "AND", "T2.title", "=", "``", "A", "Bar", "In", "Amsterdam", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "join", "band", "as", "t3", "on", "t1", ".", "bandmate", "=", "t3", ".", "id", "where", "t3", ".", "firstname", "=", "value", "and", "t2", ".", "title", "=", "value"], "question": "¿Cuáles son los tipos de voz que tocó el músico de nombre \"Solveig\" en la canción \"A Bar in Amsterdam\"?\n", "question_toks": ["What", "are", "the", "types", "of", "vocals", "that", "the", "musician", "with", "the", "first", "name", "``", "Solveig", "''", "played", "in", "the", "song", "``", "A", "Bar", "in", "Amsterdam", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Solveig\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"A Bar In Amsterdam\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT TYPE FROM vocals", "query_toks": ["SELECT", "DISTINCT", "TYPE", "FROM", "vocals"], "query_toks_no_value": ["select", "distinct", "type", "from", "vocals"], "question": "Encuentra todos los tipos vocales.\n", "question_toks": ["Find", "all", "the", "vocal", "types", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT DISTINCT TYPE FROM vocals", "query_toks": ["SELECT", "DISTINCT", "TYPE", "FROM", "vocals"], "query_toks_no_value": ["select", "distinct", "type", "from", "vocals"], "question": "¿Cuáles son los diferentes tipos de voces?\n", "question_toks": ["What", "are", "the", "different", "types", "of", "vocals", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT * FROM Albums WHERE YEAR  =  2010", "query_toks": ["SELECT", "*", "FROM", "Albums", "WHERE", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "*", "from", "albums", "where", "year", "=", "value"], "question": "¿Cuáles son los álbumes producidos en el año 2010?\n", "question_toks": ["What", "are", "the", "albums", "produced", "in", "year", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT * FROM Albums WHERE YEAR  =  2010", "query_toks": ["SELECT", "*", "FROM", "Albums", "WHERE", "YEAR", "=", "2010"], "query_toks_no_value": ["select", "*", "from", "albums", "where", "year", "=", "value"], "question": "¿Qué información hay sobre los álbumes del 2010?\n", "question_toks": ["What", "information", "is", "there", "on", "albums", "from", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "¿Quién interpretó la canción llamada \"Le Pop\"?\n", "question_toks": ["Who", "performed", "the", "song", "named", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Le", "Pop", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value"], "question": "¿Cuál es el nombre y apellido del artista que interpretó \"Le Pop\"?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "artist", "who", "performed", "``", "Le", "Pop", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Le Pop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\"", "query_toks": ["SELECT", "T4.instrument", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "JOIN", "Instruments", "AS", "T4", "ON", "T4.songid", "=", "T3.songid", "AND", "T4.bandmateid", "=", "T2.id", "WHERE", "T2.lastname", "=", "``", "Heilo", "''", "AND", "T3.title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "t4", ".", "instrument", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "join", "instruments", "as", "t4", "on", "t4", ".", "songid", "=", "t3", ".", "songid", "and", "t4", ".", "bandmateid", "=", "t2", ".", "id", "where", "t2", ".", "lastname", "=", "value", "and", "t3", ".", "title", "=", "value"], "question": "¿Qué instrumento utilizó el músico de apellido \"Heilo\" en la canción \"Badlands\"?\n", "question_toks": ["What", "instrument", "did", "the", "musician", "with", "last", "name", "``", "Heilo", "''", "use", "in", "the", "song", "``", "Badlands", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\"", "query_toks": ["SELECT", "T4.instrument", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "JOIN", "Instruments", "AS", "T4", "ON", "T4.songid", "=", "T3.songid", "AND", "T4.bandmateid", "=", "T2.id", "WHERE", "T2.lastname", "=", "``", "Heilo", "''", "AND", "T3.title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "t4", ".", "instrument", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "join", "instruments", "as", "t4", "on", "t4", ".", "songid", "=", "t3", ".", "songid", "and", "t4", ".", "bandmateid", "=", "t2", ".", "id", "where", "t2", ".", "lastname", "=", "value", "and", "t3", ".", "title", "=", "value"], "question": "¿Qué instrumentos tocaba el músico de apellido \"Heilo\" en \"Badlands\"?\n", "question_toks": ["What", "instruments", "did", "the", "musician", "with", "the", "last", "name", "``", "Heilo", "''", "play", "in", "``", "Badlands", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "WHERE", "title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "where", "title", "=", "value"], "question": "¿Cuáles son los tipos de voces utilizados en la canción \"Badlands\"?\n", "question_toks": ["What", "are", "the", "vocal", "types", "used", "in", "song", "``", "Badlands", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "WHERE", "title", "=", "``", "Badlands", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "where", "title", "=", "value"], "question": "¿Qué tipos de voces se utilizan en la canción \"Badlands\"?\n", "question_toks": ["What", "types", "of", "vocals", "are", "used", "in", "the", "song", "``", "Badlands", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Badlands\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "JOIN", "band", "AS", "T3", "ON", "T1.bandmate", "=", "T3.id", "WHERE", "T3.lastname", "=", "``", "Heilo", "''", "AND", "T2.title", "=", "``", "Der", "Kapitan", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "join", "band", "as", "t3", "on", "t1", ".", "bandmate", "=", "t3", ".", "id", "where", "t3", ".", "lastname", "=", "value", "and", "t2", ".", "title", "=", "value"], "question": "¿Qué tipo de voz interpretó el músico de apellido \"Heilo\" en la canción \"Der Kapitan\"?\n", "question_toks": ["Which", "vocal", "type", "did", "the", "musician", "with", "last", "name", "``", "Heilo", "''", "played", "in", "the", "song", "with", "title", "``", "Der", "Kapitan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Der Kapitan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"", "query_toks": ["SELECT", "TYPE", "FROM", "vocals", "AS", "T1", "JOIN", "songs", "AS", "T2", "ON", "T1.songid", "=", "T2.songid", "JOIN", "band", "AS", "T3", "ON", "T1.bandmate", "=", "T3.id", "WHERE", "T3.lastname", "=", "``", "Heilo", "''", "AND", "T2.title", "=", "``", "Der", "Kapitan", "''"], "query_toks_no_value": ["select", "type", "from", "vocals", "as", "t1", "join", "songs", "as", "t2", "on", "t1", ".", "songid", "=", "t2", ".", "songid", "join", "band", "as", "t3", "on", "t1", ".", "bandmate", "=", "t3", ".", "id", "where", "t3", ".", "lastname", "=", "value", "and", "t2", ".", "title", "=", "value"], "question": "¿Cuáles son los tipos de voz que interpretó el músico de apellido \"Heilo\" en \"Der Kapitan\"?\n", "question_toks": ["What", "are", "the", "types", "of", "vocals", "that", "the", "musician", "with", "the", "last", "name", "``", "Heilo", "''", "played", "in", "``", "Der", "Kapitan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Heilo\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"Der Kapitan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Der", "Kapitan", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "¿Quién actúa detrás del escenario de la canción \"Der Kapitan\"? Muestra el nombre y apellido.\n", "question_toks": ["Who", "is", "performing", "in", "the", "back", "stage", "position", "for", "the", "song", "``", "Der", "Kapitan", "''", "?", "Show", "the", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Der Kapitan\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\"", "query_toks": ["SELECT", "T2.firstname", ",", "T2.lastname", "FROM", "Performance", "AS", "T1", "JOIN", "Band", "AS", "T2", "ON", "T1.bandmate", "=", "T2.id", "JOIN", "Songs", "AS", "T3", "ON", "T3.SongId", "=", "T1.SongId", "WHERE", "T3.Title", "=", "``", "Der", "Kapitan", "''", "AND", "T1.StagePosition", "=", "``", "back", "''"], "query_toks_no_value": ["select", "t2", ".", "firstname", ",", "t2", ".", "lastname", "from", "performance", "as", "t1", "join", "band", "as", "t2", "on", "t1", ".", "bandmate", "=", "t2", ".", "id", "join", "songs", "as", "t3", "on", "t3", ".", "songid", "=", "t1", ".", "songid", "where", "t3", ".", "title", "=", "value", "and", "t1", ".", "stageposition", "=", "value"], "question": "¿Cuál es el nombre y apellido del artista que actuó detrás del escenario de la canción \"Der Kapitan\"?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "artist", "who", "performed", "back", "stage", "for", "the", "song", "``", "Der", "Kapitan", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Der Kapitan\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"back\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"", "query_toks": ["SELECT", "T3.title", "FROM", "albums", "AS", "T1", "JOIN", "tracklists", "AS", "T2", "ON", "T1.aid", "=", "T2.albumid", "JOIN", "songs", "AS", "T3", "ON", "T2.songid", "=", "T3.songid", "WHERE", "T1.title", "=", "``", "A", "Kiss", "Before", "You", "Go", ":", "Live", "in", "Hamburg", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "albums", "as", "t1", "join", "tracklists", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "albumid", "join", "songs", "as", "t3", "on", "t2", ".", "songid", "=", "t3", ".", "songid", "where", "t1", ".", "title", "=", "value"], "question": "¿Cuáles son las canciones del álbum \"A Kiss Before You Go: Live in Hamburg\"?\n", "question_toks": ["What", "are", "the", "songs", "in", "album", "``", "A", "Kiss", "Before", "You", "Go", ":", "Live", "in", "Hamburg", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"A Kiss Before You Go: Live in Hamburg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\"", "query_toks": ["SELECT", "T3.title", "FROM", "albums", "AS", "T1", "JOIN", "tracklists", "AS", "T2", "ON", "T1.aid", "=", "T2.albumid", "JOIN", "songs", "AS", "T3", "ON", "T2.songid", "=", "T3.songid", "WHERE", "T1.title", "=", "``", "A", "Kiss", "Before", "You", "Go", ":", "Live", "in", "Hamburg", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "albums", "as", "t1", "join", "tracklists", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "albumid", "join", "songs", "as", "t3", "on", "t2", ".", "songid", "=", "t3", ".", "songid", "where", "t1", ".", "title", "=", "value"], "question": "¿Cuáles son los títulos de las canciones del álbum \"A Kiss Before You Go: Live in Hamburg\"?\n", "question_toks": ["What", "are", "the", "song", "titles", "on", "the", "album", "``", "A", "Kiss", "Before", "You", "Go", ":", "Live", "in", "Hamburg", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"A Kiss Before You Go: Live in Hamburg\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"", "query_toks": ["SELECT", "T3.title", "FROM", "albums", "AS", "T1", "JOIN", "tracklists", "AS", "T2", "ON", "T1.aid", "=", "T2.albumid", "JOIN", "songs", "AS", "T3", "ON", "T2.songid", "=", "T3.songid", "WHERE", "t1.label", "=", "``", "Universal", "Music", "Group", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "albums", "as", "t1", "join", "tracklists", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "albumid", "join", "songs", "as", "t3", "on", "t2", ".", "songid", "=", "t3", ".", "songid", "where", "t1", ".", "label", "=", "value"], "question": "¿Cuáles son todas las canciones de los álbumes bajo el sello \"Universal Music Group\"?\n", "question_toks": ["What", "are", "all", "the", "songs", "in", "albums", "under", "label", "``", "Universal", "Music", "Group", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Universal Music Group\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_2", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"", "query_toks": ["SELECT", "T3.title", "FROM", "albums", "AS", "T1", "JOIN", "tracklists", "AS", "T2", "ON", "T1.aid", "=", "T2.albumid", "JOIN", "songs", "AS", "T3", "ON", "T2.songid", "=", "T3.songid", "WHERE", "t1.label", "=", "``", "Universal", "Music", "Group", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "albums", "as", "t1", "join", "tracklists", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "albumid", "join", "songs", "as", "t3", "on", "t2", ".", "songid", "=", "t3", ".", "songid", "where", "t1", ".", "label", "=", "value"], "question": "¿Cuáles son los nombres de todas las canciones cuyo álbum está bajo el sello de \"Universal Music Group\"?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "songs", "whose", "album", "is", "under", "the", "label", "of", "``", "Universal", "Music", "Group", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Universal Music Group\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'", "query_toks": ["SELECT", "founder", "FROM", "manufacturers", "WHERE", "name", "=", "'Sony", "'"], "query_toks_no_value": ["select", "founder", "from", "manufacturers", "where", "name", "=", "value"], "question": "¿Quién es el fundador de Sony?\n", "question_toks": ["Who", "is", "the", "founder", "of", "Sony", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'", "query_toks": ["SELECT", "founder", "FROM", "manufacturers", "WHERE", "name", "=", "'Sony", "'"], "query_toks_no_value": ["select", "founder", "from", "manufacturers", "where", "name", "=", "value"], "question": "Vuelve el fundador de Sony.\n", "question_toks": ["Return", "the", "founder", "of", "Sony", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'", "query_toks": ["SELECT", "headquarter", "FROM", "manufacturers", "WHERE", "founder", "=", "'James", "'"], "query_toks_no_value": ["select", "headquarter", "from", "manufacturers", "where", "founder", "=", "value"], "question": "¿Dónde está la sede de la empresa fundada por James?\n", "question_toks": ["Where", "is", "the", "headquarter", "of", "the", "company", "founded", "by", "James", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'", "query_toks": ["SELECT", "headquarter", "FROM", "manufacturers", "WHERE", "founder", "=", "'James", "'"], "query_toks_no_value": ["select", "headquarter", "from", "manufacturers", "where", "founder", "=", "value"], "question": "¿Cuál es la sede de la empresa cuyo fundador es James?\n", "question_toks": ["What", "is", "the", "headquarter", "of", "the", "company", "whose", "founder", "is", "James", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"James\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT DISTINCT headquarter FROM manufacturers", "query_toks": ["SELECT", "DISTINCT", "headquarter", "FROM", "manufacturers"], "query_toks_no_value": ["select", "distinct", "headquarter", "from", "manufacturers"], "question": "¿Cuáles son las diferentes ciudades enumeradas?\n", "question_toks": ["What", "are", "the", "different", "cities", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT DISTINCT headquarter FROM manufacturers", "query_toks": ["SELECT", "DISTINCT", "headquarter", "FROM", "manufacturers"], "query_toks_no_value": ["select", "distinct", "headquarter", "from", "manufacturers"], "question": "Dar las distintas sedes de los fabricantes.\n", "question_toks": ["Give", "the", "distinct", "headquarters", "of", "manufacturers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'", "query_toks": ["SELECT", "founder", "FROM", "manufacturers", "WHERE", "name", "LIKE", "'S", "%", "'"], "query_toks_no_value": ["select", "founder", "from", "manufacturers", "where", "name", "like", "value"], "question": "Encuentre al fundador de la empresa cuyo nombre comienza con la letra 'S'.\n", "question_toks": ["Find", "the", "founder", "of", "the", "company", "whose", "name", "begins", "with", "the", "letter", "'S", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"S%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'", "query_toks": ["SELECT", "founder", "FROM", "manufacturers", "WHERE", "name", "LIKE", "'S", "%", "'"], "query_toks_no_value": ["select", "founder", "from", "manufacturers", "where", "name", "like", "value"], "question": "¿Quiénes son los fundadores de empresas cuya primera letra es S?\n", "question_toks": ["Who", "is", "the", "founders", "of", "companies", "whose", "first", "letter", "is", "S", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"S%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", "BETWEEN", "100", "AND", "150"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", "between", "value", "and", "value"], "question": "Encuentre el nombre de empresas cuyos ingresos estén entre 100 y 150.\n", "question_toks": ["Find", "the", "name", "of", "companies", "whose", "revenue", "is", "between", "100", "and", "150", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 100.0, 150.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", "BETWEEN", "100", "AND", "150"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", "between", "value", "and", "value"], "question": "¿Cómo se llaman las empresas con ingresos entre 100 y 150?\n", "question_toks": ["What", "are", "the", "names", "of", "companies", "with", "revenue", "between", "100", "and", "150", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 100.0, 150.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", ">", "(", "SELECT", "avg", "(", "revenue", ")", "FROM", "manufacturers", ")"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", ">", "(", "select", "avg", "(", "revenue", ")", "from", "manufacturers", ")"], "question": "Encuentre el nombre de las empresas cuyos ingresos son mayores que los ingresos promedio de todas las empresas.\n", "question_toks": ["Find", "the", "name", "of", "companies", "whose", "revenue", "is", "greater", "than", "the", "average", "revenue", "of", "all", "companies", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", ">", "(", "SELECT", "avg", "(", "revenue", ")", "FROM", "manufacturers", ")"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", ">", "(", "select", "avg", "(", "revenue", ")", "from", "manufacturers", ")"], "question": "¿Cuáles son los nombres de los fabricantes con ingresos superiores al promedio de todos los ingresos?\n", "question_toks": ["What", "are", "the", "names", "of", "manufacturers", "with", "revenue", "greater", "than", "the", "average", "of", "all", "revenues", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", "<", "(", "SELECT", "min", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'", ")"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", "<", "(", "select", "min", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", ")"], "question": "Encuentre el nombre de las empresas cuyos ingresos son menores que los ingresos de todas las empresas con sede en Austin.\n", "question_toks": ["Find", "the", "name", "of", "companies", "whose", "revenue", "is", "smaller", "than", "the", "revenue", "of", "all", "companies", "based", "in", "Austin", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", "<", "(", "SELECT", "min", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'", ")"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", "<", "(", "select", "min", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", ")"], "question": "¿Cuáles son los nombres de las empresas con ingresos inferiores a los ingresos más bajos de cualquier fabricante en Austin?\n", "question_toks": ["What", "are", "the", "names", "of", "companies", "with", "revenue", "less", "than", "the", "lowest", "revenue", "of", "any", "manufacturer", "in", "Austin", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT Name FROM Products", "query_toks": ["SELECT", "Name", "FROM", "Products"], "query_toks_no_value": ["select", "name", "from", "products"], "question": "Selecciona los nombres de todos los productos de la tienda.\n", "question_toks": ["Select", "the", "names", "of", "all", "the", "products", "in", "the", "store", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT Name FROM Products", "query_toks": ["SELECT", "Name", "FROM", "Products"], "query_toks_no_value": ["select", "name", "from", "products"], "question": "¿Cuáles son los nombres de todos los productos?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name ,  price FROM products", "query_toks": ["SELECT", "name", ",", "price", "FROM", "products"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products"], "question": "Selecciona los nombres y los precios de todos los productos de la tienda.\n", "question_toks": ["Select", "the", "names", "and", "the", "prices", "of", "all", "the", "products", "in", "the", "store", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name ,  price FROM products", "query_toks": ["SELECT", "name", ",", "price", "FROM", "products"], "query_toks_no_value": ["select", "name", ",", "price", "from", "products"], "question": "¿Cuáles son los nombres y precios de todos los productos de la tienda?\n", "question_toks": ["What", "are", "the", "names", "and", "prices", "of", "all", "products", "in", "the", "store", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM products WHERE price  <=  200", "query_toks": ["SELECT", "name", "FROM", "products", "WHERE", "price", "<", "=", "200"], "query_toks_no_value": ["select", "name", "from", "products", "where", "price", "<", "=", "value"], "question": "Selecciona el nombre de los productos con un precio menor o igual a $200.\n", "question_toks": ["Select", "the", "name", "of", "the", "products", "with", "a", "price", "less", "than", "or", "equal", "to", "$", "200", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 6, [0, [0, 8, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT name FROM products WHERE price  <=  200", "query_toks": ["SELECT", "name", "FROM", "products", "WHERE", "price", "<", "=", "200"], "query_toks_no_value": ["select", "name", "from", "products", "where", "price", "<", "=", "value"], "question": "¿Cuáles son los nombres de los productos con un precio máximo de 200?\n", "question_toks": ["What", "are", "the", "names", "of", "products", "with", "price", "at", "most", "200", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 6, [0, [0, 8, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120", "query_toks": ["SELECT", "*", "FROM", "products", "WHERE", "price", "BETWEEN", "60", "AND", "120"], "query_toks_no_value": ["select", "*", "from", "products", "where", "price", "between", "value", "and", "value"], "question": "Encuentra toda la información de todos los productos con un precio entre $60 y $120.\n", "question_toks": ["Find", "all", "information", "of", "all", "the", "products", "with", "a", "price", "between", "$", "60", "and", "$", "120", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 8, false], null], 60.0, 120.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120", "query_toks": ["SELECT", "*", "FROM", "products", "WHERE", "price", "BETWEEN", "60", "AND", "120"], "query_toks_no_value": ["select", "*", "from", "products", "where", "price", "between", "value", "and", "value"], "question": "¿Cuál es toda la información de todos los productos que tienen un precio entre 60 y 120?\n", "question_toks": ["What", "is", "all", "the", "information", "of", "all", "the", "products", "that", "have", "a", "price", "between", "60", "and", "120", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 8, false], null], 60.0, 120.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code", "query_toks": ["SELECT", "*", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code"], "query_toks_no_value": ["select", "*", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code"], "question": "Selecciona todos los datos de los productos y el fabricante de cada producto.\n", "question_toks": ["Select", "all", "the", "data", "from", "the", "products", "and", "each", "product", "'s", "manufacturer", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "manufactory_1", "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code", "query_toks": ["SELECT", "*", "FROM", "products", "AS", "T1", "JOIN", "Manufacturers", "AS", "T2", "ON", "T1.manufacturer", "=", "T2.code"], "query_toks_no_value": ["select", "*", "from", "products", "as", "t1", "join", "manufacturers", "as", "t2", "on", "t1", ".", "manufacturer", "=", "t2", ".", "code"], "question": "¿Cuáles son todos los datos del producto, así como el fabricante de cada producto?\n", "question_toks": ["What", "is", "all", "the", "product", "data", ",", "as", "well", "as", "each", "product", "'s", "manufacturer", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_date", "FROM", "problem_log", "WHERE", "problem_id", "=", "10"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_date", "from", "problem_log", "where", "problem_id", "=", "value"], "question": "Encuentre todos los identificadores y fechas de los registros del problema cuyo identificador es 10.\n", "question_toks": ["Find", "all", "the", "ids", "and", "dates", "of", "the", "logs", "for", "the", "problem", "whose", "id", "is", "10", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_date", "FROM", "problem_log", "WHERE", "problem_id", "=", "10"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_date", "from", "problem_log", "where", "problem_id", "=", "value"], "question": "Para el problema con el ID 10, devuelva los ID y las fechas de sus registros de problemas.\n", "question_toks": ["For", "the", "problem", "with", "id", "10", ",", "return", "the", "ids", "and", "dates", "of", "its", "problem", "logs", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_description", "FROM", "problem_log"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_description", "from", "problem_log"], "question": "Enumere todos los ID de registro y sus descripciones de los registros de problemas.\n", "question_toks": ["List", "all", "the", "log", "ids", "and", "their", "descriptions", "from", "the", "problem", "logs", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log", "query_toks": ["SELECT", "problem_log_id", ",", "log_entry_description", "FROM", "problem_log"], "query_toks_no_value": ["select", "problem_log_id", ",", "log_entry_description", "from", "problem_log"], "question": "¿Cuáles son la identificación del registro y la descripción de la entrada de cada problema?\n", "question_toks": ["What", "are", "the", "log", "id", "and", "entry", "description", "of", "each", "problem", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "query_toks": ["SELECT", "DISTINCT", "staff_first_name", ",", "staff_last_name", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T2.problem_id", "=", "1"], "query_toks_no_value": ["select", "distinct", "staff_first_name", ",", "staff_last_name", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t2", ".", "problem_id", "=", "value"], "question": "Enumere los nombres y apellidos de todos los distintos miembros del personal asignados al problema cuya identificación sea 1.\n", "question_toks": ["List", "the", "first", "and", "last", "names", "of", "all", "distinct", "staff", "members", "who", "are", "assigned", "to", "the", "problem", "whose", "id", "is", "1", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1", "query_toks": ["SELECT", "DISTINCT", "staff_first_name", ",", "staff_last_name", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T2.problem_id", "=", "1"], "query_toks_no_value": ["select", "distinct", "staff_first_name", ",", "staff_last_name", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t2", ".", "problem_id", "=", "value"], "question": "¿Qué miembros del personal están asignados al problema con el ID 1? Dame su nombre y apellido.\n", "question_toks": ["Which", "staff", "members", "are", "assigned", "to", "the", "problem", "with", "id", "1", "?", "Give", "me", "their", "first", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 18, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "query_toks": ["SELECT", "DISTINCT", "T2.problem_id", ",", "T2.problem_log_id", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T1.staff_first_name", "=", "``", "Rylan", "''", "AND", "T1.staff_last_name", "=", "``", "Homenick", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "problem_id", ",", "t2", ".", "problem_log_id", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t1", ".", "staff_first_name", "=", "value", "and", "t1", ".", "staff_last_name", "=", "value"], "question": "Enumere la identificación del problema y la identificación del registro asignados al personal llamado Rylan Homenick.\n", "question_toks": ["List", "the", "problem", "id", "and", "log", "id", "which", "are", "assigned", "to", "the", "staff", "named", "Rylan", "Homenick", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Rylan\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Homenick\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"", "query_toks": ["SELECT", "DISTINCT", "T2.problem_id", ",", "T2.problem_log_id", "FROM", "staff", "AS", "T1", "JOIN", "problem_log", "AS", "T2", "ON", "T1.staff_id", "=", "T2.assigned_to_staff_id", "WHERE", "T1.staff_first_name", "=", "``", "Rylan", "''", "AND", "T1.staff_last_name", "=", "``", "Homenick", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "problem_id", ",", "t2", ".", "problem_log_id", "from", "staff", "as", "t1", "join", "problem_log", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "assigned_to_staff_id", "where", "t1", ".", "staff_first_name", "=", "value", "and", "t1", ".", "staff_last_name", "=", "value"], "question": "¿Qué ID de problema y de registro están asignados al personal llamado Rylan Homenick?\n", "question_toks": ["Which", "problem", "id", "and", "log", "id", "are", "assigned", "to", "the", "staff", "named", "Rylan", "Homenick", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 4, false], null]]}, "select": [true, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Rylan\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Homenick\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"", "query_toks": ["SELECT", "T1.problem_description", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "T2.staff_first_name", "=", "``", "Christop", "''"], "query_toks_no_value": ["select", "t1", ".", "problem_description", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "staff_first_name", "=", "value"], "question": "Dame una lista de descripciones de los problemas que informa el personal cuyo nombre es Christop.\n", "question_toks": ["Give", "me", "a", "list", "of", "descriptions", "of", "the", "problems", "that", "are", "reported", "by", "the", "staff", "whose", "first", "name", "is", "Christop", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Christop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"", "query_toks": ["SELECT", "T1.problem_description", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "T2.staff_first_name", "=", "``", "Christop", "''"], "query_toks_no_value": ["select", "t1", ".", "problem_description", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "staff_first_name", "=", "value"], "question": "¿Qué problemas informa el personal de nombre \"Christop\"? Muestre las descripciones de los problemas.\n", "question_toks": ["Which", "problems", "are", "reported", "by", "the", "staff", "with", "first", "name", "``", "Christop", "''", "?", "Show", "the", "descriptions", "of", "the", "problems", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Christop\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "T2.staff_last_name", "=", "``", "Bosco", "''"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "staff_last_name", "=", "value"], "question": "Encuentre los identificadores de los problemas que reporta el personal cuyo apellido es Bosco.\n", "question_toks": ["Find", "the", "ids", "of", "the", "problems", "that", "are", "reported", "by", "the", "staff", "whose", "last", "name", "is", "Bosco", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Bosco\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "T2.staff_last_name", "=", "``", "Bosco", "''"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "staff_last_name", "=", "value"], "question": "¿Qué problemas reporta el personal de apellido \"Bosco\"? Muestra los identificadores de los problemas.\n", "question_toks": ["Which", "problems", "are", "reported", "by", "the", "staff", "with", "last", "name", "``", "Bosco", "''", "?", "Show", "the", "ids", "of", "the", "problems", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Bosco\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"", "query_toks": ["SELECT", "problem_id", "FROM", "problems", "WHERE", "date_problem_reported", ">", "``", "1978-06-26", "''"], "query_toks_no_value": ["select", "problem_id", "from", "problems", "where", "date_problem_reported", ">", "value"], "question": "¿Cuáles son los identificadores de los problemas que se informan después del 26 de junio de 1978?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "problems", "which", "are", "reported", "after", "1978-06-26", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], "\"1978-06-26\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"", "query_toks": ["SELECT", "problem_id", "FROM", "problems", "WHERE", "date_problem_reported", ">", "``", "1978-06-26", "''"], "query_toks_no_value": ["select", "problem_id", "from", "problems", "where", "date_problem_reported", ">", "value"], "question": "Encuentre los identificadores de los problemas informados después del 26 de junio de 1978.\n", "question_toks": ["Find", "the", "ids", "of", "the", "problems", "reported", "after", "1978-06-26", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], "\"1978-06-26\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"", "query_toks": ["SELECT", "problem_id", "FROM", "problems", "WHERE", "date_problem_reported", "<", "``", "1978-06-26", "''"], "query_toks_no_value": ["select", "problem_id", "from", "problems", "where", "date_problem_reported", "<", "value"], "question": "¿Cuáles son los identificadores de los problemas que se informaron antes del 26 de junio de 1978?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "problems", "which", "are", "reported", "before", "1978-06-26", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 25, false], null], "\"1978-06-26\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"", "query_toks": ["SELECT", "problem_id", "FROM", "problems", "WHERE", "date_problem_reported", "<", "``", "1978-06-26", "''"], "query_toks_no_value": ["select", "problem_id", "from", "problems", "where", "date_problem_reported", "<", "value"], "question": "¿Qué problemas se informaron antes del 26/06/1978? Dame los ids de los problemas.\n", "question_toks": ["Which", "problems", "are", "reported", "before", "1978-06-26", "?", "Give", "me", "the", "ids", "of", "the", "problems", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 25, false], null], "\"1978-06-26\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "date_problem_reported", "<", "(", "SELECT", "min", "(", "date_problem_reported", ")", "FROM", "problems", "AS", "T3", "JOIN", "staff", "AS", "T4", "ON", "T3.reported_by_staff_id", "=", "T4.staff_id", "WHERE", "T4.staff_first_name", "=", "``", "Lysanne", "''", "AND", "T4.staff_last_name", "=", "``", "Turcotte", "''", ")"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "date_problem_reported", "<", "(", "select", "min", "(", "date_problem_reported", ")", "from", "problems", "as", "t3", "join", "staff", "as", "t4", "on", "t3", ".", "reported_by_staff_id", "=", "t4", ".", "staff_id", "where", "t4", ".", "staff_first_name", "=", "value", "and", "t4", ".", "staff_last_name", "=", "value", ")"], "question": "¿Cuáles son los identificadores de los problemas informados antes de la fecha de cualquier problema informado por Lysanne Turcotte?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "problems", "reported", "before", "the", "date", "of", "any", "problem", "reported", "by", "Lysanne", "Turcotte", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 25, false], null], {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[2, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Lysanne\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Turcotte\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "date_problem_reported", "<", "(", "SELECT", "min", "(", "date_problem_reported", ")", "FROM", "problems", "AS", "T3", "JOIN", "staff", "AS", "T4", "ON", "T3.reported_by_staff_id", "=", "T4.staff_id", "WHERE", "T4.staff_first_name", "=", "``", "Lysanne", "''", "AND", "T4.staff_last_name", "=", "``", "Turcotte", "''", ")"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "date_problem_reported", "<", "(", "select", "min", "(", "date_problem_reported", ")", "from", "problems", "as", "t3", "join", "staff", "as", "t4", "on", "t3", ".", "reported_by_staff_id", "=", "t4", ".", "staff_id", "where", "t4", ".", "staff_first_name", "=", "value", "and", "t4", ".", "staff_last_name", "=", "value", ")"], "question": "¿Qué problemas se informaron antes de la fecha de cualquier problema informado por el personal Lysanne Turcotte? Dame los ids de los problemas.\n", "question_toks": ["Which", "problems", "were", "reported", "before", "the", "date", "of", "any", "problem", "reported", "by", "the", "staff", "Lysanne", "Turcotte", "?", "Give", "me", "the", "ids", "of", "the", "problems", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 4, [0, [0, 25, false], null], {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[2, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Lysanne\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Turcotte\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "date_problem_reported", ">", "(", "SELECT", "max", "(", "date_problem_reported", ")", "FROM", "problems", "AS", "T3", "JOIN", "staff", "AS", "T4", "ON", "T3.reported_by_staff_id", "=", "T4.staff_id", "WHERE", "T4.staff_first_name", "=", "``", "Rylan", "''", "AND", "T4.staff_last_name", "=", "``", "Homenick", "''", ")"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "date_problem_reported", ">", "(", "select", "max", "(", "date_problem_reported", ")", "from", "problems", "as", "t3", "join", "staff", "as", "t4", "on", "t3", ".", "reported_by_staff_id", "=", "t4", ".", "staff_id", "where", "t4", ".", "staff_first_name", "=", "value", "and", "t4", ".", "staff_last_name", "=", "value", ")"], "question": "¿Cuáles son los identificadores de los problemas informados después de la fecha de los problemas informados por Rylan Homenick?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "problems", "reported", "after", "the", "date", "of", "any", "problems", "reported", "by", "Rylan", "Homenick", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[1, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Rylan\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Homenick\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "staff", "AS", "T2", "ON", "T1.reported_by_staff_id", "=", "T2.staff_id", "WHERE", "date_problem_reported", ">", "(", "SELECT", "max", "(", "date_problem_reported", ")", "FROM", "problems", "AS", "T3", "JOIN", "staff", "AS", "T4", "ON", "T3.reported_by_staff_id", "=", "T4.staff_id", "WHERE", "T4.staff_first_name", "=", "``", "Rylan", "''", "AND", "T4.staff_last_name", "=", "``", "Homenick", "''", ")"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "reported_by_staff_id", "=", "t2", ".", "staff_id", "where", "date_problem_reported", ">", "(", "select", "max", "(", "date_problem_reported", ")", "from", "problems", "as", "t3", "join", "staff", "as", "t4", "on", "t3", ".", "reported_by_staff_id", "=", "t4", ".", "staff_id", "where", "t4", ".", "staff_first_name", "=", "value", "and", "t4", ".", "staff_last_name", "=", "value", ")"], "question": "Encuentre los identificadores de los problemas informados después de la fecha de cualquier problema informado por el personal de Rylan Homenick.\n", "question_toks": ["Find", "the", "ids", "of", "the", "problems", "reported", "after", "the", "date", "of", "any", "problems", "reported", "by", "the", "staff", "Rylan", "Homenick", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 17, false], null]]}, "select": [false, [[1, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Rylan\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Homenick\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T2.product_name", "=", "``", "voluptatem", "''", "AND", "T1.date_problem_reported", ">", "``", "1995", "''"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t2", ".", "product_name", "=", "value", "and", "t1", ".", "date_problem_reported", ">", "value"], "question": "¿Enumere los identificadores de los problemas del producto \"voluptatem\" que se informaron después de 1995?\n", "question_toks": ["List", "the", "ids", "of", "the", "problems", "from", "the", "product", "``", "voluptatem", "''", "that", "are", "reported", "after", "1995", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"voluptatem\"", null], "and", [false, 3, [0, [0, 25, false], null], "\"1995\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_software_problems", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"", "query_toks": ["SELECT", "T1.problem_id", "FROM", "problems", "AS", "T1", "JOIN", "product", "AS", "T2", "ON", "T1.product_id", "=", "T2.product_id", "WHERE", "T2.product_name", "=", "``", "voluptatem", "''", "AND", "T1.date_problem_reported", ">", "``", "1995", "''"], "query_toks_no_value": ["select", "t1", ".", "problem_id", "from", "problems", "as", "t1", "join", "product", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "where", "t2", ".", "product_name", "=", "value", "and", "t1", ".", "date_problem_reported", ">", "value"], "question": "¿Cuáles son los identificadores de los problemas relacionados con el producto \"voluptatem\" y que se reportan después de 1995?\n", "question_toks": ["What", "are", "the", "ids", "of", "the", "problems", "that", "are", "from", "the", "product", "``", "voluptatem", "''", "and", "are", "reported", "after", "1995", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 22, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"voluptatem\"", null], "and", [false, 3, [0, [0, 25, false], null], "\"1995\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100", "query_toks": ["SELECT", "DISTINCT", "city", "FROM", "branch", "WHERE", "membership_amount", ">", "=", "100"], "query_toks_no_value": ["select", "distinct", "city", "from", "branch", "where", "membership_amount", ">", "=", "value"], "question": "Muestra todas las ciudades distintas donde se encuentran sucursales con al menos 100 membresías.\n", "question_toks": ["Show", "all", "distinct", "city", "where", "branches", "with", "at", "least", "100", "memberships", "are", "located", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 5, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100", "query_toks": ["SELECT", "DISTINCT", "city", "FROM", "branch", "WHERE", "membership_amount", ">", "=", "100"], "query_toks_no_value": ["select", "distinct", "city", "from", "branch", "where", "membership_amount", ">", "=", "value"], "question": "¿Cuáles son las diferentes ciudades que tienen más de 100 membresías?\n", "question_toks": ["What", "are", "the", "different", "cities", "that", "have", "more", "than", "100", "memberships", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 5, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "query_toks": ["SELECT", "name", "FROM", "member", "WHERE", "member_id", "NOT", "IN", "(", "SELECT", "member_id", "FROM", "membership_register_branch", ")"], "query_toks_no_value": ["select", "name", "from", "member", "where", "member_id", "not", "in", "(", "select", "member_id", "from", "membership_register_branch", ")"], "question": "Mostrar nombres de miembros sin ninguna sucursal registrada.\n", "question_toks": ["Show", "member", "names", "without", "any", "registered", "branch", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)", "query_toks": ["SELECT", "name", "FROM", "member", "WHERE", "member_id", "NOT", "IN", "(", "SELECT", "member_id", "FROM", "membership_register_branch", ")"], "query_toks_no_value": ["select", "name", "from", "member", "where", "member_id", "not", "in", "(", "select", "member_id", "from", "membership_register_branch", ")"], "question": "¿Cuáles son los nombres de los miembros que nunca se han registrado en ninguna sucursal?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "members", "that", "have", "never", "registered", "at", "any", "branch", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "query_toks": ["SELECT", "name", ",", "city", "FROM", "branch", "WHERE", "branch_id", "NOT", "IN", "(", "SELECT", "branch_id", "FROM", "membership_register_branch", ")"], "query_toks_no_value": ["select", "name", ",", "city", "from", "branch", "where", "branch_id", "not", "in", "(", "select", "branch_id", "from", "membership_register_branch", ")"], "question": "Indique el nombre de la sucursal y la ciudad sin ningún miembro registrado.\n", "question_toks": ["List", "the", "branch", "name", "and", "city", "without", "any", "registered", "members", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)", "query_toks": ["SELECT", "name", ",", "city", "FROM", "branch", "WHERE", "branch_id", "NOT", "IN", "(", "SELECT", "branch_id", "FROM", "membership_register_branch", ")"], "query_toks_no_value": ["select", "name", ",", "city", "from", "branch", "where", "branch_id", "not", "in", "(", "select", "branch_id", "from", "membership_register_branch", ")"], "question": "¿Cuáles son los nombres y ciudades de las sucursales que no tienen miembros registrados?\n", "question_toks": ["What", "are", "the", "names", "and", "cities", "of", "the", "branches", "that", "do", "not", "have", "any", "registered", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016", "query_toks": ["SELECT", "T2.name", ",", "T2.hometown", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.member_id", "=", "T2.member_id", "WHERE", "T1.register_year", "=", "2016"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "hometown", "from", "membership_register_branch", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "where", "t1", ".", "register_year", "=", "value"], "question": "Muestre el nombre del miembro y la ciudad natal que registró una sucursal en 2016.\n", "question_toks": ["Show", "the", "member", "name", "and", "hometown", "who", "registered", "a", "branch", "in", "2016", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016", "query_toks": ["SELECT", "T2.name", ",", "T2.hometown", "FROM", "membership_register_branch", "AS", "T1", "JOIN", "member", "AS", "T2", "ON", "T1.member_id", "=", "T2.member_id", "WHERE", "T1.register_year", "=", "2016"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "hometown", "from", "membership_register_branch", "as", "t1", "join", "member", "as", "t2", "on", "t1", ".", "member_id", "=", "t2", ".", "member_id", "where", "t1", ".", "register_year", "=", "value"], "question": "¿Cuáles son los nombres de los miembros y las ciudades de origen de quienes se registraron en una sucursal en 2016?\n", "question_toks": ["What", "are", "the", "member", "names", "and", "hometowns", "of", "those", "who", "registered", "at", "a", "branch", "in", "2016", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100", "query_toks": ["SELECT", "city", "FROM", "branch", "WHERE", "open_year", "=", "2001", "AND", "membership_amount", ">", "100"], "query_toks_no_value": ["select", "city", "from", "branch", "where", "open_year", "=", "value", "and", "membership_amount", ">", "value"], "question": "Mostrar toda la ciudad con una sucursal abierta en 2001 y una sucursal con más de 100 miembros.\n", "question_toks": ["Show", "all", "city", "with", "a", "branch", "opened", "in", "2001", "and", "a", "branch", "with", "more", "than", "100", "membership", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], 2001.0, null], "and", [false, 3, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100", "query_toks": ["SELECT", "city", "FROM", "branch", "WHERE", "open_year", "=", "2001", "AND", "membership_amount", ">", "100"], "query_toks_no_value": ["select", "city", "from", "branch", "where", "open_year", "=", "value", "and", "membership_amount", ">", "value"], "question": "¿Cuáles son las ciudades que tienen una sucursal que abrió en 2001 y una sucursal con más de 100 miembros?\n", "question_toks": ["What", "are", "the", "cities", "that", "have", "a", "branch", "that", "opened", "in", "2001", "and", "a", "branch", "with", "more", "than", "100", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], 2001.0, null], "and", [false, 3, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"", "query_toks": ["SELECT", "card_number", "FROM", "member", "WHERE", "Hometown", "LIKE", "``", "%", "Kentucky", "%", "''"], "query_toks_no_value": ["select", "card_number", "from", "member", "where", "hometown", "like", "value"], "question": "indique el número de tarjeta de todos los miembros cuya dirección local incluya la palabra \"Kentucky\".\n", "question_toks": ["list", "the", "card", "number", "of", "all", "members", "whose", "hometown", "address", "includes", "word", "``", "Kentucky", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%Kentucky%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "shop_membership", "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"", "query_toks": ["SELECT", "card_number", "FROM", "member", "WHERE", "Hometown", "LIKE", "``", "%", "Kentucky", "%", "''"], "query_toks_no_value": ["select", "card_number", "from", "member", "where", "hometown", "like", "value"], "question": "¿Cuáles son los números de tarjeta de los miembros de Kentucky?\n", "question_toks": ["What", "are", "the", "card", "numbers", "of", "members", "from", "Kentucky", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%Kentucky%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT LName FROM STUDENT WHERE Major  =  50", "query_toks": ["SELECT", "LName", "FROM", "STUDENT", "WHERE", "Major", "=", "50"], "query_toks_no_value": ["select", "lname", "from", "student", "where", "major", "=", "value"], "question": "Encuentra los apellidos de los estudiantes con especialidad 50.\n", "question_toks": ["Find", "the", "last", "names", "of", "students", "with", "major", "50", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT LName FROM STUDENT WHERE Major  =  50", "query_toks": ["SELECT", "LName", "FROM", "STUDENT", "WHERE", "Major", "=", "50"], "query_toks_no_value": ["select", "lname", "from", "student", "where", "major", "=", "value"], "question": "¿Cuáles son los apellidos de los estudiantes que cursan la carrera 50?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "students", "studying", "major", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22", "query_toks": ["SELECT", "Fname", "FROM", "STUDENT", "WHERE", "Age", ">", "22"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "age", ">", "value"], "question": "Encuentre los nombres de los estudiantes mayores de 22 años.\n", "question_toks": ["Find", "the", "first", "names", "of", "students", "with", "age", "above", "22", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 22.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22", "query_toks": ["SELECT", "Fname", "FROM", "STUDENT", "WHERE", "Age", ">", "22"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "age", ">", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes mayores de 22 años?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "the", "students", "aged", "above", "22", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 22.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"", "query_toks": ["SELECT", "Major", "FROM", "STUDENT", "WHERE", "Sex", "=", "``", "M", "''"], "query_toks_no_value": ["select", "major", "from", "student", "where", "sex", "=", "value"], "question": "¿Cuáles son las especialidades de los estudiantes varones (el sexo es M)?\n", "question_toks": ["What", "are", "the", "majors", "of", "male", "(", "sex", "is", "M", ")", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"", "query_toks": ["SELECT", "Major", "FROM", "STUDENT", "WHERE", "Sex", "=", "``", "M", "''"], "query_toks_no_value": ["select", "major", "from", "student", "where", "sex", "=", "value"], "question": "Enumere la especialidad de cada estudiante varón.\n", "question_toks": ["List", "the", "major", "of", "each", "male", "student", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "query_toks": ["SELECT", "Advisor", "FROM", "STUDENT", "WHERE", "city_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "advisor", "from", "student", "where", "city_code", "=", "value"], "question": "¿Quiénes son los asesores de los estudiantes que viven en una ciudad con código de ciudad \"BAL\"?\n", "question_toks": ["Who", "are", "the", "advisors", "for", "students", "that", "live", "in", "a", "city", "with", "city", "code", "``", "BAL", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"BAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"", "query_toks": ["SELECT", "Advisor", "FROM", "STUDENT", "WHERE", "city_code", "=", "``", "BAL", "''"], "query_toks_no_value": ["select", "advisor", "from", "student", "where", "city_code", "=", "value"], "question": "Mostrar los asesores de los estudiantes cuya ciudad de residencia tenga el código de ciudad \"BAL\".\n", "question_toks": ["Show", "the", "advisors", "of", "the", "students", "whose", "city", "of", "residence", "has", "city", "code", "``", "BAL", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"BAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "query_toks": ["SELECT", "DISTINCT", "Secretary_Vote", "FROM", "VOTING_RECORD", "WHERE", "ELECTION_CYCLE", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "distinct", "secretary_vote", "from", "voting_record", "where", "election_cycle", "=", "value"], "question": "¿Cuáles son los distintos votos de secretario en el ciclo electoral de otoño?\n", "question_toks": ["What", "are", "the", "distinct", "secretary", "votes", "in", "the", "fall", "election", "cycle", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Fall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"", "query_toks": ["SELECT", "DISTINCT", "Secretary_Vote", "FROM", "VOTING_RECORD", "WHERE", "ELECTION_CYCLE", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "distinct", "secretary_vote", "from", "voting_record", "where", "election_cycle", "=", "value"], "question": "Devuelve todos los votos distintos de secretario realizados en el ciclo electoral de otoño.\n", "question_toks": ["Return", "all", "the", "distinct", "secretary", "votes", "made", "in", "the", "fall", "election", "cycle", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Fall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "query_toks": ["SELECT", "DISTINCT", "PRESIDENT_Vote", "FROM", "VOTING_RECORD", "WHERE", "Registration_Date", "=", "``", "08/30/2015", "''"], "query_toks_no_value": ["select", "distinct", "president_vote", "from", "voting_record", "where", "registration_date", "=", "value"], "question": "¿Cuáles son los distintos votos del presidente el 30/08/2015?\n", "question_toks": ["What", "are", "the", "distinct", "president", "votes", "on", "08/30/2015", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"08/30/2015\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"", "query_toks": ["SELECT", "DISTINCT", "PRESIDENT_Vote", "FROM", "VOTING_RECORD", "WHERE", "Registration_Date", "=", "``", "08/30/2015", "''"], "query_toks_no_value": ["select", "distinct", "president_vote", "from", "voting_record", "where", "registration_date", "=", "value"], "question": "Muestra todas las distintas votaciones de presidente realizadas el 30/08/2015.\n", "question_toks": ["Show", "all", "the", "distinct", "president", "votes", "made", "on", "08/30/2015", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"08/30/2015\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "Registration_Date", ",", "Election_Cycle", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "registration_date", ",", "election_cycle", "from", "voting_record"], "question": "Informar la fecha de registro distinta y el ciclo electoral.\n", "question_toks": ["Report", "the", "distinct", "registration", "date", "and", "the", "election", "cycle", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "Registration_Date", ",", "Election_Cycle", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "registration_date", ",", "election_cycle", "from", "voting_record"], "question": "¿Cuáles son las distintas fechas de registro y los ciclos electorales?\n", "question_toks": ["What", "are", "the", "distinct", "registration", "dates", "and", "the", "election", "cycles", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "President_Vote", ",", "VICE_President_Vote", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "president_vote", ",", "vice_president_vote", "from", "voting_record"], "question": "Informar el voto distinto del presidente y el voto del vicepresidente.\n", "question_toks": ["Report", "the", "distinct", "president", "vote", "and", "the", "vice", "president", "vote", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD", "query_toks": ["SELECT", "DISTINCT", "President_Vote", ",", "VICE_President_Vote", "FROM", "VOTING_RECORD"], "query_toks_no_value": ["select", "distinct", "president_vote", ",", "vice_president_vote", "from", "voting_record"], "question": "Enumere todos los votos distintos del presidente y los votos del vicepresidente.\n", "question_toks": ["List", "all", "the", "distinct", "president", "votes", "and", "the", "vice", "president", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_President_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_president_vote"], "question": "Encuentre los apellidos distintos de los estudiantes que tienen votos de presidente de clase.\n", "question_toks": ["Find", "the", "distinct", "last", "names", "of", "the", "students", "who", "have", "class", "president", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_President_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_president_vote"], "question": "¿Cuáles son los apellidos distintos de los estudiantes que tienen votos de presidente de clase?\n", "question_toks": ["What", "are", "the", "distinct", "last", "names", "of", "the", "students", "who", "have", "class", "president", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_Senator_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_senator_vote"], "question": "Encuentre los nombres distintos de los estudiantes que tienen votos de senador de clase.\n", "question_toks": ["Find", "the", "distinct", "first", "names", "of", "the", "students", "who", "have", "class", "senator", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.CLASS_Senator_VOTE"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "class_senator_vote"], "question": "¿Cuáles son los nombres distintos de los estudiantes que tienen votos de presidente de clase?\n", "question_toks": ["What", "are", "the", "distinct", "first", "names", "of", "the", "students", "who", "have", "class", "president", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"", "query_toks": ["SELECT", "DISTINCT", "T1.Age", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Secretary_Vote", "WHERE", "T2.Election_Cycle", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "age", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "secretary_vote", "where", "t2", ".", "election_cycle", "=", "value"], "question": "Encuentre las distintas edades de los estudiantes que tienen votos de secretario en el ciclo electoral de otoño.\n", "question_toks": ["Find", "the", "distinct", "ages", "of", "students", "who", "have", "secretary", "votes", "in", "the", "fall", "election", "cycle", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Fall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\"", "query_toks": ["SELECT", "DISTINCT", "T1.Age", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Secretary_Vote", "WHERE", "T2.Election_Cycle", "=", "``", "Fall", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "age", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "secretary_vote", "where", "t2", ".", "election_cycle", "=", "value"], "question": "¿Cuáles son las distintas edades de los estudiantes que tienen votos de secretario en el ciclo electoral de otoño?\n", "question_toks": ["What", "are", "the", "distinct", "ages", "of", "students", "who", "have", "secretary", "votes", "in", "the", "fall", "election", "cycle", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null]]}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Fall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "query_toks": ["SELECT", "DISTINCT", "T1.Advisor", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Treasurer_Vote", "WHERE", "T2.Election_Cycle", "=", "``", "Spring", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "advisor", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "treasurer_vote", "where", "t2", ".", "election_cycle", "=", "value"], "question": "Encuentre el asesor distintivo de los estudiantes que tienen votos de tesorero en el ciclo de elecciones de primavera.\n", "question_toks": ["Find", "the", "distinct", "Advisor", "of", "students", "who", "have", "treasurer", "votes", "in", "the", "spring", "election", "cycle", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Spring\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\"", "query_toks": ["SELECT", "DISTINCT", "T1.Advisor", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Treasurer_Vote", "WHERE", "T2.Election_Cycle", "=", "``", "Spring", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "advisor", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "treasurer_vote", "where", "t2", ".", "election_cycle", "=", "value"], "question": "¿Quién sirvió como asesor para los estudiantes que tienen votos de tesorero en el ciclo electoral de primavera?\n", "question_toks": ["Who", "served", "as", "an", "advisor", "for", "students", "who", "have", "treasurer", "votes", "in", "the", "spring", "election", "cycle", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Spring\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "query_toks": ["SELECT", "DISTINCT", "T1.Major", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Treasurer_Vote"], "query_toks_no_value": ["select", "distinct", "t1", ".", "major", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "treasurer_vote"], "question": "Encuentre las distintas especialidades de los estudiantes que tienen votos de tesorero.\n", "question_toks": ["Find", "the", "distinct", "majors", "of", "students", "who", "have", "treasurer", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote", "query_toks": ["SELECT", "DISTINCT", "T1.Major", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.Treasurer_Vote"], "query_toks_no_value": ["select", "distinct", "t1", ".", "major", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "treasurer_vote"], "question": "¿Cuáles son las distintas especialidades que estudian los estudiantes con votos de tesorero?\n", "question_toks": ["What", "are", "the", "distinct", "majors", "that", "students", "with", "treasurer", "votes", "are", "studying", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.President_VOTE", "WHERE", "T1.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "president_vote", "where", "t1", ".", "sex", "=", "value"], "question": "Encuentre el nombre y apellido de todas las estudiantes (el sexo es F) que tienen votos para presidente.\n", "question_toks": ["Find", "the", "first", "and", "last", "names", "of", "all", "the", "female", "(", "sex", "is", "F", ")", "students", "who", "have", "president", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.President_VOTE", "WHERE", "T1.sex", "=", "``", "F", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "president_vote", "where", "t1", ".", "sex", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de todas las estudiantes que tienen votos de presidente?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "the", "female", "students", "who", "have", "president", "votes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_President_VOTE", "WHERE", "T1.age", "=", "18"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "where", "t1", ".", "age", "=", "value"], "question": "Encuentre el nombre y apellido de todos los estudiantes de 18 años que tienen votos de vicepresidente.\n", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "all", "the", "students", "of", "age", "18", "who", "have", "vice", "president", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 18.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "voter_2", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18", "query_toks": ["SELECT", "DISTINCT", "T1.Fname", ",", "T1.LName", "FROM", "STUDENT", "AS", "T1", "JOIN", "VOTING_RECORD", "AS", "T2", "ON", "T1.StuID", "=", "T2.VICE_President_VOTE", "WHERE", "T1.age", "=", "18"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "voting_record", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "vice_president_vote", "where", "t1", ".", "age", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de los estudiantes que tienen 18 años y tienen votos de vicepresidente?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "last", "names", "of", "the", "students", "who", "are", "18", "years", "old", "and", "have", "vice", "president", "votes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 18.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_name ,  typical_buying_price FROM products", "query_toks": ["SELECT", "product_name", ",", "typical_buying_price", "FROM", "products"], "query_toks_no_value": ["select", "product_name", ",", "typical_buying_price", "from", "products"], "question": "¿Cuáles son los nombres y precios de compra de todos los productos?\n", "question_toks": ["What", "are", "the", "names", "and", "buying", "prices", "of", "all", "the", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_name ,  typical_buying_price FROM products", "query_toks": ["SELECT", "product_name", ",", "typical_buying_price", "FROM", "products"], "query_toks_no_value": ["select", "product_name", ",", "typical_buying_price", "from", "products"], "question": "Devuelve los nombres y precios de compra típicos de todos los productos.\n", "question_toks": ["Return", "the", "names", "and", "typical", "buying", "prices", "for", "all", "products", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT color_description FROM ref_colors", "query_toks": ["SELECT", "color_description", "FROM", "ref_colors"], "query_toks_no_value": ["select", "color_description", "from", "ref_colors"], "question": "Enumere la descripción de todos los colores.\n", "question_toks": ["List", "the", "description", "of", "all", "the", "colors", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT color_description FROM ref_colors", "query_toks": ["SELECT", "color_description", "FROM", "ref_colors"], "query_toks_no_value": ["select", "color_description", "from", "ref_colors"], "question": "¿Cuáles son las descripciones de cada color?\n", "question_toks": ["What", "are", "the", "descriptions", "for", "each", "color", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS", "query_toks": ["SELECT", "DISTINCT", "characteristic_name", "FROM", "CHARACTERISTICS"], "query_toks_no_value": ["select", "distinct", "characteristic_name", "from", "characteristics"], "question": "Encuentra los nombres de todas las características del producto.\n", "question_toks": ["Find", "the", "names", "of", "all", "the", "product", "characteristics", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS", "query_toks": ["SELECT", "DISTINCT", "characteristic_name", "FROM", "CHARACTERISTICS"], "query_toks_no_value": ["select", "distinct", "characteristic_name", "from", "characteristics"], "question": "¿Cuáles son los diferentes nombres de las características del producto?\n", "question_toks": ["What", "are", "the", "different", "names", "of", "the", "product", "characteristics", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"", "query_toks": ["SELECT", "product_name", "FROM", "products", "WHERE", "product_category_code", "=", "``", "Spices", "''"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_category_code", "=", "value"], "question": "¿Cuáles son los nombres de los productos de la categoría \"Especias\"?\n", "question_toks": ["What", "are", "the", "names", "of", "products", "with", "category", "``", "Spices", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Spices\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"", "query_toks": ["SELECT", "product_name", "FROM", "products", "WHERE", "product_category_code", "=", "``", "Spices", "''"], "query_toks_no_value": ["select", "product_name", "from", "products", "where", "product_category_code", "=", "value"], "question": "Devuelve los nombres de los productos en la categoría 'Especias'.\n", "question_toks": ["Return", "the", "names", "of", "products", "in", "the", "category", "'Spices", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Spices\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "T1.product_name", ",", "T2.color_description", ",", "T1.product_description", "FROM", "products", "AS", "T1", "JOIN", "Ref_colors", "AS", "T2", "ON", "T1.color_code", "=", "T2.color_code", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t2", ".", "color_description", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "product_category_code", "=", "value"], "question": "Enumere los nombres, descripciones de colores y descripciones de productos de la categoría \"Hierbas\".\n", "question_toks": ["List", "the", "names", ",", "color", "descriptions", "and", "product", "descriptions", "of", "products", "with", "category", "``", "Herbs", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Herbs\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "T1.product_name", ",", "T2.color_description", ",", "T1.product_description", "FROM", "products", "AS", "T1", "JOIN", "Ref_colors", "AS", "T2", "ON", "T1.color_code", "=", "T2.color_code", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t2", ".", "color_description", ",", "t1", ".", "product_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "product_category_code", "=", "value"], "question": "¿Cuáles son los nombres, descripciones de colores y descripciones de productos de la categoría 'Hierbas'?\n", "question_toks": ["What", "are", "the", "names", ",", "color", "descriptions", ",", "and", "product", "descriptions", "for", "products", "in", "the", "'Herbs", "'", "category", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Herbs\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"", "query_toks": ["SELECT", "product_category_code", ",", "typical_buying_price", "FROM", "products", "WHERE", "product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "product_category_code", ",", "typical_buying_price", "from", "products", "where", "product_name", "=", "value"], "question": "¿Cuál es la categoría y el precio de compra típico del producto con el nombre \"comino\"?\n", "question_toks": ["What", "is", "the", "category", "and", "typical", "buying", "price", "of", "the", "product", "with", "name", "``", "cumin", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"", "query_toks": ["SELECT", "product_category_code", ",", "typical_buying_price", "FROM", "products", "WHERE", "product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "product_category_code", ",", "typical_buying_price", "from", "products", "where", "product_name", "=", "value"], "question": "Devuelve el código de categoría y el precio típico del 'comino'.\n", "question_toks": ["Return", "the", "category", "code", "and", "typical", "price", "of", "'cumin", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"", "query_toks": ["SELECT", "product_category_code", "FROM", "products", "WHERE", "product_name", "=", "``", "flax", "''"], "query_toks_no_value": ["select", "product_category_code", "from", "products", "where", "product_name", "=", "value"], "question": "¿A qué categoría pertenece el producto denominado \"lino\"?\n", "question_toks": ["Which", "category", "does", "the", "product", "named", "``", "flax", "''", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"flax\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"", "query_toks": ["SELECT", "product_category_code", "FROM", "products", "WHERE", "product_name", "=", "``", "flax", "''"], "query_toks_no_value": ["select", "product_category_code", "from", "products", "where", "product_name", "=", "value"], "question": "¿Cuál es el código de la categoría a la que pertenece el producto con el nombre 'lino'?\n", "question_toks": ["What", "is", "the", "code", "of", "the", "category", "that", "the", "product", "with", "the", "name", "'flax", "'", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"flax\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'", "query_toks": ["SELECT", "T1.product_name", "FROM", "products", "AS", "T1", "JOIN", "ref_colors", "AS", "T2", "ON", "T1.color_code", "=", "T2.color_code", "WHERE", "T2.color_description", "=", "'yellow", "'"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "¿Cómo se llama el producto con la descripción del color \"amarillo\"?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "product", "with", "the", "color", "description", "'yellow", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'", "query_toks": ["SELECT", "T1.product_name", "FROM", "products", "AS", "T1", "JOIN", "ref_colors", "AS", "T2", "ON", "T1.color_code", "=", "T2.color_code", "WHERE", "T2.color_description", "=", "'yellow", "'"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "Indique el nombre de los productos que tienen una descripción de color \"amarillo\".\n", "question_toks": ["Give", "the", "name", "of", "the", "products", "that", "have", "a", "color", "description", "'yellow", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'", "query_toks": ["SELECT", "T1.product_category_description", "FROM", "ref_product_categories", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_category_code", "=", "T2.product_category_code", "WHERE", "T2.product_description", "LIKE", "'", "%", "t", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "product_category_description", "from", "ref_product_categories", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t2", ".", "product_description", "like", "value"], "question": "Encuentre las descripciones de categorías de los productos cuyas descripciones incluyen la letra 't'.\n", "question_toks": ["Find", "the", "category", "descriptions", "of", "the", "products", "whose", "descriptions", "include", "letter", "'t", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 19, false], null], "\"%t%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'", "query_toks": ["SELECT", "T1.product_category_description", "FROM", "ref_product_categories", "AS", "T1", "JOIN", "products", "AS", "T2", "ON", "T1.product_category_code", "=", "T2.product_category_code", "WHERE", "T2.product_description", "LIKE", "'", "%", "t", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "product_category_description", "from", "ref_product_categories", "as", "t1", "join", "products", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t2", ".", "product_description", "like", "value"], "question": "¿Cuáles son las descripciones de las categorías en las que se encuentran los productos con descripciones de producto que contienen la letra t?\n", "question_toks": ["What", "are", "the", "descriptions", "of", "the", "categories", "that", "products", "with", "product", "descriptions", "that", "contain", "the", "letter", "t", "are", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 19, false], null], "\"%t%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"", "query_toks": ["SELECT", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t1.product_name", "=", "``", "catnip", "''"], "query_toks_no_value": ["select", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuál es la descripción del color del producto con el nombre \"catnip\"?\n", "question_toks": ["What", "is", "the", "color", "description", "of", "the", "product", "with", "name", "``", "catnip", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"catnip\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"", "query_toks": ["SELECT", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t1.product_name", "=", "``", "catnip", "''"], "query_toks_no_value": ["select", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t1", ".", "product_name", "=", "value"], "question": "Proporcione la descripción del color del producto 'hierba gatera'.\n", "question_toks": ["Give", "the", "color", "description", "for", "the", "product", "'catnip", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"catnip\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t1.color_code", ",", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t1", ".", "color_code", ",", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuál es el código de color y la descripción del producto denominado \"perifollo\"?\n", "question_toks": ["What", "is", "the", "color", "code", "and", "description", "of", "the", "product", "named", "``", "chervil", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t1.color_code", ",", "t2.color_description", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t1", ".", "color_code", ",", "t2", ".", "color_description", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t1", ".", "product_name", "=", "value"], "question": "Devuelve el código de color y la descripción del producto con el nombre 'perifollo'.\n", "question_toks": ["Return", "the", "color", "code", "and", "description", "for", "the", "product", "with", "the", "name", "'chervil", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"", "query_toks": ["SELECT", "t1.product_name", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "white", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "Enumere todos los nombres de productos con la descripción del color \"blanco\".\n", "question_toks": ["List", "all", "the", "product", "names", "with", "the", "color", "description", "``", "white", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"white\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"", "query_toks": ["SELECT", "t1.product_name", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "white", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "¿Cuáles son los nombres de los productos con \"blanco\" como descripción de color?\n", "question_toks": ["What", "are", "the", "names", "of", "products", "with", "'white", "'", "as", "their", "color", "description", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"white\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "query_toks": ["SELECT", "t1.product_name", ",", "t1.typical_buying_price", ",", "t1.typical_selling_price", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "yellow", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "typical_buying_price", ",", "t1", ".", "typical_selling_price", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "¿Cuáles son el nombre y los precios típicos de compra y venta de los productos cuyo color se describe como \"amarillo\"?\n", "question_toks": ["What", "are", "the", "name", "and", "typical", "buying", "and", "selling", "prices", "of", "the", "products", "that", "have", "color", "described", "as", "``", "yellow", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "query_toks": ["SELECT", "t1.product_name", ",", "t1.typical_buying_price", ",", "t1.typical_selling_price", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "yellow", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "typical_buying_price", ",", "t1", ".", "typical_selling_price", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "Devuelve los nombres y los precios típicos de compra y venta de productos que tienen \"amarillo\" como descripción de color.\n", "question_toks": ["Return", "the", "names", "and", "typical", "buying", "and", "selling", "prices", "for", "products", "that", "have", "'yellow", "'", "as", "their", "color", "description", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "query_toks": ["SELECT", "t3.characteristic_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "sesame", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuáles son todos los nombres característicos del producto \"sésamo\"?\n", "question_toks": ["What", "are", "all", "the", "characteristic", "names", "of", "product", "``", "sesame", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"sesame\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"", "query_toks": ["SELECT", "t3.characteristic_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "sesame", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "Devuelve los nombres característicos del producto 'sésamo'.\n", "question_toks": ["Return", "the", "characteristic", "names", "of", "the", "'sesame", "'", "product", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"sesame\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "query_toks": ["SELECT", "t3.characteristic_name", ",", "t3.characteristic_data_type", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", ",", "t3", ".", "characteristic_data_type", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "Enumere todos los nombres característicos y tipos de datos del producto \"comino\".\n", "question_toks": ["List", "all", "the", "characteristic", "names", "and", "data", "types", "of", "product", "``", "cumin", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"", "query_toks": ["SELECT", "t3.characteristic_name", ",", "t3.characteristic_data_type", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", ",", "t3", ".", "characteristic_data_type", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuáles son los nombres y tipos de datos de las características del producto 'comino'?\n", "question_toks": ["What", "are", "the", "names", "and", "data", "types", "of", "the", "characteristics", "of", "the", "'cumin", "'", "product", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"", "query_toks": ["SELECT", "t3.characteristic_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "sesame", "''", "AND", "t3.characteristic_type_code", "=", "``", "Grade", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value", "and", "t3", ".", "characteristic_type_code", "=", "value"], "question": "Enumere todas las características del producto denominado \"sésamo\" con el código de tipo \"Grado\".\n", "question_toks": ["List", "all", "characteristics", "of", "product", "named", "``", "sesame", "''", "with", "type", "code", "``", "Grade", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"sesame\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Grade\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"", "query_toks": ["SELECT", "t3.characteristic_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t1.product_name", "=", "``", "sesame", "''", "AND", "t3.characteristic_type_code", "=", "``", "Grade", "''"], "query_toks_no_value": ["select", "t3", ".", "characteristic_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t1", ".", "product_name", "=", "value", "and", "t3", ".", "characteristic_type_code", "=", "value"], "question": "¿Cómo se llaman las características del producto 'sésamo' que tienen el código de tipo de característica 'Grado'?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "characteristics", "of", "the", "product", "'sesame", "'", "that", "have", "the", "characteristic", "type", "code", "'Grade", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"sesame\"", null], "and", [false, 2, [0, [0, 9, false], null], "\"Grade\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"", "query_toks": ["SELECT", "product_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "JOIN", "ref_colors", "AS", "t4", "ON", "t1.color_code", "=", "t4.color_code", "WHERE", "t4.color_description", "=", "``", "red", "''", "AND", "t3.characteristic_name", "=", "``", "fast", "''"], "query_toks_no_value": ["select", "product_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "join", "ref_colors", "as", "t4", "on", "t1", ".", "color_code", "=", "t4", ".", "color_code", "where", "t4", ".", "color_description", "=", "value", "and", "t3", ".", "characteristic_name", "=", "value"], "question": "Busca el nombre de los productos que tienen la descripción de color \"rojo\" y tienen el nombre característico \"rápido\".\n", "question_toks": ["Find", "the", "name", "of", "the", "products", "that", "have", "the", "color", "description", "``", "red", "''", "and", "have", "the", "characteristic", "name", "``", "fast", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"red\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"fast\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"", "query_toks": ["SELECT", "product_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "JOIN", "ref_colors", "AS", "t4", "ON", "t1.color_code", "=", "t4.color_code", "WHERE", "t4.color_description", "=", "``", "red", "''", "AND", "t3.characteristic_name", "=", "``", "fast", "''"], "query_toks_no_value": ["select", "product_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "join", "ref_colors", "as", "t4", "on", "t1", ".", "color_code", "=", "t4", ".", "color_code", "where", "t4", ".", "color_description", "=", "value", "and", "t3", ".", "characteristic_name", "=", "value"], "question": "¿Cuáles son los nombres de los productos que tienen una descripción de color \"rojo\" y la característica \"rápido\"?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "products", "that", "have", "a", "color", "description", "of", "'red", "'", "and", "the", "'fast", "'", "characteristic", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"red\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"fast\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"", "query_toks": ["SELECT", "DISTINCT", "t1.product_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t3.characteristic_name", "=", "``", "warm", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t3", ".", "characteristic_name", "=", "value"], "question": "Enumere todos los nombres distintos de los productos con el nombre característico \"caliente\".\n", "question_toks": ["List", "the", "all", "the", "distinct", "names", "of", "the", "products", "with", "the", "characteristic", "name", "'warm", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"warm\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"", "query_toks": ["SELECT", "DISTINCT", "t1.product_name", "FROM", "products", "AS", "t1", "JOIN", "product_characteristics", "AS", "t2", "ON", "t1.product_id", "=", "t2.product_id", "JOIN", "CHARACTERISTICS", "AS", "t3", "ON", "t2.characteristic_id", "=", "t3.characteristic_id", "WHERE", "t3.characteristic_name", "=", "``", "warm", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "product_characteristics", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "join", "characteristics", "as", "t3", "on", "t2", ".", "characteristic_id", "=", "t3", ".", "characteristic_id", "where", "t3", ".", "characteristic_name", "=", "value"], "question": "¿Cuáles son los diferentes nombres de productos que tienen la característica \"cálida\":?\n", "question_toks": ["What", "are", "the", "different", "product", "names", "for", "products", "that", "have", "the", "'warm", "'", "characteristic", ":", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"warm\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "unit_of_measure", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "unit_of_measure", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "¿Cuál es la unidad de medida del código de categoría de producto \"Hierbas\"?\n", "question_toks": ["What", "is", "the", "unit", "of", "measuerment", "of", "the", "product", "category", "code", "``", "Herbs", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Herbs\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "unit_of_measure", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "unit_of_measure", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "Devuelve la unidad de medida de los productos 'Hierbas'.\n", "question_toks": ["Return", "the", "unit", "of", "measure", "for", "'Herb", "'", "products", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Herbs\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"", "query_toks": ["SELECT", "product_category_description", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Spices", "''"], "query_toks_no_value": ["select", "product_category_description", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "Encuentre la descripción de la categoría de producto de la categoría de producto con el código \"Especias\".\n", "question_toks": ["Find", "the", "product", "category", "description", "of", "the", "product", "category", "with", "code", "``", "Spices", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Spices\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"", "query_toks": ["SELECT", "product_category_description", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Spices", "''"], "query_toks_no_value": ["select", "product_category_description", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "¿Cuál es la descripción de la categoría de producto con el código 'Especias'?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "product", "category", "with", "the", "code", "'Spices", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Spices\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "product_category_description", ",", "unit_of_measure", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "product_category_description", ",", "unit_of_measure", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "¿Cuál es la descripción de la categoría de producto y la unidad de medida de la categoría \"Hierbas\"?\n", "question_toks": ["What", "is", "the", "product", "category", "description", "and", "unit", "of", "measurement", "of", "category", "``", "Herbs", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Herbs\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"", "query_toks": ["SELECT", "product_category_description", ",", "unit_of_measure", "FROM", "ref_product_categories", "WHERE", "product_category_code", "=", "``", "Herbs", "''"], "query_toks_no_value": ["select", "product_category_description", ",", "unit_of_measure", "from", "ref_product_categories", "where", "product_category_code", "=", "value"], "question": "Devuelve la descripción y la unidad de medida de los productos de la categoría 'Hierbas'.\n", "question_toks": ["Return", "the", "description", "and", "unit", "of", "measurement", "for", "products", "in", "the", "'Herbs", "'", "category", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Herbs\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"", "query_toks": ["SELECT", "t2.unit_of_measure", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "WHERE", "t1.product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "t2", ".", "unit_of_measure", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuál es la unidad de medida del producto llamado \"comino\"?\n", "question_toks": ["What", "is", "the", "unit", "of", "measurement", "of", "product", "named", "``", "cumin", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"", "query_toks": ["SELECT", "t2.unit_of_measure", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "WHERE", "t1.product_name", "=", "``", "cumin", "''"], "query_toks_no_value": ["select", "t2", ".", "unit_of_measure", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t1", ".", "product_name", "=", "value"], "question": "Indique la unidad de medida del producto con el nombre 'comino'.\n", "question_toks": ["Give", "the", "unit", "of", "measure", "for", "the", "product", "with", "the", "name", "'cumin", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"cumin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t2.unit_of_measure", ",", "t2.product_category_code", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t2", ".", "unit_of_measure", ",", "t2", ".", "product_category_code", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t1", ".", "product_name", "=", "value"], "question": "Encuentre la unidad de medida y el código de categoría del producto llamado \"perifollo\".\n", "question_toks": ["Find", "the", "unit", "of", "measurement", "and", "product", "category", "code", "of", "product", "named", "``", "chervil", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"", "query_toks": ["SELECT", "t2.unit_of_measure", ",", "t2.product_category_code", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "WHERE", "t1.product_name", "=", "``", "chervil", "''"], "query_toks_no_value": ["select", "t2", ".", "unit_of_measure", ",", "t2", ".", "product_category_code", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "where", "t1", ".", "product_name", "=", "value"], "question": "¿Cuáles son la unidad de medida y el código de categoría del producto 'perifollo'?\n", "question_toks": ["What", "are", "the", "unit", "of", "measure", "and", "category", "code", "for", "the", "'chervil", "'", "product", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"chervil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"", "query_toks": ["SELECT", "t1.product_name", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "JOIN", "ref_colors", "AS", "t3", "ON", "t1.color_code", "=", "t3.color_code", "WHERE", "t3.color_description", "=", "``", "white", "''", "AND", "t2.unit_of_measure", "!", "=", "``", "Handful", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "join", "ref_colors", "as", "t3", "on", "t1", ".", "color_code", "=", "t3", ".", "color_code", "where", "t3", ".", "color_description", "=", "value", "and", "t2", ".", "unit_of_measure", "!", "=", "value"], "question": "Busque los nombres de productos que están coloreados en \"blanco\" pero que no tienen la unidad de medida \"Puñado\".\n", "question_toks": ["Find", "the", "product", "names", "that", "are", "colored", "'white", "'", "but", "do", "not", "have", "unit", "of", "measurement", "``", "Handful", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"white\"", null], "and", [false, 7, [0, [0, 7, false], null], "\"Handful\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"", "query_toks": ["SELECT", "t1.product_name", "FROM", "products", "AS", "t1", "JOIN", "ref_product_categories", "AS", "t2", "ON", "t1.product_category_code", "=", "t2.product_category_code", "JOIN", "ref_colors", "AS", "t3", "ON", "t1.color_code", "=", "t3.color_code", "WHERE", "t3.color_description", "=", "``", "white", "''", "AND", "t2.unit_of_measure", "!", "=", "``", "Handful", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "ref_product_categories", "as", "t2", "on", "t1", ".", "product_category_code", "=", "t2", ".", "product_category_code", "join", "ref_colors", "as", "t3", "on", "t1", ".", "color_code", "=", "t3", ".", "color_code", "where", "t3", ".", "color_description", "=", "value", "and", "t2", ".", "unit_of_measure", "!", "=", "value"], "question": "¿Cuáles son los nombres de los productos que no son de color \"blanco\" y no se miden con la unidad \"Puñado\"?\n", "question_toks": ["What", "are", "the", "names", "of", "products", "that", "are", "not", "'white", "'", "in", "color", "and", "are", "not", "measured", "by", "the", "unit", "'Handful", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"white\"", null], "and", [false, 7, [0, [0, 7, false], null], "\"Handful\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "capacity", "<", "(", "SELECT", "avg", "(", "capacity", ")", "FROM", "stadium", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "capacity", "<", "(", "select", "avg", "(", "capacity", ")", "from", "stadium", ")"], "question": "Encuentra los nombres de los estadios cuya capacidad es menor que la capacidad promedio.\n", "question_toks": ["Find", "the", "names", "of", "stadiums", "whose", "capacity", "is", "smaller", "than", "the", "average", "capacity", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'", "query_toks": ["SELECT", "meter_200", ",", "meter_300", "FROM", "swimmer", "WHERE", "nationality", "=", "'Australia", "'"], "query_toks_no_value": ["select", "meter_200", ",", "meter_300", "from", "swimmer", "where", "nationality", "=", "value"], "question": "Encuentra todos los resultados de 200 metros y 300 metros de los nadadores de nacionalidad \"Australia\".\n", "question_toks": ["Find", "all", "200", "meter", "and", "300", "meter", "results", "of", "swimmers", "with", "nationality", "``", "Australia", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Australia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'", "query_toks": ["SELECT", "t1.name", "FROM", "swimmer", "AS", "t1", "JOIN", "record", "AS", "t2", "ON", "t1.id", "=", "t2.swimmer_id", "WHERE", "RESULT", "=", "'Win", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "swimmer", "as", "t1", "join", "record", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "swimmer_id", "where", "result", "=", "value"], "question": "Encuentra los nombres de los nadadores que tienen un resultado de \"ganar\".\n", "question_toks": ["Find", "the", "names", "of", "swimmers", "who", "has", "a", "result", "of", "``", "win", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Win\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'", "query_toks": ["SELECT", "t1.name", ",", "t1.capacity", "FROM", "stadium", "AS", "t1", "JOIN", "event", "AS", "t2", "ON", "t1.id", "=", "t2.stadium_id", "WHERE", "t2.name", "=", "'World", "Junior", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "capacity", "from", "stadium", "as", "t1", "join", "event", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "stadium_id", "where", "t2", ".", "name", "=", "value"], "question": "Encuentra el nombre y la capacidad del estadio donde ocurrió el evento denominado \"Mundial Junior\".\n", "question_toks": ["Find", "the", "name", "and", "capacity", "of", "the", "stadium", "where", "the", "event", "named", "``", "World", "Junior", "''", "happened", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"World Junior\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "event", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "id", "not", "in", "(", "select", "stadium_id", "from", "event", ")"], "question": "Encuentra los nombres de estadios que nunca han tenido ningún evento.\n", "question_toks": ["Find", "the", "names", "of", "stadiums", "which", "have", "never", "had", "any", "event", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[true, 8, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)", "query_toks": ["SELECT", "name", "FROM", "swimmer", "WHERE", "id", "NOT", "IN", "(", "SELECT", "swimmer_id", "FROM", "record", ")"], "query_toks_no_value": ["select", "name", "from", "swimmer", "where", "id", "not", "in", "(", "select", "swimmer_id", "from", "record", ")"], "question": "Encuentra los nombres de los nadadores que no tienen registro.\n", "question_toks": ["Find", "the", "names", "of", "the", "swimmers", "who", "have", "no", "record", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'", "query_toks": ["SELECT", "t4.name", "FROM", "swimmer", "AS", "t1", "JOIN", "record", "AS", "t2", "ON", "t1.id", "=", "t2.swimmer_id", "JOIN", "event", "AS", "t3", "ON", "t2.event_id", "=", "t3.id", "JOIN", "stadium", "AS", "t4", "ON", "t4.id", "=", "t3.stadium_id", "WHERE", "t1.nationality", "=", "'Australia", "'"], "query_toks_no_value": ["select", "t4", ".", "name", "from", "swimmer", "as", "t1", "join", "record", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "swimmer_id", "join", "event", "as", "t3", "on", "t2", ".", "event_id", "=", "t3", ".", "id", "join", "stadium", "as", "t4", "on", "t4", ".", "id", "=", "t3", ".", "stadium_id", "where", "t1", ".", "nationality", "=", "value"], "question": "Encuentra los nombres de los estadios en los que han estado algunos nadadores australianos.\n", "question_toks": ["Find", "the", "names", "of", "stadiums", "that", "some", "Australian", "swimmers", "have", "been", "to", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 24, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 18, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Australia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "swimming", "query": "SELECT * FROM swimmer", "query_toks": ["SELECT", "*", "FROM", "swimmer"], "query_toks_no_value": ["select", "*", "from", "swimmer"], "question": "Encuentra todos los detalles de cada nadador.\n", "question_toks": ["Find", "all", "details", "for", "each", "swimmer", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT Wheels ,  LOCATION FROM railway", "query_toks": ["SELECT", "Wheels", ",", "LOCATION", "FROM", "railway"], "query_toks_no_value": ["select", "wheels", ",", "location", "from", "railway"], "question": "Enumere las ruedas y ubicaciones de los ferrocarriles.\n", "question_toks": ["List", "the", "wheels", "and", "locations", "of", "the", "railways", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT Name ,  Arrival FROM train", "query_toks": ["SELECT", "Name", ",", "Arrival", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "arrival", "from", "train"], "question": "¿Cuáles son los nombres y horarios de llegada de los trenes?\n", "question_toks": ["What", "are", "the", "names", "and", "arrival", "times", "of", "trains", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Location", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "location", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id"], "question": "Muestra los nombres de los trenes y la ubicación de las vías en las que se encuentran.\n", "question_toks": ["Show", "the", "names", "of", "trains", "and", "locations", "of", "railways", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\"", "query_toks": ["SELECT", "T1.Builder", "FROM", "railway", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.Railway_ID", "=", "T2.Railway_ID", "WHERE", "T2.Name", "=", "``", "Andaman", "Exp", "''"], "query_toks_no_value": ["select", "t1", ".", "builder", "from", "railway", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "railway_id", "=", "t2", ".", "railway_id", "where", "t2", ".", "name", "=", "value"], "question": "Muestre el constructor de ferrocarriles asociado con los trenes llamado \"Andaman Exp\".\n", "question_toks": ["Show", "the", "builder", "of", "railways", "associated", "with", "the", "trains", "named", "``", "Andaman", "Exp", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Andaman Exp\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)", "query_toks": ["SELECT", "ObjectNumber", "FROM", "railway", "WHERE", "Railway_ID", "NOT", "IN", "(", "SELECT", "Railway_ID", "FROM", "train", ")"], "query_toks_no_value": ["select", "objectnumber", "from", "railway", "where", "railway_id", "not", "in", "(", "select", "railway_id", "from", "train", ")"], "question": "Enumere el número de objeto de los ferrocarriles que no tienen trenes.\n", "question_toks": ["List", "the", "object", "number", "of", "railways", "that", "do", "not", "have", "any", "trains", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT DISTINCT Country FROM manager", "query_toks": ["SELECT", "DISTINCT", "Country", "FROM", "manager"], "query_toks_no_value": ["select", "distinct", "country", "from", "manager"], "question": "Mostrar los distintos países de los directivos.\n", "question_toks": ["Show", "the", "distinct", "countries", "of", "managers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "railway", "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46", "query_toks": ["SELECT", "Country", "FROM", "manager", "WHERE", "Age", ">", "50", "OR", "Age", "<", "46"], "query_toks_no_value": ["select", "country", "from", "manager", "where", "age", ">", "value", "or", "age", "<", "value"], "question": "Muestra los países que tienen directivos mayores de 50 años o menores de 46 años.\n", "question_toks": ["Show", "the", "countries", "that", "have", "managers", "of", "age", "above", "50", "or", "below", "46", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 50.0, null], "or", [false, 4, [0, [0, 18, false], null], 46.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_products_contacts", "query": "SELECT DISTINCT city FROM addresses", "query_toks": ["SELECT", "DISTINCT", "city", "FROM", "addresses"], "query_toks_no_value": ["select", "distinct", "city", "from", "addresses"], "question": "Mostrar todas las ciudades distintas en el registro de dirección.\n", "question_toks": ["Show", "all", "distinct", "cities", "in", "the", "address", "record", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_products_contacts", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)", "query_toks": ["SELECT", "customer_name", ",", "customer_phone", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "customer_address_history", ")"], "query_toks_no_value": ["select", "customer_name", ",", "customer_phone", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "customer_address_history", ")"], "question": "Muestra nombres y teléfonos de clientes que no tienen información de dirección.\n", "question_toks": ["Show", "names", "and", "phones", "of", "customers", "who", "do", "not", "have", "address", "information", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[true, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_products_contacts", "query": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id", "query_toks": ["SELECT", "T2.customer_name", ",", "T3.city", ",", "T1.date_from", ",", "T1.date_to", "FROM", "customer_address_history", "AS", "T1", "JOIN", "customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "addresses", "AS", "T3", "ON", "T1.address_id", "=", "T3.address_id"], "query_toks_no_value": ["select", "t2", ".", "customer_name", ",", "t3", ".", "city", ",", "t1", ".", "date_from", ",", "t1", ".", "date_to", "from", "customer_address_history", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t1", ".", "address_id", "=", "t3", ".", "address_id"], "question": "Muestre el nombre del cliente, la ciudad de la dirección del cliente, la fecha desde y hasta para el historial de direcciones de cada cliente.\n", "question_toks": ["Show", "the", "customer", "name", ",", "customer", "address", "city", ",", "date", "from", ",", "and", "date", "to", "for", "each", "customer", "address", "history", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_products_contacts", "query": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500", "query_toks": ["SELECT", "product_type_code", ",", "product_name", "FROM", "products", "WHERE", "product_price", ">", "1000", "OR", "product_price", "<", "500"], "query_toks_no_value": ["select", "product_type_code", ",", "product_name", "from", "products", "where", "product_price", ">", "value", "or", "product_price", "<", "value"], "question": "Muestra el tipo de producto y el nombre de los productos con precio superior a 1000 o inferior a 500.\n", "question_toks": ["Show", "the", "product", "type", "and", "name", "for", "the", "products", "with", "price", "higher", "than", "1000", "or", "lower", "than", "500", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 1000.0, null], "or", [false, 4, [0, [0, 10, false], null], 500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "gender", "=", "'F", "'"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "gender", "=", "value"], "question": "Encuentre el nombre de los dormitorios solo para mujeres (género F).\n", "question_toks": ["Find", "the", "name", "of", "dorms", "only", "for", "female", "(", "F", "gender", ")", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "gender", "=", "'F", "'"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "gender", "=", "value"], "question": "¿Cómo se llaman los dormitorios exclusivamente para mujeres?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "all-female", "dorms", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "student_capacity", ">", "300"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "student_capacity", ">", "value"], "question": "Encuentre el nombre de los dormitorios que pueden acomodar a más de 300 estudiantes.\n", "question_toks": ["Find", "the", "name", "of", "dorms", "that", "can", "accommodate", "more", "than", "300", "students", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "student_capacity", ">", "300"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "student_capacity", ">", "value"], "question": "¿Cómo se llaman todos los dormitorios con capacidad para más de 300 estudiantes?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "dorms", "that", "can", "accomdate", "more", "than", "300", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname FROM student WHERE age  >  20", "query_toks": ["SELECT", "fname", "FROM", "student", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "age", ">", "value"], "question": "Encuentre el nombre de los estudiantes mayores de 20 años.\n", "question_toks": ["Find", "the", "first", "name", "of", "students", "who", "is", "older", "than", "20", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname FROM student WHERE age  >  20", "query_toks": ["SELECT", "fname", "FROM", "student", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "age", ">", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes mayores de 20 años?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "who", "are", "older", "than", "20", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25", "query_toks": ["SELECT", "fname", "FROM", "student", "WHERE", "city_code", "=", "'PHL", "'", "AND", "age", "BETWEEN", "20", "AND", "25"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "city_code", "=", "value", "and", "age", "between", "value", "and", "value"], "question": "Encuentre el nombre de los estudiantes que viven en la ciudad PHL y cuyas edades están entre 20 y 25 años.\n", "question_toks": ["Find", "the", "first", "name", "of", "students", "living", "in", "city", "PHL", "whose", "age", "is", "between", "20", "and", "25", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"PHL\"", null], "and", [false, 1, [0, [0, 4, false], null], 20.0, 25.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25", "query_toks": ["SELECT", "fname", "FROM", "student", "WHERE", "city_code", "=", "'PHL", "'", "AND", "age", "BETWEEN", "20", "AND", "25"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "city_code", "=", "value", "and", "age", "between", "value", "and", "value"], "question": "¿Cuál es el nombre de los estudiantes que tienen entre 20 y 25 años y viven en la ciudad de PHL?\n", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "students", "who", "are", "in", "age", "20", "to", "25", "and", "living", "in", "PHL", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"PHL\"", null], "and", [false, 1, [0, [0, 4, false], null], 20.0, 25.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "dormid", "NOT", "IN", "(", "SELECT", "dormid", "FROM", "has_amenity", ")"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "dormid", "not", "in", "(", "select", "dormid", "from", "has_amenity", ")"], "question": "Encuentra el nombre de los dormitorios que no tienen ningún servicio.\n", "question_toks": ["Find", "the", "name", "of", "dorms", "that", "do", "not", "have", "any", "amenity"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "dormid", "NOT", "IN", "(", "SELECT", "dormid", "FROM", "has_amenity", ")"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "dormid", "not", "in", "(", "select", "dormid", "from", "has_amenity", ")"], "question": "¿Cómo se llaman todos los dormitorios que no tienen comodidades?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "dorms", "that", "do", "n't", "have", "any", "amenities", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "query_toks": ["SELECT", "student_capacity", ",", "gender", "FROM", "dorm", "WHERE", "dorm_name", "LIKE", "'", "%", "Donor", "%", "'"], "query_toks_no_value": ["select", "student_capacity", ",", "gender", "from", "dorm", "where", "dorm_name", "like", "value"], "question": "Encuentre la capacidad y el tipo de género del dormitorio cuyo nombre tiene la subcadena 'Donante'.\n", "question_toks": ["Find", "the", "capacity", "and", "gender", "type", "of", "the", "dorm", "whose", "name", "has", "substring", "‘Donor’", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 10, false], null], "\"%Donor%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'", "query_toks": ["SELECT", "student_capacity", ",", "gender", "FROM", "dorm", "WHERE", "dorm_name", "LIKE", "'", "%", "Donor", "%", "'"], "query_toks_no_value": ["select", "student_capacity", ",", "gender", "from", "dorm", "where", "dorm_name", "like", "value"], "question": "¿Cuál es la capacidad de estudiantes y el tipo de género del dormitorio cuyo nombre aparece en la frase Donante?\n", "question_toks": ["What", "is", "the", "student", "capacity", "and", "type", "of", "gender", "for", "the", "dorm", "whose", "name", "as", "the", "phrase", "Donor", "in", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 10, false], null], "\"%Donor%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "query_toks": ["SELECT", "dorm_name", ",", "gender", "FROM", "dorm", "WHERE", "student_capacity", ">", "300", "OR", "student_capacity", "<", "100"], "query_toks_no_value": ["select", "dorm_name", ",", "gender", "from", "dorm", "where", "student_capacity", ">", "value", "or", "student_capacity", "<", "value"], "question": "Encuentre el nombre y el tipo de género de los dormitorios cuya capacidad es mayor a 300 o menor a 100.\n", "question_toks": ["Find", "the", "name", "and", "gender", "type", "of", "the", "dorms", "whose", "capacity", "is", "greater", "than", "300", "or", "less", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 300.0, null], "or", [false, 4, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "query_toks": ["SELECT", "dorm_name", ",", "gender", "FROM", "dorm", "WHERE", "student_capacity", ">", "300", "OR", "student_capacity", "<", "100"], "query_toks_no_value": ["select", "dorm_name", ",", "gender", "from", "dorm", "where", "student_capacity", ">", "value", "or", "student_capacity", "<", "value"], "question": "¿Cuáles son los nombres y tipos de dormitorios que tienen una capacidad superior a 300 o inferior a 100?\n", "question_toks": ["What", "are", "the", "names", "and", "types", "of", "the", "dorms", "that", "have", "a", "capacity", "greater", "than", "300", "or", "less", "than", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 300.0, null], "or", [false, 4, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "student", ")"], "question": "Encuentre el nombre y apellido de los estudiantes cuya edad es menor que la edad promedio.\n", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "students", "whose", "age", "is", "younger", "than", "the", "average", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "age", "<", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "student", ")"], "question": "¿Cuál es el nombre y apellido de todos los estudiantes que son más jóvenes que el promedio?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "students", "who", "are", "younger", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "major", "!", "=", "(", "SELECT", "major", "FROM", "student", "GROUP", "BY", "major", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "!", "=", "(", "select", "major", "from", "student", "group", "by", "major", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Encuentre el nombre y apellido de los estudiantes que no están en la especialidad más importante.\n", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "students", "who", "are", "not", "in", "the", "largest", "major", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "major", "!", "=", "(", "SELECT", "major", "FROM", "student", "GROUP", "BY", "major", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "major", "!", "=", "(", "select", "major", "from", "student", "group", "by", "major", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuál es el nombre y apellido de los estudiantes que no están en la carrera más importante?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "the", "students", "who", "are", "not", "in", "the", "largest", "major", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'", "query_toks": ["SELECT", "T1.fname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T3.dorm_name", "=", "'Smith", "Hall", "'"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t3", ".", "dorm_name", "=", "value"], "question": "Encuentre el nombre de los estudiantes que viven en Smith Hall.\n", "question_toks": ["Find", "the", "first", "name", "of", "students", "who", "are", "living", "in", "the", "Smith", "Hall", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Smith Hall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'", "query_toks": ["SELECT", "T1.fname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T3.dorm_name", "=", "'Smith", "Hall", "'"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t3", ".", "dorm_name", "=", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes de Smith Hall?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "in", "Smith", "Hall", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Smith Hall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'", "query_toks": ["SELECT", "T3.amenity_name", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "JOIN", "dorm_amenity", "AS", "T3", "ON", "T2.amenid", "=", "T3.amenid", "WHERE", "T1.dorm_name", "=", "'Smith", "Hall", "'"], "query_toks_no_value": ["select", "t3", ".", "amenity_name", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "join", "dorm_amenity", "as", "t3", "on", "t2", ".", "amenid", "=", "t3", ".", "amenid", "where", "t1", ".", "dorm_name", "=", "value"], "question": "Encuentre el nombre de las comodidades que tiene el dormitorio Smith Hall.\n", "question_toks": ["Find", "the", "name", "of", "amenities", "Smith", "Hall", "dorm", "have", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Smith Hall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'", "query_toks": ["SELECT", "T3.amenity_name", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "JOIN", "dorm_amenity", "AS", "T3", "ON", "T2.amenid", "=", "T3.amenid", "WHERE", "T1.dorm_name", "=", "'Smith", "Hall", "'"], "query_toks_no_value": ["select", "t3", ".", "amenity_name", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "join", "dorm_amenity", "as", "t3", "on", "t2", ".", "amenid", "=", "t3", ".", "amenid", "where", "t1", ".", "dorm_name", "=", "value"], "question": "¿Cuáles son los nombres de las comodidades que tiene Smith Hall?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "amenities", "that", "Smith", "Hall", "has", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Smith Hall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "T1.fname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T2.dormid", "FROM", "dorm", "AS", "T3", "JOIN", "has_amenity", "AS", "T4", "ON", "T3.dormid", "=", "T4.dormid", "JOIN", "dorm_amenity", "AS", "T5", "ON", "T4.amenid", "=", "T5.amenid", "GROUP", "BY", "T3.dormid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t2", ".", "dormid", "from", "dorm", "as", "t3", "join", "has_amenity", "as", "t4", "on", "t3", ".", "dormid", "=", "t4", ".", "dormid", "join", "dorm_amenity", "as", "t5", "on", "t4", ".", "amenid", "=", "t5", ".", "amenid", "group", "by", "t3", ".", "dormid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Encuentre el nombre de los estudiantes que viven en el dormitorio que tiene la mayor cantidad de comodidades.\n", "question_toks": ["Find", "the", "first", "name", "of", "students", "who", "are", "living", "in", "the", "dorm", "that", "has", "most", "number", "of", "amenities", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "T1.fname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T2.dormid", "FROM", "dorm", "AS", "T3", "JOIN", "has_amenity", "AS", "T4", "ON", "T3.dormid", "=", "T4.dormid", "JOIN", "dorm_amenity", "AS", "T5", "ON", "T4.amenid", "=", "T5.amenid", "GROUP", "BY", "T3.dormid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t2", ".", "dormid", "from", "dorm", "as", "t3", "join", "has_amenity", "as", "t4", "on", "t3", ".", "dormid", "=", "t4", ".", "dormid", "join", "dorm_amenity", "as", "t5", "on", "t4", ".", "amenid", "=", "t5", ".", "amenid", "group", "by", "t3", ".", "dormid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de todos los estudiantes que viven en el dormitorio con más comodidades?\n", "question_toks": ["What", "are", "the", "first", "names", "of", "all", "students", "who", "live", "in", "the", "dorm", "with", "the", "most", "amenities", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "Encuentre el nombre y apellido de los estudiantes que viven en los dormitorios que cuentan con TV Lounge.\n", "question_toks": ["Find", "the", "first", "and", "last", "name", "of", "students", "who", "are", "living", "in", "the", "dorms", "that", "have", "amenity", "TV", "Lounge", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "¿Cuáles son los nombres y apellidos de todos los estudiantes que viven en un dormitorio con sala de televisión?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "students", "who", "are", "living", "in", "a", "dorm", "with", "a", "TV", "Lounge", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "NOT", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "not", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "Encuentre el nombre y la edad de los estudiantes que viven en dormitorios que no cuentan con sala de TV.\n", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "are", "living", "in", "the", "dorms", "that", "do", "not", "have", "amenity", "TV", "Lounge", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "NOT", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "not", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "¿Cuál es el nombre y la edad de cada estudiante que vive en un dormitorio con sala de televisión?\n", "question_toks": ["What", "is", "the", "first", "name", "and", "age", "of", "every", "student", "who", "lives", "in", "a", "dorm", "with", "a", "TV", "Lounge", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'", "query_toks": ["SELECT", "T3.amenity_name", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "JOIN", "dorm_amenity", "AS", "T3", "ON", "T2.amenid", "=", "T3.amenid", "JOIN", "lives_in", "AS", "T4", "ON", "T4.dormid", "=", "T1.dormid", "JOIN", "student", "AS", "T5", "ON", "T5.stuid", "=", "T4.stuid", "WHERE", "T5.lname", "=", "'Smith", "'"], "query_toks_no_value": ["select", "t3", ".", "amenity_name", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "join", "dorm_amenity", "as", "t3", "on", "t2", ".", "amenid", "=", "t3", ".", "amenid", "join", "lives_in", "as", "t4", "on", "t4", ".", "dormid", "=", "t1", ".", "dormid", "join", "student", "as", "t5", "on", "t5", ".", "stuid", "=", "t4", ".", "stuid", "where", "t5", ".", "lname", "=", "value"], "question": "Encuentre el nombre de las comodidades del dormitorio donde vive el estudiante con apellido Smith.\n", "question_toks": ["Find", "the", "name", "of", "amenities", "of", "the", "dorm", "where", "the", "student", "with", "last", "name", "Smith", "is", "living", "in", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "dorm_1", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'", "query_toks": ["SELECT", "T3.amenity_name", "FROM", "dorm", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T1.dormid", "=", "T2.dormid", "JOIN", "dorm_amenity", "AS", "T3", "ON", "T2.amenid", "=", "T3.amenid", "JOIN", "lives_in", "AS", "T4", "ON", "T4.dormid", "=", "T1.dormid", "JOIN", "student", "AS", "T5", "ON", "T5.stuid", "=", "T4.stuid", "WHERE", "T5.lname", "=", "'Smith", "'"], "query_toks_no_value": ["select", "t3", ".", "amenity_name", "from", "dorm", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t1", ".", "dormid", "=", "t2", ".", "dormid", "join", "dorm_amenity", "as", "t3", "on", "t2", ".", "amenid", "=", "t3", ".", "amenid", "join", "lives_in", "as", "t4", "on", "t4", ".", "dormid", "=", "t1", ".", "dormid", "join", "student", "as", "t5", "on", "t5", ".", "stuid", "=", "t4", ".", "stuid", "where", "t5", ".", "lname", "=", "value"], "question": "¿Cuáles son las comodidades en el dormitorio en el que vive un estudiante que tiene el apellido Smith?\n", "question_toks": ["What", "are", "the", "amenities", "in", "the", "dorm", "that", "a", "student", "who", "has", "the", "last", "name", "of", "Smith", "lives", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 18, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "query_toks": ["SELECT", "email_address", ",", "phone_number", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "complaints", ")"], "query_toks_no_value": ["select", "email_address", ",", "phone_number", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "complaints", ")"], "question": "Encuentre el correo electrónico y el número de teléfono de los clientes que nunca antes han presentado una queja.\n", "question_toks": ["Find", "the", "email", "and", "phone", "number", "of", "the", "customers", "who", "have", "never", "filed", "a", "complaint", "before", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)", "query_toks": ["SELECT", "email_address", ",", "phone_number", "FROM", "customers", "WHERE", "customer_id", "NOT", "IN", "(", "SELECT", "customer_id", "FROM", "complaints", ")"], "query_toks_no_value": ["select", "email_address", ",", "phone_number", "from", "customers", "where", "customer_id", "not", "in", "(", "select", "customer_id", "from", "complaints", ")"], "question": "¿Cuáles son los correos electrónicos y números de teléfono de los clientes que nunca han presentado una queja?\n", "question_toks": ["What", "are", "the", "emails", "and", "phone", "numbers", "of", "custoemrs", "who", "have", "never", "filed", "a", "complaint", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"", "query_toks": ["SELECT", "product_description", "FROM", "products", "WHERE", "product_name", "=", "``", "Chocolate", "''"], "query_toks_no_value": ["select", "product_description", "from", "products", "where", "product_name", "=", "value"], "question": "¿Cuál es la descripción del producto denominado \"Chocolate\"?\n", "question_toks": ["What", "is", "the", "description", "of", "the", "product", "named", "``", "Chocolate", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Chocolate\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"", "query_toks": ["SELECT", "product_description", "FROM", "products", "WHERE", "product_name", "=", "``", "Chocolate", "''"], "query_toks_no_value": ["select", "product_description", "from", "products", "where", "product_name", "=", "value"], "question": "Devuelve la descripción del producto llamado \"Chocolate\".\n", "question_toks": ["Return", "the", "description", "of", "the", "product", "called", "``", "Chocolate", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Chocolate\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)", "query_toks": ["SELECT", "product_price", "FROM", "products", "WHERE", "product_id", "NOT", "IN", "(", "SELECT", "product_id", "FROM", "complaints", ")"], "query_toks_no_value": ["select", "product_price", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "complaints", ")"], "question": "Encuentra los precios de productos de los que nunca ha recibido ni una sola queja.\n", "question_toks": ["Find", "the", "prices", "of", "products", "which", "has", "never", "received", "a", "single", "complaint", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[true, 8, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)", "query_toks": ["SELECT", "product_price", "FROM", "products", "WHERE", "product_id", "NOT", "IN", "(", "SELECT", "product_id", "FROM", "complaints", ")"], "query_toks_no_value": ["select", "product_price", "from", "products", "where", "product_id", "not", "in", "(", "select", "product_id", "from", "complaints", ")"], "question": "¿Cuáles son los precios de los productos que nunca han recibido una queja?\n", "question_toks": ["What", "are", "the", "prices", "of", "products", "that", "have", "never", "gotten", "a", "complaint", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[true, 8, [0, [0, 15, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"", "query_toks": ["SELECT", "last_name", "FROM", "staff", "WHERE", "email_address", "LIKE", "``", "%", "wrau", "%", "''"], "query_toks_no_value": ["select", "last_name", "from", "staff", "where", "email_address", "like", "value"], "question": "Busque el apellido del personal cuya dirección de correo electrónico contiene \"wrau\".\n", "question_toks": ["Find", "the", "last", "name", "of", "the", "staff", "whose", "email", "address", "contains", "``", "wrau", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%wrau%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"", "query_toks": ["SELECT", "last_name", "FROM", "staff", "WHERE", "email_address", "LIKE", "``", "%", "wrau", "%", "''"], "query_toks_no_value": ["select", "last_name", "from", "staff", "where", "email_address", "like", "value"], "question": "¿Cuáles son los apellidos del personal cuya dirección de correo electrónico contiene la subcadena \"wrau\"?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "staff", "with", "email", "addressed", "containing", "the", "substring", "``", "wrau", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%wrau%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"", "query_toks": ["SELECT", "address_line_1", ",", "address_line_2", "FROM", "customers", "WHERE", "email_address", "=", "``", "vbogisich", "@", "example.org", "''"], "query_toks_no_value": ["select", "address_line_1", ",", "address_line_2", "from", "customers", "where", "email_address", "=", "value"], "question": "Busque las líneas de dirección 1 y 2 del cliente con el correo electrónico \"vbogisich@example.org\".\n", "question_toks": ["Find", "the", "address", "line", "1", "and", "2", "of", "the", "customer", "with", "email", "``", "vbogisich", "@", "example.org", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"vbogisich@example.org\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customer_complaints", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\"", "query_toks": ["SELECT", "address_line_1", ",", "address_line_2", "FROM", "customers", "WHERE", "email_address", "=", "``", "vbogisich", "@", "example.org", "''"], "query_toks_no_value": ["select", "address_line_1", ",", "address_line_2", "from", "customers", "where", "email_address", "=", "value"], "question": "¿Cuáles son las líneas 1 y 2 de la dirección del cliente con el correo electrónico \"vbogisich@example.org\"?\n", "question_toks": ["What", "are", "lines", "1", "and", "2", "of", "the", "addressed", "of", "the", "customer", "with", "the", "email", "``", "vbogisich", "@", "example.org", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"vbogisich@example.org\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT Author ,  College FROM submission", "query_toks": ["SELECT", "Author", ",", "College", "FROM", "submission"], "query_toks_no_value": ["select", "author", ",", "college", "from", "submission"], "question": "¿Cuáles son los autores de las presentaciones y sus universidades?\n", "question_toks": ["What", "are", "the", "authors", "of", "submissions", "and", "their", "colleges", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT Author ,  College FROM submission", "query_toks": ["SELECT", "Author", ",", "College", "FROM", "submission"], "query_toks_no_value": ["select", "author", ",", "college", "from", "submission"], "question": "Para cada envío, muestre el autor y su universidad afiliada.\n", "question_toks": ["For", "each", "submission", ",", "show", "the", "author", "and", "their", "affiliated", "college", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"", "query_toks": ["SELECT", "Author", "FROM", "submission", "WHERE", "College", "=", "``", "Florida", "''", "OR", "College", "=", "``", "Temple", "''"], "query_toks_no_value": ["select", "author", "from", "submission", "where", "college", "=", "value", "or", "college", "=", "value"], "question": "Mostrar los nombres de los autores de la universidad \"Florida\" o \"Temple\"\n", "question_toks": ["Show", "the", "names", "of", "authors", "from", "college", "``", "Florida", "''", "or", "``", "Temple", "''"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Florida\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"Temple\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"", "query_toks": ["SELECT", "Author", "FROM", "submission", "WHERE", "College", "=", "``", "Florida", "''", "OR", "College", "=", "``", "Temple", "''"], "query_toks_no_value": ["select", "author", "from", "submission", "where", "college", "=", "value", "or", "college", "=", "value"], "question": "¿Qué autores con presentaciones son de la universidad \"Florida\" o \"Temple\"?\n", "question_toks": ["Which", "authors", "with", "submissions", "are", "from", "college", "``", "Florida", "''", "or", "``", "Temple", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Florida\"", null], "or", [false, 2, [0, [0, 8, false], null], "\"Temple\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "query_toks": ["SELECT", "T2.Author", ",", "T1.Result", "FROM", "acceptance", "AS", "T1", "JOIN", "submission", "AS", "T2", "ON", "T1.Submission_ID", "=", "T2.Submission_ID"], "query_toks_no_value": ["select", "t2", ".", "author", ",", "t1", ".", "result", "from", "acceptance", "as", "t1", "join", "submission", "as", "t2", "on", "t1", ".", "submission_id", "=", "t2", ".", "submission_id"], "question": "Mostrar los autores de los envíos y los resultados de aceptación de sus envíos.\n", "question_toks": ["Show", "the", "authors", "of", "submissions", "and", "the", "acceptance", "results", "of", "their", "submissions", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID", "query_toks": ["SELECT", "T2.Author", ",", "T1.Result", "FROM", "acceptance", "AS", "T1", "JOIN", "submission", "AS", "T2", "ON", "T1.Submission_ID", "=", "T2.Submission_ID"], "query_toks_no_value": ["select", "t2", ".", "author", ",", "t1", ".", "result", "from", "acceptance", "as", "t1", "join", "submission", "as", "t2", "on", "t1", ".", "submission_id", "=", "t2", ".", "submission_id"], "question": "Para cada envío, encuentre su autor y el resultado de aceptación.\n", "question_toks": ["For", "each", "submission", ",", "find", "its", "author", "and", "acceptance", "result", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)", "query_toks": ["SELECT", "Author", "FROM", "submission", "WHERE", "Submission_ID", "NOT", "IN", "(", "SELECT", "Submission_ID", "FROM", "acceptance", ")"], "query_toks_no_value": ["select", "author", "from", "submission", "where", "submission_id", "not", "in", "(", "select", "submission_id", "from", "acceptance", ")"], "question": "Listar los autores que no tienen inscripción a ningún taller.\n", "question_toks": ["List", "the", "authors", "who", "do", "not", "have", "submission", "to", "any", "workshop", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "workshop_paper", "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)", "query_toks": ["SELECT", "Author", "FROM", "submission", "WHERE", "Submission_ID", "NOT", "IN", "(", "SELECT", "Submission_ID", "FROM", "acceptance", ")"], "query_toks_no_value": ["select", "author", "from", "submission", "where", "submission_id", "not", "in", "(", "select", "submission_id", "from", "acceptance", ")"], "question": "¿Qué autores no se presentaron a ningún taller?\n", "question_toks": ["Which", "authors", "did", "not", "submit", "to", "any", "workshop", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT Investor_details FROM INVESTORS", "query_toks": ["SELECT", "Investor_details", "FROM", "INVESTORS"], "query_toks_no_value": ["select", "investor_details", "from", "investors"], "question": "Mostrar todos los detalles del inversor.\n", "question_toks": ["Show", "all", "investor", "details", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT DISTINCT lot_details FROM LOTS", "query_toks": ["SELECT", "DISTINCT", "lot_details", "FROM", "LOTS"], "query_toks_no_value": ["select", "distinct", "lot_details", "from", "lots"], "question": "Mostrar todos los detalles distintos del lote.\n", "question_toks": ["Show", "all", "distinct", "lot", "details", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS", "query_toks": ["SELECT", "date_of_transaction", ",", "share_count", "FROM", "TRANSACTIONS"], "query_toks_no_value": ["select", "date_of_transaction", ",", "share_count", "from", "transactions"], "question": "Mostrar todas las fechas y compartir el recuento de transacciones.\n", "question_toks": ["Show", "all", "date", "and", "share", "count", "of", "transactions", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'", "query_toks": ["SELECT", "transaction_id", "FROM", "TRANSACTIONS", "WHERE", "transaction_type_code", "=", "'PUR", "'"], "query_toks_no_value": ["select", "transaction_id", "from", "transactions", "where", "transaction_type_code", "=", "value"], "question": "Muestra todos los identificadores de transacciones con el código de transacción 'PUR'.\n", "question_toks": ["Show", "all", "transaction", "ids", "with", "transaction", "code", "'PUR", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"PUR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"", "query_toks": ["SELECT", "date_of_transaction", "FROM", "TRANSACTIONS", "WHERE", "transaction_type_code", "=", "``", "SALE", "''"], "query_toks_no_value": ["select", "date_of_transaction", "from", "transactions", "where", "transaction_type_code", "=", "value"], "question": "Mostrar todas las fechas de transacciones cuyo código de tipo sea \"VENTA\".\n", "question_toks": ["Show", "all", "dates", "of", "transactions", "whose", "type", "code", "is", "``", "SALE", "''", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"SALE\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\"", "query_toks": ["SELECT", "transaction_type_description", "FROM", "Ref_Transaction_Types", "WHERE", "transaction_type_code", "=", "``", "PUR", "''"], "query_toks_no_value": ["select", "transaction_type_description", "from", "ref_transaction_types", "where", "transaction_type_code", "=", "value"], "question": "Muestra la descripción del tipo de transacción con el código \"PUR\".\n", "question_toks": ["Show", "the", "description", "of", "transaction", "type", "with", "code", "``", "PUR", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"PUR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000", "query_toks": ["SELECT", "date_of_transaction", "FROM", "TRANSACTIONS", "WHERE", "share_count", ">", "100", "OR", "amount_of_transaction", ">", "1000"], "query_toks_no_value": ["select", "date_of_transaction", "from", "transactions", "where", "share_count", ">", "value", "or", "amount_of_transaction", ">", "value"], "question": "Muestre las fechas de las transacciones si el recuento de acciones es mayor que 100 o el monto es mayor que 1000.\n", "question_toks": ["Show", "the", "dates", "of", "transactions", "if", "the", "share", "count", "is", "bigger", "than", "100", "or", "the", "amount", "is", "bigger", "than", "1000", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 100.0, null], "or", [false, 3, [0, [0, 12, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10", "query_toks": ["SELECT", "T1.transaction_type_description", ",", "T2.date_of_transaction", "FROM", "Ref_Transaction_Types", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.transaction_type_code", "=", "T2.transaction_type_code", "WHERE", "T2.share_count", "<", "10"], "query_toks_no_value": ["select", "t1", ".", "transaction_type_description", ",", "t2", ".", "date_of_transaction", "from", "ref_transaction_types", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "transaction_type_code", "=", "t2", ".", "transaction_type_code", "where", "t2", ".", "share_count", "<", "value"], "question": "Muestre las descripciones y fechas del tipo de transacción si el recuento de acciones es inferior a 10.\n", "question_toks": ["Show", "the", "transaction", "type", "descriptions", "and", "dates", "if", "the", "share", "count", "is", "smaller", "than", "10", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100", "query_toks": ["SELECT", "T1.Investor_details", "FROM", "INVESTORS", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.investor_id", "=", "T2.investor_id", "WHERE", "T2.share_count", ">", "100"], "query_toks_no_value": ["select", "t1", ".", "investor_details", "from", "investors", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "investor_id", "=", "t2", ".", "investor_id", "where", "t2", ".", "share_count", ">", "value"], "question": "Muestre los detalles de todos los inversores si realizan alguna transacción con un número de acciones superior a 100.\n", "question_toks": ["Show", "details", "of", "all", "investors", "if", "they", "make", "any", "transaction", "with", "share", "count", "greater", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "transaction_type_code", ")", "FROM", "TRANSACTIONS"], "query_toks_no_value": ["select", "count", "(", "distinct", "transaction_type_code", ")", "from", "transactions"], "question": "¿Cuántos tipos de transacciones distintos se utilizan en las transacciones?\n", "question_toks": ["How", "many", "distinct", "transaction", "types", "are", "used", "in", "the", "transactions", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT lot_details ,  investor_id FROM LOTS", "query_toks": ["SELECT", "lot_details", ",", "investor_id", "FROM", "LOTS"], "query_toks_no_value": ["select", "lot_details", ",", "investor_id", "from", "lots"], "question": "Devuelva los detalles del lote y las identificaciones de los inversores.\n", "question_toks": ["Return", "the", "lot", "details", "and", "investor", "ids", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\"", "query_toks": ["SELECT", "T2.lot_details", "FROM", "INVESTORS", "AS", "T1", "JOIN", "LOTS", "AS", "T2", "ON", "T1.investor_id", "=", "T2.investor_id", "WHERE", "T1.Investor_details", "=", "``", "l", "''"], "query_toks_no_value": ["select", "t2", ".", "lot_details", "from", "investors", "as", "t1", "join", "lots", "as", "t2", "on", "t1", ".", "investor_id", "=", "t2", ".", "investor_id", "where", "t1", ".", "investor_details", "=", "value"], "question": "¿Devolver los detalles de los lotes que pertenecen a inversores con detalles \"l\"?\n", "question_toks": ["Return", "the", "lot", "details", "of", "lots", "that", "belong", "to", "investors", "with", "details", "``", "l", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"l\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000", "query_toks": ["SELECT", "T1.purchase_details", "FROM", "PURCHASES", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.purchase_transaction_id", "=", "T2.transaction_id", "WHERE", "T2.amount_of_transaction", ">", "10000"], "query_toks_no_value": ["select", "t1", ".", "purchase_details", "from", "purchases", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "purchase_transaction_id", "=", "t2", ".", "transaction_id", "where", "t2", ".", "amount_of_transaction", ">", "value"], "question": "¿Cuáles son los detalles de compra de transacciones con un monto superior a 10000?\n", "question_toks": ["What", "are", "the", "purchase", "details", "of", "transactions", "with", "amount", "bigger", "than", "10000", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000", "query_toks": ["SELECT", "T1.sales_details", ",", "T2.date_of_transaction", "FROM", "SALES", "AS", "T1", "JOIN", "TRANSACTIONS", "AS", "T2", "ON", "T1.sales_transaction_id", "=", "T2.transaction_id", "WHERE", "T2.amount_of_transaction", "<", "3000"], "query_toks_no_value": ["select", "t1", ".", "sales_details", ",", "t2", ".", "date_of_transaction", "from", "sales", "as", "t1", "join", "transactions", "as", "t2", "on", "t1", ".", "sales_transaction_id", "=", "t2", ".", "transaction_id", "where", "t2", ".", "amount_of_transaction", "<", "value"], "question": "¿Cuáles son los detalles de venta y las fechas de las transacciones con un monto inferior a 3000?\n", "question_toks": ["What", "are", "the", "sale", "details", "and", "dates", "of", "transactions", "with", "amount", "smaller", "than", "3000", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 4, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50", "query_toks": ["SELECT", "T1.lot_details", "FROM", "LOTS", "AS", "T1", "JOIN", "TRANSACTIONS_LOTS", "AS", "T2", "ON", "T1.lot_id", "=", "T2.transaction_id", "JOIN", "TRANSACTIONS", "AS", "T3", "ON", "T2.transaction_id", "=", "T3.transaction_id", "WHERE", "T3.share_count", "<", "50"], "query_toks_no_value": ["select", "t1", ".", "lot_details", "from", "lots", "as", "t1", "join", "transactions_lots", "as", "t2", "on", "t1", ".", "lot_id", "=", "t2", ".", "transaction_id", "join", "transactions", "as", "t3", "on", "t2", ".", "transaction_id", "=", "t3", ".", "transaction_id", "where", "t3", ".", "share_count", "<", "value"], "question": "¿Cuáles son los detalles de los lotes asociados con transacciones con un recuento de acciones inferior a 50?\n", "question_toks": ["What", "are", "the", "lot", "details", "of", "lots", "associated", "with", "transactions", "with", "share", "count", "smaller", "than", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\"", "query_toks": ["SELECT", "T1.lot_details", "FROM", "LOTS", "AS", "T1", "JOIN", "TRANSACTIONS_LOTS", "AS", "T2", "ON", "T1.lot_id", "=", "T2.transaction_id", "JOIN", "TRANSACTIONS", "AS", "T3", "ON", "T2.transaction_id", "=", "T3.transaction_id", "WHERE", "T3.share_count", ">", "100", "AND", "T3.transaction_type_code", "=", "``", "PUR", "''"], "query_toks_no_value": ["select", "t1", ".", "lot_details", "from", "lots", "as", "t1", "join", "transactions_lots", "as", "t2", "on", "t1", ".", "lot_id", "=", "t2", ".", "transaction_id", "join", "transactions", "as", "t3", "on", "t2", ".", "transaction_id", "=", "t3", ".", "transaction_id", "where", "t3", ".", "share_count", ">", "value", "and", "t3", ".", "transaction_type_code", "=", "value"], "question": "¿Cuáles son los detalles de los lotes asociados con transacciones cuyo recuento de acciones es mayor que 100 y cuyo código de tipo es \"PUR\"?\n", "question_toks": ["What", "are", "the", "lot", "details", "of", "lots", "associated", "with", "transactions", "whose", "share", "count", "is", "bigger", "than", "100", "and", "whose", "type", "code", "is", "``", "PUR", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 19, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 100.0, null], "and", [false, 2, [0, [0, 10, false], null], "\"PUR\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_share_transactions", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100", "query_toks": ["SELECT", "date_of_transaction", "FROM", "TRANSACTIONS", "WHERE", "share_count", ">", "=", "100", "OR", "amount_of_transaction", ">", "=", "100"], "query_toks_no_value": ["select", "date_of_transaction", "from", "transactions", "where", "share_count", ">", "=", "value", "or", "amount_of_transaction", ">", "=", "value"], "question": "¿Cuáles son las fechas de las transacciones con al menos 100 acciones o un monto mayor a 100?\n", "question_toks": ["What", "are", "the", "dates", "of", "transactions", "with", "at", "least", "100", "share", "count", "or", "amount", "bigger", "than", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 5, [0, [0, 13, false], null], 100.0, null], "or", [false, 5, [0, [0, 12, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS"], "query_toks_no_value": ["select", "price_range", "from", "hotels"], "question": "¿Cuáles son los rangos de precios de los hoteles?\n", "question_toks": ["What", "are", "the", "price", "ranges", "of", "hotels", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS"], "query_toks_no_value": ["select", "price_range", "from", "hotels"], "question": "Dime los rangos de precios de todos los hoteles.\n", "question_toks": ["Tell", "me", "the", "price", "ranges", "for", "all", "the", "hotels", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS", "query_toks": ["SELECT", "DISTINCT", "Location_Name", "FROM", "LOCATIONS"], "query_toks_no_value": ["select", "distinct", "location_name", "from", "locations"], "question": "Mostrar todos los nombres de ubicaciones distintas.\n", "question_toks": ["Show", "all", "distinct", "location", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS", "query_toks": ["SELECT", "DISTINCT", "Location_Name", "FROM", "LOCATIONS"], "query_toks_no_value": ["select", "distinct", "location_name", "from", "locations"], "question": "¿Cuáles son los distintos nombres de ubicaciones?\n", "question_toks": ["What", "are", "the", "distinct", "location", "names", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Name ,  Other_Details FROM Staff", "query_toks": ["SELECT", "Name", ",", "Other_Details", "FROM", "Staff"], "query_toks_no_value": ["select", "name", ",", "other_details", "from", "staff"], "question": "Muestre los nombres y detalles de todos los miembros del personal.\n", "question_toks": ["Show", "the", "names", "and", "details", "of", "all", "the", "staff", "members", "."], "sql": {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 50, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Name ,  Other_Details FROM Staff", "query_toks": ["SELECT", "Name", ",", "Other_Details", "FROM", "Staff"], "query_toks_no_value": ["select", "name", ",", "other_details", "from", "staff"], "question": "¿Cuál es el nombre y detalle de cada miembro del personal?\n", "question_toks": ["What", "is", "the", "name", "and", "detail", "of", "each", "staff", "member", "?"], "sql": {"from": {"table_units": [["table_unit", 14]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 50, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Tourist_Details FROM VISITORS", "query_toks": ["SELECT", "Tourist_Details", "FROM", "VISITORS"], "query_toks_no_value": ["select", "tourist_details", "from", "visitors"], "question": "Mostrar detalles de todos los visitantes.\n", "question_toks": ["Show", "details", "of", "all", "visitors", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Tourist_Details FROM VISITORS", "query_toks": ["SELECT", "Tourist_Details", "FROM", "VISITORS"], "query_toks_no_value": ["select", "tourist_details", "from", "visitors"], "question": "¿Cuál es el detalle de cada visitante?\n", "question_toks": ["What", "is", "the", "detail", "of", "each", "visitor", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''"], "query_toks_no_value": ["select", "price_range", "from", "hotels", "where", "star_rating_code", "=", "value"], "question": "Mostrar los rangos de precios de hoteles con clasificación de 5 estrellas.\n", "question_toks": ["Show", "the", "price", "ranges", "of", "hotels", "with", "5", "star", "ratings", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"5\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"", "query_toks": ["SELECT", "price_range", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''"], "query_toks_no_value": ["select", "price_range", "from", "hotels", "where", "star_rating_code", "=", "value"], "question": "¿Cuáles son los rangos de precios de los hoteles de cinco estrellas?\n", "question_toks": ["What", "are", "the", "price", "ranges", "of", "five", "star", "hotels", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"5\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Address", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "address", "from", "locations", "where", "location_name", "=", "value"], "question": "¿Cuál es la dirección de la ubicación \"Galería del Reino Unido\"?\n", "question_toks": ["What", "is", "the", "address", "of", "the", "location", "``", "UK", "Gallery", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"UK Gallery\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Address", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "address", "from", "locations", "where", "location_name", "=", "value"], "question": "Busque la dirección de la ubicación denominada \"Galería del Reino Unido\".\n", "question_toks": ["Find", "the", "address", "of", "the", "location", "named", "``", "UK", "Gallery", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"UK Gallery\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Other_Details", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "other_details", "from", "locations", "where", "location_name", "=", "value"], "question": "¿Cuál es el detalle de la ubicación UK Gallery?\n", "question_toks": ["What", "is", "the", "detail", "of", "the", "location", "UK", "Gallery", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"UK Gallery\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"", "query_toks": ["SELECT", "Other_Details", "FROM", "LOCATIONS", "WHERE", "Location_Name", "=", "``", "UK", "Gallery", "''"], "query_toks_no_value": ["select", "other_details", "from", "locations", "where", "location_name", "=", "value"], "question": "Devuelve el detalle de la ubicación denominada \"Galería del Reino Unido\".\n", "question_toks": ["Return", "the", "detail", "of", "the", "location", "named", "``", "UK", "Gallery", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"UK Gallery\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "query_toks": ["SELECT", "Location_Name", "FROM", "LOCATIONS", "WHERE", "Location_Name", "LIKE", "``", "%", "film", "%", "''"], "query_toks_no_value": ["select", "location_name", "from", "locations", "where", "location_name", "like", "value"], "question": "¿Qué nombres de lugares contienen la palabra \"película\"?\n", "question_toks": ["Which", "location", "names", "contain", "the", "word", "``", "film", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%film%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"", "query_toks": ["SELECT", "Location_Name", "FROM", "LOCATIONS", "WHERE", "Location_Name", "LIKE", "``", "%", "film", "%", "''"], "query_toks_no_value": ["select", "location_name", "from", "locations", "where", "location_name", "like", "value"], "question": "Encuentra todas las localizaciones cuyos nombres contienen la palabra \"película\".\n", "question_toks": ["Find", "all", "the", "locations", "whose", "names", "contain", "the", "word", "``", "film", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%film%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Visit_Date FROM VISITS", "query_toks": ["SELECT", "DISTINCT", "Visit_Date", "FROM", "VISITS"], "query_toks_no_value": ["select", "distinct", "visit_date", "from", "visits"], "question": "¿Cuáles son las distintas fechas de visita?\n", "question_toks": ["What", "are", "the", "distinct", "visit", "dates", "?"], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [true, [[0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT DISTINCT Visit_Date FROM VISITS", "query_toks": ["SELECT", "DISTINCT", "Visit_Date", "FROM", "VISITS"], "query_toks_no_value": ["select", "distinct", "visit_date", "from", "visits"], "question": "Encuentra todas las distintas fechas de visita.\n", "question_toks": ["Find", "all", "the", "distinct", "visit", "dates", "."], "sql": {"from": {"table_units": [["table_unit", 12]], "conds": []}, "select": [true, [[0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "Name", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "name", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value"], "question": "¿Cómo se llaman los atractivos turísticos a los que se puede acceder en autobús?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "that", "can", "be", "accessed", "by", "bus", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"bus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "Name", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "name", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value"], "question": "¿A qué lugares turísticos podemos llegar en autobús? Dime los nombres de las atracciones.\n", "question_toks": ["Which", "tourist", "attractions", "can", "we", "get", "to", "by", "bus", "?", "Tell", "me", "the", "names", "of", "the", "attractions", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"bus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "Name", ",", "Opening_Hours", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''", "OR", "How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "name", ",", "opening_hours", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value", "or", "how_to_get_there", "=", "value"], "question": "¿Cuáles son los nombres y horarios de apertura de los atractivos turísticos a los que se puede acceder en autobús o caminando?\n", "question_toks": ["What", "are", "the", "names", "and", "opening", "hours", "of", "the", "tourist", "attractions", "that", "can", "be", "accessed", "by", "bus", "or", "walk", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"bus\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"walk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "Name", ",", "Opening_Hours", "FROM", "TOURIST_ATTRACTIONS", "WHERE", "How_to_Get_There", "=", "``", "bus", "''", "OR", "How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "name", ",", "opening_hours", "from", "tourist_attractions", "where", "how_to_get_there", "=", "value", "or", "how_to_get_there", "=", "value"], "question": "Encuentra los nombres y horarios de apertura de los atractivos turísticos a los que llegamos en autobús o caminando.\n", "question_toks": ["Find", "the", "names", "and", "opening", "hours", "of", "the", "tourist", "attractions", "that", "we", "get", "to", "by", "bus", "or", "walk", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"bus\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"walk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "query_toks": ["SELECT", "T2.star_rating_description", "FROM", "HOTELS", "AS", "T1", "JOIN", "Ref_Hotel_Star_Ratings", "AS", "T2", "ON", "T1.star_rating_code", "=", "T2.star_rating_code", "WHERE", "T1.price_range", ">", "10000"], "query_toks_no_value": ["select", "t2", ".", "star_rating_description", "from", "hotels", "as", "t1", "join", "ref_hotel_star_ratings", "as", "t2", "on", "t1", ".", "star_rating_code", "=", "t2", ".", "star_rating_code", "where", "t1", ".", "price_range", ">", "value"], "question": "¿Cuáles son las descripciones de las estrellas de los hoteles con precios superiores a 10000?\n", "question_toks": ["What", "are", "the", "star", "rating", "descriptions", "of", "the", "hotels", "with", "price", "above", "10000", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000", "query_toks": ["SELECT", "T2.star_rating_description", "FROM", "HOTELS", "AS", "T1", "JOIN", "Ref_Hotel_Star_Ratings", "AS", "T2", "ON", "T1.star_rating_code", "=", "T2.star_rating_code", "WHERE", "T1.price_range", ">", "10000"], "query_toks_no_value": ["select", "t2", ".", "star_rating_description", "from", "hotels", "as", "t1", "join", "ref_hotel_star_ratings", "as", "t2", "on", "t1", ".", "star_rating_code", "=", "t2", ".", "star_rating_code", "where", "t1", ".", "price_range", ">", "value"], "question": "Dame las descripciones de las estrellas de los hoteles que cuestan más de 10000.\n", "question_toks": ["Give", "me", "the", "star", "rating", "descriptions", "of", "the", "hotels", "that", "cost", "more", "than", "10000", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 16, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Museum_Details", ",", "T2.Opening_Hours", "FROM", "MUSEUMS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Museum_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "museum_details", ",", "t2", ".", "opening_hours", "from", "museums", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "tourist_attraction_id"], "question": "¿Cuáles son los detalles y horarios de apertura de los museos?\n", "question_toks": ["What", "are", "the", "details", "and", "opening", "hours", "of", "the", "museums", "?"], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Museum_Details", ",", "T2.Opening_Hours", "FROM", "MUSEUMS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Museum_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "museum_details", ",", "t2", ".", "opening_hours", "from", "museums", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "museum_id", "=", "t2", ".", "tourist_attraction_id"], "question": "Dame el detalle y horario de apertura de cada museo.\n", "question_toks": ["Give", "me", "the", "detail", "and", "opening", "hour", "for", "each", "museum", "."], "sql": {"from": {"table_units": [["table_unit", 9], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 30, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "query_toks": ["SELECT", "T2.Name", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T1.Name", "=", "``", "game1", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t1", ".", "name", "=", "value"], "question": "¿Cómo se llama la atracción turística que está asociada a la foto \"juego1\"?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "tourist", "attraction", "that", "is", "associated", "with", "the", "photo", "``", "game1", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 42, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 43, false], null], "\"game1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"", "query_toks": ["SELECT", "T2.Name", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T1.Name", "=", "``", "game1", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t1", ".", "name", "=", "value"], "question": "¿Qué atracción turística está asociada con la foto \"juego1\"? Devuelve su nombre.\n", "question_toks": ["Which", "tourist", "attraction", "is", "associated", "with", "the", "photo", "``", "game1", "''", "?", "Return", "its", "name", "."], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 42, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 43, false], null], "\"game1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "query_toks": ["SELECT", "T1.Name", ",", "T1.Description", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "film", "festival", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "description", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cuáles son los nombres y descripciones de las fotografías tomadas en la atracción turística \"festival de cine\"?\n", "question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "the", "photos", "taken", "at", "the", "tourist", "attraction", "``", "film", "festival", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 42, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 43, false], null]], [0, [0, [0, 44, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"film festival\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"", "query_toks": ["SELECT", "T1.Name", ",", "T1.Description", "FROM", "PHOTOS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "film", "festival", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "description", "from", "photos", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "Encuentra los nombres y descripciones de las fotografías tomadas en el atractivo turístico denominado \"festival de cine\".\n", "question_toks": ["Find", "the", "names", "and", "descriptions", "of", "the", "photos", "taken", "at", "the", "tourist", "attraction", "called", "``", "film", "festival", "''", "."], "sql": {"from": {"table_units": [["table_unit", 13], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 42, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 43, false], null]], [0, [0, [0, 44, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"film festival\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Royal_Family_Details", ",", "T2.How_to_Get_There", "FROM", "ROYAL_FAMILY", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Royal_Family_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "royal_family_details", ",", "t2", ".", "how_to_get_there", "from", "royal_family", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "royal_family_id", "=", "t2", ".", "tourist_attraction_id"], "question": "¿Cuáles son los detalles y formas de llegar a las atracciones turísticas relacionadas con la familia real?\n", "question_toks": ["What", "are", "the", "details", "and", "ways", "to", "get", "to", "tourist", "attractions", "related", "to", "royal", "family", "?"], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID", "query_toks": ["SELECT", "T1.Royal_Family_Details", ",", "T2.How_to_Get_There", "FROM", "ROYAL_FAMILY", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Royal_Family_ID", "=", "T2.Tourist_Attraction_ID"], "query_toks_no_value": ["select", "t1", ".", "royal_family_details", ",", "t2", ".", "how_to_get_there", "from", "royal_family", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "royal_family_id", "=", "t2", ".", "tourist_attraction_id"], "question": "¿Qué atracciones turísticas están relacionadas con la familia real? Cuéntame sus datos y cómo podemos llegar.\n", "question_toks": ["Which", "tourist", "attractions", "are", "related", "to", "royal", "family", "?", "Tell", "me", "their", "details", "and", "how", "we", "can", "get", "there", "."], "sql": {"from": {"table_units": [["table_unit", 10], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T1.Shop_Details", "FROM", "SHOPS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Shop_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t1", ".", "shop_details", "from", "shops", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value"], "question": "¿Cuáles son los detalles de los comercios a los que se puede acceder caminando?\n", "question_toks": ["What", "are", "the", "details", "of", "the", "shops", "that", "can", "be", "accessed", "by", "walk", "?"], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"walk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T1.Shop_Details", "FROM", "SHOPS", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Shop_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t1", ".", "shop_details", "from", "shops", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "shop_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value"], "question": "Encuentre los detalles de las tiendas a las que se puede llegar caminando.\n", "question_toks": ["Find", "the", "details", "of", "the", "shops", "that", "can", "be", "reached", "by", "walk", "."], "sql": {"from": {"table_units": [["table_unit", 8], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"walk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "query_toks": ["SELECT", "T1.Name", "FROM", "STAFF", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "US", "museum", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "staff", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "¿Cómo se llama el personal que está a cargo de la atracción denominada \"museo de Estados Unidos\"?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "staff", "that", "is", "in", "charge", "of", "the", "attraction", "named", "``", "US", "museum", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 48, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"US museum\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\"", "query_toks": ["SELECT", "T1.Name", "FROM", "STAFF", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.Name", "=", "``", "US", "museum", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "staff", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "name", "=", "value"], "question": "Dime el nombre del personal a cargo de la atracción llamada \"museo de EE. UU.\"\n", "question_toks": ["Tell", "me", "the", "name", "of", "the", "staff", "in", "charge", "of", "the", "attraction", "called", "``", "US", "museum", "''", "."], "sql": {"from": {"table_units": [["table_unit", 14], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 48, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"US museum\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T1.Market_Details", "FROM", "Street_Markets", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t1", ".", "market_details", "from", "street_markets", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "¿Cuáles son los detalles de los mercados a los que se puede acceder caminando o en autobús?\n", "question_toks": ["What", "are", "the", "details", "of", "the", "markets", "that", "can", "be", "accessed", "by", "walk", "or", "bus", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"walk\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"bus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T1.Market_Details", "FROM", "Street_Markets", "AS", "T1", "JOIN", "TOURIST_ATTRACTIONS", "AS", "T2", "ON", "T1.Market_ID", "=", "T2.Tourist_Attraction_ID", "WHERE", "T2.How_to_Get_There", "=", "``", "walk", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t1", ".", "market_details", "from", "street_markets", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "market_id", "=", "t2", ".", "tourist_attraction_id", "where", "t2", ".", "how_to_get_there", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "Encuentre los detalles de todos los mercados a los que se puede acceder a pie o en autobús.\n", "question_toks": ["Find", "the", "details", "of", "all", "the", "markets", "that", "are", "accessible", "by", "walk", "or", "bus", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"walk\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"bus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T2.Visit_Date", ",", "T2.Visit_Details", "FROM", "VISITORS", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_ID", "=", "T2.Tourist_ID", "WHERE", "T1.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t2", ".", "visit_date", ",", "t2", ".", "visit_details", "from", "visitors", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_id", "=", "t2", ".", "tourist_id", "where", "t1", ".", "tourist_details", "=", "value"], "question": "¿Cuáles son la fecha de la visita y los detalles del visitante cuyo detalle es 'Vincent'?\n", "question_toks": ["What", "are", "the", "visit", "date", "and", "details", "of", "the", "visitor", "whose", "detail", "is", "'Vincent", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 38, false], null]]}, "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T2.Visit_Date", ",", "T2.Visit_Details", "FROM", "VISITORS", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_ID", "=", "T2.Tourist_ID", "WHERE", "T1.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t2", ".", "visit_date", ",", "t2", ".", "visit_details", "from", "visitors", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_id", "=", "t2", ".", "tourist_id", "where", "t1", ".", "tourist_details", "=", "value"], "question": "Encuentra la fecha de visita y los datos del turista cuyo detalle es 'Vincent'\n", "question_toks": ["Find", "the", "visit", "date", "and", "details", "of", "the", "tourist", "whose", "detail", "is", "'Vincent", "'"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 38, false], null]]}, "select": [false, [[0, [0, [0, 39, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "JOIN", "VISITORS", "AS", "T3", "ON", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T3.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "visitors", "as", "t3", "on", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t3", ".", "tourist_details", "=", "value"], "question": "¿Qué atractivos turísticos visita con detalle el visitante 'Vincent'?\n", "question_toks": ["Which", "tourist", "attractions", "does", "the", "visitor", "with", "detail", "'Vincent", "'", "visit", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 12], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 38, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"", "query_toks": ["SELECT", "T1.Name", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITS", "AS", "T2", "ON", "T1.Tourist_Attraction_ID", "=", "T2.Tourist_Attraction_ID", "JOIN", "VISITORS", "AS", "T3", "ON", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T3.Tourist_Details", "=", "``", "Vincent", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "tourist_attractions", "as", "t1", "join", "visits", "as", "t2", "on", "t1", ".", "tourist_attraction_id", "=", "t2", ".", "tourist_attraction_id", "join", "visitors", "as", "t3", "on", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t3", ".", "tourist_details", "=", "value"], "question": "Mostrar los atractivos turísticos visitados por el turista cuyo detalle es 'Vicente'.\n", "question_toks": ["Show", "the", "tourist", "attractions", "visited", "by", "the", "tourist", "whose", "detail", "is", "'Vincent", "'", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 12], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 38, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "query_toks": ["SELECT", "T1.Name", ",", "T3.Visit_Date", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "OR", "T2.Tourist_Details", "=", "``", "Vivian", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "visit_date", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "or", "t2", ".", "tourist_details", "=", "value"], "question": "¿Cuáles son los nombres de las atracciones turísticas y las fechas en que los turistas llamados Vincent o Vivian visitaron allí?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "tourist", "attractions", "and", "the", "dates", "when", "the", "tourists", "named", "Vincent", "or", "Vivian", "visited", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 3], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 38, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 39, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Vivian\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"", "query_toks": ["SELECT", "T1.Name", ",", "T3.Visit_Date", "FROM", "Tourist_Attractions", "AS", "T1", "JOIN", "VISITORS", "AS", "T2", "JOIN", "VISITS", "AS", "T3", "ON", "T1.Tourist_Attraction_ID", "=", "T3.Tourist_Attraction_ID", "AND", "T2.Tourist_ID", "=", "T3.Tourist_ID", "WHERE", "T2.Tourist_Details", "=", "``", "Vincent", "''", "OR", "T2.Tourist_Details", "=", "``", "Vivian", "''"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "visit_date", "from", "tourist_attractions", "as", "t1", "join", "visitors", "as", "t2", "join", "visits", "as", "t3", "on", "t1", ".", "tourist_attraction_id", "=", "t3", ".", "tourist_attraction_id", "and", "t2", ".", "tourist_id", "=", "t3", ".", "tourist_id", "where", "t2", ".", "tourist_details", "=", "value", "or", "t2", ".", "tourist_details", "=", "value"], "question": "Para cada atracción turística, devuelva su nombre y la fecha en que los turistas llamados Vincent o Vivian visitaron allí.\n", "question_toks": ["For", "each", "tourist", "attraction", ",", "return", "its", "name", "and", "the", "date", "when", "the", "tourists", "named", "Vincent", "or", "Vivian", "visited", "there", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 3], ["table_unit", 12]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 37, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 38, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]], [0, [0, [0, 39, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Vincent\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Vivian\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "660", "Shea", "Crescent", "''", "OR", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "¿Cuáles son los nombres de las atracciones turísticas a las que se puede llegar caminando o que se encuentran en la dirección 660 Shea Crescent?\n", "question_toks": ["What", "are", "the", "names", "of", "tourist", "attractions", "that", "can", "be", "reached", "by", "walk", "or", "is", "at", "address", "660", "Shea", "Crescent", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"660 Shea Crescent\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"walk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "660", "Shea", "Crescent", "''", "OR", "T2.How_to_Get_There", "=", "``", "walk", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "Encuentre los nombres de las atracciones turísticas a las que se puede acceder caminando o en la dirección 660 Shea Crescent.\n", "question_toks": ["Find", "the", "names", "of", "the", "tourist", "attractions", "that", "is", "either", "accessible", "by", "walk", "or", "at", "address", "660", "Shea", "Crescent", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"660 Shea Crescent\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"walk\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "254", "Ottilie", "Junction", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "¿Cuáles son los nombres de las atracciones turísticas a las que se puede llegar en autobús o que se encuentran en la dirección 254 Ottilie Junction?\n", "question_toks": ["What", "are", "the", "names", "of", "tourist", "attractions", "that", "can", "be", "reached", "by", "bus", "or", "is", "at", "address", "254", "Ottilie", "Junction", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"254 Ottilie Junction\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"bus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Theme_park", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"", "query_toks": ["SELECT", "T2.Name", "FROM", "Locations", "AS", "T1", "JOIN", "Tourist_Attractions", "AS", "T2", "ON", "T1.Location_ID", "=", "T2.Location_ID", "WHERE", "T1.Address", "=", "``", "254", "Ottilie", "Junction", "''", "OR", "T2.How_to_Get_There", "=", "``", "bus", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "locations", "as", "t1", "join", "tourist_attractions", "as", "t2", "on", "t1", ".", "location_id", "=", "t2", ".", "location_id", "where", "t1", ".", "address", "=", "value", "or", "t2", ".", "how_to_get_there", "=", "value"], "question": "Encuentre los nombres de las atracciones turísticas a las que se puede acceder en autobús o en la dirección 254 Ottilie Junction.\n", "question_toks": ["Find", "the", "names", "of", "the", "tourist", "attractions", "that", "is", "either", "accessible", "by", "bus", "or", "at", "address", "254", "Ottilie", "Junction", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"254 Ottilie Junction\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"bus\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT DISTINCT gtype FROM Video_games", "query_toks": ["SELECT", "DISTINCT", "gtype", "FROM", "Video_games"], "query_toks_no_value": ["select", "distinct", "gtype", "from", "video_games"], "question": "Mostrar todos los tipos de videojuegos.\n", "question_toks": ["Show", "all", "video", "game", "types", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT DISTINCT gtype FROM Video_games", "query_toks": ["SELECT", "DISTINCT", "gtype", "FROM", "Video_games"], "query_toks_no_value": ["select", "distinct", "gtype", "from", "video_games"], "question": "¿Cuáles son los diferentes tipos de videojuegos?\n", "question_toks": ["What", "are", "the", "different", "types", "of", "video", "games", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"", "query_toks": ["SELECT", "gname", "FROM", "Video_games", "WHERE", "gtype", "=", "``", "Collectible", "card", "game", "''"], "query_toks_no_value": ["select", "gname", "from", "video_games", "where", "gtype", "=", "value"], "question": "Mostrar todos los videojuegos con tipo Juego de cartas coleccionables.\n", "question_toks": ["Show", "all", "video", "games", "with", "type", "Collectible", "card", "game", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Collectible card game\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"", "query_toks": ["SELECT", "gname", "FROM", "Video_games", "WHERE", "gtype", "=", "``", "Collectible", "card", "game", "''"], "query_toks_no_value": ["select", "gname", "from", "video_games", "where", "gtype", "=", "value"], "question": "¿Cómo se llaman todos los videojuegos que son de cartas coleccionables?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "video", "games", "that", "are", "collectible", "cards", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Collectible card game\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"", "query_toks": ["SELECT", "gtype", "FROM", "Video_games", "WHERE", "gname", "=", "``", "Call", "of", "Destiny", "''"], "query_toks_no_value": ["select", "gtype", "from", "video_games", "where", "gname", "=", "value"], "question": "Cuál es el tipo de videojuego Call of Destiny.\n", "question_toks": ["What", "is", "the", "type", "of", "video", "game", "Call", "of", "Destiny", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Call of Destiny\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"", "query_toks": ["SELECT", "gtype", "FROM", "Video_games", "WHERE", "gname", "=", "``", "Call", "of", "Destiny", "''"], "query_toks_no_value": ["select", "gtype", "from", "video_games", "where", "gname", "=", "value"], "question": "¿Qué tipo de juego es Call of Destiny?\n", "question_toks": ["What", "type", "of", "game", "is", "Call", "of", "Destiny", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Call of Destiny\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "city_code", "=", "``", "CHI", "''"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "city_code", "=", "value"], "question": "Mostrar identificaciones de todos los estudiantes que viven en CHI.\n", "question_toks": ["Show", "ids", "for", "all", "students", "who", "live", "in", "CHI", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"CHI\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "city_code", "=", "``", "CHI", "''"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "city_code", "=", "value"], "question": "¿Cuáles son las identificaciones de todos los estudiantes que viven en CHI?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "who", "live", "in", "CHI", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"CHI\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT StuID FROM Student WHERE Advisor  =  1121", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "Advisor", "=", "1121"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "advisor", "=", "value"], "question": "Mostrar identificaciones de todos los estudiantes que tienen el asesor 1121.\n", "question_toks": ["Show", "ids", "for", "all", "students", "who", "have", "advisor", "1121", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1121.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT StuID FROM Student WHERE Advisor  =  1121", "query_toks": ["SELECT", "StuID", "FROM", "Student", "WHERE", "Advisor", "=", "1121"], "query_toks_no_value": ["select", "stuid", "from", "student", "where", "advisor", "=", "value"], "question": "¿Cuáles son las identificaciones de todos los estudiantes que tienen el número de asesor 1121?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "students", "who", "have", "advisor", "number", "1121", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1121.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT Fname FROM Student WHERE Major  =  600", "query_toks": ["SELECT", "Fname", "FROM", "Student", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "major", "=", "value"], "question": "Mostrar el nombre de todos los estudiantes con especialidad 600.\n", "question_toks": ["Show", "first", "name", "for", "all", "students", "with", "major", "600", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT Fname FROM Student WHERE Major  =  600", "query_toks": ["SELECT", "Fname", "FROM", "Student", "WHERE", "Major", "=", "600"], "query_toks_no_value": ["select", "fname", "from", "student", "where", "major", "=", "value"], "question": "¿Cuáles son los nombres de todos los estudiantes de la especialidad número 600?\n", "question_toks": ["What", "are", "the", "first", "names", "for", "all", "students", "who", "are", "from", "the", "major", "numbered", "600", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 600.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "query_toks": ["SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "onscholarship", "=", "'Y", "'"], "query_toks_no_value": ["select", "stuid", "from", "sportsinfo", "where", "onscholarship", "=", "value"], "question": "Enumere las identificaciones de todos los estudiantes que tienen una beca.\n", "question_toks": ["List", "ids", "for", "all", "student", "who", "are", "on", "scholarship", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Y\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'", "query_toks": ["SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "onscholarship", "=", "'Y", "'"], "query_toks_no_value": ["select", "stuid", "from", "sportsinfo", "where", "onscholarship", "=", "value"], "question": "¿Cuáles son las identificaciones para todos los estudiantes deportistas que están becados?\n", "question_toks": ["What", "are", "the", "ids", "for", "all", "sporty", "students", "who", "are", "on", "scholarship", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Y\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'", "query_toks": ["SELECT", "T2.Lname", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.onscholarship", "=", "'Y", "'"], "query_toks_no_value": ["select", "t2", ".", "lname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "onscholarship", "=", "value"], "question": "Mostrar los apellidos de todos los estudiantes que están becados.\n", "question_toks": ["Show", "last", "names", "for", "all", "student", "who", "are", "on", "scholarship", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Y\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'", "query_toks": ["SELECT", "T2.Lname", "FROM", "Sportsinfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.onscholarship", "=", "'Y", "'"], "query_toks_no_value": ["select", "t2", ".", "lname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "onscholarship", "=", "value"], "question": "¿Cuáles son los apellidos de todos los estudiantes becados?\n", "question_toks": ["What", "are", "the", "last", "names", "for", "all", "scholarship", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Y\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"", "query_toks": ["SELECT", "Gname", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.gameid", "=", "T2.gameid", "JOIN", "Student", "AS", "T3", "ON", "T3.Stuid", "=", "T1.Stuid", "WHERE", "T3.Lname", "=", "``", "Smith", "''", "AND", "T3.Fname", "=", "``", "Linda", "''"], "query_toks_no_value": ["select", "gname", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "join", "student", "as", "t3", "on", "t3", ".", "stuid", "=", "t1", ".", "stuid", "where", "t3", ".", "lname", "=", "value", "and", "t3", ".", "fname", "=", "value"], "question": "Mostrar todos los nombres de los juegos jugados por Linda Smith\n", "question_toks": ["Show", "all", "game", "names", "played", "by", "Linda", "Smith"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Linda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"", "query_toks": ["SELECT", "Gname", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.gameid", "=", "T2.gameid", "JOIN", "Student", "AS", "T3", "ON", "T3.Stuid", "=", "T1.Stuid", "WHERE", "T3.Lname", "=", "``", "Smith", "''", "AND", "T3.Fname", "=", "``", "Linda", "''"], "query_toks_no_value": ["select", "gname", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "join", "student", "as", "t3", "on", "t3", ".", "stuid", "=", "t1", ".", "stuid", "where", "t3", ".", "lname", "=", "value", "and", "t3", ".", "fname", "=", "value"], "question": "¿Cuáles son los nombres de todos los juegos que juega Linda Smith?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "games", "played", "by", "Linda", "Smith", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Linda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "query_toks": ["SELECT", "T2.lname", ",", "T2.fname", "FROM", "SportsInfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.SportName", "=", "``", "Football", "''", "OR", "T1.SportName", "=", "``", "Lacrosse", "''"], "query_toks_no_value": ["select", "t2", ".", "lname", ",", "t2", ".", "fname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "sportname", "=", "value", "or", "t1", ".", "sportname", "=", "value"], "question": "Encuentre el apellido y el nombre de los estudiantes que juegan fútbol o lacrosse.\n", "question_toks": ["Find", "the", "last", "and", "first", "name", "of", "students", "who", "are", "playing", "Football", "or", "Lacrosse", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null], "or", [false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"", "query_toks": ["SELECT", "T2.lname", ",", "T2.fname", "FROM", "SportsInfo", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.StuID", "=", "T2.StuID", "WHERE", "T1.SportName", "=", "``", "Football", "''", "OR", "T1.SportName", "=", "``", "Lacrosse", "''"], "query_toks_no_value": ["select", "t2", ".", "lname", ",", "t2", ".", "fname", "from", "sportsinfo", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t1", ".", "sportname", "=", "value", "or", "t1", ".", "sportname", "=", "value"], "question": "¿Cuál es el nombre y apellido de todos los estudiantes que juegan fútbol o lacrosse?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "students", "who", "play", "Football", "or", "Lacrosse", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null], "or", [false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")", "query_toks": ["SELECT", "fname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Football", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Lacrosse", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", "intersect", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", ")"], "question": "Encuentre el nombre y la edad de los estudiantes que juegan fútbol y lacrosse.\n", "question_toks": ["Find", "the", "first", "name", "and", "age", "of", "the", "students", "who", "are", "playing", "both", "Football", "and", "Lacrosse", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")", "query_toks": ["SELECT", "fname", ",", "age", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Football", "''", "INTERSECT", "SELECT", "StuID", "FROM", "Sportsinfo", "WHERE", "SportName", "=", "``", "Lacrosse", "''", ")"], "query_toks_no_value": ["select", "fname", ",", "age", "from", "student", "where", "stuid", "in", "(", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", "intersect", "select", "stuid", "from", "sportsinfo", "where", "sportname", "=", "value", ")"], "question": "¿Cuáles son los nombres y las edades de todos los estudiantes que juegan fútbol y lacrosse?\n", "question_toks": ["What", "are", "the", "first", "names", "and", "ages", "of", "all", "students", "who", "are", "playing", "both", "Football", "and", "Lacrosse", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Football\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Lacrosse\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")", "query_toks": ["SELECT", "lname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Call", "of", "Destiny", "''", "INTERSECT", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Works", "of", "Widenius", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", "intersect", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", ")"], "question": "Encuentra el apellido y el sexo de los estudiantes que juegan los juegos Call of Destiny y Works of Widenius.\n", "question_toks": ["Find", "the", "last", "name", "and", "gender", "of", "the", "students", "who", "are", "playing", "both", "Call", "of", "Destiny", "and", "Works", "of", "Widenius", "games", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Call of Destiny\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Works of Widenius\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "game_1", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")", "query_toks": ["SELECT", "lname", ",", "sex", "FROM", "Student", "WHERE", "StuID", "IN", "(", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Call", "of", "Destiny", "''", "INTERSECT", "SELECT", "T1.StuID", "FROM", "Plays_games", "AS", "T1", "JOIN", "Video_games", "AS", "T2", "ON", "T1.GameID", "=", "T2.GameID", "WHERE", "T2.Gname", "=", "``", "Works", "of", "Widenius", "''", ")"], "query_toks_no_value": ["select", "lname", ",", "sex", "from", "student", "where", "stuid", "in", "(", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", "intersect", "select", "t1", ".", "stuid", "from", "plays_games", "as", "t1", "join", "video_games", "as", "t2", "on", "t1", ".", "gameid", "=", "t2", ".", "gameid", "where", "t2", ".", "gname", "=", "value", ")"], "question": "¿Cuál es el apellido y el sexo de todos los estudiantes que jugaron Call of Destiny y Works of Widenius?\n", "question_toks": ["what", "is", "the", "last", "name", "and", "gender", "of", "all", "students", "who", "played", "both", "Call", "of", "Destiny", "and", "Works", "of", "Widenius", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Call of Destiny\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Works of Widenius\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers", "query_toks": ["SELECT", "customer_name", "FROM", "customers"], "query_toks_no_value": ["select", "customer_name", "from", "customers"], "question": "Encuentre el nombre de todos los clientes.\n", "question_toks": ["Find", "the", "name", "of", "all", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers", "query_toks": ["SELECT", "customer_name", "FROM", "customers"], "query_toks_no_value": ["select", "customer_name", "from", "customers"], "question": "¿Cuáles son los nombres de todos los clientes?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "payment_method", "=", "``", "Cash", "''"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method", "=", "value"], "question": "¿Cuáles son los nombres de los clientes que utilizan el método de pago \"Efectivo\"?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "use", "payment", "method", "``", "Cash", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Cash\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "payment_method", "=", "``", "Cash", "''"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method", "=", "value"], "question": "¿Qué clientes utilizan \"efectivo\" como método de pago? Devuelve los nombres de los clientes.\n", "question_toks": ["Which", "customers", "use", "``", "Cash", "''", "for", "payment", "method", "?", "Return", "the", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Cash\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20", "query_toks": ["SELECT", "date_became_customer", "FROM", "customers", "WHERE", "customer_id", "BETWEEN", "10", "AND", "20"], "query_toks_no_value": ["select", "date_became_customer", "from", "customers", "where", "customer_id", "between", "value", "and", "value"], "question": "Encuentre la \"fecha en que se convirtieron en clientes\" de los clientes cuyo ID está entre 10 y 20.\n", "question_toks": ["Find", "the", "``", "date", "became", "customers", "''", "of", "the", "customers", "whose", "ID", "is", "between", "10", "and", "20", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 1, [0, [0, 10, false], null], 10.0, 20.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20", "query_toks": ["SELECT", "date_became_customer", "FROM", "customers", "WHERE", "customer_id", "BETWEEN", "10", "AND", "20"], "query_toks_no_value": ["select", "date_became_customer", "from", "customers", "where", "customer_id", "between", "value", "and", "value"], "question": "¿Cuáles son las fechas en las que los clientes con identificadores entre 10 y 20 se convirtieron en clientes?\n", "question_toks": ["What", "are", "the", "dates", "when", "customers", "with", "ids", "between", "10", "and", "20", "became", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 1, [0, [0, 10, false], null], 10.0, 20.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "payment_method", "=", "(", "SELECT", "payment_method", "FROM", "customers", "GROUP", "BY", "payment_method", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method", "=", "(", "select", "payment_method", "from", "customers", "group", "by", "payment_method", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son los nombres de los clientes que utilizan el método de pago más popular?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "using", "the", "most", "popular", "payment", "method", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "payment_method", "=", "(", "SELECT", "payment_method", "FROM", "customers", "GROUP", "BY", "payment_method", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method", "=", "(", "select", "payment_method", "from", "customers", "group", "by", "payment_method", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Encuentre el nombre de los clientes que utilizan el método de pago utilizado con más frecuencia.\n", "question_toks": ["Find", "the", "name", "of", "the", "customers", "who", "use", "the", "most", "frequently", "used", "payment", "method", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT payment_method FROM customers", "query_toks": ["SELECT", "DISTINCT", "payment_method", "FROM", "customers"], "query_toks_no_value": ["select", "distinct", "payment_method", "from", "customers"], "question": "¿Cuáles son todos los métodos de pago?\n", "question_toks": ["What", "are", "all", "the", "payment", "methods", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT payment_method FROM customers", "query_toks": ["SELECT", "DISTINCT", "payment_method", "FROM", "customers"], "query_toks_no_value": ["select", "distinct", "payment_method", "from", "customers"], "question": "Devuelve todos los distintos métodos de pago utilizados por los clientes.\n", "question_toks": ["Return", "all", "the", "distinct", "payment", "methods", "used", "by", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT product_details FROM products", "query_toks": ["SELECT", "DISTINCT", "product_details", "FROM", "products"], "query_toks_no_value": ["select", "distinct", "product_details", "from", "products"], "question": "¿Cuáles son los detalles de todos los productos?\n", "question_toks": ["What", "are", "the", "details", "of", "all", "products", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT product_details FROM products", "query_toks": ["SELECT", "DISTINCT", "product_details", "FROM", "products"], "query_toks_no_value": ["select", "distinct", "product_details", "from", "products"], "question": "Devuelve los detalles de todos los productos.\n", "question_toks": ["Return", "the", "the", "details", "of", "all", "products", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "customer_name", "LIKE", "``", "%", "Alex", "%", "''"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "customer_name", "like", "value"], "question": "Busque el nombre de todos los clientes cuyo nombre contenga \"Alex\".\n", "question_toks": ["Find", "the", "name", "of", "all", "customers", "whose", "name", "contains", "``", "Alex", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%Alex%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "customer_name", "LIKE", "``", "%", "Alex", "%", "''"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "customer_name", "like", "value"], "question": "¿Qué nombre de cliente contiene \"Alex\"? Encuentra el nombre completo.\n", "question_toks": ["Which", "customer", "'s", "name", "contains", "``", "Alex", "''", "?", "Find", "the", "full", "name", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%Alex%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"", "query_toks": ["SELECT", "product_details", "FROM", "products", "WHERE", "product_details", "LIKE", "``", "%", "Latte", "%", "''", "OR", "product_details", "LIKE", "``", "%", "Americano", "%", "''"], "query_toks_no_value": ["select", "product_details", "from", "products", "where", "product_details", "like", "value", "or", "product_details", "like", "value"], "question": "Encuentra el detalle de productos cuyo detalle contiene la palabra \"Latte\" o la palabra \"Americano\"\n", "question_toks": ["Find", "the", "detail", "of", "products", "whose", "detail", "contains", "the", "word", "``", "Latte", "''", "or", "the", "word", "``", "Americano", "''"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%Latte%\"", null], "or", [false, 9, [0, [0, 9, false], null], "\"%Americano%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"", "query_toks": ["SELECT", "product_details", "FROM", "products", "WHERE", "product_details", "LIKE", "``", "%", "Latte", "%", "''", "OR", "product_details", "LIKE", "``", "%", "Americano", "%", "''"], "query_toks_no_value": ["select", "product_details", "from", "products", "where", "product_details", "like", "value", "or", "product_details", "like", "value"], "question": "¿Qué detalle del producto contiene la palabra \"Latte\" o \"Americano\"? Devuelve el detalle completo.\n", "question_toks": ["Which", "product", "'s", "detail", "contains", "the", "word", "``", "Latte", "''", "or", "``", "Americano", "''", "?", "Return", "the", "full", "detail", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%Latte%\"", null], "or", [false, 9, [0, [0, 9, false], null], "\"%Americano%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"", "query_toks": ["SELECT", "t3.address_content", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", "WHERE", "t1.customer_name", "=", "``", "Maudie", "Kertzmann", "''"], "query_toks_no_value": ["select", "t3", ".", "address_content", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "¿Cuál es el contenido de la dirección del cliente llamado \"Maudie Kertzmann\"?\n", "question_toks": ["What", "is", "the", "address", "content", "of", "the", "customer", "named", "``", "Maudie", "Kertzmann", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Maudie Kertzmann\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"", "query_toks": ["SELECT", "t3.address_content", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", "WHERE", "t1.customer_name", "=", "``", "Maudie", "Kertzmann", "''"], "query_toks_no_value": ["select", "t3", ".", "address_content", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Devuelva el contenido de la dirección del cliente cuyo nombre es \"Maudie Kertzmann\".\n", "question_toks": ["Return", "the", "address", "content", "for", "the", "customer", "whose", "name", "is", "``", "Maudie", "Kertzmann", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Maudie Kertzmann\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"", "query_toks": ["SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", "WHERE", "t3.state_province_county", "=", "``", "Colorado", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "where", "t3", ".", "state_province_county", "=", "value"], "question": "¿Encontrar el nombre de los clientes que viven en Colorado?\n", "question_toks": ["Find", "the", "name", "of", "customers", "who", "are", "living", "in", "Colorado", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Colorado\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"", "query_toks": ["SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", "WHERE", "t3.state_province_county", "=", "``", "Colorado", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", "where", "t3", ".", "state_province_county", "=", "value"], "question": "¿Cuáles son los nombres de los clientes que viven en el estado de Colorado?\n", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "live", "in", "Colorado", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Colorado\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)", "query_toks": ["SELECT", "city", "FROM", "addresses", "WHERE", "city", "NOT", "IN", "(", "SELECT", "DISTINCT", "t3.city", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", ")"], "query_toks_no_value": ["select", "city", "from", "addresses", "where", "city", "not", "in", "(", "select", "distinct", "t3", ".", "city", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", ")"], "question": "Encuentre la lista de ciudades en las que no vive ningún cliente.\n", "question_toks": ["Find", "the", "list", "of", "cities", "that", "no", "customer", "is", "living", "in", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)", "query_toks": ["SELECT", "city", "FROM", "addresses", "WHERE", "city", "NOT", "IN", "(", "SELECT", "DISTINCT", "t3.city", "FROM", "customers", "AS", "t1", "JOIN", "customer_addresses", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "addresses", "AS", "t3", "ON", "t2.address_id", "=", "t3.address_id", ")"], "query_toks_no_value": ["select", "city", "from", "addresses", "where", "city", "not", "in", "(", "select", "distinct", "t3", ".", "city", "from", "customers", "as", "t1", "join", "customer_addresses", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "addresses", "as", "t3", "on", "t2", ".", "address_id", "=", "t3", ".", "address_id", ")"], "question": "¿Cuáles son las ciudades en las que no viven clientes?\n", "question_toks": ["What", "are", "the", "cities", "no", "customers", "live", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT city FROM addresses", "query_toks": ["SELECT", "DISTINCT", "city", "FROM", "addresses"], "query_toks_no_value": ["select", "distinct", "city", "from", "addresses"], "question": "Recupera la lista de todas las ciudades.\n", "question_toks": ["Retrieve", "the", "list", "of", "all", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT city FROM addresses", "query_toks": ["SELECT", "DISTINCT", "city", "FROM", "addresses"], "query_toks_no_value": ["select", "distinct", "city", "from", "addresses"], "question": "Lista todas las distintas ciudades\n", "question_toks": ["List", "all", "the", "distinct", "cities"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT city FROM addresses WHERE zip_postcode  =  255", "query_toks": ["SELECT", "city", "FROM", "addresses", "WHERE", "zip_postcode", "=", "255"], "query_toks_no_value": ["select", "city", "from", "addresses", "where", "zip_postcode", "=", "value"], "question": "Encuentra la ciudad con el código postal 255.\n", "question_toks": ["Find", "the", "city", "with", "post", "code", "255", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 255.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT city FROM addresses WHERE zip_postcode  =  255", "query_toks": ["SELECT", "city", "FROM", "addresses", "WHERE", "zip_postcode", "=", "255"], "query_toks_no_value": ["select", "city", "from", "addresses", "where", "zip_postcode", "=", "value"], "question": "¿En qué ciudad se encuentra el código postal 255?\n", "question_toks": ["Which", "city", "is", "post", "code", "255", "located", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], 255.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "query_toks": ["SELECT", "state_province_county", ",", "country", "FROM", "addresses", "WHERE", "zip_postcode", "LIKE", "``", "4", "%", "''"], "query_toks_no_value": ["select", "state_province_county", ",", "country", "from", "addresses", "where", "zip_postcode", "like", "value"], "question": "Encuentre el estado y el país de todas las ciudades con códigos postales que comienzan con 4.\n", "question_toks": ["Find", "the", "state", "and", "country", "of", "all", "cities", "with", "post", "code", "starting", "with", "4", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"4%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"", "query_toks": ["SELECT", "state_province_county", ",", "country", "FROM", "addresses", "WHERE", "zip_postcode", "LIKE", "``", "4", "%", "''"], "query_toks_no_value": ["select", "state_province_county", ",", "country", "from", "addresses", "where", "zip_postcode", "like", "value"], "question": "¿Cuáles son el estado y el país de todas las ciudades que tienen códigos postales que comienzan con 4?\n", "question_toks": ["What", "are", "the", "state", "and", "country", "of", "all", "the", "cities", "that", "have", "post", "codes", "starting", "with", "4.\\"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"4%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "query_toks": ["SELECT", "DISTINCT", "channel_code", "FROM", "customers", "AS", "t1", "JOIN", "customer_contact_channels", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.customer_name", "=", "``", "Tillman", "Ernser", "''"], "query_toks_no_value": ["select", "distinct", "channel_code", "from", "customers", "as", "t1", "join", "customer_contact_channels", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "¿Qué canal de contacto ha utilizado el cliente llamado \"Tillman Ernser\"?\n", "question_toks": ["Which", "contact", "channel", "has", "been", "used", "by", "the", "customer", "with", "name", "``", "Tillman", "Ernser", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 20, false], null]]}, "select": [true, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Tillman Ernser\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"", "query_toks": ["SELECT", "DISTINCT", "channel_code", "FROM", "customers", "AS", "t1", "JOIN", "customer_contact_channels", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t1.customer_name", "=", "``", "Tillman", "Ernser", "''"], "query_toks_no_value": ["select", "distinct", "channel_code", "from", "customers", "as", "t1", "join", "customer_contact_channels", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Busque el código del canal de contacto que utilizó el cliente llamado \"Tillman Ernser\".\n", "question_toks": ["Find", "the", "contact", "channel", "code", "that", "was", "used", "by", "the", "customer", "named", "``", "Tillman", "Ernser", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 20, false], null]]}, "select": [true, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Tillman Ernser\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "query_toks": ["SELECT", "channel_code", ",", "contact_number", "FROM", "customer_contact_channels", "WHERE", "active_to_date", "-", "active_from_date", "=", "(", "SELECT", "active_to_date", "-", "active_from_date", "FROM", "customer_contact_channels", "ORDER", "BY", "(", "active_to_date", "-", "active_from_date", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "channel_code", ",", "contact_number", "from", "customer_contact_channels", "where", "active_to_date", "-", "active_from_date", "=", "(", "select", "active_to_date", "-", "active_from_date", "from", "customer_contact_channels", "order", "by", "(", "active_to_date", "-", "active_from_date", ")", "desc", "limit", "value", ")"], "question": "¿Cuál es el código de canal y número de contacto del canal de atención al cliente que estuvo activo durante más tiempo?\n", "question_toks": ["What", "is", "the", "channel", "code", "and", "contact", "number", "of", "the", "customer", "contact", "channel", "that", "was", "active", "for", "the", "longest", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [1, [0, 23, false], [0, 22, false]], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [1, [0, 23, false], [0, 22, false]]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[1, [0, 23, false], [0, 22, false]]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)", "query_toks": ["SELECT", "channel_code", ",", "contact_number", "FROM", "customer_contact_channels", "WHERE", "active_to_date", "-", "active_from_date", "=", "(", "SELECT", "active_to_date", "-", "active_from_date", "FROM", "customer_contact_channels", "ORDER", "BY", "(", "active_to_date", "-", "active_from_date", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "channel_code", ",", "contact_number", "from", "customer_contact_channels", "where", "active_to_date", "-", "active_from_date", "=", "(", "select", "active_to_date", "-", "active_from_date", "from", "customer_contact_channels", "order", "by", "(", "active_to_date", "-", "active_from_date", ")", "desc", "limit", "value", ")"], "question": "Devuelve el código de canal y el número de contacto del canal de contacto con el cliente cuya duración activa fue la más larga.\n", "question_toks": ["Return", "the", "channel", "code", "and", "contact", "number", "of", "the", "customer", "contact", "channel", "whose", "active", "duration", "was", "the", "longest", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [1, [0, 23, false], [0, 22, false]], {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [1, [0, 23, false], [0, 22, false]]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[1, [0, 23, false], [0, 22, false]]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.active_from_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_contact_channels", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.channel_code", "=", "'Email", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "active_from_date", "from", "customers", "as", "t1", "join", "customer_contact_channels", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "channel_code", "=", "value"], "question": "Encuentre el nombre y la fecha activa del cliente que utiliza el correo electrónico como canal de contacto.\n", "question_toks": ["Find", "the", "name", "and", "active", "date", "of", "the", "customer", "that", "use", "email", "as", "the", "contact", "channel", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Email\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.active_from_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_contact_channels", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "t2.channel_code", "=", "'Email", "'"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "active_from_date", "from", "customers", "as", "t1", "join", "customer_contact_channels", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "channel_code", "=", "value"], "question": "¿Cuáles son el nombre y fecha de actividad de los clientes cuyo código de canal de contacto es el correo electrónico?\n", "question_toks": ["What", "are", "the", "name", "and", "active", "date", "of", "the", "customers", "whose", "contact", "channel", "code", "is", "email", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Email\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)", "query_toks": ["SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "order_items", "AS", "t3", "ON", "t2.order_id", "=", "t3.order_id", "WHERE", "t3.order_quantity", "=", "(", "SELECT", "max", "(", "order_quantity", ")", "FROM", "order_items", ")"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "where", "t3", ".", "order_quantity", "=", "(", "select", "max", "(", "order_quantity", ")", "from", "order_items", ")"], "question": "¿Cuál es el nombre del cliente que realizó el pedido con la mayor cantidad?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "customer", "that", "made", "the", "order", "with", "the", "largest", "quantity", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)", "query_toks": ["SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "order_items", "AS", "t3", "ON", "t2.order_id", "=", "t3.order_id", "WHERE", "t3.order_quantity", "=", "(", "SELECT", "max", "(", "order_quantity", ")", "FROM", "order_items", ")"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "where", "t3", ".", "order_quantity", "=", "(", "select", "max", "(", "order_quantity", ")", "from", "order_items", ")"], "question": "Busque el nombre del cliente que realizó el pedido de la mayor cantidad de mercancías.\n", "question_toks": ["Find", "the", "name", "of", "the", "customer", "who", "made", "the", "order", "of", "the", "largest", "amount", "of", "goods", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 30, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.order_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "order_status", "=", "``", "Delivered", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "order_date", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "order_status", "=", "value"], "question": "Busque el nombre del cliente y la fecha de los pedidos que tienen el estado \"Entregado\".\n", "question_toks": ["Find", "the", "customer", "name", "and", "date", "of", "the", "orders", "that", "have", "the", "status", "``", "Delivered", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Delivered\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"", "query_toks": ["SELECT", "t1.customer_name", ",", "t2.order_date", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "WHERE", "order_status", "=", "``", "Delivered", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", ",", "t2", ".", "order_date", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "order_status", "=", "value"], "question": "¿Cuáles son el nombre del cliente y la fecha de los pedidos cuyo estado es \"Entregado\"?\n", "question_toks": ["What", "are", "the", "customer", "name", "and", "date", "of", "the", "orders", "whose", "status", "is", "``", "Delivered", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 28, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Delivered\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "payment_method", "!", "=", "'Cash", "'"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method", "!", "=", "value"], "question": "Encuentre el nombre de los clientes que no pagaron en efectivo.\n", "question_toks": ["Find", "the", "name", "of", "customers", "who", "did", "not", "pay", "with", "Cash", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 7, [0, [0, 11, false], null], "\"Cash\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "payment_method", "!", "=", "'Cash", "'"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "payment_method", "!", "=", "value"], "question": "¿Cómo se llaman los clientes que no utilizan Efectivo como método de pago?\n", "question_toks": ["What", "is", "the", "name", "of", "customers", "who", "do", "not", "use", "Cash", "as", "payment", "method", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 7, [0, [0, 11, false], null], "\"Cash\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Age FROM artist", "query_toks": ["SELECT", "Age", "FROM", "artist"], "query_toks_no_value": ["select", "age", "from", "artist"], "question": "Enumere la edad de todos los artistas musicales.\n", "question_toks": ["List", "the", "age", "of", "all", "music", "artists", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Age FROM artist", "query_toks": ["SELECT", "Age", "FROM", "artist"], "query_toks_no_value": ["select", "age", "from", "artist"], "question": "¿Cuáles son las edades de todos los artistas musicales?\n", "question_toks": ["What", "are", "the", "ages", "of", "all", "music", "artists", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"", "query_toks": ["SELECT", "Famous_Title", "FROM", "artist", "WHERE", "Artist", "=", "``", "Triumfall", "''"], "query_toks_no_value": ["select", "famous_title", "from", "artist", "where", "artist", "=", "value"], "question": "¿Cuáles son los títulos famosos del artista \"Triumfall\"?\n", "question_toks": ["What", "are", "the", "famous", "titles", "of", "the", "artist", "``", "Triumfall", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Triumfall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"", "query_toks": ["SELECT", "Famous_Title", "FROM", "artist", "WHERE", "Artist", "=", "``", "Triumfall", "''"], "query_toks_no_value": ["select", "famous_title", "from", "artist", "where", "artist", "=", "value"], "question": "Devuelve los famosos títulos del artista llamado \"Triumfall\".\n", "question_toks": ["Return", "the", "famous", "titles", "of", "the", "artist", "called", "``", "Triumfall", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Triumfall\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT distinct(Famous_Release_date) FROM artist", "query_toks": ["SELECT", "distinct", "(", "Famous_Release_date", ")", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "(", "famous_release_date", ")", "from", "artist"], "question": "¿Cuáles son las distintas fechas de lanzamiento de Famous?\n", "question_toks": ["What", "are", "the", "distinct", "Famous", "release", "dates", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT distinct(Famous_Release_date) FROM artist", "query_toks": ["SELECT", "distinct", "(", "Famous_Release_date", ")", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "(", "famous_release_date", ")", "from", "artist"], "question": "Proporcione las distintas fechas de lanzamiento famosas de todos los artistas.\n", "question_toks": ["Give", "the", "distinct", "famous", "release", "dates", "for", "all", "artists", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival", "query_toks": ["SELECT", "Date_of_ceremony", ",", "RESULT", "FROM", "music_festival"], "query_toks_no_value": ["select", "date_of_ceremony", ",", "result", "from", "music_festival"], "question": "Devolver las fechas de ceremonia y los resultados de todos los festivales de música.\n", "question_toks": ["Return", "the", "dates", "of", "ceremony", "and", "the", "results", "of", "all", "music", "festivals"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival", "query_toks": ["SELECT", "Date_of_ceremony", ",", "RESULT", "FROM", "music_festival"], "query_toks_no_value": ["select", "date_of_ceremony", ",", "result", "from", "music_festival"], "question": "¿Cuáles son las fechas de ceremonia y resultados de cada festival de música?\n", "question_toks": ["What", "are", "the", "dates", "of", "ceremony", "and", "results", "for", "each", "music", "festival", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"", "query_toks": ["SELECT", "Category", "FROM", "music_festival", "WHERE", "RESULT", "=", "``", "Awarded", "''"], "query_toks_no_value": ["select", "category", "from", "music_festival", "where", "result", "=", "value"], "question": "¿Cuáles son las categorías de festivales de música con resultado \"Premiado\"?\n", "question_toks": ["What", "are", "the", "category", "of", "music", "festivals", "with", "result", "``", "Awarded", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Awarded\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"", "query_toks": ["SELECT", "Category", "FROM", "music_festival", "WHERE", "RESULT", "=", "``", "Awarded", "''"], "query_toks_no_value": ["select", "category", "from", "music_festival", "where", "result", "=", "value"], "question": "Devuelve las categorías de festivales de música que tienen el resultado \"Premiado\".\n", "question_toks": ["Return", "the", "categories", "of", "music", "festivals", "that", "have", "the", "result", "``", "Awarded", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Awarded\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1", "query_toks": ["SELECT", "Song", "FROM", "volume", "WHERE", "Weeks_on_Top", ">", "1"], "query_toks_no_value": ["select", "song", "from", "volume", "where", "weeks_on_top", ">", "value"], "question": "¿Cuáles son las canciones en volúmenes con más de 1 semana en el tope?\n", "question_toks": ["What", "are", "the", "songs", "in", "volumes", "with", "more", "than", "1", "week", "on", "top", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1", "query_toks": ["SELECT", "Song", "FROM", "volume", "WHERE", "Weeks_on_Top", ">", "1"], "query_toks_no_value": ["select", "song", "from", "volume", "where", "weeks_on_top", ">", "value"], "question": "Entregue las canciones incluidas en volúmenes que tengan más de 1 semana en la parte superior.\n", "question_toks": ["Give", "the", "songs", "included", "in", "volumes", "that", "have", "more", "than", "1", "week", "on", "top", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Artist_ID", ")", "FROM", "volume"], "query_toks_no_value": ["select", "count", "(", "distinct", "artist_id", ")", "from", "volume"], "question": "¿A cuántos artistas distintos se asocian los volúmenes?\n", "question_toks": ["How", "many", "distinct", "artists", "do", "the", "volumes", "associate", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Artist_ID", ")", "FROM", "volume"], "query_toks_no_value": ["select", "count", "(", "distinct", "artist_id", ")", "from", "volume"], "question": "Cuente el número de artistas distintos que tienen volúmenes.\n", "question_toks": ["Count", "the", "number", "of", "distinct", "artists", "who", "have", "volumes", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2", "query_toks": ["SELECT", "T1.Date_of_ceremony", "FROM", "music_festival", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Volume", "=", "T2.Volume_ID", "WHERE", "T2.Weeks_on_Top", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "date_of_ceremony", "from", "music_festival", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "volume", "=", "t2", ".", "volume_id", "where", "t2", ".", "weeks_on_top", ">", "value"], "question": "Por favor mostrar en la parte superior la fecha de ceremonia de los volúmenes que duren más de 2 semanas.\n", "question_toks": ["Please", "show", "the", "date", "of", "ceremony", "of", "the", "volumes", "that", "last", "more", "than", "2", "weeks", "on", "top", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2", "query_toks": ["SELECT", "T1.Date_of_ceremony", "FROM", "music_festival", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Volume", "=", "T2.Volume_ID", "WHERE", "T2.Weeks_on_Top", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "date_of_ceremony", "from", "music_festival", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "volume", "=", "t2", ".", "volume_id", "where", "t2", ".", "weeks_on_top", ">", "value"], "question": "¿Cuáles son las fechas de ceremonia en los festivales de música correspondientes a volúmenes que duraron más de 2 semanas en la cima?\n", "question_toks": ["What", "are", "the", "dates", "of", "ceremony", "at", "music", "festivals", "corresponding", "to", "volumes", "that", "lasted", "more", "than", "2", "weeks", "on", "top", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"", "query_toks": ["SELECT", "T2.Song", "FROM", "music_festival", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Volume", "=", "T2.Volume_ID", "WHERE", "T1.Result", "=", "``", "Nominated", "''"], "query_toks_no_value": ["select", "t2", ".", "song", "from", "music_festival", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "volume", "=", "t2", ".", "volume_id", "where", "t1", ".", "result", "=", "value"], "question": "Por favor muestra las canciones que han resultado \"nominadas\" en festivales de música.\n", "question_toks": ["Please", "show", "the", "songs", "that", "have", "result", "``", "nominated", "''", "at", "music", "festivals", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Nominated\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"", "query_toks": ["SELECT", "T2.Song", "FROM", "music_festival", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Volume", "=", "T2.Volume_ID", "WHERE", "T1.Result", "=", "``", "Nominated", "''"], "query_toks_no_value": ["select", "t2", ".", "song", "from", "music_festival", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "volume", "=", "t2", ".", "volume_id", "where", "t1", ".", "result", "=", "value"], "question": "¿Cuáles son las canciones en volúmenes que han resultado nominadas en festivales de música?\n", "question_toks": ["What", "are", "the", "songs", "in", "volumes", "that", "have", "resulted", "in", "a", "nomination", "at", "music", "festivals", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Nominated\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"", "query_toks": ["SELECT", "T2.Issue_Date", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T1.Artist", "=", "``", "Gorgoroth", "''"], "query_toks_no_value": ["select", "t2", ".", "issue_date", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "artist", "=", "value"], "question": "¿Cuáles son las fechas de publicación de los volúmenes asociados con el artista \"Gorgoroth\"?\n", "question_toks": ["What", "are", "the", "issue", "dates", "of", "volumes", "associated", "with", "the", "artist", "``", "Gorgoroth", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Gorgoroth\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"", "query_toks": ["SELECT", "T2.Issue_Date", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T1.Artist", "=", "``", "Gorgoroth", "''"], "query_toks_no_value": ["select", "t2", ".", "issue_date", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "artist", "=", "value"], "question": "Devuelva las fechas de publicación de los volúmenes del artista llamado Gorgoroth.\n", "question_toks": ["Return", "the", "issue", "dates", "of", "volumes", "that", "are", "by", "the", "artist", "named", "Gorgoroth", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Gorgoroth\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32", "query_toks": ["SELECT", "T2.Song", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T1.age", ">", "=", "32"], "query_toks_no_value": ["select", "t2", ".", "song", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "age", ">", "=", "value"], "question": "¿Cuáles son las canciones en volúmenes asociadas al artista de 32 años o más?\n", "question_toks": ["What", "are", "the", "songs", "in", "volumes", "associated", "with", "the", "artist", "aged", "32", "or", "older", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 5, [0, [0, 3, false], null], 32.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32", "query_toks": ["SELECT", "T2.Song", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T1.age", ">", "=", "32"], "query_toks_no_value": ["select", "t2", ".", "song", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "age", ">", "=", "value"], "question": "Devuelve nombres de canciones en volúmenes de artistas que tienen al menos 32 años.\n", "question_toks": ["Return", "names", "of", "songs", "in", "volumes", "that", "are", "by", "artists", "that", "are", "at", "least", "32", "years", "old", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 5, [0, [0, 3, false], null], 32.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2", "query_toks": ["SELECT", "T1.Famous_Title", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T2.Weeks_on_Top", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "famous_title", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t2", ".", "weeks_on_top", ">", "value"], "question": "¿Cuáles son los títulos famosos de los artistas asociados con volúmenes con más de 2 semanas de antigüedad?\n", "question_toks": ["What", "are", "the", "famous", "title", "of", "the", "artists", "associated", "with", "volumes", "with", "more", "than", "2", "weeks", "on", "top", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2", "query_toks": ["SELECT", "T1.Famous_Title", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T2.Weeks_on_Top", ">", "2"], "query_toks_no_value": ["select", "t1", ".", "famous_title", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t2", ".", "weeks_on_top", ">", "value"], "question": "Devuelve los títulos famosos para artistas que tienen volúmenes que duraron más de 2 semanas en la parte superior.\n", "question_toks": ["Return", "the", "famous", "titles", "for", "artists", "that", "have", "volumes", "that", "lasted", "more", "than", "2", "weeks", "on", "top", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 2.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)", "query_toks": ["SELECT", "Famous_Title", "FROM", "artist", "WHERE", "Artist_ID", "NOT", "IN", "(", "SELECT", "Artist_ID", "FROM", "volume", ")"], "query_toks_no_value": ["select", "famous_title", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "volume", ")"], "question": "Encuentra los títulos famosos de artistas que no tienen ningún volumen.\n", "question_toks": ["Find", "the", "famous", "titles", "of", "artists", "that", "do", "not", "have", "any", "volume", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)", "query_toks": ["SELECT", "Famous_Title", "FROM", "artist", "WHERE", "Artist_ID", "NOT", "IN", "(", "SELECT", "Artist_ID", "FROM", "volume", ")"], "query_toks_no_value": ["select", "famous_title", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "volume", ")"], "question": "¿Cuáles son los títulos famosos de artistas que no tienen volúmenes?\n", "question_toks": ["What", "are", "the", "famous", "titles", "of", "artists", "who", "do", "not", "have", "any", "volumes", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"", "query_toks": ["SELECT", "Date_of_ceremony", "FROM", "music_festival", "WHERE", "Category", "=", "``", "Best", "Song", "''", "AND", "RESULT", "=", "``", "Awarded", "''"], "query_toks_no_value": ["select", "date_of_ceremony", "from", "music_festival", "where", "category", "=", "value", "and", "result", "=", "value"], "question": "¿Cuáles son las fechas de ceremonia de los festivales de música con categoría \"Mejor Canción\" y resultado \"Premiado\"?\n", "question_toks": ["What", "are", "the", "date", "of", "ceremony", "of", "music", "festivals", "with", "category", "``", "Best", "Song", "''", "and", "result", "``", "Awarded", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Best Song\"", null], "and", [false, 2, [0, [0, 17, false], null], "\"Awarded\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"", "query_toks": ["SELECT", "Date_of_ceremony", "FROM", "music_festival", "WHERE", "Category", "=", "``", "Best", "Song", "''", "AND", "RESULT", "=", "``", "Awarded", "''"], "query_toks_no_value": ["select", "date_of_ceremony", "from", "music_festival", "where", "category", "=", "value", "and", "result", "=", "value"], "question": "Devuelve las fechas de ceremonia correspondientes a los festivales de música que tuvieron la categoría “Mejor Canción” y resultado “Premiada”.\n", "question_toks": ["Return", "the", "dates", "of", "ceremony", "corresponding", "to", "music", "festivals", "that", "had", "the", "category", "``", "Best", "Song", "''", "and", "result", "``", "Awarded", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Best Song\"", null], "and", [false, 2, [0, [0, 17, false], null], "\"Awarded\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Artist_ID", ")", "FROM", "volume"], "query_toks_no_value": ["select", "count", "(", "distinct", "artist_id", ")", "from", "volume"], "question": "¿Cuántos artistas distintos tienen volúmenes?\n", "question_toks": ["How", "many", "distinct", "artists", "have", "volumes", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "Artist_ID", ")", "FROM", "volume"], "query_toks_no_value": ["select", "count", "(", "distinct", "artist_id", ")", "from", "volume"], "question": "Cuente el número de artistas que han tenido volúmenes.\n", "question_toks": ["Count", "the", "number", "of", "artists", "who", "have", "had", "volumes", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23", "query_toks": ["SELECT", "Issue_Date", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T1.age", "<", "=", "23"], "query_toks_no_value": ["select", "issue_date", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "age", "<", "=", "value"], "question": "¿Cuáles son las fechas de publicación de los volúmenes asociados con el artista de 23 años o menos?\n", "question_toks": ["What", "are", "the", "issue", "dates", "of", "volumes", "associated", "with", "the", "artist", "aged", "23", "or", "younger", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 6, [0, [0, 3, false], null], 23.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "music_4", "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23", "query_toks": ["SELECT", "Issue_Date", "FROM", "artist", "AS", "T1", "JOIN", "volume", "AS", "T2", "ON", "T1.Artist_ID", "=", "T2.Artist_ID", "WHERE", "T1.age", "<", "=", "23"], "query_toks_no_value": ["select", "issue_date", "from", "artist", "as", "t1", "join", "volume", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "age", "<", "=", "value"], "question": "¿Devolver las fechas de edición de volúmenes de artistas que tengan como máximo 23 años?\n", "question_toks": ["Return", "the", "issue", "dates", "of", "volumes", "by", "artists", "who", "are", "at", "most", "23", "years", "old", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 6, [0, [0, 3, false], null], 23.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "roller_coaster", "query": "SELECT LENGTH ,  Height FROM roller_coaster", "query_toks": ["SELECT", "LENGTH", ",", "Height", "FROM", "roller_coaster"], "query_toks_no_value": ["select", "length", ",", "height", "from", "roller_coaster"], "question": "¿Cuáles son las longitudes y alturas de las montañas rusas?\n", "question_toks": ["What", "are", "the", "lengths", "and", "heights", "of", "roller", "coasters", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "roller_coaster", "query": "SELECT Name FROM country WHERE Languages != \"German\"", "query_toks": ["SELECT", "Name", "FROM", "country", "WHERE", "Languages", "!", "=", "``", "German", "''"], "query_toks_no_value": ["select", "name", "from", "country", "where", "languages", "!", "=", "value"], "question": "Enumere los nombres de países cuyo idioma no es \"alemán\".\n", "question_toks": ["List", "the", "names", "of", "countries", "whose", "language", "is", "not", "``", "German", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"German\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "roller_coaster", "query": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100", "query_toks": ["SELECT", "Status", "FROM", "roller_coaster", "WHERE", "LENGTH", ">", "3300", "OR", "Height", ">", "100"], "query_toks_no_value": ["select", "status", "from", "roller_coaster", "where", "length", ">", "value", "or", "height", ">", "value"], "question": "Muestra los estados de las montañas rusas de más de 3300 o más de 100.\n", "question_toks": ["Show", "the", "statuses", "of", "roller", "coasters", "longer", "than", "3300", "or", "higher", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 3300.0, null], "or", [false, 3, [0, [0, 6, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "roller_coaster", "query": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID", "query_toks": ["SELECT", "T2.Name", ",", "T1.Name", "FROM", "country", "AS", "T1", "JOIN", "roller_coaster", "AS", "T2", "ON", "T1.Country_ID", "=", "T2.Country_ID"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t1", ".", "name", "from", "country", "as", "t1", "join", "roller_coaster", "as", "t2", "on", "t1", ".", "country_id", "=", "t2", ".", "country_id"], "question": "Muestra los nombres de las montañas rusas y los nombres del país en el que se encuentran.\n", "question_toks": ["Show", "the", "names", "of", "roller", "coasters", "and", "names", "of", "country", "they", "are", "in", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name ,  CLASS ,  rank FROM captain", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "rank", "FROM", "captain"], "query_toks_no_value": ["select", "name", ",", "class", ",", "rank", "from", "captain"], "question": "Encuentra el nombre, clase y rango de todos los capitanes.\n", "question_toks": ["Find", "the", "name", ",", "class", "and", "rank", "of", "all", "captains", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name ,  CLASS ,  rank FROM captain", "query_toks": ["SELECT", "name", ",", "CLASS", ",", "rank", "FROM", "captain"], "query_toks_no_value": ["select", "name", ",", "class", ",", "rank", "from", "captain"], "question": "¿Cuáles son los nombres, clases y rangos de todos los capitanes?\n", "question_toks": ["What", "are", "the", "names", ",", "classes", ",", "and", "ranks", "of", "all", "captains", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "query_toks": ["SELECT", "name", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", "OR", "rank", "=", "'Lieutenant", "'"], "query_toks_no_value": ["select", "name", "from", "captain", "where", "rank", "=", "value", "or", "rank", "=", "value"], "question": "Busque el nombre de los capitanes cuyo rango es Guardiamarina o Teniente.\n", "question_toks": ["Find", "the", "name", "of", "captains", "whose", "rank", "are", "either", "Midshipman", "or", "Lieutenant", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Lieutenant\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'", "query_toks": ["SELECT", "name", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", "OR", "rank", "=", "'Lieutenant", "'"], "query_toks_no_value": ["select", "name", "from", "captain", "where", "rank", "=", "value", "or", "rank", "=", "value"], "question": "¿Cuáles son los nombres de los capitanes que tienen el rango de Guardiamarina o Teniente?\n", "question_toks": ["What", "are", "the", "names", "of", "captains", "that", "have", "either", "the", "rank", "Midshipman", "or", "Lieutenant", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Lieutenant\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "¿Cuáles son los nombres y clases de los barcos que aún no tienen capitán?\n", "question_toks": ["what", "are", "the", "names", "and", "classes", "of", "the", "ships", "that", "do", "not", "have", "any", "captain", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "¿Devolver los nombres y clases de barcos que no tienen capitán?\n", "question_toks": ["Return", "the", "names", "and", "classes", "of", "ships", "that", "do", "not", "have", "a", "captain", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "Encuentra el nombre y la bandera de los barcos que no están gobernados por ningún capitán con rango de Guardiamarina.\n", "question_toks": ["Find", "the", "name", "and", "flag", "of", "ships", "that", "are", "not", "steered", "by", "any", "captain", "with", "Midshipman", "rank", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "¿Cuáles son los nombres y banderas de los barcos que no tienen un capitán con rango de Guardiamarina?\n", "question_toks": ["What", "are", "the", "names", "and", "flags", "of", "ships", "that", "do", "not", "have", "a", "captain", "with", "the", "rank", "of", "Midshipman", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"", "query_toks": ["SELECT", "match_id", "FROM", "MATCH", "WHERE", "competition", "=", "``", "1994", "FIFA", "World", "Cup", "qualification", "''"], "query_toks_no_value": ["select", "match_id", "from", "match", "where", "competition", "=", "value"], "question": "¿Encontrar los identificadores de los partidos de las ciudades que albergaron la competición \"Clasificación para la Copa Mundial de la FIFA 1994\"?\n", "question_toks": ["Find", "the", "match", "ids", "of", "the", "cities", "that", "hosted", "competition", "``", "1994", "FIFA", "World", "Cup", "qualification", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"1994 FIFA World Cup qualification\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"", "query_toks": ["SELECT", "match_id", "FROM", "MATCH", "WHERE", "competition", "=", "``", "1994", "FIFA", "World", "Cup", "qualification", "''"], "query_toks_no_value": ["select", "match_id", "from", "match", "where", "competition", "=", "value"], "question": "¿Cuál es el ID del partido de la competición llamada \"Clasificación para la Copa Mundial de la FIFA 1994\"?\n", "question_toks": ["What", "is", "the", "match", "id", "of", "the", "competition", "called", "``", "1994", "FIFA", "World", "Cup", "qualification", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"1994 FIFA World Cup qualification\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010", "query_toks": ["SELECT", "T1.city", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "WHERE", "T2.year", ">", "2010"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "where", "t2", ".", "year", ">", "value"], "question": "¿Encontrar las ciudades que alguna vez fueron ciudades anfitrionas después de 2010?\n", "question_toks": ["Find", "the", "cities", "which", "were", "once", "a", "host", "city", "after", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010", "query_toks": ["SELECT", "T1.city", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "WHERE", "T2.year", ">", "2010"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "where", "t2", ".", "year", ">", "value"], "question": "¿Qué ciudades sirvieron como ciudad anfitriona después de 2010?\n", "question_toks": ["Which", "cities", "served", "as", "a", "host", "city", "after", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"", "query_toks": ["SELECT", "T3.venue", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "JOIN", "MATCH", "AS", "T3", "ON", "T2.match_id", "=", "T3.match_id", "WHERE", "T1.city", "=", "``", "Nanjing", "(", "Jiangsu", ")", "''", "AND", "T3.competition", "=", "``", "1994", "FIFA", "World", "Cup", "qualification", "''"], "query_toks_no_value": ["select", "t3", ".", "venue", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "join", "match", "as", "t3", "on", "t2", ".", "match_id", "=", "t3", ".", "match_id", "where", "t1", ".", "city", "=", "value", "and", "t3", ".", "competition", "=", "value"], "question": "¿Cuál es la sede de la competición \"Clasificación para la Copa Mundial de la FIFA 1994\" organizada por \"Nanjing (Jiangsu)\"?\n", "question_toks": ["What", "is", "the", "venue", "of", "the", "competition", "``", "1994", "FIFA", "World", "Cup", "qualification", "''", "hosted", "by", "``", "Nanjing", "(", "Jiangsu", ")", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Nanjing ( Jiangsu )\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"1994 FIFA World Cup qualification\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"", "query_toks": ["SELECT", "T3.venue", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "JOIN", "MATCH", "AS", "T3", "ON", "T2.match_id", "=", "T3.match_id", "WHERE", "T1.city", "=", "``", "Nanjing", "(", "Jiangsu", ")", "''", "AND", "T3.competition", "=", "``", "1994", "FIFA", "World", "Cup", "qualification", "''"], "query_toks_no_value": ["select", "t3", ".", "venue", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "join", "match", "as", "t3", "on", "t2", ".", "match_id", "=", "t3", ".", "match_id", "where", "t1", ".", "city", "=", "value", "and", "t3", ".", "competition", "=", "value"], "question": "Encuentre la sede de la competición \"Clasificación para la Copa Mundial de la FIFA 1994\", que se celebró en \"Nanjing (Jiangsu)\".\n", "question_toks": ["Find", "the", "venue", "of", "the", "competition", "``", "1994", "FIFA", "World", "Cup", "qualification", "''", "which", "was", "hosted", "by", "``", "Nanjing", "(", "Jiangsu", ")", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null], "and", [false, 2, [0, [0, 26, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Nanjing ( Jiangsu )\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"1994 FIFA World Cup qualification\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"", "query_toks": ["SELECT", "T2.Jan", "FROM", "city", "AS", "T1", "JOIN", "temperature", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "WHERE", "T1.city", "=", "``", "Shanghai", "''"], "query_toks_no_value": ["select", "t2", ".", "jan", "from", "city", "as", "t1", "join", "temperature", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "where", "t1", ".", "city", "=", "value"], "question": "Dame la temperatura de Shanghai en enero.\n", "question_toks": ["Give", "me", "the", "temperature", "of", "Shanghai", "in", "January", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Shanghai\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"", "query_toks": ["SELECT", "T2.Jan", "FROM", "city", "AS", "T1", "JOIN", "temperature", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "WHERE", "T1.city", "=", "``", "Shanghai", "''"], "query_toks_no_value": ["select", "t2", ".", "jan", "from", "city", "as", "t1", "join", "temperature", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "where", "t1", ".", "city", "=", "value"], "question": "¿Cuál es la temperatura de la ciudad \"Shanghai\" en enero?\n", "question_toks": ["What", "is", "the", "temperature", "of", "``", "Shanghai", "''", "city", "in", "January", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Shanghai\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"", "query_toks": ["SELECT", "T2.year", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "WHERE", "T1.city", "=", "``", "Taizhou", "(", "Zhejiang", ")", "''"], "query_toks_no_value": ["select", "t2", ".", "year", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "where", "t1", ".", "city", "=", "value"], "question": "¿Cuál es el año anfitrión de la ciudad \"Taizhou (Zhejiang)\"?\n", "question_toks": ["What", "is", "the", "host", "year", "of", "city", "``", "Taizhou", "(", "Zhejiang", ")", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Taizhou ( Zhejiang )\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"", "query_toks": ["SELECT", "T2.year", "FROM", "city", "AS", "T1", "JOIN", "hosting_city", "AS", "T2", "ON", "T1.city_id", "=", "T2.host_city", "WHERE", "T1.city", "=", "``", "Taizhou", "(", "Zhejiang", ")", "''"], "query_toks_no_value": ["select", "t2", ".", "year", "from", "city", "as", "t1", "join", "hosting_city", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "host_city", "where", "t1", ".", "city", "=", "value"], "question": "¿En qué año la ciudad \"Taizhou (Zhejiang)\" sirvió como ciudad anfitriona?\n", "question_toks": ["IN", "which", "year", "did", "city", "``", "Taizhou", "(", "Zhejiang", ")", "''", "serve", "as", "a", "host", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Taizhou ( Zhejiang )\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct", "query_toks": ["SELECT", "T1.city", "FROM", "city", "AS", "T1", "JOIN", "temperature", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "WHERE", "T2.Mar", "<", "T2.Jul", "OR", "T2.Mar", ">", "T2.Oct"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "city", "as", "t1", "join", "temperature", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "where", "t2", ".", "mar", "<", "t2", ".", "jul", "or", "t2", ".", "mar", ">", "t2", ".", "oct"], "question": "¿Dame una lista de ciudades cuya temperatura en marzo es más baja que la de julio o más alta que la de octubre?\n", "question_toks": ["Give", "me", "a", "list", "of", "cities", "whose", "temperature", "in", "March", "is", "lower", "than", "that", "in", "July", "or", "higher", "than", "that", "in", "Oct", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], [0, 19, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct", "query_toks": ["SELECT", "T1.city", "FROM", "city", "AS", "T1", "JOIN", "temperature", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "WHERE", "T2.Mar", "<", "T2.Jul", "OR", "T2.Mar", ">", "T2.Oct"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "city", "as", "t1", "join", "temperature", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "where", "t2", ".", "mar", "<", "t2", ".", "jul", "or", "t2", ".", "mar", ">", "t2", ".", "oct"], "question": "¿La temperatura de qué ciudades en marzo es más baja que en julio o más alta que en octubre?\n", "question_toks": ["Which", "cities", "'", "temperature", "in", "March", "is", "lower", "than", "that", "in", "July", "or", "higher", "than", "that", "in", "Oct", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], [0, 19, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT city FROM city WHERE regional_population  >  10000000", "query_toks": ["SELECT", "city", "FROM", "city", "WHERE", "regional_population", ">", "10000000"], "query_toks_no_value": ["select", "city", "from", "city", "where", "regional_population", ">", "value"], "question": "Por favor, dame una lista de ciudades cuya población regional sea superior a 10000000.\n", "question_toks": ["Please", "give", "me", "a", "list", "of", "cities", "whose", "regional", "population", "is", "over", "10000000", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 10000000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "city_record", "query": "SELECT city FROM city WHERE regional_population  >  10000000", "query_toks": ["SELECT", "city", "FROM", "city", "WHERE", "regional_population", ">", "10000000"], "query_toks_no_value": ["select", "city", "from", "city", "where", "regional_population", ">", "value"], "question": "¿Qué ciudades tienen una población regional superior a 10000000?\n", "question_toks": ["Which", "cities", "have", "regional", "population", "above", "10000000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 10000000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT DISTINCT form_type_code FROM forms", "query_toks": ["SELECT", "DISTINCT", "form_type_code", "FROM", "forms"], "query_toks_no_value": ["select", "distinct", "form_type_code", "from", "forms"], "question": "Enumere todos los tipos de formularios.\n", "question_toks": ["List", "all", "the", "types", "of", "forms", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT DISTINCT form_type_code FROM forms", "query_toks": ["SELECT", "DISTINCT", "form_type_code", "FROM", "forms"], "query_toks_no_value": ["select", "distinct", "form_type_code", "from", "forms"], "question": "¿Cuáles son los diferentes tipos de formularios?\n", "question_toks": ["What", "are", "the", "different", "types", "of", "forms", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "query_toks": ["SELECT", "payment_method_code", ",", "party_phone", "FROM", "parties", "WHERE", "party_email", "=", "``", "enrico09", "@", "example.com", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "party_phone", "from", "parties", "where", "party_email", "=", "value"], "question": "Encuentra el método de pago y teléfono del partido con el correo electrónico \"enrico09@example.com\".\n", "question_toks": ["Find", "the", "payment", "method", "and", "phone", "of", "the", "party", "with", "email", "``", "enrico09", "@", "example.com", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], "\"enrico09@example.com\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "query_toks": ["SELECT", "payment_method_code", ",", "party_phone", "FROM", "parties", "WHERE", "party_email", "=", "``", "enrico09", "@", "example.com", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "party_phone", "from", "parties", "where", "party_email", "=", "value"], "question": "¿Cuál es el código de método de pago y teléfono del partido con el correo electrónico 'enrico09@example.com'?\n", "question_toks": ["What", "is", "the", "payment", "method", "code", "and", "party", "phone", "of", "the", "party", "with", "the", "email", "'enrico09", "@", "example.com", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], "\"enrico09@example.com\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "t1.party_email", "FROM", "parties", "AS", "t1", "JOIN", "party_forms", "AS", "t2", "ON", "t1.party_id", "=", "t2.party_id", "WHERE", "t2.form_id", "=", "(", "SELECT", "form_id", "FROM", "party_forms", "GROUP", "BY", "form_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "party_email", "from", "parties", "as", "t1", "join", "party_forms", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "where", "t2", ".", "form_id", "=", "(", "select", "form_id", "from", "party_forms", "group", "by", "form_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Encuentra los correos electrónicos de los partidos con el formulario de partido más popular.\n", "question_toks": ["Find", "the", "emails", "of", "parties", "with", "the", "most", "popular", "party", "form", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [[0, 42, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "t1.party_email", "FROM", "parties", "AS", "t1", "JOIN", "party_forms", "AS", "t2", "ON", "t1.party_id", "=", "t2.party_id", "WHERE", "t2.form_id", "=", "(", "SELECT", "form_id", "FROM", "party_forms", "GROUP", "BY", "form_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "party_email", "from", "parties", "as", "t1", "join", "party_forms", "as", "t2", "on", "t1", ".", "party_id", "=", "t2", ".", "party_id", "where", "t2", ".", "form_id", "=", "(", "select", "form_id", "from", "party_forms", "group", "by", "form_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "¿Cuáles son los correos electrónicos de partidos asociados con partidos que utilizaron el formulario de partido más común?\n", "question_toks": ["What", "are", "the", "party", "emails", "associated", "with", "parties", "that", "used", "the", "party", "form", "that", "is", "the", "most", "common", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 42, false], null], {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [[0, 42, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"", "query_toks": ["SELECT", "organization_name", "FROM", "organizations", "WHERE", "organization_name", "LIKE", "``", "%", "Party", "%", "''"], "query_toks_no_value": ["select", "organization_name", "from", "organizations", "where", "organization_name", "like", "value"], "question": "Busque el nombre de las organizaciones cuyos nombres contienen \"Partido\".\n", "question_toks": ["Find", "the", "name", "of", "organizations", "whose", "names", "contain", "``", "Party", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 9, [0, [0, 26, false], null], "\"%Party%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"", "query_toks": ["SELECT", "organization_name", "FROM", "organizations", "WHERE", "organization_name", "LIKE", "``", "%", "Party", "%", "''"], "query_toks_no_value": ["select", "organization_name", "from", "organizations", "where", "organization_name", "like", "value"], "question": "¿Cuáles son los nombres de las organizaciones que contienen la palabra \"Partido\"?\n", "question_toks": ["What", "are", "the", "names", "of", "organizations", "that", "contain", "the", "word", "``", "Party", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 9, [0, [0, 26, false], null], "\"%Party%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"", "query_toks": ["SELECT", "state_province_county", "FROM", "addresses", "WHERE", "line_1_number_building", "LIKE", "``", "%", "6862", "Kaitlyn", "Knolls", "%", "''"], "query_toks_no_value": ["select", "state_province_county", "from", "addresses", "where", "line_1_number_building", "like", "value"], "question": "¿En qué estado puede estar la dirección \"6862 Kaitlyn Knolls\"?\n", "question_toks": ["Which", "state", "can", "address", "``", "6862", "Kaitlyn", "Knolls", "''", "possibly", "be", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%6862 Kaitlyn Knolls%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"", "query_toks": ["SELECT", "state_province_county", "FROM", "addresses", "WHERE", "line_1_number_building", "LIKE", "``", "%", "6862", "Kaitlyn", "Knolls", "%", "''"], "query_toks_no_value": ["select", "state_province_county", "from", "addresses", "where", "line_1_number_building", "like", "value"], "question": "Indique el estado correspondiente al número de línea del edificio \"6862 Kaitlyn Knolls\".\n", "question_toks": ["Give", "the", "state", "corresponding", "to", "the", "line", "number", "building", "``", "6862", "Kaitlyn", "Knolls", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%6862 Kaitlyn Knolls%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id", "query_toks": ["SELECT", "DISTINCT", "t1.individual_last_name", "FROM", "individuals", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.individual_id", "=", "t2.individual_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "individual_last_name", "from", "individuals", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "individual_id", "=", "t2", ".", "individual_id"], "question": "Encuentre el apellido de las personas que han sido personas de contacto de una organización.\n", "question_toks": ["Find", "the", "last", "name", "of", "the", "individuals", "that", "have", "been", "contact", "individuals", "of", "an", "organization", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 32, false], null]]}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "e_government", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id", "query_toks": ["SELECT", "DISTINCT", "t1.individual_last_name", "FROM", "individuals", "AS", "t1", "JOIN", "organization_contact_individuals", "AS", "t2", "ON", "t1.individual_id", "=", "t2.individual_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "individual_last_name", "from", "individuals", "as", "t1", "join", "organization_contact_individuals", "as", "t2", "on", "t1", ".", "individual_id", "=", "t2", ".", "individual_id"], "question": "¿Cuáles son los apellidos de las personas que han sido personas de contacto de una organización?\n", "question_toks": ["What", "are", "the", "last", "names", "of", "individuals", "who", "have", "been", "contact", "individuals", "for", "an", "organization", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 32, false], null]]}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT name ,  home_city ,  age FROM driver", "query_toks": ["SELECT", "name", ",", "home_city", ",", "age", "FROM", "driver"], "query_toks_no_value": ["select", "name", ",", "home_city", ",", "age", "from", "driver"], "question": "Muestra el nombre, la ciudad de residencia y la edad de todos los conductores.\n", "question_toks": ["Show", "the", "name", ",", "home", "city", ",", "and", "age", "for", "all", "drivers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT DISTINCT home_city FROM driver", "query_toks": ["SELECT", "DISTINCT", "home_city", "FROM", "driver"], "query_toks_no_value": ["select", "distinct", "home_city", "from", "driver"], "question": "Mostrar todas las diferentes ciudades de origen.\n", "question_toks": ["Show", "all", "different", "home", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40", "query_toks": ["SELECT", "party", "FROM", "driver", "WHERE", "home_city", "=", "'Hartford", "'", "AND", "age", ">", "40"], "query_toks_no_value": ["select", "party", "from", "driver", "where", "home_city", "=", "value", "and", "age", ">", "value"], "question": "Muestre la fiesta con conductores de Hartford y conductores mayores de 40 años.\n", "question_toks": ["Show", "the", "party", "with", "drivers", "from", "Hartford", "and", "drivers", "older", "than", "40", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hartford\"", null], "and", [false, 3, [0, [0, 5, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)", "query_toks": ["SELECT", "name", "FROM", "driver", "WHERE", "driver_id", "NOT", "IN", "(", "SELECT", "driver_id", "FROM", "school_bus", ")"], "query_toks_no_value": ["select", "name", "from", "driver", "where", "driver_id", "not", "in", "(", "select", "driver_id", "from", "school_bus", ")"], "question": "Muestre los nombres de los conductores sin autobús escolar.\n", "question_toks": ["Show", "the", "names", "of", "the", "drivers", "without", "a", "school", "bus", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id", "query_toks": ["SELECT", "T2.school", ",", "T3.name", "FROM", "school_bus", "AS", "T1", "JOIN", "school", "AS", "T2", "ON", "T1.school_id", "=", "T2.school_id", "JOIN", "driver", "AS", "T3", "ON", "T1.driver_id", "=", "T3.driver_id"], "query_toks_no_value": ["select", "t2", ".", "school", ",", "t3", ".", "name", "from", "school_bus", "as", "t1", "join", "school", "as", "t2", "on", "t1", ".", "school_id", "=", "t2", ".", "school_id", "join", "driver", "as", "t3", "on", "t1", ".", "driver_id", "=", "t3", ".", "driver_id"], "question": "Muestre el nombre de la escuela y el nombre del conductor de todos los autobuses escolares.\n", "question_toks": ["Show", "the", "school", "name", "and", "driver", "name", "for", "all", "school", "buses", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)", "query_toks": ["SELECT", "school", ",", "TYPE", "FROM", "school", "WHERE", "school_id", "NOT", "IN", "(", "SELECT", "school_id", "FROM", "school_bus", ")"], "query_toks_no_value": ["select", "school", ",", "type", "from", "school", "where", "school_id", "not", "in", "(", "select", "school_id", "from", "school_bus", ")"], "question": "Muestre el nombre y el tipo de escuela para las escuelas sin autobús escolar.\n", "question_toks": ["Show", "the", "school", "name", "and", "type", "for", "schools", "without", "a", "school", "bus", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "school_bus", "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40", "query_toks": ["SELECT", "name", "FROM", "driver", "WHERE", "home_city", "=", "'Hartford", "'", "AND", "age", "<", "40"], "query_toks_no_value": ["select", "name", "from", "driver", "where", "home_city", "=", "value", "and", "age", "<", "value"], "question": "Enumere los nombres de los conductores de la ciudad de Hartford y menores de 40 años.\n", "question_toks": ["List", "names", "for", "drivers", "from", "Hartford", "city", "and", "younger", "than", "40", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Hartford\"", null], "and", [false, 4, [0, [0, 5, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_company", "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id", "query_toks": ["SELECT", "T1.name", ",", "T1.type", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "type", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id"], "question": "¿Cuáles son los nombres y tipos de compañías que alguna vez han operado un vuelo?\n", "question_toks": ["What", "are", "the", "names", "and", "types", "of", "the", "companies", "that", "have", "ever", "operated", "a", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 20, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_company", "query": "SELECT name FROM airport WHERE country != 'Iceland'", "query_toks": ["SELECT", "name", "FROM", "airport", "WHERE", "country", "!", "=", "'Iceland", "'"], "query_toks_no_value": ["select", "name", "from", "airport", "where", "country", "!", "=", "value"], "question": "¿Cómo se llaman los aeropuertos que no están en el país 'Islandia'?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "airports", "which", "are", "not", "in", "the", "country", "'Iceland", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"Iceland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_company", "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200", "query_toks": ["SELECT", "DISTINCT", "T1.type", "FROM", "operate_company", "AS", "T1", "JOIN", "flight", "AS", "t2", "ON", "T1.id", "=", "T2.company_id", "WHERE", "T2.velocity", "<", "200"], "query_toks_no_value": ["select", "distinct", "t1", ".", "type", "from", "operate_company", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "company_id", "where", "t2", ".", "velocity", "<", "value"], "question": "¿Cuáles son los distintos tipos de compañías que han operado vuelos con una velocidad inferior a 200?\n", "question_toks": ["What", "are", "the", "distinct", "types", "of", "the", "companies", "that", "have", "operated", "any", "flights", "with", "velocity", "less", "than", "200", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 20, false], null]]}, "select": [true, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 17, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_company", "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'", "query_toks": ["SELECT", "DISTINCT", "T2.pilot", "FROM", "airport", "AS", "T1", "JOIN", "flight", "AS", "T2", "ON", "T1.id", "=", "T2.airport_id", "WHERE", "T1.country", "=", "'United", "States", "'", "OR", "T1.name", "=", "'Billund", "Airport", "'"], "query_toks_no_value": ["select", "distinct", "t2", ".", "pilot", "from", "airport", "as", "t1", "join", "flight", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "airport_id", "where", "t1", ".", "country", "=", "value", "or", "t1", ".", "name", "=", "value"], "question": "¿Cuáles son los diferentes nombres de pilotos que pilotaron un vuelo en el país 'Estados Unidos' o en el aeropuerto llamado 'Aeropuerto de Billund'?\n", "question_toks": ["What", "are", "the", "different", "pilot", "names", "who", "had", "piloted", "a", "flight", "in", "the", "country", "'United", "States", "'", "or", "in", "the", "airport", "named", "'Billund", "Airport", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 19, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"United States\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Billund Airport\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_company", "query": "SELECT name FROM airport WHERE name LIKE '%international%'", "query_toks": ["SELECT", "name", "FROM", "airport", "WHERE", "name", "LIKE", "'", "%", "international", "%", "'"], "query_toks_no_value": ["select", "name", "from", "airport", "where", "name", "like", "value"], "question": "¿Cuál de los nombres de aeropuertos contiene la palabra \"internacional\"?\n", "question_toks": ["Which", "of", "the", "airport", "names", "contains", "the", "word", "'international", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%international%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT account_id ,  account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "account_details", "from", "accounts"], "question": "Mostrar todos los identificadores y detalles de la cuenta.\n", "question_toks": ["Show", "all", "account", "ids", "and", "account", "details", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT account_id ,  account_details FROM Accounts", "query_toks": ["SELECT", "account_id", ",", "account_details", "FROM", "Accounts"], "query_toks_no_value": ["select", "account_id", ",", "account_details", "from", "accounts"], "question": "¿Cuáles son los identificadores y detalles de todas las cuentas?\n", "question_toks": ["What", "are", "the", "ids", "and", "details", "of", "all", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "query_toks": ["SELECT", "STATEMENT_ID", ",", "statement_details", "FROM", "Statements"], "query_toks_no_value": ["select", "statement_id", ",", "statement_details", "from", "statements"], "question": "Enumere todos los identificadores y detalles de los extractos.\n", "question_toks": ["List", "all", "statement", "ids", "and", "statement", "details", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "query_toks": ["SELECT", "STATEMENT_ID", ",", "statement_details", "FROM", "Statements"], "query_toks_no_value": ["select", "statement_id", ",", "statement_details", "from", "statements"], "question": "¿Cuáles son los identificadores y detalles de todas las declaraciones?\n", "question_toks": ["What", "are", "the", "ids", "and", "details", "of", "all", "statements", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id", "query_toks": ["SELECT", "T1.statement_id", ",", "T2.statement_details", ",", "T1.account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Statements", "AS", "T2", "ON", "T1.statement_id", "=", "T2.statement_id"], "query_toks_no_value": ["select", "t1", ".", "statement_id", ",", "t2", ".", "statement_details", ",", "t1", ".", "account_details", "from", "accounts", "as", "t1", "join", "statements", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "statement_id"], "question": "Mostrar identificación del estado de cuenta, detalle del estado de cuenta, detalle de la cuenta para las cuentas.\n", "question_toks": ["Show", "statement", "id", ",", "statement", "detail", ",", "account", "detail", "for", "accounts", "."], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id", "query_toks": ["SELECT", "T1.statement_id", ",", "T2.statement_details", ",", "T1.account_details", "FROM", "Accounts", "AS", "T1", "JOIN", "Statements", "AS", "T2", "ON", "T1.statement_id", "=", "T2.statement_id"], "query_toks_no_value": ["select", "t1", ".", "statement_id", ",", "t2", ".", "statement_details", ",", "t1", ".", "account_details", "from", "accounts", "as", "t1", "join", "statements", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "statement_id"], "question": "¿Cuáles son los identificadores de extracto, los detalles del extracto y los detalles de la cuenta para todas las cuentas?\n", "question_toks": ["What", "are", "the", "statement", "ids", ",", "statement", "details", ",", "and", "account", "details", ",", "for", "all", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "query_toks": ["SELECT", "document_type_code", ",", "document_name", ",", "document_description", "FROM", "Documents", "WHERE", "document_name", "=", "'Noel", "CV", "'", "OR", "document_name", "=", "'King", "Book", "'"], "query_toks_no_value": ["select", "document_type_code", ",", "document_name", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", "or", "document_name", "=", "value"], "question": "Enumere el código de tipo de documento, el nombre del documento y la descripción del documento con el nombre 'Noel CV' o el nombre 'King Book'.\n", "question_toks": ["List", "the", "document", "type", "code", ",", "document", "name", ",", "and", "document", "description", "for", "the", "document", "with", "name", "'Noel", "CV", "'", "or", "name", "'King", "Book", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Noel CV\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"King Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'", "query_toks": ["SELECT", "document_type_code", ",", "document_name", ",", "document_description", "FROM", "Documents", "WHERE", "document_name", "=", "'Noel", "CV", "'", "OR", "document_name", "=", "'King", "Book", "'"], "query_toks_no_value": ["select", "document_type_code", ",", "document_name", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", "or", "document_name", "=", "value"], "question": "¿Cuáles son el tipo, nombre y descripción del documento que tiene el nombre 'Noel CV' o 'King Book'?\n", "question_toks": ["What", "are", "the", "type", "come", ",", "name", ",", "and", "description", "of", "the", "document", "that", "has", "either", "the", "name", "'Noel", "CV", "'", "or", "'King", "Book", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Noel CV\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"King Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_id ,  document_name FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", "from", "documents"], "question": "Muestra los identificadores y nombres de todos los documentos.\n", "question_toks": ["Show", "the", "ids", "and", "names", "of", "all", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_id ,  document_name FROM Documents", "query_toks": ["SELECT", "document_id", ",", "document_name", "FROM", "Documents"], "query_toks_no_value": ["select", "document_id", ",", "document_name", "from", "documents"], "question": "¿Cuáles son los identificadores y nombres de cada uno de los documentos?\n", "question_toks": ["What", "are", "the", "ids", "and", "names", "for", "each", "of", "the", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"", "query_toks": ["SELECT", "document_name", ",", "document_id", "FROM", "Documents", "WHERE", "document_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "document_name", ",", "document_id", "from", "documents", "where", "document_type_code", "=", "value"], "question": "Encuentre nombres e identificaciones de todos los documentos con el código de tipo de documento BK.\n", "question_toks": ["Find", "names", "and", "ids", "of", "all", "documents", "with", "document", "type", "code", "BK", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"", "query_toks": ["SELECT", "document_name", ",", "document_id", "FROM", "Documents", "WHERE", "document_type_code", "=", "``", "BK", "''"], "query_toks_no_value": ["select", "document_name", ",", "document_id", "from", "documents", "where", "document_type_code", "=", "value"], "question": "¿Cuáles son los nombres y los identificadores de los documentos que tienen el código de tipo BK?\n", "question_toks": ["What", "are", "the", "names", "and", "ids", "of", "documents", "that", "have", "the", "type", "code", "BK", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'", "query_toks": ["SELECT", "document_name", ",", "document_date", "FROM", "Documents", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.project_details", "=", "'Graph", "Database", "project", "'"], "query_toks_no_value": ["select", "document_name", ",", "document_date", "from", "documents", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "project_details", "=", "value"], "question": "Muestre el nombre del documento y la fecha del documento para todos los documentos del proyecto con detalles 'Proyecto de base de datos de gráficos'.\n", "question_toks": ["Show", "the", "document", "name", "and", "the", "document", "date", "for", "all", "documents", "on", "project", "with", "details", "'Graph", "Database", "project", "'", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Graph Database project\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'", "query_toks": ["SELECT", "document_name", ",", "document_date", "FROM", "Documents", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.project_details", "=", "'Graph", "Database", "project", "'"], "query_toks_no_value": ["select", "document_name", ",", "document_date", "from", "documents", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "project_details", "=", "value"], "question": "¿Cuáles son los nombres y fechas de los documentos correspondientes al proyecto que tiene los detalles 'Proyecto de base de datos de gráficos'?\n", "question_toks": ["What", "are", "the", "names", "and", "dates", "for", "documents", "corresponding", "to", "project", "that", "has", "the", "details", "'Graph", "Database", "project", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Graph Database project\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'", "query_toks": ["SELECT", "T1.statement_details", ",", "T2.document_name", "FROM", "Statements", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.statement_id", "=", "T2.document_id", "WHERE", "T1.statement_details", "=", "'Private", "Project", "'"], "query_toks_no_value": ["select", "t1", ".", "statement_details", ",", "t2", ".", "document_name", "from", "statements", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "document_id", "where", "t1", ".", "statement_details", "=", "value"], "question": "Muestra el detalle del extracto y el nombre del documento correspondiente al extracto con detalle 'Proyecto Privado'.\n", "question_toks": ["Show", "the", "statement", "detail", "and", "the", "corresponding", "document", "name", "for", "the", "statement", "with", "detail", "'Private", "Project", "'", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Private Project\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'", "query_toks": ["SELECT", "T1.statement_details", ",", "T2.document_name", "FROM", "Statements", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.statement_id", "=", "T2.document_id", "WHERE", "T1.statement_details", "=", "'Private", "Project", "'"], "query_toks_no_value": ["select", "t1", ".", "statement_details", ",", "t2", ".", "document_name", "from", "statements", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "statement_id", "=", "t2", ".", "document_id", "where", "t1", ".", "statement_details", "=", "value"], "question": "¿Cuáles son los detalles de las declaraciones con el detalle 'Proyecto Privado' y cómo se llaman los documentos correspondientes?\n", "question_toks": ["What", "are", "the", "details", "for", "statements", "with", "the", "details", "'Private", "Project", "'", ",", "and", "what", "are", "the", "names", "of", "the", "corresponding", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Private Project\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", ",", "document_type_description", "from", "ref_document_types"], "question": "Mostrar todos los códigos de tipos de documentos, nombres de tipos de documentos y descripciones de tipos de documentos.\n", "question_toks": ["Show", "all", "document", "type", "codes", ",", "document", "type", "names", ",", "document", "type", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types", "query_toks": ["SELECT", "document_type_code", ",", "document_type_name", ",", "document_type_description", "FROM", "Ref_document_types"], "query_toks_no_value": ["select", "document_type_code", ",", "document_type_name", ",", "document_type_description", "from", "ref_document_types"], "question": "¿Cuáles son los códigos, nombres y descripciones de los diferentes tipos de documentos?\n", "question_toks": ["What", "are", "the", "codes", ",", "names", ",", "and", "descriptions", "of", "the", "different", "document", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"", "query_toks": ["SELECT", "document_type_description", "FROM", "Ref_document_types", "WHERE", "document_type_name", "=", "``", "Film", "''"], "query_toks_no_value": ["select", "document_type_description", "from", "ref_document_types", "where", "document_type_name", "=", "value"], "question": "¿Cuál es la descripción del tipo de documento para el tipo de documento denominado Película?\n", "question_toks": ["What", "is", "the", "document", "type", "description", "for", "document", "type", "named", "Film", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Film\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"", "query_toks": ["SELECT", "document_type_description", "FROM", "Ref_document_types", "WHERE", "document_type_name", "=", "``", "Film", "''"], "query_toks_no_value": ["select", "document_type_description", "from", "ref_document_types", "where", "document_type_name", "=", "value"], "question": "Devuelve la descripción del nombre del tipo de documento 'Película'.\n", "question_toks": ["Return", "the", "description", "of", "the", "document", "type", "name", "'Film", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Film\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code", "query_toks": ["SELECT", "T1.document_type_name", ",", "T1.document_type_description", ",", "T2.Document_date", "FROM", "Ref_document_types", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code"], "query_toks_no_value": ["select", "t1", ".", "document_type_name", ",", "t1", ".", "document_type_description", ",", "t2", ".", "document_date", "from", "ref_document_types", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code"], "question": "¿Cuál es el nombre del tipo de documento y la descripción del tipo de documento y la fecha de creación de todos los documentos?\n", "question_toks": ["What", "is", "the", "document", "type", "name", "and", "the", "document", "type", "description", "and", "creation", "date", "for", "all", "the", "documents", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code", "query_toks": ["SELECT", "T1.document_type_name", ",", "T1.document_type_description", ",", "T2.Document_date", "FROM", "Ref_document_types", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.document_type_code", "=", "T2.document_type_code"], "query_toks_no_value": ["select", "t1", ".", "document_type_name", ",", "t1", ".", "document_type_description", ",", "t2", ".", "document_date", "from", "ref_document_types", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "document_type_code", "=", "t2", ".", "document_type_code"], "question": "Devuelve el nombre del tipo, la descripción del tipo y la fecha de creación de cada documento.\n", "question_toks": ["Return", "the", "type", "name", ",", "type", "description", ",", "and", "date", "of", "creation", "for", "each", "document", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT project_id ,  project_details FROM Projects", "query_toks": ["SELECT", "project_id", ",", "project_details", "FROM", "Projects"], "query_toks_no_value": ["select", "project_id", ",", "project_details", "from", "projects"], "question": "Enumere los identificadores y detalles de todos los proyectos.\n", "question_toks": ["List", "ids", "and", "details", "for", "all", "projects", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT project_id ,  project_details FROM Projects", "query_toks": ["SELECT", "project_id", ",", "project_details", "FROM", "Projects"], "query_toks_no_value": ["select", "project_id", ",", "project_details", "from", "projects"], "question": "¿Cuáles son los identificadores y detalles de cada proyecto?\n", "question_toks": ["What", "are", "the", "ids", "and", "details", "for", "each", "project", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"", "query_toks": ["SELECT", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.document_name", "=", "``", "King", "Book", "''"], "query_toks_no_value": ["select", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "document_name", "=", "value"], "question": "¿Cuál es el detalle del proyecto con el documento \"King Book\"?\n", "question_toks": ["What", "is", "the", "project", "detail", "for", "the", "project", "with", "document", "``", "King", "Book", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"King Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"", "query_toks": ["SELECT", "T1.project_details", "FROM", "Projects", "AS", "T1", "JOIN", "Documents", "AS", "T2", "ON", "T1.project_id", "=", "T2.project_id", "WHERE", "T2.document_name", "=", "``", "King", "Book", "''"], "query_toks_no_value": ["select", "t1", ".", "project_details", "from", "projects", "as", "t1", "join", "documents", "as", "t2", "on", "t1", ".", "project_id", "=", "t2", ".", "project_id", "where", "t2", ".", "document_name", "=", "value"], "question": "Proporcione los detalles del proyecto con el nombre del documento 'King Book'.\n", "question_toks": ["Give", "the", "details", "of", "the", "project", "with", "the", "document", "name", "'King", "Book", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"King Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes", "query_toks": ["SELECT", "budget_type_code", ",", "budget_type_description", "FROM", "Ref_budget_codes"], "query_toks_no_value": ["select", "budget_type_code", ",", "budget_type_description", "from", "ref_budget_codes"], "question": "Enumere todos los códigos y descripciones de tipos de presupuesto.\n", "question_toks": ["List", "all", "budget", "type", "codes", "and", "descriptions", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes", "query_toks": ["SELECT", "budget_type_code", ",", "budget_type_description", "FROM", "Ref_budget_codes"], "query_toks_no_value": ["select", "budget_type_code", ",", "budget_type_description", "from", "ref_budget_codes"], "question": "¿Cuáles son los códigos de tipo y las descripciones de cada tipo de presupuesto?\n", "question_toks": ["What", "are", "the", "type", "codes", "and", "descriptions", "of", "each", "budget", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"", "query_toks": ["SELECT", "budget_type_description", "FROM", "Ref_budget_codes", "WHERE", "budget_type_code", "=", "``", "ORG", "''"], "query_toks_no_value": ["select", "budget_type_description", "from", "ref_budget_codes", "where", "budget_type_code", "=", "value"], "question": "¿Cuál es la descripción del tipo de presupuesto con código ORG?\n", "question_toks": ["What", "is", "the", "description", "for", "the", "budget", "type", "with", "code", "ORG", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"ORG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"", "query_toks": ["SELECT", "budget_type_description", "FROM", "Ref_budget_codes", "WHERE", "budget_type_code", "=", "``", "ORG", "''"], "query_toks_no_value": ["select", "budget_type_description", "from", "ref_budget_codes", "where", "budget_type_code", "=", "value"], "question": "Devuelve la descripción del tipo de presupuesto que tiene el código ORG.\n", "question_toks": ["Return", "the", "description", "of", "the", "budget", "type", "that", "has", "the", "code", "ORG", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"ORG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'", "query_toks": ["SELECT", "document_id", "FROM", "Documents_with_expenses", "WHERE", "budget_type_code", "=", "'SF", "'"], "query_toks_no_value": ["select", "document_id", "from", "documents_with_expenses", "where", "budget_type_code", "=", "value"], "question": "¿Cuáles son los identificadores de documentos para el código de tipo de presupuesto 'SF'?\n", "question_toks": ["What", "are", "the", "document", "ids", "for", "the", "budget", "type", "code", "'SF", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"SF\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'", "query_toks": ["SELECT", "document_id", "FROM", "Documents_with_expenses", "WHERE", "budget_type_code", "=", "'SF", "'"], "query_toks_no_value": ["select", "document_id", "from", "documents_with_expenses", "where", "budget_type_code", "=", "value"], "question": "Proporcione los identificadores de los documentos con gastos que tengan el código de presupuesto 'SF'.\n", "question_toks": ["Give", "the", "ids", "of", "documents", "with", "expenses", "that", "have", "the", "budget", "code", "'SF", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"SF\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code", "query_toks": ["SELECT", "T2.budget_type_code", ",", "T2.budget_type_description", ",", "T1.document_id", "FROM", "Documents_with_expenses", "AS", "T1", "JOIN", "Ref_budget_codes", "AS", "T2", "ON", "T1.budget_type_code", "=", "T2.budget_type_code"], "query_toks_no_value": ["select", "t2", ".", "budget_type_code", ",", "t2", ".", "budget_type_description", ",", "t1", ".", "document_id", "from", "documents_with_expenses", "as", "t1", "join", "ref_budget_codes", "as", "t2", "on", "t1", ".", "budget_type_code", "=", "t2", ".", "budget_type_code"], "question": "Mostrar el código y descripción del tipo de presupuesto y el id del documento correspondiente.\n", "question_toks": ["Show", "the", "budget", "type", "code", "and", "description", "and", "the", "corresponding", "document", "id", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code", "query_toks": ["SELECT", "T2.budget_type_code", ",", "T2.budget_type_description", ",", "T1.document_id", "FROM", "Documents_with_expenses", "AS", "T1", "JOIN", "Ref_budget_codes", "AS", "T2", "ON", "T1.budget_type_code", "=", "T2.budget_type_code"], "query_toks_no_value": ["select", "t2", ".", "budget_type_code", ",", "t2", ".", "budget_type_description", ",", "t1", ".", "document_id", "from", "documents_with_expenses", "as", "t1", "join", "ref_budget_codes", "as", "t2", "on", "t1", ".", "budget_type_code", "=", "t2", ".", "budget_type_code"], "question": "Devuelve los códigos de tipo de presupuesto, las descripciones de tipo de presupuesto y los identificadores de documentos para documentos con gastos.\n", "question_toks": ["Return", "the", "budget", "type", "codes", ",", "budget", "type", "descriptions", "and", "document", "ids", "for", "documents", "with", "expenses", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"", "query_toks": ["SELECT", "T1.document_id", "FROM", "Documents_with_expenses", "AS", "T1", "JOIN", "Ref_Budget_Codes", "AS", "T2", "ON", "T1.Budget_Type_code", "=", "T2.Budget_Type_code", "WHERE", "T2.budget_type_Description", "=", "``", "Government", "''"], "query_toks_no_value": ["select", "t1", ".", "document_id", "from", "documents_with_expenses", "as", "t1", "join", "ref_budget_codes", "as", "t2", "on", "t1", ".", "budget_type_code", "=", "t2", ".", "budget_type_code", "where", "t2", ".", "budget_type_description", "=", "value"], "question": "Mostrar identificadores de todos los documentos con tipos de presupuesto descritos como \"Gobierno\".\n", "question_toks": ["Show", "ids", "for", "all", "documents", "with", "budget", "types", "described", "as", "'Government", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Government\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"", "query_toks": ["SELECT", "T1.document_id", "FROM", "Documents_with_expenses", "AS", "T1", "JOIN", "Ref_Budget_Codes", "AS", "T2", "ON", "T1.Budget_Type_code", "=", "T2.Budget_Type_code", "WHERE", "T2.budget_type_Description", "=", "``", "Government", "''"], "query_toks_no_value": ["select", "t1", ".", "document_id", "from", "documents_with_expenses", "as", "t1", "join", "ref_budget_codes", "as", "t2", "on", "t1", ".", "budget_type_code", "=", "t2", ".", "budget_type_code", "where", "t2", ".", "budget_type_description", "=", "value"], "question": "Proporcione los identificadores de los documentos que tengan la descripción del presupuesto \"Gobierno\".\n", "question_toks": ["Give", "the", "ids", "for", "documents", "that", "have", "the", "budget", "description", "'Government", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Government\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'", "query_toks": ["SELECT", "T1.document_id", "FROM", "Documents", "AS", "T1", "JOIN", "Documents_with_expenses", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T1.document_name", "LIKE", "'", "%", "s", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "document_id", "from", "documents", "as", "t1", "join", "documents_with_expenses", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t1", ".", "document_name", "like", "value"], "question": "¿Cuáles son los identificadores de los documentos con la letra 's' en el nombre con cualquier presupuesto de gastos?\n", "question_toks": ["What", "are", "the", "ids", "of", "documents", "with", "letter", "'s", "'", "in", "the", "name", "with", "any", "expense", "budgets", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%s%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'", "query_toks": ["SELECT", "T1.document_id", "FROM", "Documents", "AS", "T1", "JOIN", "Documents_with_expenses", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T1.document_name", "LIKE", "'", "%", "s", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "document_id", "from", "documents", "as", "t1", "join", "documents_with_expenses", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t1", ".", "document_name", "like", "value"], "question": "Dé los identificadores de los documentos que tengan gastos y contengan la letra s en sus nombres.\n", "question_toks": ["Give", "the", "ids", "of", "documents", "that", "have", "expenses", "and", "contain", "the", "letter", "s", "in", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%s%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)", "query_toks": ["SELECT", "name", "FROM", "projects", "WHERE", "hours", ">", "(", "SELECT", "avg", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "name", "from", "projects", "where", "hours", ">", "(", "select", "avg", "(", "hours", ")", "from", "projects", ")"], "question": "Enumere el nombre de todos los proyectos que funcionan por más tiempo que las horas de trabajo promedio de todos los proyectos.\n", "question_toks": ["List", "the", "name", "of", "all", "projects", "that", "are", "operated", "longer", "than", "the", "average", "working", "hours", "of", "all", "projects", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)", "query_toks": ["SELECT", "name", "FROM", "projects", "WHERE", "hours", ">", "(", "SELECT", "avg", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "name", "from", "projects", "where", "hours", ">", "(", "select", "avg", "(", "hours", ")", "from", "projects", ")"], "question": "¿Cuáles son los nombres de los proyectos que han tardado más que el número promedio de horas para todos los proyectos?\n", "question_toks": ["What", "are", "the", "names", "of", "projects", "that", "have", "taken", "longer", "than", "the", "average", "number", "of", "hours", "for", "all", "projects", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'", "query_toks": ["SELECT", "T2.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T3.name", "LIKE", "'", "%", "Smith", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t3", ".", "name", "like", "value"], "question": "Busque el nombre del proyecto al que está asignado un científico cuyo nombre contiene \"Smith\".\n", "question_toks": ["Find", "the", "name", "of", "the", "project", "for", "which", "a", "scientist", "whose", "name", "contains", "‘Smith’", "is", "assigned", "to", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Smith%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'", "query_toks": ["SELECT", "T2.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T3.name", "LIKE", "'", "%", "Smith", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t3", ".", "name", "like", "value"], "question": "¿Cómo se llama el proyecto que tiene asignado un científico cuyo nombre contiene 'Smith'?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "project", "that", "has", "a", "scientist", "assigned", "to", "it", "whose", "name", "contains", "'Smith", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Smith%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300", "query_toks": ["SELECT", "name", "FROM", "projects", "WHERE", "hours", "BETWEEN", "100", "AND", "300"], "query_toks_no_value": ["select", "name", "from", "projects", "where", "hours", "between", "value", "and", "value"], "question": "Busque el nombre de proyectos que requieren entre 100 y 300 horas de trabajo.\n", "question_toks": ["Find", "the", "name", "of", "projects", "that", "require", "between", "100", "and", "300", "hours", "of", "work", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 100.0, 300.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300", "query_toks": ["SELECT", "name", "FROM", "projects", "WHERE", "hours", "BETWEEN", "100", "AND", "300"], "query_toks_no_value": ["select", "name", "from", "projects", "where", "hours", "between", "value", "and", "value"], "question": "¿Cómo se llaman los proyectos que requieren entre 100 y 300 horas?\n", "question_toks": ["What", "are", "the", "names", "of", "projects", "that", "require", "between", "100", "and", "300", "hours", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 100.0, 300.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)", "query_toks": ["SELECT", "T3.ssn", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "max", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t3", ".", "ssn", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "max", "(", "hours", ")", "from", "projects", ")"], "question": "Encuentre el SSN y el nombre de los científicos asignados al proyecto con más horas.\n", "question_toks": ["Find", "the", "SSN", "and", "name", "of", "scientists", "who", "are", "assigned", "to", "the", "project", "with", "the", "longest", "hours", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)", "query_toks": ["SELECT", "T3.ssn", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "max", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t3", ".", "ssn", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "max", "(", "hours", ")", "from", "projects", ")"], "question": "¿Cuáles son el SSN y los nombres de los científicos que trabajan en el proyecto con más horas?\n", "question_toks": ["What", "are", "the", "SSN", "and", "names", "of", "scientists", "working", "on", "the", "project", "with", "the", "most", "hours", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn", "query_toks": ["SELECT", "T2.name", "FROM", "assignedto", "AS", "T1", "JOIN", "scientists", "AS", "T2", "ON", "T1.scientist", "=", "T2.ssn"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "assignedto", "as", "t1", "join", "scientists", "as", "t2", "on", "t1", ".", "scientist", "=", "t2", ".", "ssn"], "question": "Encuentra el nombre de los científicos que están asignados a algún proyecto.\n", "question_toks": ["Find", "the", "name", "of", "scientists", "who", "are", "assigned", "to", "some", "project", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn", "query_toks": ["SELECT", "T2.name", "FROM", "assignedto", "AS", "T1", "JOIN", "scientists", "AS", "T2", "ON", "T1.scientist", "=", "T2.ssn"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "assignedto", "as", "t1", "join", "scientists", "as", "t2", "on", "t1", ".", "scientist", "=", "t2", ".", "ssn"], "question": "¿Cuáles son los nombres de los científicos que están asignados a algún proyecto?\n", "question_toks": ["What", "are", "the", "names", "of", "scientists", "who", "are", "assigned", "to", "any", "project", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)", "query_toks": ["SELECT", "Name", "FROM", "Projects", "WHERE", "Code", "NOT", "IN", "(", "SELECT", "Project", "FROM", "AssignedTo", ")"], "query_toks_no_value": ["select", "name", "from", "projects", "where", "code", "not", "in", "(", "select", "project", "from", "assignedto", ")"], "question": "Seleccione los nombres de los proyectos que aún no están asignados.\n", "question_toks": ["Select", "the", "project", "names", "which", "are", "not", "assigned", "yet", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)", "query_toks": ["SELECT", "Name", "FROM", "Projects", "WHERE", "Code", "NOT", "IN", "(", "SELECT", "Project", "FROM", "AssignedTo", ")"], "query_toks_no_value": ["select", "name", "from", "projects", "where", "code", "not", "in", "(", "select", "project", "from", "assignedto", ")"], "question": "¿Cuáles son los nombres de los proyectos que no han sido asignados?\n", "question_toks": ["What", "are", "the", "names", "of", "projects", "that", "have", "not", "been", "assigned", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)", "query_toks": ["SELECT", "Name", "FROM", "scientists", "WHERE", "ssn", "NOT", "IN", "(", "SELECT", "scientist", "FROM", "AssignedTo", ")"], "query_toks_no_value": ["select", "name", "from", "scientists", "where", "ssn", "not", "in", "(", "select", "scientist", "from", "assignedto", ")"], "question": "Encuentre el nombre de los científicos que no están asignados a ningún proyecto.\n", "question_toks": ["Find", "the", "name", "of", "scientists", "who", "are", "not", "assigned", "to", "any", "project", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)", "query_toks": ["SELECT", "Name", "FROM", "scientists", "WHERE", "ssn", "NOT", "IN", "(", "SELECT", "scientist", "FROM", "AssignedTo", ")"], "query_toks_no_value": ["select", "name", "from", "scientists", "where", "ssn", "not", "in", "(", "select", "scientist", "from", "assignedto", ")"], "question": "¿Cómo se llaman los científicos a los que no se les ha asignado un proyecto?\n", "question_toks": ["What", "are", "the", "names", "of", "scientists", "who", "have", "not", "been", "assigned", "a", "project", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "min", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "min", "(", "hours", ")", "from", "projects", ")"], "question": "Encuentra el nombre del proyecto que necesita menos tiempo para terminar y el nombre de los científicos que trabajaron en él.\n", "question_toks": ["Find", "name", "of", "the", "project", "that", "needs", "the", "least", "amount", "of", "time", "to", "finish", "and", "the", "name", "of", "scientists", "who", "worked", "on", "it", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "scientist_1", "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "assignedto", "AS", "T1", "JOIN", "projects", "AS", "T2", "ON", "T1.project", "=", "T2.code", "JOIN", "scientists", "AS", "T3", "ON", "T1.scientist", "=", "T3.SSN", "WHERE", "T2.hours", "=", "(", "SELECT", "min", "(", "hours", ")", "FROM", "projects", ")"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "assignedto", "as", "t1", "join", "projects", "as", "t2", "on", "t1", ".", "project", "=", "t2", ".", "code", "join", "scientists", "as", "t3", "on", "t1", ".", "scientist", "=", "t3", ".", "ssn", "where", "t2", ".", "hours", "=", "(", "select", "min", "(", "hours", ")", "from", "projects", ")"], "question": "¿Cómo se llama el proyecto que requiere la menor cantidad de horas y los nombres de los científicos asignados a él?\n", "question_toks": ["What", "is", "the", "name", "of", "the", "project", "that", "requires", "the", "fewest", "number", "of", "hours", ",", "and", "the", "names", "of", "the", "scientists", "assigned", "to", "it", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "YEAR", "=", "``", "2008", "''"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "year", "=", "value"], "question": "Encuentre los nombres de todos los vinos producidos en 2008.\n", "question_toks": ["Find", "the", "names", "of", "all", "wines", "produced", "in", "2008", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"2008\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "YEAR", "=", "``", "2008", "''"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "year", "=", "value"], "question": "¿Cuáles son los nombres de todos los vinos producidos en 2008?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "wines", "produced", "in", "2008", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"2008\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Grape ,  Appelation FROM WINE", "query_toks": ["SELECT", "Grape", ",", "Appelation", "FROM", "WINE"], "query_toks_no_value": ["select", "grape", ",", "appelation", "from", "wine"], "question": "Enumerar las uvas y denominaciones de todos los vinos.\n", "question_toks": ["List", "the", "grapes", "and", "appelations", "of", "all", "wines", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Grape ,  Appelation FROM WINE", "query_toks": ["SELECT", "Grape", ",", "Appelation", "FROM", "WINE"], "query_toks_no_value": ["select", "grape", ",", "appelation", "from", "wine"], "question": "¿Cuáles son las uvas y denominaciones de origen de cada vino?\n", "question_toks": ["What", "are", "the", "grapes", "and", "appelations", "of", "each", "wine", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name ,  Score FROM WINE", "query_toks": ["SELECT", "Name", ",", "Score", "FROM", "WINE"], "query_toks_no_value": ["select", "name", ",", "score", "from", "wine"], "question": "Enumere los nombres y puntuaciones de todos los vinos.\n", "question_toks": ["List", "the", "names", "and", "scores", "of", "all", "wines", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name ,  Score FROM WINE", "query_toks": ["SELECT", "Name", ",", "Score", "FROM", "WINE"], "query_toks_no_value": ["select", "name", ",", "score", "from", "wine"], "question": "¿Cuáles son los nombres y puntuaciones de todos los vinos?\n", "question_toks": ["What", "are", "the", "names", "and", "scores", "of", "all", "wines", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Area ,  County FROM APPELLATIONS", "query_toks": ["SELECT", "Area", ",", "County", "FROM", "APPELLATIONS"], "query_toks_no_value": ["select", "area", ",", "county", "from", "appellations"], "question": "Enumere el área y el condado de todas las denominaciones.\n", "question_toks": ["List", "the", "area", "and", "county", "of", "all", "appelations", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Area ,  County FROM APPELLATIONS", "query_toks": ["SELECT", "Area", ",", "County", "FROM", "APPELLATIONS"], "query_toks_no_value": ["select", "area", ",", "county", "from", "appellations"], "question": "¿Cuáles son las áreas y condados para todas las apelaciones?\n", "question_toks": ["What", "are", "the", "areas", "and", "counties", "for", "all", "appelations", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Price FROM WINE WHERE YEAR  <  2010", "query_toks": ["SELECT", "Price", "FROM", "WINE", "WHERE", "YEAR", "<", "2010"], "query_toks_no_value": ["select", "price", "from", "wine", "where", "year", "<", "value"], "question": "¿Cuáles son los precios de los vinos producidos antes del año 2010?\n", "question_toks": ["What", "are", "the", "prices", "of", "wines", "produced", "before", "the", "year", "of", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Price FROM WINE WHERE YEAR  <  2010", "query_toks": ["SELECT", "Price", "FROM", "WINE", "WHERE", "YEAR", "<", "2010"], "query_toks_no_value": ["select", "price", "from", "wine", "where", "year", "<", "value"], "question": "Devolver los precios de los vinos elaborados antes de 2010.\n", "question_toks": ["Return", "the", "prices", "of", "wines", "produced", "before", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE score  >  90", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "score", ">", "90"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "score", ">", "value"], "question": "Enumere los nombres de todos los vinos distintos que tengan puntuaciones superiores a 90.\n", "question_toks": ["List", "the", "names", "of", "all", "distinct", "wines", "that", "have", "scores", "higher", "than", "90", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE score  >  90", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "score", ">", "90"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "score", ">", "value"], "question": "¿Cómo se llaman los vinos con puntuaciones superiores a 90?\n", "question_toks": ["What", "are", "the", "names", "of", "wines", "with", "scores", "higher", "than", "90", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "Red", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value"], "question": "Enumere los nombres de todos los vinos distintos elaborados con uva de color tinto.\n", "question_toks": ["List", "the", "names", "of", "all", "distinct", "wines", "that", "are", "made", "of", "red", "color", "grape", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "Red", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value"], "question": "¿Cómo se llaman los vinos elaborados con uvas tintas?\n", "question_toks": ["What", "are", "the", "names", "of", "wines", "made", "from", "red", "grapes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Red\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "APPELLATIONs", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Appelation", "=", "T2.Appelation", "WHERE", "T1.Area", "=", "``", "North", "Coast", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "appellations", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "appelation", "=", "t2", ".", "appelation", "where", "t1", ".", "area", "=", "value"], "question": "Encuentre los nombres de todos los vinos distintos que tienen denominaciones en el área de la costa norte.\n", "question_toks": ["Find", "the", "names", "of", "all", "distinct", "wines", "that", "have", "appellations", "in", "North", "Coast", "area", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 13, false], null]]}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"North Coast\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "APPELLATIONs", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Appelation", "=", "T2.Appelation", "WHERE", "T1.Area", "=", "``", "North", "Coast", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "appellations", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "appelation", "=", "t2", ".", "appelation", "where", "t1", ".", "area", "=", "value"], "question": "¿Cuáles son los distintos nombres de los vinos que tienen denominaciones de origen en la zona de la costa norte?\n", "question_toks": ["What", "are", "the", "distinct", "names", "of", "wines", "that", "have", "appellations", "in", "the", "North", "Coast", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 13, false], null]]}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"North Coast\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"", "query_toks": ["SELECT", "AVG", "(", "T2.Price", ")", "FROM", "APPELLATIONS", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Appelation", "=", "T2.Appelation", "WHERE", "T1.County", "=", "``", "Sonoma", "''"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "price", ")", "from", "appellations", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "appelation", "=", "t2", ".", "appelation", "where", "t1", ".", "county", "=", "value"], "question": "Dame los precios promedio de los vinos producidos por denominaciones de origen en el condado de Sonoma.\n", "question_toks": ["Give", "me", "the", "average", "prices", "of", "wines", "that", "are", "produced", "by", "appelations", "in", "Sonoma", "County", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 13, false], null]]}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Sonoma\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"", "query_toks": ["SELECT", "AVG", "(", "T2.Price", ")", "FROM", "APPELLATIONS", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Appelation", "=", "T2.Appelation", "WHERE", "T1.County", "=", "``", "Sonoma", "''"], "query_toks_no_value": ["select", "avg", "(", "t2", ".", "price", ")", "from", "appellations", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "appelation", "=", "t2", ".", "appelation", "where", "t1", ".", "county", "=", "value"], "question": "¿Cuál es el precio promedio de los vinos producidos en las denominaciones de origen del condado de Sonoma?\n", "question_toks": ["What", "is", "the", "average", "price", "of", "wines", "produced", "in", "appelations", "in", "Sonoma", "County", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 13, false], null]]}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Sonoma\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"", "query_toks": ["SELECT", "T2.Name", ",", "T2.Score", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "White", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "score", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value"], "question": "¿Cuáles son los nombres y las puntuaciones de los vinos que se elaboran con uvas de color blanco?\n", "question_toks": ["What", "are", "the", "names", "and", "scores", "of", "wines", "that", "are", "made", "of", "white", "color", "grapes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"White\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"", "query_toks": ["SELECT", "T2.Name", ",", "T2.Score", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "White", "''"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "score", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value"], "question": "Indique los nombres y puntuaciones de los vinos elaborados con uvas blancas.\n", "question_toks": ["Give", "the", "names", "and", "scores", "of", "wines", "made", "from", "white", "grapes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"White\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90", "query_toks": ["SELECT", "DISTINCT", "T1.Grape", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "White", "''", "AND", "T2.score", ">", "90"], "query_toks_no_value": ["select", "distinct", "t1", ".", "grape", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value", "and", "t2", ".", "score", ">", "value"], "question": "Encuentre la uva cuyas uvas de color blanco se utilizan para producir vinos con puntuaciones superiores a 90.\n", "question_toks": ["Find", "the", "the", "grape", "whose", "white", "color", "grapes", "are", "used", "to", "produce", "wines", "with", "scores", "higher", "than", "90", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"White\"", null], "and", [false, 3, [0, [0, 18, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90", "query_toks": ["SELECT", "DISTINCT", "T1.Grape", "FROM", "GRAPES", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "White", "''", "AND", "T2.score", ">", "90"], "query_toks_no_value": ["select", "distinct", "t1", ".", "grape", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value", "and", "t2", ".", "score", ">", "value"], "question": "Encuentre la uva blanca utilizada para producir vinos con puntuaciones superiores a 90.\n", "question_toks": ["Find", "the", "white", "grape", "used", "to", "produce", "wines", "with", "scores", "above", "90", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"White\"", null], "and", [false, 3, [0, [0, 18, false], null], 90.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50", "query_toks": ["SELECT", "T2.Name", "FROM", "Grapes", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "Red", "''", "AND", "T2.price", ">", "50"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value", "and", "t2", ".", "price", ">", "value"], "question": "¿Cuáles son los vinos que tienen precios superiores a 50 y elaborados con uvas de color tinto?\n", "question_toks": ["What", "are", "the", "wines", "that", "have", "prices", "higher", "than", "50", "and", "made", "of", "Red", "color", "grapes", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Red\"", null], "and", [false, 3, [0, [0, 17, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50", "query_toks": ["SELECT", "T2.Name", "FROM", "Grapes", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Grape", "=", "T2.Grape", "WHERE", "T1.Color", "=", "``", "Red", "''", "AND", "T2.price", ">", "50"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "grapes", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "grape", "=", "t2", ".", "grape", "where", "t1", ".", "color", "=", "value", "and", "t2", ".", "price", ">", "value"], "question": "¿Cómo se llaman los vinos elaborados con uvas tintas y con precios superiores a 50?\n", "question_toks": ["What", "are", "the", "names", "of", "wines", "made", "from", "red", "grapes", "and", "with", "prices", "above", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Red\"", null], "and", [false, 3, [0, [0, 17, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50", "query_toks": ["SELECT", "T2.Name", "FROM", "APPELLATIONS", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Appelation", "=", "T2.Appelation", "WHERE", "T1.County", "=", "``", "Monterey", "''", "AND", "T2.price", "<", "50"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "appellations", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "appelation", "=", "t2", ".", "appelation", "where", "t1", ".", "county", "=", "value", "and", "t2", ".", "price", "<", "value"], "question": "¿Cuáles son los vinos que tienen precios inferiores a 50 y tienen denominaciones de origen en el condado de Monterey?\n", "question_toks": ["What", "are", "the", "wines", "that", "have", "prices", "lower", "than", "50", "and", "have", "appelations", "in", "Monterey", "county", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Monterey\"", null], "and", [false, 4, [0, [0, 17, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50", "query_toks": ["SELECT", "T2.Name", "FROM", "APPELLATIONS", "AS", "T1", "JOIN", "WINE", "AS", "T2", "ON", "T1.Appelation", "=", "T2.Appelation", "WHERE", "T1.County", "=", "``", "Monterey", "''", "AND", "T2.price", "<", "50"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "appellations", "as", "t1", "join", "wine", "as", "t2", "on", "t1", ".", "appelation", "=", "t2", ".", "appelation", "where", "t1", ".", "county", "=", "value", "and", "t2", ".", "price", "<", "value"], "question": "Indique los nombres de vinos con precios inferiores a 50 y con denominaciones de origen en el condado de Monterey.\n", "question_toks": ["Give", "the", "neames", "of", "wines", "with", "prices", "below", "50", "and", "with", "appelations", "in", "Monterey", "county", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Monterey\"", null], "and", [false, 4, [0, [0, 17, false], null], 50.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")", "query_toks": ["SELECT", "DISTINCT", "Name", "FROM", "WINE", "WHERE", "Price", ">", "(", "SELECT", "min", "(", "Price", ")", "FROM", "wine", "WHERE", "Winery", "=", "``", "John", "Anthony", "''", ")"], "query_toks_no_value": ["select", "distinct", "name", "from", "wine", "where", "price", ">", "(", "select", "min", "(", "price", ")", "from", "wine", "where", "winery", "=", "value", ")"], "question": "Encuentre los nombres distintos de todos los vinos que tienen precios más altos que algunos vinos de la bodega John Anthony.\n", "question_toks": ["Find", "the", "distinct", "names", "of", "all", "wines", "that", "have", "prices", "higher", "than", "some", "wines", "from", "John", "Anthony", "winery", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"John Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")", "query_toks": ["SELECT", "DISTINCT", "Name", "FROM", "WINE", "WHERE", "Price", ">", "(", "SELECT", "min", "(", "Price", ")", "FROM", "wine", "WHERE", "Winery", "=", "``", "John", "Anthony", "''", ")"], "query_toks_no_value": ["select", "distinct", "name", "from", "wine", "where", "price", ">", "(", "select", "min", "(", "price", ")", "from", "wine", "where", "winery", "=", "value", ")"], "question": "¿Cuáles son los nombres distintos de los vinos con precios más altos que cualquier vino de la bodega John Anthony?\n", "question_toks": ["What", "are", "the", "distinct", "names", "of", "wines", "with", "prices", "higher", "than", "any", "wine", "from", "John", "Anthony", "winery", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"John Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010", "query_toks": ["SELECT", "DISTINCT", "Name", "FROM", "WINE", "WHERE", "YEAR", "<", "2000", "OR", "YEAR", ">", "2010"], "query_toks_no_value": ["select", "distinct", "name", "from", "wine", "where", "year", "<", "value", "or", "year", ">", "value"], "question": "Encuentre los distintos nombres de vinos producidos antes del año 2000 o después del año 2010.\n", "question_toks": ["Find", "the", "distinct", "names", "of", "wines", "produced", "before", "the", "year", "of", "2000", "or", "after", "the", "year", "of", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], 2000.0, null], "or", [false, 3, [0, [0, 16, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010", "query_toks": ["SELECT", "DISTINCT", "Name", "FROM", "WINE", "WHERE", "YEAR", "<", "2000", "OR", "YEAR", ">", "2010"], "query_toks_no_value": ["select", "distinct", "name", "from", "wine", "where", "year", "<", "value", "or", "year", ">", "value"], "question": "Indique los nombres distintos de los vinos elaborados antes de 2000 o después de 2010.\n", "question_toks": ["Give", "the", "distinct", "names", "of", "wines", "made", "before", "2000", "or", "after", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], 2000.0, null], "or", [false, 3, [0, [0, 16, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100", "query_toks": ["SELECT", "DISTINCT", "Winery", "FROM", "WINE", "WHERE", "Price", "BETWEEN", "50", "AND", "100"], "query_toks_no_value": ["select", "distinct", "winery", "from", "wine", "where", "price", "between", "value", "and", "value"], "question": "Encuentra las distintas bodegas de vinos que tienen precio entre 50 y 100.\n", "question_toks": ["Find", "the", "distinct", "winery", "of", "wines", "having", "price", "between", "50", "and", "100", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 1, [0, [0, 17, false], null], 50.0, 100.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100", "query_toks": ["SELECT", "DISTINCT", "Winery", "FROM", "WINE", "WHERE", "Price", "BETWEEN", "50", "AND", "100"], "query_toks_no_value": ["select", "distinct", "winery", "from", "wine", "where", "price", "between", "value", "and", "value"], "question": "¿Cuáles son las distintas bodegas que producen vinos que cuestan entre 50 y 100?\n", "question_toks": ["What", "are", "the", "distinct", "wineries", "which", "produce", "wines", "costing", "between", "50", "and", "100", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 1, [0, [0, 17, false], null], 50.0, 100.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "AVG", "(", "Cases", ")", "FROM", "WINE", "WHERE", "YEAR", "=", "2009", "AND", "Grape", "=", "``", "Zinfandel", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "avg", "(", "cases", ")", "from", "wine", "where", "year", "=", "value", "and", "grape", "=", "value"], "question": "¿Cuáles son los precios promedio y cajas de vinos producidos en el año 2009 y elaborados con uva Zinfandel?\n", "question_toks": ["What", "are", "the", "average", "prices", "and", "cases", "of", "wines", "produced", "in", "the", "year", "of", "2009", "and", "made", "of", "Zinfandel", "grape", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]], [5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 2009.0, null], "and", [false, 2, [0, [0, 11, false], null], "\"Zinfandel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"", "query_toks": ["SELECT", "AVG", "(", "Price", ")", ",", "AVG", "(", "Cases", ")", "FROM", "WINE", "WHERE", "YEAR", "=", "2009", "AND", "Grape", "=", "``", "Zinfandel", "''"], "query_toks_no_value": ["select", "avg", "(", "price", ")", ",", "avg", "(", "cases", ")", "from", "wine", "where", "year", "=", "value", "and", "grape", "=", "value"], "question": "Indique el precio medio y caja de los vinos elaborados con uvas Zinfandel en el año 2009.\n", "question_toks": ["Give", "the", "average", "price", "and", "case", "of", "wines", "made", "from", "Zinfandel", "grapes", "in", "the", "year", "2009", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]], [5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 2009.0, null], "and", [false, 2, [0, [0, 11, false], null], "\"Zinfandel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "YEAR", "<", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "WINE", "WHERE", "Winery", "=", "``", "Brander", "''", ")"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "year", "<", "(", "select", "min", "(", "year", ")", "from", "wine", "where", "winery", "=", "value", ")"], "question": "¿Cómo se llaman los vinos cuyo año de producción es anterior al año de todos los vinos de la bodega Brander?\n", "question_toks": ["What", "are", "the", "names", "of", "wines", "whose", "production", "year", "are", "before", "the", "year", "of", "all", "wines", "by", "Brander", "winery", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Brander\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "YEAR", "<", "(", "SELECT", "min", "(", "YEAR", ")", "FROM", "WINE", "WHERE", "Winery", "=", "``", "Brander", "''", ")"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "year", "<", "(", "select", "min", "(", "year", ")", "from", "wine", "where", "winery", "=", "value", ")"], "question": "¿Cómo se llaman los vinos elaborados antes que cualquier vino de la bodega Brander?\n", "question_toks": ["What", "are", "the", "names", "of", "wines", "produced", "before", "any", "wine", "from", "the", "Brander", "winery", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Brander\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "Price", ">", "(", "SELECT", "max", "(", "Price", ")", "FROM", "WINE", "WHERE", "YEAR", "=", "2006", ")"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "price", ">", "(", "select", "max", "(", "price", ")", "from", "wine", "where", "year", "=", "value", ")"], "question": "¿Cómo se llaman los vinos que son más caros que todos los vinos elaborados en el año 2006?\n", "question_toks": ["What", "are", "the", "names", "of", "wines", "that", "are", "more", "expensive", "then", "all", "wines", "made", "in", "the", "year", "2006", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 2006.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "wine_1", "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)", "query_toks": ["SELECT", "Name", "FROM", "WINE", "WHERE", "Price", ">", "(", "SELECT", "max", "(", "Price", ")", "FROM", "WINE", "WHERE", "YEAR", "=", "2006", ")"], "query_toks_no_value": ["select", "name", "from", "wine", "where", "price", ">", "(", "select", "max", "(", "price", ")", "from", "wine", "where", "year", "=", "value", ")"], "question": "Indique los nombres de los vinos con precios superiores a los de cualquier vino producido en 2006.\n", "question_toks": ["Give", "the", "names", "of", "wines", "with", "prices", "above", "any", "wine", "produced", "in", "2006", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 2006.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "number_of_platforms", "FROM", "station"], "query_toks_no_value": ["select", "name", ",", "location", ",", "number_of_platforms", "from", "station"], "question": "Muestra el nombre, la ubicación y el número de andenes de todas las estaciones.\n", "question_toks": ["Show", "the", "name", ",", "location", ",", "and", "number", "of", "platforms", "for", "all", "stations", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT DISTINCT LOCATION FROM station", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "station"], "query_toks_no_value": ["select", "distinct", "location", "from", "station"], "question": "¿Cuáles son todas las ubicaciones de las estaciones de tren?\n", "question_toks": ["What", "are", "all", "locations", "of", "train", "stations", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'", "query_toks": ["SELECT", "name", ",", "total_passengers", "FROM", "station", "WHERE", "LOCATION", "!", "=", "'London", "'"], "query_toks_no_value": ["select", "name", ",", "total_passengers", "from", "station", "where", "location", "!", "=", "value"], "question": "Muestra los nombres y el total de pasajeros de todas las estaciones de tren fuera de Londres.\n", "question_toks": ["Show", "the", "names", "and", "total", "passengers", "for", "all", "train", "stations", "not", "in", "London", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 6, false], null], "\"London\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25", "query_toks": ["SELECT", "DISTINCT", "LOCATION", "FROM", "station", "WHERE", "number_of_platforms", ">", "=", "15", "AND", "total_passengers", ">", "25"], "query_toks_no_value": ["select", "distinct", "location", "from", "station", "where", "number_of_platforms", ">", "=", "value", "and", "total_passengers", ">", "value"], "question": "Mostrar todas las ubicaciones que tienen estaciones de tren con al menos 15 andenes y estaciones de tren con más de 25 pasajeros en total.\n", "question_toks": ["Show", "all", "locations", "that", "have", "train", "stations", "with", "at", "least", "15", "platforms", "and", "train", "stations", "with", "more", "than", "25", "total", "passengers", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 5, [0, [0, 8, false], null], 15.0, null], "and", [false, 3, [0, [0, 5, false], null], 25.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT name ,  TIME ,  service FROM train", "query_toks": ["SELECT", "name", ",", "TIME", ",", "service", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "time", ",", "service", "from", "train"], "question": "Muestra el nombre, hora y servicio de todos los trenes.\n", "question_toks": ["Show", "the", "name", ",", "time", ",", "and", "service", "for", "all", "trains", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id", "query_toks": ["SELECT", "T2.name", ",", "T3.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "JOIN", "train", "AS", "T3", "ON", "T3.train_id", "=", "T1.train_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t3", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "join", "train", "as", "t3", "on", "t3", ".", "train_id", "=", "t1", ".", "train_id"], "question": "muestra el nombre del tren y el nombre de la estación de cada tren.\n", "question_toks": ["show", "the", "train", "name", "and", "station", "name", "for", "each", "train", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)", "query_toks": ["SELECT", "name", "FROM", "station", "WHERE", "station_id", "NOT", "IN", "(", "SELECT", "station_id", "FROM", "train_station", ")"], "query_toks_no_value": ["select", "name", "from", "station", "where", "station_id", "not", "in", "(", "select", "station_id", "from", "train_station", ")"], "question": "Mostrar nombres de estaciones sin trenes.\n", "question_toks": ["Show", "station", "names", "without", "any", "trains", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.train_id", "=", "T2.train_id", "WHERE", "T1.station_id", "NOT", "IN", "(", "SELECT", "T4.station_id", "FROM", "train_station", "AS", "T3", "JOIN", "station", "AS", "T4", "ON", "T3.station_id", "=", "T4.station_id", "WHERE", "t4.location", "=", "``", "London", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "train_id", "=", "t2", ".", "train_id", "where", "t1", ".", "station_id", "not", "in", "(", "select", "t4", ".", "station_id", "from", "train_station", "as", "t3", "join", "station", "as", "t4", "on", "t3", ".", "station_id", "=", "t4", ".", "station_id", "where", "t4", ".", "location", "=", "value", ")"], "question": "Encuentra los nombres de los trenes que no pasan por ninguna estación ubicada en Londres.\n", "question_toks": ["Find", "the", "names", "of", "the", "trains", "that", "do", "not", "pass", "any", "station", "located", "in", "London", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"London\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT vehicle_id FROM Vehicles;", "query_toks": ["SELECT", "vehicle_id", "FROM", "Vehicles", ";"], "query_toks_no_value": ["select", "vehicle_id", "from", "vehicles"], "question": "Listar toda la identificación del vehículo\n", "question_toks": ["List", "all", "vehicle", "id"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT vehicle_id FROM Vehicles;", "query_toks": ["SELECT", "vehicle_id", "FROM", "Vehicles", ";"], "query_toks_no_value": ["select", "vehicle_id", "from", "vehicles"], "question": "¿Cuáles son las identificaciones de todos los vehículos?\n", "question_toks": ["What", "are", "the", "ids", "of", "all", "vehicles", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;", "query_toks": ["SELECT", "vehicle_details", "FROM", "Vehicles", "WHERE", "vehicle_id", "=", "1", ";"], "query_toks_no_value": ["select", "vehicle_details", "from", "vehicles", "where", "vehicle_id", "=", "value"], "question": "Mostrar el detalle del vehículo con id 1.\n", "question_toks": ["Show", "the", "detail", "of", "vehicle", "with", "id", "1", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;", "query_toks": ["SELECT", "vehicle_details", "FROM", "Vehicles", "WHERE", "vehicle_id", "=", "1", ";"], "query_toks_no_value": ["select", "vehicle_details", "from", "vehicles", "where", "vehicle_id", "=", "value"], "question": "¿Cuáles son los detalles del auto con id 1?\n", "question_toks": ["What", "are", "the", "details", "of", "the", "car", "with", "id", "1", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Staff", ";"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "staff"], "question": "Indique el nombre, segundo nombre y apellido de todo el personal.\n", "question_toks": ["List", "the", "first", "name", "middle", "name", "and", "last", "name", "of", "all", "staff", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;", "query_toks": ["SELECT", "first_name", ",", "middle_name", ",", "last_name", "FROM", "Staff", ";"], "query_toks_no_value": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "staff"], "question": "¿Cuáles son el nombre, segundo nombre y apellido de todo el personal?\n", "question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "of", "all", "staff", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "date_of_birth", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "date_of_birth", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el cumpleaños del miembro del personal cuyo nombre es Janessa y apellido Sawyn?\n", "question_toks": ["What", "is", "the", "birthday", "of", "the", "staff", "member", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "date_of_birth", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "date_of_birth", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es la fecha de nacimiento del miembro del personal llamado Janessa Sawyn?\n", "question_toks": ["What", "is", "the", "date", "of", "birth", "for", "the", "staff", "member", "named", "Janessa", "Sawayn", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "date_joined_staff", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "date_joined_staff", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuándo se unió a la empresa el miembro del personal con nombre Janessa y apellido Sawyn?\n", "question_toks": ["When", "did", "the", "staff", "member", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "join", "the", "company", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "date_joined_staff", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "date_joined_staff", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuándo se unió a la empresa la miembro del personal llamada Janessa Sawyn?\n", "question_toks": ["When", "did", "the", "staff", "member", "named", "Janessa", "Sawayn", "join", "the", "company", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "date_left_staff", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "date_left_staff", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuándo dejó la empresa el miembro del personal cuyo nombre era Janessa y apellido Sawyn?\n", "question_toks": ["When", "did", "the", "staff", "member", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "leave", "the", "company", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "date_left_staff", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "date_left_staff", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuándo dejó la empresa Janessa Sawyn, miembro del personal?\n", "question_toks": ["When", "did", "the", "staff", "member", "Janessa", "Sawayn", "leave", "the", "company", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "nickname", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "nickname", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el apodo del personal cuyo nombre es Janessa y apellido Sawyn?\n", "question_toks": ["What", "is", "the", "nickname", "of", "staff", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";", "query_toks": ["SELECT", "nickname", "FROM", "Staff", "WHERE", "first_name", "=", "``", "Janessa", "''", "AND", "last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "nickname", "from", "staff", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuál es el apodo de la empleada llamada Janessa Sawayn?\n", "question_toks": ["What", "is", "the", "nickname", "of", "the", "employee", "named", "Janessa", "Sawayn", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.city", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "¿En qué ciudad vive el personal con nombre Janessa y apellido Sawyn?\n", "question_toks": ["Which", "city", "does", "staff", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.city", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "¿En qué ciudad vive Janessa Sawyn?\n", "question_toks": ["In", "what", "city", "does", "Janessa", "Sawayn", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.country", ",", "T1.state_province_county", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "state_province_county", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "¿En qué país y estado vive el personal con el nombre Janessa y el apellido Sawyn?\n", "question_toks": ["Which", "country", "and", "state", "does", "staff", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "lived", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.country", ",", "T1.state_province_county", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "state_province_county", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "¿En qué país y estado vive Janessa Sawyn?\n", "question_toks": ["In", "which", "country", "and", "state", "does", "Janessa", "Sawayn", "live", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.zip_postcode", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "zip_postcode", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "¿Cuál es el código postal del personal con nombre Janessa y apellido Sawyn?\n", "question_toks": ["What", "is", "the", "zip", "code", "of", "staff", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "lived", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.zip_postcode", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "zip_postcode", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "¿Cuál es el código postal de la casa de la empleada llamada Janessa Sawayn?\n", "question_toks": ["What", "is", "the", "zip", "code", "of", "the", "hosue", "of", "the", "employee", "named", "Janessa", "Sawayn", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T1.city", "=", "``", "Damianfort", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t1", ".", "city", "=", "value"], "question": "Descubra el nombre y apellido del personal que vive en la ciudad de Damianfort.\n", "question_toks": ["Find", "out", "the", "first", "name", "and", "last", "name", "of", "staff", "lived", "in", "city", "Damianfort", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Damianfort\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";", "query_toks": ["SELECT", "T2.first_name", ",", "T2.last_name", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T1.city", "=", "``", "Damianfort", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "first_name", ",", "t2", ".", "last_name", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t1", ".", "city", "=", "value"], "question": "¿Cuál es el nombre y apellido de todos los empleados que viven en la ciudad Damiánfort?\n", "question_toks": ["What", "is", "the", "first", "and", "last", "name", "of", "all", "employees", "who", "live", "in", "the", "city", "Damianfort", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Damianfort\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers"], "question": "Indique el nombre y apellido de todos los clientes.\n", "question_toks": ["List", "the", "first", "name", "and", "last", "name", "of", "all", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers"], "question": "¿Cuáles son los nombres y apellidos de todos los clientes?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "for", "all", "customers", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"", "query_toks": ["SELECT", "email_address", ",", "date_of_birth", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Carole", "''"], "query_toks_no_value": ["select", "email_address", ",", "date_of_birth", "from", "customers", "where", "first_name", "=", "value"], "question": "Indique la dirección de correo electrónico y la fecha de nacimiento del cliente cuyo nombre es Carole.\n", "question_toks": ["List", "email", "address", "and", "birthday", "of", "customer", "whose", "first", "name", "as", "Carole", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\"", "query_toks": ["SELECT", "email_address", ",", "date_of_birth", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Carole", "''"], "query_toks_no_value": ["select", "email_address", ",", "date_of_birth", "from", "customers", "where", "first_name", "=", "value"], "question": "¿Cuáles son las direcciones de correo electrónico y la fecha de nacimiento de todos los clientes cuyo nombre de pila es Carole?\n", "question_toks": ["What", "are", "the", "email", "addresses", "and", "date", "of", "births", "for", "all", "customers", "who", "have", "a", "first", "name", "of", "Carole", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;", "query_toks": ["SELECT", "phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "amount_outstanding", ">", "2000", ";"], "query_toks_no_value": ["select", "phone_number", ",", "email_address", "from", "customers", "where", "amount_outstanding", ">", "value"], "question": "Indique el número de teléfono y la dirección de correo electrónico del cliente con más de 2000 saldos pendientes.\n", "question_toks": ["List", "phone", "number", "and", "email", "address", "of", "customer", "with", "more", "than", "2000", "outstanding", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;", "query_toks": ["SELECT", "phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "amount_outstanding", ">", "2000", ";"], "query_toks_no_value": ["select", "phone_number", ",", "email_address", "from", "customers", "where", "amount_outstanding", ">", "value"], "question": "¿Cuáles son los números de teléfono y direcciones de correo electrónico de todos los clientes que tienen un saldo pendiente de más de 2000?\n", "question_toks": ["What", "are", "the", "phone", "numbers", "and", "email", "addresses", "of", "all", "customers", "who", "have", "an", "outstanding", "balance", "of", "more", "than", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 25, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"", "query_toks": ["SELECT", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Marina", "''", "OR", "last_name", "=", "``", "Kohler", "''"], "query_toks_no_value": ["select", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "from", "customers", "where", "first_name", "=", "value", "or", "last_name", "=", "value"], "question": "¿Cuál es el código de estado, número de teléfono móvil y dirección de correo electrónico del cliente con apellido Kohler o nombre Marina?\n", "question_toks": ["What", "is", "the", "status", "code", ",", "mobile", "phone", "number", "and", "email", "address", "of", "customer", "with", "last", "name", "as", "Kohler", "or", "first", "name", "as", "Marina", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Marina\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Kohler\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"", "query_toks": ["SELECT", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Marina", "''", "OR", "last_name", "=", "``", "Kohler", "''"], "query_toks_no_value": ["select", "customer_status_code", ",", "cell_mobile_phone_number", ",", "email_address", "from", "customers", "where", "first_name", "=", "value", "or", "last_name", "=", "value"], "question": "¿Cuál es el código de estado, número de teléfono y dirección de correo electrónico del cliente cuyo apellido es Kohler o cuyo nombre es Marina?\n", "question_toks": ["What", "is", "the", "status", "code", ",", "phone", "number", ",", "and", "email", "address", "of", "the", "customer", "whose", "last", "name", "is", "Kohler", "or", "whose", "first", "name", "is", "Marina", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 28, false], null]], [0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Marina\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Kohler\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'", "query_toks": ["SELECT", "date_of_birth", "FROM", "Customers", "WHERE", "customer_status_code", "=", "'Good", "Customer", "'"], "query_toks_no_value": ["select", "date_of_birth", "from", "customers", "where", "customer_status_code", "=", "value"], "question": "¿Cuándo son los cumpleaños de los clientes clasificados como \"buen cliente\"?\n", "question_toks": ["When", "are", "the", "birthdays", "of", "customer", "who", "are", "classified", "as", "'Good", "Customer", "'", "status", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Good Customer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'", "query_toks": ["SELECT", "date_of_birth", "FROM", "Customers", "WHERE", "customer_status_code", "=", "'Good", "Customer", "'"], "query_toks_no_value": ["select", "date_of_birth", "from", "customers", "where", "customer_status_code", "=", "value"], "question": "¿Cuál es la fecha de nacimiento de cada cliente cuyo código de estado es \"Buen Cliente\"?\n", "question_toks": ["What", "is", "the", "date", "of", "birth", "of", "every", "customer", "whose", "status", "code", "is", "'Good", "Customer", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Good Customer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";", "query_toks": ["SELECT", "date_became_customer", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Carole", "''", "AND", "last_name", "=", "``", "Bernhard", "''", ";"], "query_toks_no_value": ["select", "date_became_customer", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuándo se convirtió en cliente un cliente con nombre Carole y apellido Bernhard?\n", "question_toks": ["When", "did", "customer", "with", "first", "name", "as", "Carole", "and", "last", "name", "as", "Bernhard", "became", "a", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Bernhard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";", "query_toks": ["SELECT", "date_became_customer", "FROM", "Customers", "WHERE", "first_name", "=", "``", "Carole", "''", "AND", "last_name", "=", "``", "Bernhard", "''", ";"], "query_toks_no_value": ["select", "date_became_customer", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "¿Cuándo se convirtió Carole Bernhard en cliente por primera vez?\n", "question_toks": ["When", "did", "Carole", "Bernhard", "first", "become", "a", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Bernhard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", "WHERE", "amount_outstanding", "BETWEEN", "1000", "AND", "3000", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers", "where", "amount_outstanding", "between", "value", "and", "value"], "question": "Indique el nombre y apellido de los clientes que tengan un monto pendiente entre 1000 y 3000.\n", "question_toks": ["List", "the", "first", "name", "and", "last", "name", "of", "customers", "have", "the", "amount", "of", "outstanding", "between", "1000", "and", "3000", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 1, [0, [0, 25, false], null], 1000.0, 3000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;", "query_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "Customers", "WHERE", "amount_outstanding", "BETWEEN", "1000", "AND", "3000", ";"], "query_toks_no_value": ["select", "first_name", ",", "last_name", "from", "customers", "where", "amount_outstanding", "between", "value", "and", "value"], "question": "¿Cuáles son el nombre y apellido de todos los clientes con entre 1000 y 3000 dólares pendientes?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "customers", "with", "between", "1000", "and", "3000", "dollars", "outstanding", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 1, [0, [0, 25, false], null], 1000.0, 3000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T2.city", "=", "``", "Lockmanfurt", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "city", "=", "value"], "question": "Indique el nombre y apellido de los clientes que viven en la ciudad de Lockmanfurt.\n", "question_toks": ["List", "first", "name", "and", "last", "name", "of", "customers", "lived", "in", "city", "Lockmanfurt", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Lockmanfurt\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";", "query_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T2.city", "=", "``", "Lockmanfurt", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t1", ".", "last_name", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t2", ".", "city", "=", "value"], "question": "¿Cuáles son los nombres y apellidos de todos los clientes que vivían en Lockmanfurt?\n", "question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "customers", "who", "lived", "in", "Lockmanfurt", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Lockmanfurt\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"", "query_toks": ["SELECT", "T2.country", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T1.first_name", "=", "``", "Carole", "''", "AND", "T1.last_name", "=", "``", "Bernhard", "''"], "query_toks_no_value": ["select", "t2", ".", "country", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "¿En qué país vive el cliente con el nombre Carole y el apellido Bernhard?\n", "question_toks": ["Which", "country", "does", "customer", "with", "first", "name", "as", "Carole", "and", "last", "name", "as", "Bernhard", "lived", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Bernhard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"", "query_toks": ["SELECT", "T2.country", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T1.first_name", "=", "``", "Carole", "''", "AND", "T1.last_name", "=", "``", "Bernhard", "''"], "query_toks_no_value": ["select", "t2", ".", "country", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "¿Cuál es el país en el que vivía la cliente Carole Bernhard?\n", "question_toks": ["What", "is", "the", "country", "in", "which", "the", "customer", "Carole", "Bernhard", "lived", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Bernhard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"", "query_toks": ["SELECT", "T2.zip_postcode", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T1.first_name", "=", "``", "Carole", "''", "AND", "T1.last_name", "=", "``", "Bernhard", "''"], "query_toks_no_value": ["select", "t2", ".", "zip_postcode", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "¿Cuál es el código postal del cliente con nombre Carole y apellido Bernhard?\n", "question_toks": ["What", "is", "zip", "code", "of", "customer", "with", "first", "name", "as", "Carole", "and", "last", "name", "as", "Bernhard", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Bernhard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"", "query_toks": ["SELECT", "T2.zip_postcode", "FROM", "Customers", "AS", "T1", "JOIN", "Addresses", "AS", "T2", "ON", "T1.customer_address_id", "=", "T2.address_id", "WHERE", "T1.first_name", "=", "``", "Carole", "''", "AND", "T1.last_name", "=", "``", "Bernhard", "''"], "query_toks_no_value": ["select", "t2", ".", "zip_postcode", "from", "customers", "as", "t1", "join", "addresses", "as", "t2", "on", "t1", ".", "customer_address_id", "=", "t2", ".", "address_id", "where", "t1", ".", "first_name", "=", "value", "and", "t1", ".", "last_name", "=", "value"], "question": "¿Cuál es el código postal del cliente Carole Bernhard?\n", "question_toks": ["What", "is", "the", "zip", "code", "of", "the", "customer", "Carole", "Bernhard", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"Carole\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Bernhard\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";", "query_toks": ["SELECT", "T1.lesson_id", "FROM", "Lessons", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", "AND", "nickname", "LIKE", "``", "%", "s", "%", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "lesson_id", "from", "lessons", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value", "and", "nickname", "like", "value"], "question": "Enumere la identificación de todas las lecciones impartidas por el personal con el nombre Janessa, el apellido Sawyn y el apodo que contiene la letra 's'.\n", "question_toks": ["List", "lesson", "id", "of", "all", "lessons", "taught", "by", "staff", "with", "first", "name", "as", "Janessa", ",", "last", "name", "as", "Sawayn", "and", "nickname", "containing", "letter", "'s", "'", "."], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null], "and", [false, 9, [0, [0, 9, false], null], "\"%s%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "driving_school", "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";", "query_toks": ["SELECT", "T1.lesson_id", "FROM", "Lessons", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.staff_id", "=", "T2.staff_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", "AND", "nickname", "LIKE", "``", "%", "s", "%", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "lesson_id", "from", "lessons", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "staff_id", "=", "t2", ".", "staff_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value", "and", "nickname", "like", "value"], "question": "¿Cuáles son los identificadores de las lecciones de todo el personal impartido por Janessa Sawayn cuyo apodo tiene la letra s?\n", "question_toks": ["What", "are", "the", "the", "lesson", "ids", "of", "all", "staff", "taught", "by", "Janessa", "Sawayn", "whose", "nickname", "has", "the", "letter", "s", "?"], "sql": {"from": {"table_units": [["table_unit", 5], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 36, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null], "and", [false, 9, [0, [0, 9, false], null], "\"%s%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT DISTINCT rank FROM Faculty", "query_toks": ["SELECT", "DISTINCT", "rank", "FROM", "Faculty"], "query_toks_no_value": ["select", "distinct", "rank", "from", "faculty"], "question": "¿Qué rangos tenemos para los profesores?\n", "question_toks": ["What", "ranks", "do", "we", "have", "for", "faculty", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT DISTINCT rank FROM Faculty", "query_toks": ["SELECT", "DISTINCT", "rank", "FROM", "Faculty"], "query_toks_no_value": ["select", "distinct", "rank", "from", "faculty"], "question": "Encuentre la lista de distintos rangos para los profesores.\n", "question_toks": ["Find", "the", "list", "of", "distinct", "ranks", "for", "faculty", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT DISTINCT building FROM Faculty", "query_toks": ["SELECT", "DISTINCT", "building", "FROM", "Faculty"], "query_toks_no_value": ["select", "distinct", "building", "from", "faculty"], "question": "Muestra todos los distintos edificios que tienen salas de profesores.\n", "question_toks": ["Show", "all", "the", "distinct", "buildings", "that", "have", "faculty", "rooms", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT DISTINCT building FROM Faculty", "query_toks": ["SELECT", "DISTINCT", "building", "FROM", "Faculty"], "query_toks_no_value": ["select", "distinct", "building", "from", "faculty"], "question": "¿Qué edificios tienen oficinas de profesores?\n", "question_toks": ["What", "buildings", "have", "faculty", "offices", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [true, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT rank ,  Fname ,  Lname FROM Faculty", "query_toks": ["SELECT", "rank", ",", "Fname", ",", "Lname", "FROM", "Faculty"], "query_toks_no_value": ["select", "rank", ",", "fname", ",", "lname", "from", "faculty"], "question": "Muestra el rango, nombre y apellido de todos los profesores.\n", "question_toks": ["Show", "the", "rank", ",", "first", "name", ",", "and", "last", "name", "for", "all", "the", "faculty", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT rank ,  Fname ,  Lname FROM Faculty", "query_toks": ["SELECT", "rank", ",", "Fname", ",", "Lname", "FROM", "Faculty"], "query_toks_no_value": ["select", "rank", ",", "fname", ",", "lname", "from", "faculty"], "question": "¿Cuál es el rango, nombre y apellido de los miembros de la facultad?\n", "question_toks": ["What", "are", "the", "rank", ",", "first", "name", ",", "and", "last", "name", "of", "the", "faculty", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "phone", "FROM", "Faculty", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "phone", "from", "faculty", "where", "sex", "=", "value"], "question": "Muestre el nombre, apellido y número de teléfono de todas las profesoras.\n", "question_toks": ["Show", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "number", "for", "all", "female", "faculty", "members", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'", "query_toks": ["SELECT", "Fname", ",", "Lname", ",", "phone", "FROM", "Faculty", "WHERE", "Sex", "=", "'F", "'"], "query_toks_no_value": ["select", "fname", ",", "lname", ",", "phone", "from", "faculty", "where", "sex", "=", "value"], "question": "¿Cuáles son el nombre, apellido y número de teléfono de todas las profesoras?\n", "question_toks": ["What", "are", "the", "first", "name", ",", "last", "name", ",", "and", "phone", "number", "of", "all", "the", "female", "faculty", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]], [0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'", "query_toks": ["SELECT", "FacID", "FROM", "Faculty", "WHERE", "Sex", "=", "'M", "'"], "query_toks_no_value": ["select", "facid", "from", "faculty", "where", "sex", "=", "value"], "question": "Mostrar identificaciones para todos los profesores masculinos.\n", "question_toks": ["Show", "ids", "for", "all", "the", "male", "faculty", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'", "query_toks": ["SELECT", "FacID", "FROM", "Faculty", "WHERE", "Sex", "=", "'M", "'"], "query_toks_no_value": ["select", "facid", "from", "faculty", "where", "sex", "=", "value"], "question": "¿Cuáles son las identificaciones de todos los profesores varones?\n", "question_toks": ["What", "are", "the", "faculty", "ids", "of", "all", "the", "male", "faculty", "members", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"M\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"", "query_toks": ["SELECT", "phone", ",", "room", ",", "building", "FROM", "Faculty", "WHERE", "Fname", "=", "``", "Jerry", "''", "AND", "Lname", "=", "``", "Prince", "''"], "query_toks_no_value": ["select", "phone", ",", "room", ",", "building", "from", "faculty", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "Muestre el teléfono, la sala y el edificio de la facultad llamada Jerry Prince.\n", "question_toks": ["Show", "the", "phone", ",", "room", ",", "and", "building", "for", "the", "faculty", "named", "Jerry", "Prince", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Jerry\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Prince\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"", "query_toks": ["SELECT", "phone", ",", "room", ",", "building", "FROM", "Faculty", "WHERE", "Fname", "=", "``", "Jerry", "''", "AND", "Lname", "=", "``", "Prince", "''"], "query_toks_no_value": ["select", "phone", ",", "room", ",", "building", "from", "faculty", "where", "fname", "=", "value", "and", "lname", "=", "value"], "question": "¿Cuáles son el teléfono, la habitación y el edificio del miembro de la facultad llamado Jerry Prince?\n", "question_toks": ["What", "are", "the", "phone", ",", "room", ",", "and", "building", "of", "the", "faculty", "member", "called", "Jerry", "Prince", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]], [0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Jerry\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Prince\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Faculty", "WHERE", "Rank", "=", "``", "Instructor", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "rank", "=", "value"], "question": "Muestra el nombre y apellido de todos los instructores.\n", "question_toks": ["Show", "the", "first", "name", "and", "last", "name", "for", "all", "the", "instructors", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Instructor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\"", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "Faculty", "WHERE", "Rank", "=", "``", "Instructor", "''"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "faculty", "where", "rank", "=", "value"], "question": "¿Cuáles son el nombre y apellido de todos los instructores?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "all", "the", "instructors", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Instructor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T2.fname", "=", "``", "Linda", "''", "AND", "T2.lname", "=", "``", "Smith", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value"], "question": "¿Cuáles son el nombre y apellido del asesor de Linda Smith?\n", "question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "Linda", "Smith", "'s", "advisor", "?"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 8, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"", "query_toks": ["SELECT", "T1.fname", ",", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T2.fname", "=", "``", "Linda", "''", "AND", "T2.lname", "=", "``", "Smith", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t2", ".", "fname", "=", "value", "and", "t2", ".", "lname", "=", "value"], "question": "¿Quién es el asesor de Linda Smith? Dame el nombre y apellido.\n", "question_toks": ["Who", "is", "the", "advisor", "of", "Linda", "Smith", "?", "Give", "me", "the", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Linda\"", null], "and", [false, 2, [0, [0, 8, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"", "query_toks": ["SELECT", "T2.StuID", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.rank", "=", "``", "Professor", "''"], "query_toks_no_value": ["select", "t2", ".", "stuid", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "rank", "=", "value"], "question": "Mostrar los identificadores de los estudiantes cuyos asesores son profesores.\n", "question_toks": ["Show", "the", "ids", "of", "students", "whose", "advisors", "are", "professors", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Professor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"", "query_toks": ["SELECT", "T2.StuID", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.rank", "=", "``", "Professor", "''"], "query_toks_no_value": ["select", "t2", ".", "stuid", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "rank", "=", "value"], "question": "¿Qué estudiantes tienen profesores como asesores? Encuentra sus identificaciones de estudiantes.\n", "question_toks": ["Which", "students", "have", "professors", "as", "their", "advisors", "?", "Find", "their", "student", "ids", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Professor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"", "query_toks": ["SELECT", "T2.fname", ",", "T2.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.fname", "=", "``", "Michael", "''", "AND", "T1.lname", "=", "``", "Goodrich", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Muestra el nombre y apellido de todos los estudiantes asesorados por Michael Goodrich.\n", "question_toks": ["Show", "first", "name", "and", "last", "name", "for", "all", "the", "students", "advised", "by", "Michael", "Goodrich", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Michael\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Goodrich\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"", "query_toks": ["SELECT", "T2.fname", ",", "T2.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.fname", "=", "``", "Michael", "''", "AND", "T1.lname", "=", "``", "Goodrich", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Qué estudiantes son asesorados por Michael Goodrich? Dame su nombre y apellido.\n", "question_toks": ["Which", "students", "are", "advised", "by", "Michael", "Goodrich", "?", "Give", "me", "their", "first", "and", "last", "names", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Michael\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Goodrich\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT activity_name FROM Activity", "query_toks": ["SELECT", "activity_name", "FROM", "Activity"], "query_toks_no_value": ["select", "activity_name", "from", "activity"], "question": "¿Qué actividades tenemos?\n", "question_toks": ["What", "activities", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT activity_name FROM Activity", "query_toks": ["SELECT", "activity_name", "FROM", "Activity"], "query_toks_no_value": ["select", "activity_name", "from", "activity"], "question": "Lista todas las actividades que tenemos.\n", "question_toks": ["List", "all", "the", "activities", "we", "have", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"", "query_toks": ["SELECT", "T3.activity_name", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "JOIN", "Activity", "AS", "T3", "ON", "T3.actid", "=", "T2.actid", "WHERE", "T1.fname", "=", "``", "Mark", "''", "AND", "T1.lname", "=", "``", "Giuliano", "''"], "query_toks_no_value": ["select", "t3", ".", "activity_name", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "join", "activity", "as", "t3", "on", "t3", ".", "actid", "=", "t2", ".", "actid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Muestra los nombres de todas las actividades en las que participa Mark Giuliano.\n", "question_toks": ["Show", "the", "names", "of", "all", "the", "activities", "Mark", "Giuliano", "participates", "in", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Mark\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Giuliano\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"", "query_toks": ["SELECT", "T3.activity_name", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "JOIN", "Activity", "AS", "T3", "ON", "T3.actid", "=", "T2.actid", "WHERE", "T1.fname", "=", "``", "Mark", "''", "AND", "T1.lname", "=", "``", "Giuliano", "''"], "query_toks_no_value": ["select", "t3", ".", "activity_name", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "join", "activity", "as", "t3", "on", "t3", ".", "actid", "=", "t2", ".", "actid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "¿Cuáles son los nombres de las actividades en las que participa Mark Giuliano?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "activities", "Mark", "Giuliano", "is", "involved", "in"], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Mark\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Giuliano\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'", "query_toks": ["SELECT", "DISTINCT", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "JOIN", "activity", "AS", "T3", "ON", "T2.actid", "=", "T2.actid", "WHERE", "T3.activity_name", "=", "'Canoeing", "'", "OR", "T3.activity_name", "=", "'Kayaking", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "join", "activity", "as", "t3", "on", "t2", ".", "actid", "=", "t2", ".", "actid", "where", "t3", ".", "activity_name", "=", "value", "or", "t3", ".", "activity_name", "=", "value"], "question": "Encuentre los nombres de los miembros de la facultad que practican piragüismo o kayak.\n", "question_toks": ["Find", "the", "first", "names", "of", "the", "faculty", "members", "who", "are", "playing", "Canoeing", "or", "Kayaking", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Canoeing\"", null], "or", [false, 2, [0, [0, 2, false], null], "\"Kayaking\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "activity_1", "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'", "query_toks": ["SELECT", "DISTINCT", "T1.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Faculty_participates_in", "AS", "T2", "ON", "T1.facID", "=", "T2.facID", "JOIN", "activity", "AS", "T3", "ON", "T2.actid", "=", "T2.actid", "WHERE", "T3.activity_name", "=", "'Canoeing", "'", "OR", "T3.activity_name", "=", "'Kayaking", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "lname", "from", "faculty", "as", "t1", "join", "faculty_participates_in", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "facid", "join", "activity", "as", "t3", "on", "t2", ".", "actid", "=", "t2", ".", "actid", "where", "t3", ".", "activity_name", "=", "value", "or", "t3", ".", "activity_name", "=", "value"], "question": "¿Qué profesores practican piragüismo o kayak? Dime sus nombres.\n", "question_toks": ["Which", "faculty", "members", "are", "playing", "either", "Canoeing", "or", "Kayaking", "?", "Tell", "me", "their", "first", "names", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Canoeing\"", null], "or", [false, 2, [0, [0, 2, false], null], "\"Kayaking\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name FROM airports WHERE city  =  'Goroka'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "city", "=", "'Goroka", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "city", "=", "value"], "question": "Encuentra el nombre del aeropuerto de la ciudad de Goroka.\n", "question_toks": ["Find", "the", "name", "of", "the", "airport", "in", "the", "city", "of", "Goroka", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Goroka\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name FROM airports WHERE city  =  'Goroka'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "city", "=", "'Goroka", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "city", "=", "value"], "question": "¿Cómo se llaman los aeropuertos de la ciudad de Goroka?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "airports", "in", "the", "city", "of", "Goroka", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Goroka\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "query_toks": ["SELECT", "name", ",", "city", ",", "country", ",", "elevation", "FROM", "airports", "WHERE", "city", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", ",", "elevation", "from", "airports", "where", "city", "=", "value"], "question": "Encuentre el nombre, ciudad, país y altitud (o elevación) de los aeropuertos de la ciudad de Nueva York.\n", "question_toks": ["Find", "the", "name", ",", "city", ",", "country", ",", "and", "altitude", "(", "or", "elevation", ")", "of", "the", "airports", "in", "the", "city", "of", "New", "York", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"New York\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'", "query_toks": ["SELECT", "name", ",", "city", ",", "country", ",", "elevation", "FROM", "airports", "WHERE", "city", "=", "'New", "York", "'"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", ",", "elevation", "from", "airports", "where", "city", "=", "value"], "question": "¿Cuál es el nombre, ciudad, país y elevación de cada aeropuerto de la ciudad de Nueva York?\n", "question_toks": ["What", "is", "the", "name", ",", "city", ",", "country", ",", "and", "elevation", "for", "every", "airport", "in", "the", "city", "of", "New", "York", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"New York\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "country", "=", "'Cuba", "'", "OR", "country", "=", "'Argentina", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "Encuentra el nombre de los aeropuertos ubicados en Cuba o Argentina.\n", "question_toks": ["Find", "the", "name", "of", "the", "airports", "located", "in", "Cuba", "or", "Argentina", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Cuba\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"Argentina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "country", "=", "'Cuba", "'", "OR", "country", "=", "'Argentina", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "¿Cómo se llaman todos los aeropuertos de Cuba o Argentina?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "airports", "in", "Cuba", "or", "Argentina", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Cuba\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"Argentina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "name", "LIKE", "'Orbit", "%", "'"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "name", "like", "value"], "question": "Encuentre el país de las aerolíneas cuyo nombre comienza con 'Orbit'.\n", "question_toks": ["Find", "the", "country", "of", "the", "airlines", "whose", "name", "starts", "with", "'Orbit", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 9, [0, [0, 19, false], null], "\"Orbit%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "name", "LIKE", "'Orbit", "%", "'"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "name", "like", "value"], "question": "¿Cuáles son los países de todas las aerolíneas cuyos nombres comienzan con Orbit?\n", "question_toks": ["What", "are", "the", "countries", "of", "all", "airlines", "whose", "names", "start", "with", "Orbit", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 9, [0, [0, 19, false], null], "\"Orbit%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "elevation", "BETWEEN", "-50", "AND", "50"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "elevation", "between", "value", "and", "value"], "question": "Encuentre el nombre de los aeropuertos cuya altitud está entre -50 y 50.\n", "question_toks": ["Find", "the", "name", "of", "airports", "whose", "altitude", "is", "between", "-50", "and", "50", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 1, [0, [0, 15, false], null], -50.0, 50.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "elevation", "BETWEEN", "-50", "AND", "50"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "elevation", "between", "value", "and", "value"], "question": "¿Cuáles son los nombres de todos los aeropuertos cuya elevación está entre -50 y 50?\n", "question_toks": ["What", "are", "the", "names", "of", "all", "airports", "whose", "elevation", "is", "between", "-50", "and", "50", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 1, [0, [0, 15, false], null], -50.0, 50.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "rid", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "rid", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "Encuentra el id de rutas cuyos aeropuertos de origen y destino están en Estados Unidos.\n", "question_toks": ["Find", "the", "id", "of", "routes", "whose", "source", "and", "destination", "airports", "are", "in", "the", "United", "States", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "flight_4", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "rid", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "rid", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "¿Cuál es el id de las rutas cuyos aeropuertos de origen y destino están en Estados Unidos?\n", "question_toks": ["What", "is", "the", "id", "of", "the", "routes", "whose", "source", "and", "destination", "airports", "are", "in", "the", "United", "States", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"", "query_toks": ["SELECT", "order_id", "FROM", "shipments", "WHERE", "shipment_tracking_number", "=", "``", "3452", "''"], "query_toks_no_value": ["select", "order_id", "from", "shipments", "where", "shipment_tracking_number", "=", "value"], "question": "Busque la identificación del pedido cuyo número de seguimiento de envío es \"3452\".\n", "question_toks": ["Find", "the", "id", "of", "the", "order", "whose", "shipment", "tracking", "number", "is", "``", "3452", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"3452\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"", "query_toks": ["SELECT", "order_id", "FROM", "shipments", "WHERE", "shipment_tracking_number", "=", "``", "3452", "''"], "query_toks_no_value": ["select", "order_id", "from", "shipments", "where", "shipment_tracking_number", "=", "value"], "question": "¿El número de seguimiento del envío de qué pedido es \"3452\"? Dame el id del pedido.\n", "question_toks": ["Which", "order", "'s", "shipment", "tracking", "number", "is", "``", "3452", "''", "?", "Give", "me", "the", "id", "of", "the", "order", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"3452\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_item_id FROM order_items WHERE product_id = 11", "query_toks": ["SELECT", "order_item_id", "FROM", "order_items", "WHERE", "product_id", "=", "11"], "query_toks_no_value": ["select", "order_item_id", "from", "order_items", "where", "product_id", "=", "value"], "question": "Encuentre los identificadores de todos los artículos del pedido cuyo identificador de producto sea 11.\n", "question_toks": ["Find", "the", "ids", "of", "all", "the", "order", "items", "whose", "product", "id", "is", "11", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 11.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_item_id FROM order_items WHERE product_id = 11", "query_toks": ["SELECT", "order_item_id", "FROM", "order_items", "WHERE", "product_id", "=", "11"], "query_toks_no_value": ["select", "order_item_id", "from", "order_items", "where", "product_id", "=", "value"], "question": "Encuentre todos los artículos del pedido cuyo ID de producto sea 11. ¿Cuáles son los ID de los artículos del pedido?\n", "question_toks": ["Find", "all", "the", "order", "items", "whose", "product", "id", "is", "11", ".", "What", "are", "the", "order", "item", "ids", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], 11.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"", "query_toks": ["SELECT", "DISTINCT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status", "=", "``", "Packing", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status", "=", "value"], "question": "Enumere el nombre de todos los distintos clientes que tienen pedidos con estado \"Embalaje\".\n", "question_toks": ["List", "the", "name", "of", "all", "the", "distinct", "customers", "who", "have", "orders", "with", "status", "``", "Packing", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Packing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"", "query_toks": ["SELECT", "DISTINCT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status", "=", "``", "Packing", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status", "=", "value"], "question": "¿Qué clientes tienen pedidos con estado \"Embalaje\"? Dame los nombres de los clientes.\n", "question_toks": ["Which", "customers", "have", "orders", "with", "status", "``", "Packing", "''", "?", "Give", "me", "the", "customer", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Packing\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"", "query_toks": ["SELECT", "DISTINCT", "T1.customer_details", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status", "=", "``", "On", "Road", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status", "=", "value"], "question": "Encuentre los detalles de todos los distintos clientes que tienen pedidos con estado \"En carretera\".\n", "question_toks": ["Find", "the", "details", "of", "all", "the", "distinct", "customers", "who", "have", "orders", "with", "status", "``", "On", "Road", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"On Road\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"", "query_toks": ["SELECT", "DISTINCT", "T1.customer_details", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.order_status", "=", "``", "On", "Road", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_details", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "order_status", "=", "value"], "question": "¿Cuáles son los distintos clientes que tienen pedidos con estado \"On Road\"? ¿Dame los datos del cliente?\n", "question_toks": ["What", "are", "the", "distinct", "customers", "who", "have", "orders", "with", "status", "``", "On", "Road", "''", "?", "Give", "me", "the", "customer", "details", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"On Road\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "query_toks": ["SELECT", "T2.order_id", ",", "T2.order_status", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.customer_name", "=", "``", "Jeramie", "''"], "query_toks_no_value": ["select", "t2", ".", "order_id", ",", "t2", ".", "order_status", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Dame una lista de identificación y estado de los pedidos que pertenecen al cliente llamado \"Jeramie\".\n", "question_toks": ["Give", "me", "a", "list", "of", "id", "and", "status", "of", "orders", "which", "belong", "to", "the", "customer", "named", "``", "Jeramie", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Jeramie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "query_toks": ["SELECT", "T2.order_id", ",", "T2.order_status", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.customer_name", "=", "``", "Jeramie", "''"], "query_toks_no_value": ["select", "t2", ".", "order_id", ",", "t2", ".", "order_status", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "¿Qué pedidos realiza el cliente llamado \"Jeramie\"? Dame los ID y el estado del pedido.\n", "question_toks": ["Which", "orders", "are", "made", "by", "the", "customer", "named", "``", "Jeramie", "''", "?", "Give", "me", "the", "order", "ids", "and", "status", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Jeramie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "query_toks": ["SELECT", "T2.date_order_placed", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.customer_name", "=", "``", "Jeramie", "''"], "query_toks_no_value": ["select", "t2", ".", "date_order_placed", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "Encuentre las fechas de los pedidos que pertenecen al cliente llamado \"Jeramie\".\n", "question_toks": ["Find", "the", "dates", "of", "orders", "which", "belong", "to", "the", "customer", "named", "``", "Jeramie", "''", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Jeramie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"", "query_toks": ["SELECT", "T2.date_order_placed", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.customer_name", "=", "``", "Jeramie", "''"], "query_toks_no_value": ["select", "t2", ".", "date_order_placed", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "customer_name", "=", "value"], "question": "¿Cuáles son las fechas de los pedidos realizados por el cliente llamado \"Jeramie\"?\n", "question_toks": ["What", "are", "the", "dates", "of", "the", "orders", "made", "by", "the", "customer", "named", "``", "Jeramie", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Jeramie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"", "query_toks": ["SELECT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.date_order_placed", ">", "=", "``", "2009-01-01", "''", "AND", "T2.date_order_placed", "<", "=", "``", "2010-01-01", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "date_order_placed", ">", "=", "value", "and", "t2", ".", "date_order_placed", "<", "=", "value"], "question": "Dame los nombres de los clientes que han realizado pedidos entre el 2009-01-01 y el 2010-01-01.\n", "question_toks": ["Give", "me", "the", "names", "of", "customers", "who", "have", "placed", "orders", "between", "2009-01-01", "and", "2010-01-01", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 10, false], null], "\"2009-01-01\"", null], "and", [false, 6, [0, [0, 10, false], null], "\"2010-01-01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"", "query_toks": ["SELECT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T2.date_order_placed", ">", "=", "``", "2009-01-01", "''", "AND", "T2.date_order_placed", "<", "=", "``", "2010-01-01", "''"], "query_toks_no_value": ["select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t2", ".", "date_order_placed", ">", "=", "value", "and", "t2", ".", "date_order_placed", "<", "=", "value"], "question": "¿Qué clientes realizaron pedidos entre el 2009-01-01 y el 2010-01-01? Encuentra sus nombres.\n", "question_toks": ["Which", "customers", "made", "orders", "between", "2009-01-01", "and", "2010-01-01", "?", "Find", "their", "names", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 5, [0, [0, 10, false], null], "\"2009-01-01\"", null], "and", [false, 6, [0, [0, 10, false], null], "\"2010-01-01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"", "query_toks": ["SELECT", "DISTINCT", "T2.product_id", "FROM", "orders", "AS", "T1", "JOIN", "order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T1.date_order_placed", ">", "=", "``", "1975-01-01", "''", "AND", "T1.date_order_placed", "<", "=", "``", "1976-01-01", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "product_id", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t1", ".", "date_order_placed", ">", "=", "value", "and", "t1", ".", "date_order_placed", "<", "=", "value"], "question": "¿Dame una lista de identificadores de productos distintos de los pedidos realizados entre 1975-01-01 y 1976-01-01?\n", "question_toks": ["Give", "me", "a", "list", "of", "distinct", "product", "ids", "from", "orders", "placed", "between", "1975-01-01", "and", "1976-01-01", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 5, [0, [0, 10, false], null], "\"1975-01-01\"", null], "and", [false, 6, [0, [0, 10, false], null], "\"1976-01-01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"", "query_toks": ["SELECT", "DISTINCT", "T2.product_id", "FROM", "orders", "AS", "T1", "JOIN", "order_items", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T1.date_order_placed", ">", "=", "``", "1975-01-01", "''", "AND", "T1.date_order_placed", "<", "=", "``", "1976-01-01", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "product_id", "from", "orders", "as", "t1", "join", "order_items", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t1", ".", "date_order_placed", ">", "=", "value", "and", "t1", ".", "date_order_placed", "<", "=", "value"], "question": "¿Cuáles son los identificadores distintos de los productos pedidos entre 1975-01-01 y 1976-01-01?\n", "question_toks": ["What", "are", "the", "distinct", "ids", "of", "products", "ordered", "between", "1975-01-01", "and", "1976-01-01", "?", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 17, false], null]]}, "select": [true, [[0, [0, [0, 16, false], null]]]], "where": [[false, 5, [0, [0, 10, false], null], "\"1975-01-01\"", null], "and", [false, 6, [0, [0, 10, false], null], "\"1976-01-01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452", "query_toks": ["SELECT", "T1.date_order_placed", "FROM", "orders", "AS", "T1", "JOIN", "shipments", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T2.shipment_tracking_number", "=", "3452"], "query_toks_no_value": ["select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "shipment_tracking_number", "=", "value"], "question": "¿Cuándo se realizó el pedido cuyo número de seguimiento de envío es 3452? Dame la fecha.\n", "question_toks": ["When", "was", "the", "order", "placed", "whose", "shipment", "tracking", "number", "is", "3452", "?", "Give", "me", "the", "date", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 3452.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452", "query_toks": ["SELECT", "T1.date_order_placed", "FROM", "orders", "AS", "T1", "JOIN", "shipments", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T2.shipment_tracking_number", "=", "3452"], "query_toks_no_value": ["select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "shipment_tracking_number", "=", "value"], "question": "¿En qué día se realizó el pedido cuyo número de seguimiento de envío es 3452?\n", "question_toks": ["On", "which", "day", "was", "the", "order", "placed", "whose", "shipment", "tracking", "number", "is", "3452", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 3452.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "query_toks": ["SELECT", "T1.date_order_placed", "FROM", "orders", "AS", "T1", "JOIN", "shipments", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T2.invoice_number", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "invoice_number", "=", "value"], "question": "¿Cuál es la fecha de realización del pedido cuyo número de factura es 10?\n", "question_toks": ["What", "is", "the", "placement", "date", "of", "the", "order", "whose", "invoice", "number", "is", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10", "query_toks": ["SELECT", "T1.date_order_placed", "FROM", "orders", "AS", "T1", "JOIN", "shipments", "AS", "T2", "ON", "T1.order_id", "=", "T2.order_id", "WHERE", "T2.invoice_number", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "date_order_placed", "from", "orders", "as", "t1", "join", "shipments", "as", "t2", "on", "t1", ".", "order_id", "=", "t2", ".", "order_id", "where", "t2", ".", "invoice_number", "=", "value"], "question": "¿Qué día se realizó el pedido con factura número 10?\n", "question_toks": ["On", "what", "day", "was", "the", "order", "with", "invoice", "number", "10", "placed", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"", "query_toks": ["SELECT", "order_id", "FROM", "shipments", "WHERE", "shipment_date", ">", "``", "2000-01-01", "''"], "query_toks_no_value": ["select", "order_id", "from", "shipments", "where", "shipment_date", ">", "value"], "question": "Encuentre los identificadores de los pedidos que se enviaron después del 2000-01-01.\n", "question_toks": ["Find", "the", "ids", "of", "orders", "which", "are", "shipped", "after", "2000-01-01", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 24, false], null], "\"2000-01-01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"", "query_toks": ["SELECT", "order_id", "FROM", "shipments", "WHERE", "shipment_date", ">", "``", "2000-01-01", "''"], "query_toks_no_value": ["select", "order_id", "from", "shipments", "where", "shipment_date", ">", "value"], "question": "¿Qué pedidos se envían después del 2000-01-01? Dame los identificadores del pedido.\n", "question_toks": ["Which", "orders", "have", "shipment", "after", "2000-01-01", "?", "Give", "me", "the", "order", "ids", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 3, [0, [0, 24, false], null], "\"2000-01-01\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)", "query_toks": ["SELECT", "order_id", "FROM", "shipments", "WHERE", "shipment_date", "=", "(", "SELECT", "max", "(", "shipment_date", ")", "FROM", "shipments", ")"], "query_toks_no_value": ["select", "order_id", "from", "shipments", "where", "shipment_date", "=", "(", "select", "max", "(", "shipment_date", ")", "from", "shipments", ")"], "question": "Busque la identificación del pedido enviado más recientemente.\n", "question_toks": ["Find", "the", "id", "of", "the", "order", "which", "is", "shipped", "most", "recently", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)", "query_toks": ["SELECT", "order_id", "FROM", "shipments", "WHERE", "shipment_date", "=", "(", "SELECT", "max", "(", "shipment_date", ")", "FROM", "shipments", ")"], "query_toks_no_value": ["select", "order_id", "from", "shipments", "where", "shipment_date", "=", "(", "select", "max", "(", "shipment_date", ")", "from", "shipments", ")"], "question": "¿Qué pedido tiene el envío más reciente? Dame la identificación del pedido.\n", "question_toks": ["Which", "order", "has", "the", "most", "recent", "shipment", "?", "Give", "me", "the", "order", "id", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"", "query_toks": ["SELECT", "invoice_number", "FROM", "invoices", "WHERE", "invoice_date", "<", "``", "1989-09-03", "''", "OR", "invoice_date", ">", "``", "2007-12-25", "''"], "query_toks_no_value": ["select", "invoice_number", "from", "invoices", "where", "invoice_date", "<", "value", "or", "invoice_date", ">", "value"], "question": "Busque los números de factura creados antes del 3 de septiembre de 1989 o después del 25 de diciembre de 2007.\n", "question_toks": ["Find", "the", "invoice", "numbers", "which", "are", "created", "before", "1989-09-03", "or", "after", "2007-12-25", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], "\"1989-09-03\"", null], "or", [false, 3, [0, [0, 5, false], null], "\"2007-12-25\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"", "query_toks": ["SELECT", "invoice_number", "FROM", "invoices", "WHERE", "invoice_date", "<", "``", "1989-09-03", "''", "OR", "invoice_date", ">", "``", "2007-12-25", "''"], "query_toks_no_value": ["select", "invoice_number", "from", "invoices", "where", "invoice_date", "<", "value", "or", "invoice_date", ">", "value"], "question": "¿Cuáles son los números de factura creados antes del 3 de septiembre de 1989 o después del 25 de diciembre de 2007?\n", "question_toks": ["What", "are", "the", "invoice", "numbers", "created", "before", "1989-09-03", "or", "after", "2007-12-25", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], "\"1989-09-03\"", null], "or", [false, 3, [0, [0, 5, false], null], "\"2007-12-25\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"", "query_toks": ["SELECT", "DISTINCT", "invoice_details", "FROM", "invoices", "WHERE", "invoice_date", "<", "``", "1989-09-03", "''", "OR", "invoice_date", ">", "``", "2007-12-25", "''"], "query_toks_no_value": ["select", "distinct", "invoice_details", "from", "invoices", "where", "invoice_date", "<", "value", "or", "invoice_date", ">", "value"], "question": "Encuentre los detalles distintos de las facturas creadas antes del 3 de septiembre de 1989 o después del 25 de diciembre de 2007.\n", "question_toks": ["Find", "the", "distinct", "details", "of", "invoices", "which", "are", "created", "before", "1989-09-03", "or", "after", "2007-12-25", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], "\"1989-09-03\"", null], "or", [false, 3, [0, [0, 5, false], null], "\"2007-12-25\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "tracking_orders", "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"", "query_toks": ["SELECT", "DISTINCT", "invoice_details", "FROM", "invoices", "WHERE", "invoice_date", "<", "``", "1989-09-03", "''", "OR", "invoice_date", ">", "``", "2007-12-25", "''"], "query_toks_no_value": ["select", "distinct", "invoice_details", "from", "invoices", "where", "invoice_date", "<", "value", "or", "invoice_date", ">", "value"], "question": "¿Cuáles son los detalles distintos de las facturas creadas antes del 3 de septiembre de 1989 o después del 25 de diciembre de 2007?\n", "question_toks": ["What", "are", "the", "distinct", "details", "of", "invoices", "created", "before", "1989-09-03", "or", "after", "2007-12-25", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], "\"1989-09-03\"", null], "or", [false, 3, [0, [0, 5, false], null], "\"2007-12-25\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'", "query_toks": ["SELECT", "name", ",", "built_year", "FROM", "mill", "WHERE", "TYPE", "=", "'Grondzeiler", "'"], "query_toks_no_value": ["select", "name", ",", "built_year", "from", "mill", "where", "type", "=", "value"], "question": "¿Cuáles son los nombres y el año de construcción de los molinos del tipo 'Grondzeiler'?\n", "question_toks": ["What", "are", "the", "names", "and", "year", "of", "construction", "for", "the", "mills", "of", "'Grondzeiler", "'", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Grondzeiler\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.nationality", "FROM", "architect", "AS", "T1", "JOIN", "mill", "AS", "t2", "ON", "T1.id", "=", "T2.architect_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "nationality", "from", "architect", "as", "t1", "join", "mill", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id"], "question": "¿Cuáles son los distintos nombres y nacionalidades de los arquitectos que alguna vez construyeron un molino?\n", "question_toks": ["What", "are", "the", "distinct", "names", "and", "nationalities", "of", "the", "architects", "who", "have", "ever", "built", "a", "mill", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'", "query_toks": ["SELECT", "name", "FROM", "mill", "WHERE", "LOCATION", "!", "=", "'Donceel", "'"], "query_toks_no_value": ["select", "name", "from", "mill", "where", "location", "!", "=", "value"], "question": "¿Cómo se llaman los molinos que no están situados en 'Donceel'?\n", "question_toks": ["What", "are", "the", "names", "of", "the", "mills", "which", "are", "not", "located", "in", "'Donceel", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 7, [0, [0, 13, false], null], "\"Donceel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'", "query_toks": ["SELECT", "DISTINCT", "T1.type", "FROM", "mill", "AS", "T1", "JOIN", "architect", "AS", "t2", "ON", "T1.architect_id", "=", "T2.id", "WHERE", "T2.nationality", "=", "'American", "'", "OR", "T2.nationality", "=", "'Canadian", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "type", "from", "mill", "as", "t1", "join", "architect", "as", "t2", "on", "t1", ".", "architect_id", "=", "t2", ".", "id", "where", "t2", ".", "nationality", "=", "value", "or", "t2", ".", "nationality", "=", "value"], "question": "¿Cuáles son los distintos tipos de molinos construidos por arquitectos estadounidenses o canadienses?\n", "question_toks": ["What", "are", "the", "distinct", "types", "of", "mills", "that", "are", "built", "by", "American", "or", "Canadian", "architects", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"American\"", null], "or", [false, 2, [0, [0, 3, false], null], "\"Canadian\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'", "query_toks": ["SELECT", "LOCATION", "FROM", "bridge", "WHERE", "name", "=", "'Kolob", "Arch", "'", "OR", "name", "=", "'Rainbow", "Bridge", "'"], "query_toks_no_value": ["select", "location", "from", "bridge", "where", "name", "=", "value", "or", "name", "=", "value"], "question": "¿Cuál es la ubicación del puente llamado 'Kolob Arch' o 'Rainbow Bridge'?\n", "question_toks": ["What", "is", "the", "location", "of", "the", "bridge", "named", "'Kolob", "Arch", "'", "or", "'Rainbow", "Bridge", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Kolob Arch\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"Rainbow Bridge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT name FROM mill WHERE name LIKE '%Moulin%'", "query_toks": ["SELECT", "name", "FROM", "mill", "WHERE", "name", "LIKE", "'", "%", "Moulin", "%", "'"], "query_toks_no_value": ["select", "name", "from", "mill", "where", "name", "like", "value"], "question": "¿Cuál de los nombres de los molinos contiene la palabra francesa \"Moulin\"?\n", "question_toks": ["Which", "of", "the", "mill", "names", "contains", "the", "french", "word", "'Moulin", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 9, [0, [0, 14, false], null], "\"%Moulin%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "architecture", "query": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80", "query_toks": ["SELECT", "DISTINCT", "T1.name", "FROM", "mill", "AS", "T1", "JOIN", "architect", "AS", "t2", "ON", "T1.architect_id", "=", "T2.id", "JOIN", "bridge", "AS", "T3", "ON", "T3.architect_id", "=", "T2.id", "WHERE", "T3.length_meters", ">", "80"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", "from", "mill", "as", "t1", "join", "architect", "as", "t2", "on", "t1", ".", "architect_id", "=", "t2", ".", "id", "join", "bridge", "as", "t3", "on", "t3", ".", "architect_id", "=", "t2", ".", "id", "where", "t3", ".", "length_meters", ">", "value"], "question": "¿Cómo se llaman los molinos construidos por los arquitectos que también construyeron un puente de más de 80 metros?\n", "question_toks": ["What", "are", "the", "distinct", "name", "of", "the", "mills", "built", "by", "the", "architects", "who", "have", "also", "built", "a", "bridge", "longer", "than", "80", "meters", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 80.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989", "query_toks": ["SELECT", "book_title", ",", "author_or_editor", "FROM", "book_club", "WHERE", "YEAR", ">", "1989"], "query_toks_no_value": ["select", "book_title", ",", "author_or_editor", "from", "book_club", "where", "year", ">", "value"], "question": "muestre los títulos y autores o editores de todos los libros realizados después del año 1989.\n", "question_toks": ["show", "the", "titles", ",", "and", "authors", "or", "editors", "for", "all", "books", "made", "after", "the", "year", "1989", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], 1989.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989", "query_toks": ["SELECT", "book_title", ",", "author_or_editor", "FROM", "book_club", "WHERE", "YEAR", ">", "1989"], "query_toks_no_value": ["select", "book_title", ",", "author_or_editor", "from", "book_club", "where", "year", ">", "value"], "question": "¿Cuáles son los títulos y autores o editores que corresponden a libros realizados después de 1989?\n", "question_toks": ["What", "are", "the", "titles", "and", "authors", "or", "editors", "that", "correspond", "to", "books", "made", "after", "1989", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], 1989.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT DISTINCT publisher FROM book_club", "query_toks": ["SELECT", "DISTINCT", "publisher", "FROM", "book_club"], "query_toks_no_value": ["select", "distinct", "publisher", "from", "book_club"], "question": "Mostrar todas las editoriales distintas de libros.\n", "question_toks": ["Show", "all", "distinct", "publishers", "for", "books", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT DISTINCT publisher FROM book_club", "query_toks": ["SELECT", "DISTINCT", "publisher", "FROM", "book_club"], "query_toks_no_value": ["select", "distinct", "publisher", "from", "book_club"], "question": "¿Cuáles son las diferentes editoriales de libros?\n", "question_toks": ["What", "are", "all", "the", "different", "book", "publishers", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT COUNT (DISTINCT director) FROM movie", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "director", ")", "FROM", "movie"], "query_toks_no_value": ["select", "count", "(", "distinct", "director", ")", "from", "movie"], "question": "¿Cuántos directores de cine hay?\n", "question_toks": ["How", "many", "movie", "directors", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT COUNT (DISTINCT director) FROM movie", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "director", ")", "FROM", "movie"], "query_toks_no_value": ["select", "count", "(", "distinct", "director", ")", "from", "movie"], "question": "Cuente el número de directores diferentes.\n", "question_toks": ["Count", "the", "number", "of", "different", "directors", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000", "query_toks": ["SELECT", "director", "FROM", "movie", "WHERE", "YEAR", "=", "1999", "OR", "YEAR", "=", "2000"], "query_toks_no_value": ["select", "director", "from", "movie", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "Muestra todos los nombres de directores que tienen una película en el año 1999 o 2000.\n", "question_toks": ["Show", "all", "director", "names", "who", "have", "a", "movie", "in", "the", "year", "1999", "or", "2000", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1999.0, null], "or", [false, 2, [0, [0, 10, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000", "query_toks": ["SELECT", "director", "FROM", "movie", "WHERE", "YEAR", "=", "1999", "OR", "YEAR", "=", "2000"], "query_toks_no_value": ["select", "director", "from", "movie", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "¿Qué directores tuvieron una película en 1999 o 2000?\n", "question_toks": ["Which", "directors", "had", "a", "movie", "in", "either", "1999", "or", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1999.0, null], "or", [false, 2, [0, [0, 10, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'", "query_toks": ["SELECT", "T1.company_name", "FROM", "culture_company", "AS", "T1", "JOIN", "book_club", "AS", "T2", "ON", "T1.book_club_id", "=", "T2.book_club_id", "WHERE", "T2.publisher", "=", "'Alyson", "'"], "query_toks_no_value": ["select", "t1", ".", "company_name", "from", "culture_company", "as", "t1", "join", "book_club", "as", "t2", "on", "t1", ".", "book_club_id", "=", "t2", ".", "book_club_id", "where", "t2", ".", "publisher", "=", "value"], "question": "Enumere todos los nombres de empresas con un libro publicado por Alyson.\n", "question_toks": ["List", "all", "company", "names", "with", "a", "book", "published", "by", "Alyson", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Alyson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'", "query_toks": ["SELECT", "T1.company_name", "FROM", "culture_company", "AS", "T1", "JOIN", "book_club", "AS", "T2", "ON", "T1.book_club_id", "=", "T2.book_club_id", "WHERE", "T2.publisher", "=", "'Alyson", "'"], "query_toks_no_value": ["select", "t1", ".", "company_name", "from", "culture_company", "as", "t1", "join", "book_club", "as", "t2", "on", "t1", ".", "book_club_id", "=", "t2", ".", "book_club_id", "where", "t2", ".", "publisher", "=", "value"], "question": "¿Cuáles son todos los nombres de empresas que tienen un libro publicado por Alyson?\n", "question_toks": ["What", "are", "all", "the", "company", "names", "that", "have", "a", "book", "published", "by", "Alyson", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Alyson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'", "query_toks": ["SELECT", "T1.title", ",", "T3.book_title", "FROM", "movie", "AS", "T1", "JOIN", "culture_company", "AS", "T2", "ON", "T1.movie_id", "=", "T2.movie_id", "JOIN", "book_club", "AS", "T3", "ON", "T3.book_club_id", "=", "T2.book_club_id", "WHERE", "T2.incorporated_in", "=", "'China", "'"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t3", ".", "book_title", "from", "movie", "as", "t1", "join", "culture_company", "as", "t2", "on", "t1", ".", "movie_id", "=", "t2", ".", "movie_id", "join", "book_club", "as", "t3", "on", "t3", ".", "book_club_id", "=", "t2", ".", "book_club_id", "where", "t2", ".", "incorporated_in", "=", "value"], "question": "Muestre los títulos de películas y libros de todas las empresas en China.\n", "question_toks": ["Show", "the", "movie", "titles", "and", "book", "titles", "for", "all", "companies", "in", "China", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'", "query_toks": ["SELECT", "T1.title", ",", "T3.book_title", "FROM", "movie", "AS", "T1", "JOIN", "culture_company", "AS", "T2", "ON", "T1.movie_id", "=", "T2.movie_id", "JOIN", "book_club", "AS", "T3", "ON", "T3.book_club_id", "=", "T2.book_club_id", "WHERE", "T2.incorporated_in", "=", "'China", "'"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t3", ".", "book_title", "from", "movie", "as", "t1", "join", "culture_company", "as", "t2", "on", "t1", ".", "movie_id", "=", "t2", ".", "movie_id", "join", "book_club", "as", "t3", "on", "t3", ".", "book_club_id", "=", "t2", ".", "book_club_id", "where", "t2", ".", "incorporated_in", "=", "value"], "question": "¿Cuáles son los títulos de películas y libros correspondientes a empresas constituidas en China?\n", "question_toks": ["What", "are", "the", "titles", "of", "movies", "and", "books", "corresponding", "to", "companies", "incorporated", "in", "China", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"China\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999", "query_toks": ["SELECT", "T2.company_name", "FROM", "movie", "AS", "T1", "JOIN", "culture_company", "AS", "T2", "ON", "T1.movie_id", "=", "T2.movie_id", "WHERE", "T1.year", "=", "1999"], "query_toks_no_value": ["select", "t2", ".", "company_name", "from", "movie", "as", "t1", "join", "culture_company", "as", "t2", "on", "t1", ".", "movie_id", "=", "t2", ".", "movie_id", "where", "t1", ".", "year", "=", "value"], "question": "Mostrar todos los nombres de empresas con una película dirigida en el año 1999.\n", "question_toks": ["Show", "all", "company", "names", "with", "a", "movie", "directed", "in", "year", "1999", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1999.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
{"db_id": "culture_company", "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999", "query_toks": ["SELECT", "T2.company_name", "FROM", "movie", "AS", "T1", "JOIN", "culture_company", "AS", "T2", "ON", "T1.movie_id", "=", "T2.movie_id", "WHERE", "T1.year", "=", "1999"], "query_toks_no_value": ["select", "t2", ".", "company_name", "from", "movie", "as", "t1", "join", "culture_company", "as", "t2", "on", "t1", ".", "movie_id", "=", "t2", ".", "movie_id", "where", "t1", ".", "year", "=", "value"], "question": "¿Cuáles son todos los nombres de empresas que tienen una película correspondiente dirigida en el año 1999?\n", "question_toks": ["What", "are", "all", "company", "names", "that", "have", "a", "corresponding", "movie", "directed", "in", "the", "year", "1999", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 19, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], 1999.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}},
